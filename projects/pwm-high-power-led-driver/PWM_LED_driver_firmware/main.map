Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o (exit)
/usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
                              main.o (__eerd_byte_tn2313)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eewr_byte_attiny2313.o)
                              main.o (__eewr_byte_tn2313)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
LOAD main.o
LOAD enc.o
LOAD pwm.o
LOAD /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x496
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000000000000002e       0x16 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
                0x000000000000002e                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000044        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x0000000000000048        0x2 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000048                __vector_1
                0x0000000000000048                __vector_12
                0x0000000000000048                __bad_interrupt
                0x0000000000000048                __vector_6
                0x0000000000000048                __vector_3
                0x0000000000000048                __vector_11
                0x0000000000000048                __vector_13
                0x0000000000000048                __vector_17
                0x0000000000000048                __vector_7
                0x0000000000000048                __vector_5
                0x0000000000000048                __vector_4
                0x0000000000000048                __vector_9
                0x0000000000000048                __vector_2
                0x0000000000000048                __vector_15
                0x0000000000000048                __vector_8
                0x0000000000000048                __vector_14
                0x0000000000000048                __vector_10
                0x0000000000000048                __vector_16
                0x0000000000000048                __vector_18
 .text          0x000000000000004a      0x2f8 main.o
                0x000000000000004a                __vector_default
                0x000000000000005e                demo
                0x000000000000012e                main
 .text          0x0000000000000342       0xec enc.o
                0x0000000000000342                int0_init
                0x0000000000000356                int1_init
                0x000000000000036a                impulsator
                0x00000000000003ba                check_key
                0x00000000000003e4                enc_dir
 .text          0x000000000000042e       0x38 pwm.o
                0x000000000000042e                PWM_T0_init
                0x0000000000000448                PWM_T1_init
 .text          0x0000000000000466        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .text          0x0000000000000466        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .text          0x0000000000000466        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
 .text          0x0000000000000466        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eewr_byte_attiny2313.o)
                0x0000000000000466                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000000000000466        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x0000000000000466        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .text.avr-libc
                0x0000000000000466       0x10 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
                0x0000000000000466                __eerd_byte_tn2313
 .text.avr-libc
                0x0000000000000476       0x1c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eewr_byte_attiny2313.o)
                0x0000000000000476                __eewr_byte_tn2313
                0x0000000000000478                __eewr_r18_tn2313
                0x0000000000000492                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000492        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
                0x0000000000000492                exit
                0x0000000000000492                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000492        0x4 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000496                _etext = .

.data           0x0000000000800060        0x4 load address 0x0000000000000496
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 .data          0x0000000000800060        0x3 main.o
                0x0000000000800060                value_r
                0x0000000000800061                value_g
                0x0000000000800062                value_b
 .data          0x0000000000800063        0x0 enc.o
 .data          0x0000000000800063        0x0 pwm.o
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
 .data          0x0000000000800063        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eewr_byte_attiny2313.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800064                . = ALIGN (0x2)
 *fill*         0x0000000000800063        0x1 00
                0x0000000000800064                _edata = .
                0x0000000000800064                PROVIDE (__data_end, .)

.bss            0x0000000000800064        0x0
                0x0000000000800064                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 .bss           0x0000000000800064        0x0 main.o
 .bss           0x0000000000800064        0x0 enc.o
 .bss           0x0000000000800064        0x0 pwm.o
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
 .bss           0x0000000000800064        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eewr_byte_attiny2313.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800064                PROVIDE (__bss_end, .)
                0x0000000000000496                __data_load_start = LOADADDR (.data)
                0x000000000000049a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800064        0x0
                0x0000000000800064                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800064                PROVIDE (__noinit_end, .)
                0x0000000000800064                _end = .
                0x0000000000800064                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x3
 *(.eeprom*)
 .eeprom        0x0000000000810000        0x3 main.o
                0x0000000000810000                eeprom_red
                0x0000000000810001                eeprom_green
                0x0000000000810002                eeprom_blue
                0x0000000000810003                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x810
 *(.stab)
 .stab          0x0000000000000000      0x69c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 .stab          0x000000000000069c       0x90 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
                                         0x9c (size before relaxing)
 .stab          0x000000000000072c       0xe4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eewr_byte_attiny2313.o)
                                         0xf0 (size before relaxing)

.stabstr        0x0000000000000000       0xb2
 *(.stabstr)
 .stabstr       0x0000000000000000       0xb2 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 enc.o
 .debug_aranges
                0x0000000000000040       0x20 pwm.o

.debug_pubnames
                0x0000000000000000      0x116
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x8d main.o
 .debug_pubnames
                0x000000000000008d       0x57 enc.o
 .debug_pubnames
                0x00000000000000e4       0x32 pwm.o

.debug_info     0x0000000000000000      0x7b5
 *(.debug_info)
 .debug_info    0x0000000000000000      0x446 main.o
 .debug_info    0x0000000000000446      0x2e9 enc.o
 .debug_info    0x000000000000072f       0x86 pwm.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x2c1
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x163 main.o
 .debug_abbrev  0x0000000000000163      0x11f enc.o
 .debug_abbrev  0x0000000000000282       0x3f pwm.o

.debug_line     0x0000000000000000      0x796
 *(.debug_line)
 .debug_line    0x0000000000000000      0x488 main.o
 .debug_line    0x0000000000000488      0x227 enc.o
 .debug_line    0x00000000000006af       0xe7 pwm.o

.debug_frame    0x0000000000000000       0xd0
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x40 main.o
 .debug_frame   0x0000000000000040       0x60 enc.o
 .debug_frame   0x00000000000000a0       0x30 pwm.o

.debug_str      0x0000000000000000      0x1b9
 *(.debug_str)
 .debug_str     0x0000000000000000      0x122 main.o
                                        0x156 (size before relaxing)
 .debug_str     0x0000000000000122       0x79 enc.o
                                        0x137 (size before relaxing)
 .debug_str     0x000000000000019b       0x1e pwm.o
                                         0xbe (size before relaxing)

.debug_loc      0x0000000000000000      0x49b
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x34d main.o
 .debug_loc     0x000000000000034d      0x14e enc.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x0000000000000000      0x240
 .debug_ranges  0x0000000000000000      0x240 main.o
