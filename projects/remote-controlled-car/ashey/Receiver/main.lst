   1               		.file	"main.c"
   2               		.arch atmega8
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  58               	.global	Time
  59               	.global	Time
  60               		.section .bss
  63               	Time:
  64 0000 00        		.skip 1,0
  65               	.global	check
  66               		.data
  69               	check:
  70 0000 0200      		.word	2
  71 0002 0400      		.word	4
  72 0004 0800      		.word	8
  73 0006 1000      		.word	16
  74 0008 2000      		.word	32
  75 000a 8000      		.word	128
  76 000c 4000      		.word	64
  77 000e 2000      		.word	32
  78               		.text
  80               	.global	InitDDRs
  82               	InitDDRs:
  84               	.Ltext1:
   1:functions.c   **** #include"definitions.h"
   2:functions.c   **** void InitDDRs(void)
   3:functions.c   **** {
  86               	.LM1:
  87               	/* prologue: frame size=0 */
  88               	/* prologue end (size=0) */
   4:functions.c   **** 	DDRB =  0;
  90               	.LM2:
  91 0000 17BA      		out 55-0x20,__zero_reg__
   5:functions.c   **** 	DDRC =  0;
  93               	.LM3:
  94 0002 14BA      		out 52-0x20,__zero_reg__
   6:functions.c   **** 	DDRD =  0; 
  96               	.LM4:
  97 0004 11BA      		out 49-0x20,__zero_reg__
   7:functions.c   ****     DDRB = DDRB | _BV(PB1) | _BV(PB6);
  99               	.LM5:
 100 0006 87B3      		in r24,55-0x20
 101 0008 8264      		ori r24,lo8(66)
 102 000a 87BB      		out 55-0x20,r24
   8:functions.c   **** 	PORTB = 0;
 104               	.LM6:
 105 000c 18BA      		out 56-0x20,__zero_reg__
   9:functions.c   **** 	DDRD =  DDRD | _BV(PD0) | _BV(PD2) | _BV(PD3);
 107               	.LM7:
 108 000e 81B3      		in r24,49-0x20
 109 0010 8D60      		ori r24,lo8(13)
 110 0012 81BB      		out 49-0x20,r24
  10:functions.c   **** 	PORTD = 0;
 112               	.LM8:
 113 0014 12BA      		out 50-0x20,__zero_reg__
  11:functions.c   **** 	PORTC = 0;
 115               	.LM9:
 116 0016 15BA      		out 53-0x20,__zero_reg__
 117               	/* epilogue: frame size=0 */
 118 0018 0895      		ret
 119               	/* epilogue end (size=1) */
 120               	/* function InitDDRs size 13 (12) */
 122               	.Lscope0:
 125               	.global	TurnMotors
 127               	TurnMotors:
  12:functions.c   **** }
  13:functions.c   **** void TurnMotors(int count)
  14:functions.c   **** {
 129               	.LM10:
 130               	/* prologue: frame size=0 */
 131               	/* prologue end (size=0) */
  15:functions.c   **** 	if (count == 15) // move right 
 133               	.LM11:
 134 001a 8F30      		cpi r24,15
 135 001c 9105      		cpc r25,__zero_reg__
 136 001e 21F0      		breq .L10
  16:functions.c   **** 		{
  17:functions.c   **** 			PORTB = PORTB | _BV(PB6) ;
  18:functions.c   **** 			// Motor 1 is Off
  19:functions.c   **** 		}
  20:functions.c   ****             
  21:functions.c   **** 	else if(count == 5)         // move forward
 138               	.LM12:
 139 0020 8530      		cpi r24,5
 140 0022 9105      		cpc r25,__zero_reg__
 141 0024 19F4      		brne .L5
  22:functions.c   **** 		{
  23:functions.c   **** 			PORTD = PORTD | _BV(PD3);
 143               	.LM13:
 144 0026 939A      		sbi 50-0x20,3
 145               	.L10:
  24:functions.c   **** 			PORTB = PORTB | _BV(PB6);
 147               	.LM14:
 148 0028 C69A      		sbi 56-0x20,6
 149 002a 0895      		ret
 150               	.L5:
  25:functions.c   **** 			// Both Motors should be On.
  26:functions.c   **** 		}
  27:functions.c   **** 	else if(count == 2)	// move backward
 152               	.LM15:
 153 002c 8230      		cpi r24,2
 154 002e 9105      		cpc r25,__zero_reg__
 155 0030 29F4      		brne .L7
  28:functions.c   ****     	{
  29:functions.c   **** 		    PORTD = PORTD | _BV(PD0) | _BV(PD2) ;  
 157               	.LM16:
 158 0032 82B3      		in r24,50-0x20
 159 0034 8560      		ori r24,lo8(5)
 160 0036 82BB      		out 50-0x20,r24
  30:functions.c   **** 			PORTB = PORTB | _BV(PB1);
 162               	.LM17:
 163 0038 C19A      		sbi 56-0x20,1
 164 003a 0895      		ret
 165               	.L7:
  31:functions.c   **** 			// Both Motors should rotate reverse
  32:functions.c   **** 		}		
  33:functions.c   ****            
  34:functions.c   **** 	else if (count == 12) //  move left
 167               	.LM18:
 168 003c 0C97      		sbiw r24,12
 169 003e 09F4      		brne .L2
  35:functions.c   ****         {
  36:functions.c   ****             PORTD = PORTD | _BV(PD3) ;	
 171               	.LM19:
 172 0040 939A      		sbi 50-0x20,3
 173               	.L2:
 174 0042 0895      		ret
 175               	/* epilogue: frame size=0 */
 176 0044 0895      		ret
 177               	/* epilogue end (size=1) */
 178               	/* function TurnMotors size 23 (22) */
 180               	.Lscope1:
 182               	.global	FindFirst
 184               	FindFirst:
  37:functions.c   **** 			// Motor 2 is Off
  38:functions.c   **** 		}             
  39:functions.c   **** 	return ;
  40:functions.c   **** }
  41:functions.c   **** int FindFirst(void)
  42:functions.c   **** {
 186               	.LM20:
 187               	/* prologue: frame size=0 */
 188               	/* prologue end (size=0) */
  43:functions.c   ****     if(TSOP0)
 190               	.LM21:
 191 0046 9999      		sbic 51-0x20,1
 192 0048 03C0      		rjmp .L12
  44:functions.c   ****         return 1;
 194               	.LM22:
 195 004a 81E0      		ldi r24,lo8(1)
 196 004c 90E0      		ldi r25,hi8(1)
 197 004e 0895      		ret
 198               	.L12:
  45:functions.c   ****     if(TSOP1)
 200               	.LM23:
 201 0050 9A99      		sbic 51-0x20,2
 202 0052 03C0      		rjmp .L13
  46:functions.c   ****         return 2;
 204               	.LM24:
 205 0054 82E0      		ldi r24,lo8(2)
 206 0056 90E0      		ldi r25,hi8(2)
 207 0058 0895      		ret
 208               	.L13:
  47:functions.c   ****     if(TSOP2)
 210               	.LM25:
 211 005a 9B99      		sbic 51-0x20,3
 212 005c 03C0      		rjmp .L14
  48:functions.c   ****         return 3;
 214               	.LM26:
 215 005e 83E0      		ldi r24,lo8(3)
 216 0060 90E0      		ldi r25,hi8(3)
 217 0062 0895      		ret
 218               	.L14:
  49:functions.c   ****     if(TSOP3)
 220               	.LM27:
 221 0064 9C99      		sbic 51-0x20,4
 222 0066 03C0      		rjmp .L15
  50:functions.c   ****         return 4;
 224               	.LM28:
 225 0068 84E0      		ldi r24,lo8(4)
 226 006a 90E0      		ldi r25,hi8(4)
 227 006c 0895      		ret
 228               	.L15:
  51:functions.c   ****     if(TSOP4)
 230               	.LM29:
 231 006e 9D99      		sbic 51-0x20,5
 232 0070 03C0      		rjmp .L16
  52:functions.c   ****         return 5;
 234               	.LM30:
 235 0072 85E0      		ldi r24,lo8(5)
 236 0074 90E0      		ldi r25,hi8(5)
 237 0076 0895      		ret
 238               	.L16:
  53:functions.c   ****     if(TSOP5)
 240               	.LM31:
 241 0078 8799      		sbic 48-0x20,7
 242 007a 03C0      		rjmp .L17
  54:functions.c   ****         return 6;
 244               	.LM32:
 245 007c 86E0      		ldi r24,lo8(6)
 246 007e 90E0      		ldi r25,hi8(6)
 247 0080 0895      		ret
 248               	.L17:
  55:functions.c   ****     if(TSOP6)
 250               	.LM33:
 251 0082 8699      		sbic 48-0x20,6
 252 0084 03C0      		rjmp .L18
  56:functions.c   ****         return 7;
 254               	.LM34:
 255 0086 87E0      		ldi r24,lo8(7)
 256 0088 90E0      		ldi r25,hi8(7)
 257 008a 0895      		ret
 258               	.L18:
  57:functions.c   ****     if(TSOP7)
 260               	.LM35:
 261 008c 8599      		sbic 48-0x20,5
 262 008e 03C0      		rjmp .L19
  58:functions.c   ****         return 8;
 264               	.LM36:
 265 0090 88E0      		ldi r24,lo8(8)
 266 0092 90E0      		ldi r25,hi8(8)
 267 0094 0895      		ret
 268               	.L19:
  59:functions.c   ****     else return 0;
 270               	.LM37:
 271 0096 80E0      		ldi r24,lo8(0)
 272 0098 90E0      		ldi r25,hi8(0)
  60:functions.c   **** }	
 274               	.LM38:
 275 009a 0895      		ret
 276               	/* epilogue: frame size=0 */
 277 009c 0895      		ret
 278               	/* epilogue end (size=1) */
 279               	/* function FindFirst size 44 (43) */
 281               	.Lscope2:
 283               	.global	SetupTimer
 285               	SetupTimer:
 287               	.Ltext2:
   1:main.c        **** // This is the Receiver Code
   2:main.c        **** // Motor Inputs:  ---
   3:main.c        **** /*
   4:main.c        ****     ATmega8                           L293D
   5:main.c        ****     Motor 1 :                      Pins :
   6:main.c        **** 	    PD0 and PD3                   PIN2 and PIN7 
   7:main.c        ****     Motor 2 :                      Pins : 
   8:main.c        ****         PD2 and PB6                   PIN15 and PIN10
   9:main.c        **** 
  10:main.c        **** */
  11:main.c        **** #include<stdio.h>
  12:main.c        **** #include<avr/io.h>
  13:main.c        **** #include<avr/interrupt.h>
  14:main.c        **** #include<avr/signal.h>
  15:main.c        **** #include"definitions.h"
  16:main.c        **** #include"functions.c"
  17:main.c        **** 
  18:main.c        **** int check[8] = { 2 , 4 , 8 , 16 , 32 , 128 ,64 ,32 };
  19:main.c        **** unsigned char Time=0;
  20:main.c        **** void FindTransmitted1(int receive);
  21:main.c        **** void FindTransmitted2(int receive);
  22:main.c        **** void TurnMotors(int count);
  23:main.c        **** int  FindFirst(void);
  24:main.c        **** void InitDDRs(void);
  25:main.c        **** void delay(unsigned char value , unsigned char OCR_value);
  26:main.c        **** void SetupTimer(void)
  27:main.c        **** {        
 289               	.LM39:
 290               	/* prologue: frame size=0 */
 291               	/* prologue end (size=0) */
  28:main.c        ****     TCCR1B = TCCR1B | _BV(WGM12) | _BV(CS10) ; 
 293               	.LM40:
 294 009e 8EB5      		in r24,78-0x20
 295 00a0 8960      		ori r24,lo8(9)
 296 00a2 8EBD      		out 78-0x20,r24
  29:main.c        **** 	TIMSK  = TIMSK  | _BV(OCIE1A) ;
 298               	.LM41:
 299 00a4 89B7      		in r24,89-0x20
 300 00a6 8061      		ori r24,lo8(16)
 301 00a8 89BF      		out 89-0x20,r24
 302               	/* epilogue: frame size=0 */
 303 00aa 0895      		ret
 304               	/* epilogue end (size=1) */
 305               	/* function SetupTimer size 7 (6) */
 307               	.Lscope3:
 311               	.global	delay
 313               	delay:
  30:main.c        **** 
  31:main.c        **** }
  32:main.c        **** int main(void)
  33:main.c        **** {
  34:main.c        ****    unsigned char i=0;
  35:main.c        ****    int receive = 0 ;
  36:main.c        ****     InitDDRs();
  37:main.c        **** 	sei();
  38:main.c        **** 	PORTB = PORTB & ~(_BV(PB1));
  39:main.c        ****     for(;;)
  40:main.c        ****     {
  41:main.c        **** 	    //PORTC  =  PORTC | _BV(PC0); 
  42:main.c        **** 		if(FindFirst())
  43:main.c        **** 		{
  44:main.c        **** 		    receive = FindFirst();
  45:main.c        **** 			if(receive <= 5 )
  46:main.c        **** 			{
  47:main.c        **** 			    //PORTB = PORTB | _BV(PB1) ;
  48:main.c        **** 				if(!(PINC & check[receive-1])) // Checking for the startBit
  49:main.c        **** 					{
  50:main.c        **** 					 // PORTB = PORTB | _BV(PB1) ;
  51:main.c        **** 					  SetupTimer();
  52:main.c        **** 					  delay(3,105);
  53:main.c        **** 				//	  PORTB = PORTB & ~(_BV(PB1));
  54:main.c        **** 					  FindTransmitted1(receive); 
  55:main.c        **** 					}
  56:main.c        **** 			}
  57:main.c        ****             else 
  58:main.c        ****             {
  59:main.c        ****                 if(!(PIND & check[receive-1])) // Checking for the startBit
  60:main.c        **** 					{
  61:main.c        **** 					  SetupTimer();
  62:main.c        **** 					  delay(3,105);
  63:main.c        **** 					//  PORTB = PORTB & ~(_BV(PB1));
  64:main.c        **** 					  FindTransmitted2(receive); 
  65:main.c        **** 				    }
  66:main.c        **** 			}
  67:main.c        **** 			for(i=0;i<9;i++)
  68:main.c        **** 			{
  69:main.c        **** 			  SetupTimer();  
  70:main.c        **** 			  delay(117,105);
  71:main.c        **** 			}		
  72:main.c        **** 		}	
  73:main.c        **** 		else 
  74:main.c        **** 		{
  75:main.c        **** 			PORTD = PORTD & ~(_BV(PD0)) & ~(_BV(PB2)) & ~(_BV(PD3));  
  76:main.c        **** 			PORTB = PORTB & ~(_BV(PB6)) & ~(_BV(PB1));
  77:main.c        **** 		}	
  78:main.c        ****     } 
  79:main.c        **** }
  80:main.c        **** 
  81:main.c        **** void FindTransmitted1(int receive)
  82:main.c        **** {
  83:main.c        ****    
  84:main.c        ****     unsigned char i=0,count=0;
  85:main.c        **** 	PORTD = PORTD & ~(_BV(PD0)) & ~(_BV(PB2)) & ~(_BV(PD3));  
  86:main.c        **** 	PORTB = PORTB & ~(_BV(PB6));
  87:main.c        **** 	SetupTimer();
  88:main.c        ****     delay(138,105);
  89:main.c        **** 	for(i=0;i<4;i++)
  90:main.c        **** 	{
  91:main.c        **** 	    //PORTB = PORTB | _BV(PB1);
  92:main.c        **** 		SetupTimer();
  93:main.c        **** 		delay(2,105);
  94:main.c        **** 		//PORTB = PORTB | _BV(PB1) ;
  95:main.c        **** 		if(!(PINC & check[receive-1]))
  96:main.c        **** 		{count = count | 1 << i ;} 
  97:main.c        **** 		//PORTB = PORTB & ~(_BV(PB1));  
  98:main.c        **** 		SetupTimer();
  99:main.c        **** 		delay(118,105); 
 100:main.c        **** 	}
 101:main.c        **** 	TurnMotors(count);
 102:main.c        **** 	count = 0;	
 103:main.c        **** }
 104:main.c        **** void FindTransmitted2(int receive)
 105:main.c        **** {
 106:main.c        ****     unsigned char i=0,count=0;
 107:main.c        **** 	PORTD = PORTD & ~(_BV(PD0)) & ~(_BV(PB2)) & ~(_BV(PD3));  
 108:main.c        **** 	PORTB = PORTB & ~(_BV(PB6));
 109:main.c        **** 	SetupTimer();
 110:main.c        ****     delay(138,105);
 111:main.c        **** 	for(i=0;i<4;i++)
 112:main.c        **** 	{
 113:main.c        **** 	    //PORTB = PORTB | _BV(PB1);
 114:main.c        **** 		SetupTimer();
 115:main.c        **** 		delay(2,105);
 116:main.c        **** 		//PORTB = PORTB | _BV(PB1) ;
 117:main.c        **** 		if(!(PIND & check[receive-1]))
 118:main.c        **** 		{count = count | 1 << i ;} 
 119:main.c        **** 	//	PORTB = PORTB & ~(_BV(PB1));  
 120:main.c        **** 		SetupTimer();
 121:main.c        **** 		delay(118,105); 
 122:main.c        **** 	}
 123:main.c        **** 	TurnMotors(count);
 124:main.c        **** 	count = 0;
 125:main.c        **** 
 126:main.c        **** }
 127:main.c        **** void delay(unsigned char value , unsigned char OCR_value)
 128:main.c        **** {   
 315               	.LM42:
 316               	/* prologue: frame size=0 */
 317               	/* prologue end (size=0) */
 129:main.c        ****     OCR1A  = OCR_value;
 319               	.LM43:
 320 00ac 262F      		mov r18,r22
 321 00ae 3327      		clr r19
 322 00b0 3BBD      		out (74)+1-0x20,r19
 323 00b2 2ABD      		out 74-0x20,r18
 130:main.c        ****     Time   = value;
 325               	.LM44:
 326 00b4 8093 0000 		sts Time,r24
 327               	.L23:
 131:main.c        **** 	while(TCCR1B!=0);
 329               	.LM45:
 330 00b8 8EB5      		in r24,78-0x20
 331 00ba 8823      		tst r24
 332 00bc E9F7      		brne .L23
 333               	/* epilogue: frame size=0 */
 334 00be 0895      		ret
 335               	/* epilogue end (size=1) */
 336               	/* function delay size 10 (9) */
 338               	.Lscope4:
 341               	.global	FindTransmitted1
 343               	FindTransmitted1:
 345               	.LM46:
 346               	/* prologue: frame size=0 */
 347 00c0 EF92      		push r14
 348 00c2 FF92      		push r15
 349 00c4 0F93      		push r16
 350 00c6 1F93      		push r17
 351 00c8 CF93      		push r28
 352 00ca DF93      		push r29
 353               	/* prologue end (size=6) */
 354 00cc 8C01      		movw r16,r24
 356               	.LM47:
 357 00ce EE24      		clr r14
 359               	.LM48:
 360 00d0 82B3      		in r24,50-0x20
 361 00d2 827F      		andi r24,lo8(-14)
 362 00d4 82BB      		out 50-0x20,r24
 364               	.LM49:
 365 00d6 C698      		cbi 56-0x20,6
 367               	.LM50:
 368 00d8 E2DF      		rcall SetupTimer
 370               	.LM51:
 371 00da 69E6      		ldi r22,lo8(105)
 372 00dc 8AE8      		ldi r24,lo8(-118)
 373 00de E6DF      		rcall delay
 374 00e0 C0E0      		ldi r28,lo8(0)
 375 00e2 D0E0      		ldi r29,hi8(0)
 376 00e4 83E0      		ldi r24,lo8(3)
 377 00e6 F82E      		mov r15,r24
 378               	.L31:
 380               	.LM52:
 381 00e8 DADF      		rcall SetupTimer
 383               	.LM53:
 384 00ea 69E6      		ldi r22,lo8(105)
 385 00ec 82E0      		ldi r24,lo8(2)
 386 00ee DEDF      		rcall delay
 388               	.LM54:
 389 00f0 83B3      		in r24,51-0x20
 390 00f2 282F      		mov r18,r24
 391 00f4 3327      		clr r19
 392 00f6 F801      		movw r30,r16
 393 00f8 E00F      		add r30,r16
 394 00fa F11F      		adc r31,r17
 395 00fc E050      		subi r30,lo8(-(check-2))
 396 00fe F040      		sbci r31,hi8(-(check-2))
 397 0100 8081      		ld r24,Z
 398 0102 9181      		ldd r25,Z+1
 399 0104 2823      		and r18,r24
 400 0106 3923      		and r19,r25
 401 0108 232B      		or r18,r19
 402 010a 49F4      		brne .L30
 404               	.LM55:
 405 010c 81E0      		ldi r24,lo8(1)
 406 010e 90E0      		ldi r25,hi8(1)
 407 0110 0C2E      		mov r0,r28
 408 0112 02C0      		rjmp 2f
 409 0114 880F      	1:	lsl r24
 410 0116 991F      		rol r25
 411 0118 0A94      	2:	dec r0
 412 011a E2F7      		brpl 1b
 413 011c E82A      		or r14,r24
 414               	.L30:
 416               	.LM56:
 417 011e BFDF      		rcall SetupTimer
 419               	.LM57:
 420 0120 69E6      		ldi r22,lo8(105)
 421 0122 86E7      		ldi r24,lo8(118)
 422 0124 C3DF      		rcall delay
 424               	.LM58:
 425 0126 FA94      		dec r15
 426 0128 2196      		adiw r28,1
 427 012a F7FE      		sbrs r15,7
 428 012c DDCF      		rjmp .L31
 430               	.LM59:
 431 012e 8E2D      		mov r24,r14
 432 0130 9927      		clr r25
 433 0132 73DF      		rcall TurnMotors
 434               	/* epilogue: frame size=0 */
 435 0134 DF91      		pop r29
 436 0136 CF91      		pop r28
 437 0138 1F91      		pop r17
 438 013a 0F91      		pop r16
 439 013c FF90      		pop r15
 440 013e EF90      		pop r14
 441 0140 0895      		ret
 442               	/* epilogue end (size=7) */
 443               	/* function FindTransmitted1 size 65 (52) */
 449               	.Lscope5:
 452               	.global	FindTransmitted2
 454               	FindTransmitted2:
 456               	.LM60:
 457               	/* prologue: frame size=0 */
 458 0142 EF92      		push r14
 459 0144 FF92      		push r15
 460 0146 0F93      		push r16
 461 0148 1F93      		push r17
 462 014a CF93      		push r28
 463 014c DF93      		push r29
 464               	/* prologue end (size=6) */
 465 014e 8C01      		movw r16,r24
 467               	.LM61:
 468 0150 EE24      		clr r14
 470               	.LM62:
 471 0152 82B3      		in r24,50-0x20
 472 0154 827F      		andi r24,lo8(-14)
 473 0156 82BB      		out 50-0x20,r24
 475               	.LM63:
 476 0158 C698      		cbi 56-0x20,6
 478               	.LM64:
 479 015a A1DF      		rcall SetupTimer
 481               	.LM65:
 482 015c 69E6      		ldi r22,lo8(105)
 483 015e 8AE8      		ldi r24,lo8(-118)
 484 0160 A5DF      		rcall delay
 485 0162 C0E0      		ldi r28,lo8(0)
 486 0164 D0E0      		ldi r29,hi8(0)
 487 0166 93E0      		ldi r25,lo8(3)
 488 0168 F92E      		mov r15,r25
 489               	.L39:
 491               	.LM66:
 492 016a 99DF      		rcall SetupTimer
 494               	.LM67:
 495 016c 69E6      		ldi r22,lo8(105)
 496 016e 82E0      		ldi r24,lo8(2)
 497 0170 9DDF      		rcall delay
 499               	.LM68:
 500 0172 80B3      		in r24,48-0x20
 501 0174 282F      		mov r18,r24
 502 0176 3327      		clr r19
 503 0178 F801      		movw r30,r16
 504 017a E00F      		add r30,r16
 505 017c F11F      		adc r31,r17
 506 017e E050      		subi r30,lo8(-(check-2))
 507 0180 F040      		sbci r31,hi8(-(check-2))
 508 0182 8081      		ld r24,Z
 509 0184 9181      		ldd r25,Z+1
 510 0186 2823      		and r18,r24
 511 0188 3923      		and r19,r25
 512 018a 232B      		or r18,r19
 513 018c 49F4      		brne .L38
 515               	.LM69:
 516 018e 81E0      		ldi r24,lo8(1)
 517 0190 90E0      		ldi r25,hi8(1)
 518 0192 0C2E      		mov r0,r28
 519 0194 02C0      		rjmp 2f
 520 0196 880F      	1:	lsl r24
 521 0198 991F      		rol r25
 522 019a 0A94      	2:	dec r0
 523 019c E2F7      		brpl 1b
 524 019e E82A      		or r14,r24
 525               	.L38:
 527               	.LM70:
 528 01a0 7EDF      		rcall SetupTimer
 530               	.LM71:
 531 01a2 69E6      		ldi r22,lo8(105)
 532 01a4 86E7      		ldi r24,lo8(118)
 533 01a6 82DF      		rcall delay
 535               	.LM72:
 536 01a8 FA94      		dec r15
 537 01aa 2196      		adiw r28,1
 538 01ac F7FE      		sbrs r15,7
 539 01ae DDCF      		rjmp .L39
 541               	.LM73:
 542 01b0 8E2D      		mov r24,r14
 543 01b2 9927      		clr r25
 544 01b4 32DF      		rcall TurnMotors
 545               	/* epilogue: frame size=0 */
 546 01b6 DF91      		pop r29
 547 01b8 CF91      		pop r28
 548 01ba 1F91      		pop r17
 549 01bc 0F91      		pop r16
 550 01be FF90      		pop r15
 551 01c0 EF90      		pop r14
 552 01c2 0895      		ret
 553               	/* epilogue end (size=7) */
 554               	/* function FindTransmitted2 size 65 (52) */
 560               	.Lscope6:
 562               	.global	main
 564               	main:
 566               	.LM74:
 567               	/* prologue: frame size=0 */
 568 01c4 C0E0      		ldi r28,lo8(__stack - 0)
 569 01c6 D0E0      		ldi r29,hi8(__stack - 0)
 570 01c8 DEBF      		out __SP_H__,r29
 571 01ca CDBF      		out __SP_L__,r28
 572               	/* prologue end (size=4) */
 574               	.LM75:
 575 01cc 19DF      		rcall InitDDRs
 577               	.LM76:
 578               	/* #APP */
 579 01ce 7894      		sei
 581               	.LM77:
 582               	/* #NOAPP */
 583 01d0 C198      		cbi 56-0x20,1
 584               	.L60:
 586               	.LM78:
 587 01d2 39DF      		rcall FindFirst
 588 01d4 892B      		or r24,r25
 589 01d6 89F1      		breq .L45
 591               	.LM79:
 592 01d8 36DF      		rcall FindFirst
 593 01da EC01      		movw r28,r24
 594 01dc FC01      		movw r30,r24
 595 01de E80F      		add r30,r24
 596 01e0 F91F      		adc r31,r25
 598               	.LM80:
 599 01e2 0697      		sbiw r24,6
 600 01e4 8CF4      		brge .L46
 602               	.LM81:
 603 01e6 83B3      		in r24,51-0x20
 604 01e8 9927      		clr r25
 605 01ea E050      		subi r30,lo8(-(check-2))
 606 01ec F040      		sbci r31,hi8(-(check-2))
 607 01ee 2081      		ld r18,Z
 608 01f0 3181      		ldd r19,Z+1
 609 01f2 8223      		and r24,r18
 610 01f4 9323      		and r25,r19
 611 01f6 892B      		or r24,r25
 612 01f8 B9F4      		brne .L48
 614               	.LM82:
 615 01fa 51DF      		rcall SetupTimer
 617               	.LM83:
 618 01fc 69E6      		ldi r22,lo8(105)
 619 01fe 83E0      		ldi r24,lo8(3)
 620 0200 55DF      		rcall delay
 622               	.LM84:
 623 0202 CE01      		movw r24,r28
 624 0204 5DDF      		rcall FindTransmitted1
 625 0206 10C0      		rjmp .L48
 626               	.L46:
 628               	.LM85:
 629 0208 80B3      		in r24,48-0x20
 630 020a 9927      		clr r25
 631 020c E050      		subi r30,lo8(-(check-2))
 632 020e F040      		sbci r31,hi8(-(check-2))
 633 0210 2081      		ld r18,Z
 634 0212 3181      		ldd r19,Z+1
 635 0214 8223      		and r24,r18
 636 0216 9323      		and r25,r19
 637 0218 892B      		or r24,r25
 638 021a 31F4      		brne .L48
 640               	.LM86:
 641 021c 40DF      		rcall SetupTimer
 643               	.LM87:
 644 021e 69E6      		ldi r22,lo8(105)
 645 0220 83E0      		ldi r24,lo8(3)
 646 0222 44DF      		rcall delay
 648               	.LM88:
 649 0224 CE01      		movw r24,r28
 650 0226 8DDF      		rcall FindTransmitted2
 651               	.L48:
 652 0228 C8E0      		ldi r28,lo8(8)
 653               	.L53:
 655               	.LM89:
 656 022a 39DF      		rcall SetupTimer
 658               	.LM90:
 659 022c 69E6      		ldi r22,lo8(105)
 660 022e 85E7      		ldi r24,lo8(117)
 661 0230 3DDF      		rcall delay
 663               	.LM91:
 664 0232 C150      		subi r28,lo8(-(-1))
 665 0234 C7FF      		sbrs r28,7
 666 0236 F9CF      		rjmp .L53
 667 0238 CCCF      		rjmp .L60
 668               	.L45:
 670               	.LM92:
 671 023a 82B3      		in r24,50-0x20
 672 023c 827F      		andi r24,lo8(-14)
 673 023e 82BB      		out 50-0x20,r24
 675               	.LM93:
 676 0240 88B3      		in r24,56-0x20
 677 0242 8D7B      		andi r24,lo8(-67)
 678 0244 88BB      		out 56-0x20,r24
 680               	.LM94:
 681 0246 C5CF      		rjmp .L60
 682               	/* epilogue: frame size=0 */
 683               	/* epilogue: noreturn */
 684               	/* epilogue end (size=0) */
 685               	/* function main size 68 (64) */
 691               	.Lscope7:
 692               		.lcomm cycles.0,1
 694               	.global	__vector_6
 696               	__vector_6:
 132:main.c        **** }
 133:main.c        **** INTERRUPT(SIG_OUTPUT_COMPARE1A)
 134:main.c        **** {
 698               	.LM95:
 699               	/* prologue: frame size=0 */
 700 0248 7894      		sei
 701 024a 1F92      		push __zero_reg__
 702 024c 0F92      		push __tmp_reg__
 703 024e 0FB6      		in __tmp_reg__,__SREG__
 704 0250 0F92      		push __tmp_reg__
 705 0252 1124      		clr __zero_reg__
 706 0254 8F93      		push r24
 707 0256 9F93      		push r25
 708               	/* prologue end (size=8) */
 135:main.c        ****     unsigned  static  char cycles = 0; 
 136:main.c        **** 	if(cycles == Time)
 710               	.LM96:
 711 0258 9091 0000 		lds r25,cycles.0
 712 025c 8091 0000 		lds r24,Time
 713 0260 9817      		cp r25,r24
 714 0262 21F4      		brne .L62
 137:main.c        **** 	{
 138:main.c        **** 	   cycles =  0;
 716               	.LM97:
 717 0264 1092 0000 		sts cycles.0,__zero_reg__
 139:main.c        **** 	   TCCR1B =  0;
 719               	.LM98:
 720 0268 1EBC      		out 78-0x20,__zero_reg__
 721 026a 03C0      		rjmp .L61
 722               	.L62:
 140:main.c        **** 	}
 141:main.c        ****     else cycles ++;   
 724               	.LM99:
 725 026c 9F5F      		subi r25,lo8(-(1))
 726 026e 9093 0000 		sts cycles.0,r25
 727               	.L61:
 728               	/* epilogue: frame size=0 */
 729 0272 9F91      		pop r25
 730 0274 8F91      		pop r24
 731 0276 0F90      		pop __tmp_reg__
 732 0278 0FBE      		out __SREG__,__tmp_reg__
 733 027a 0F90      		pop __tmp_reg__
 734 027c 1F90      		pop __zero_reg__
 735 027e 1895      		reti
 736               	/* epilogue end (size=7) */
 737               	/* function __vector_6 size 28 (13) */
 742               	.Lscope8:
 745               		.text
 747               	Letext:
 748               	/* File "main.c": code  323 = 0x0143 ( 273), prologues  24, epilogues  26 */
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *ABS*:0000003f __SREG__
                            *ABS*:0000003e __SP_H__
                            *ABS*:0000003d __SP_L__
                            *ABS*:00000000 __tmp_reg__
                            *ABS*:00000001 __zero_reg__
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:63     .bss:00000000 Time
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:69     .data:00000000 check
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:82     .text:00000000 InitDDRs
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:127    .text:0000001a TurnMotors
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:184    .text:00000046 FindFirst
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:285    .text:0000009e SetupTimer
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:313    .text:000000ac delay
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:343    .text:000000c0 FindTransmitted1
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:454    .text:00000142 FindTransmitted2
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:564    .text:000001c4 main
                             .bss:00000001 cycles.0
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:696    .text:00000248 __vector_6
C:\DOCUME~1\Ankur\LOCALS~1\Temp/cci4aaaa.s:747    .text:00000280 Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
__stack
