                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Tue May 21 11:10:07 2013
                              5 ;--------------------------------------------------------
                              6 	.module hello
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _MoveCursor
                             14 	.globl _ClearScreen
                             15 	.globl _printf
                             16 	.globl _CX80_System_FNC_EntryPoint
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ; ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _CX80_System_FNC_EntryPoint::
   0000                      25 	.ds 2
                             26 ;--------------------------------------------------------
                             27 ; absolute external ram data
                             28 ;--------------------------------------------------------
                             29 	.area _DABS (ABS)
                             30 ;--------------------------------------------------------
                             31 ; global & static initialisations
                             32 ;--------------------------------------------------------
                             33 	.area _HOME
                             34 	.area _GSINIT
                             35 	.area _GSFINAL
                             36 	.area _GSINIT
                             37 ;--------------------------------------------------------
                             38 ; Home
                             39 ;--------------------------------------------------------
                             40 	.area _HOME
                             41 	.area _HOME
                             42 ;--------------------------------------------------------
                             43 ; code
                             44 ;--------------------------------------------------------
                             45 	.area _CODE
                             46 ;hello.c:27: void ClearScreen(void)
                             47 ;	---------------------------------
                             48 ; Function ClearScreen
                             49 ; ---------------------------------
   0000                      50 _ClearScreen_start::
   0000                      51 _ClearScreen:
                             52 ;hello.c:30: *CX80_System_FNC_EntryPoint = CX80_FNC_CLEAR_SCREEN;
   0000 2Ar00s00             53 	ld	hl,(_CX80_System_FNC_EntryPoint)
   0003 36 06                54 	ld	(hl),#0x06
                             55 ;hello.c:33: CX80_DO_SYSTEM_CALL;
   0005 CD 07 00             56 	call #0x0007
   0008 C9                   57 	ret
   0009                      58 _ClearScreen_end::
                             59 ;hello.c:36: void MoveCursor(char row, char column)
                             60 ;	---------------------------------
                             61 ; Function MoveCursor
                             62 ; ---------------------------------
   0009                      63 _MoveCursor_start::
   0009                      64 _MoveCursor:
                             65 ;hello.c:44: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR) = row;
   0009 ED 5Br00s00          66 	ld	de,(_CX80_System_FNC_EntryPoint)
   000D 13                   67 	inc	de
   000E 21 02 00             68 	ld	hl, #2+0
   0011 39                   69 	add	hl, sp
   0012 7E                   70 	ld	a, (hl)
   0013 12                   71 	ld	(de),a
                             72 ;hello.c:45: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1H_ADDR) = column;
   0014 ED 5Br00s00          73 	ld	de,(_CX80_System_FNC_EntryPoint)
   0018 13                   74 	inc	de
   0019 13                   75 	inc	de
   001A FD 21 03 00          76 	ld	iy,#3
   001E FD 39                77 	add	iy,sp
   0020 FD 7E 00             78 	ld	a,0 (iy)
   0023 12                   79 	ld	(de),a
                             80 ;hello.c:48: *CX80_System_FNC_EntryPoint = CX80_FNC_MOVE_CURSOR;
   0024 2Ar00s00             81 	ld	hl,(_CX80_System_FNC_EntryPoint)
   0027 36 0B                82 	ld	(hl),#0x0B
                             83 ;hello.c:51: CX80_DO_SYSTEM_CALL;
   0029 CD 07 00             84 	call #0x0007
   002C C9                   85 	ret
   002D                      86 _MoveCursor_end::
                             87 ;hello.c:54: int main(void)
                             88 ;	---------------------------------
                             89 ; Function main
                             90 ; ---------------------------------
   002D                      91 _main_start::
   002D                      92 _main:
                             93 ;hello.c:58: CX80_System_FNC_EntryPoint = (char *)0x0000;
   002D FD 21r00s00          94 	ld	iy,#_CX80_System_FNC_EntryPoint
   0031 FD 36 00 00          95 	ld	0 (iy),#0x00
   0035 FD 36 01 00          96 	ld	1 (iy),#0x00
                             97 ;hello.c:60: ClearScreen();
   0039 CDr00s00             98 	call	_ClearScreen
                             99 ;hello.c:62: MoveCursor(2, 13);
   003C 21 02 0D            100 	ld	hl,#0x0D02
   003F E5                  101 	push	hl
   0040 CDr09s00            102 	call	_MoveCursor
                            103 ;hello.c:65: printf("Hello World!\n\r");
   0043 21r4Fs00            104 	ld	hl, #__str_0
   0046 E3                  105 	ex	(sp),hl
   0047 CDr00s00            106 	call	_printf
   004A F1                  107 	pop	af
                            108 ;hello.c:68: return 0;
   004B 21 00 00            109 	ld	hl,#0x0000
   004E C9                  110 	ret
   004F                     111 _main_end::
   004F                     112 __str_0:
   004F 48 65 6C 6C 6F 20   113 	.ascii "Hello World!"
        57 6F 72 6C 64 21
   005B 0A                  114 	.db 0x0A
   005C 0D                  115 	.db 0x0D
   005D 00                  116 	.db 0x00
                            117 	.area _CODE
                            118 	.area _CABS (ABS)
