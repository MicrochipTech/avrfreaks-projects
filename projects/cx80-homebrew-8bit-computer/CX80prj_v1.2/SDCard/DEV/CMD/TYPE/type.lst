                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.2.0 #8008 (Jul  6 2012) (MINGW32)
                              4 ; This file was generated Tue May 28 09:23:23 2013
                              5 ;--------------------------------------------------------
                              6 	.module type
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _main
                             13 	.globl _GetCh
                             14 	.globl _MoveCursor
                             15 	.globl _CloseFile
                             16 	.globl _GetString
                             17 	.globl _OpenFile
                             18 	.globl _GetLine
                             19 	.globl _CX80PrintString
                             20 	.globl _strlen
                             21 	.globl _strchr
                             22 	.globl _FileID
                             23 	.globl _ReadLine
                             24 	.globl _CX80_System_FNC_EntryPoint
                             25 ;--------------------------------------------------------
                             26 ; special function registers
                             27 ;--------------------------------------------------------
                             28 ;--------------------------------------------------------
                             29 ; ram data
                             30 ;--------------------------------------------------------
                             31 	.area _DATA
   0000                      32 _CX80_System_FNC_EntryPoint::
   0000                      33 	.ds 2
   0002                      34 _ReadLine::
   0002                      35 	.ds 38
   0028                      36 _FileID::
   0028                      37 	.ds 1
                             38 ;--------------------------------------------------------
                             39 ; absolute external ram data
                             40 ;--------------------------------------------------------
                             41 	.area _DABS (ABS)
                             42 ;--------------------------------------------------------
                             43 ; global & static initialisations
                             44 ;--------------------------------------------------------
                             45 	.area _HOME
                             46 	.area _GSINIT
                             47 	.area _GSFINAL
                             48 	.area _GSINIT
                             49 ;--------------------------------------------------------
                             50 ; Home
                             51 ;--------------------------------------------------------
                             52 	.area _HOME
                             53 	.area _HOME
                             54 ;--------------------------------------------------------
                             55 ; code
                             56 ;--------------------------------------------------------
                             57 	.area _CODE
                             58 ;type.c:18: void CX80PrintString(char *Txt)
                             59 ;	---------------------------------
                             60 ; Function CX80PrintString
                             61 ; ---------------------------------
   0000                      62 _CX80PrintString_start::
   0000                      63 _CX80PrintString:
   0000 DD E5                64 	push	ix
   0002 DD 21 00 00          65 	ld	ix,#0
   0006 DD 39                66 	add	ix,sp
                             67 ;type.c:20: unsigned short pBuffer = (unsigned short)((char *)&Txt[0]);
   0008 DD 4E 04             68 	ld	c,4 (ix)
   000B DD 46 05             69 	ld	b,5 (ix)
                             70 ;type.c:22: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR) = CX80_LoByte(pBuffer);
   000E ED 5Br00s00          71 	ld	de,(_CX80_System_FNC_EntryPoint)
   0012 13                   72 	inc	de
   0013 79                   73 	ld	a, c
   0014 12                   74 	ld	(de),a
                             75 ;type.c:23: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1H_ADDR) = CX80_HiByte(pBuffer);
   0015 ED 5Br00s00          76 	ld	de,(_CX80_System_FNC_EntryPoint)
   0019 13                   77 	inc	de
   001A 13                   78 	inc	de
   001B 78                   79 	ld	a,b
   001C 12                   80 	ld	(de),a
                             81 ;type.c:25: *CX80_System_FNC_EntryPoint = CX80_FNC_PRINT_STRING;
   001D 2Ar00s00             82 	ld	hl,(_CX80_System_FNC_EntryPoint)
   0020 36 00                83 	ld	(hl),#0x00
                             84 ;type.c:27: CX80_DO_SYSTEM_CALL;
   0022 CD 07 00             85 	call #0x0007
   0025 DD E1                86 	pop	ix
   0027 C9                   87 	ret
   0028                      88 _CX80PrintString_end::
                             89 ;type.c:30: void GetLine(char *Buffer, char len)
                             90 ;	---------------------------------
                             91 ; Function GetLine
                             92 ; ---------------------------------
   0028                      93 _GetLine_start::
   0028                      94 _GetLine:
   0028 DD E5                95 	push	ix
   002A DD 21 00 00          96 	ld	ix,#0
   002E DD 39                97 	add	ix,sp
                             98 ;type.c:32: unsigned short pBuffer = (unsigned short)((char *)&Buffer[0]);
   0030 DD 5E 04             99 	ld	e,4 (ix)
   0033 DD 56 05            100 	ld	d,5 (ix)
                            101 ;type.c:34: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR) = len;
   0036 ED 4Br00s00         102 	ld	bc,(_CX80_System_FNC_EntryPoint)
   003A 03                  103 	inc	bc
   003B DD 7E 06            104 	ld	a,6 (ix)
   003E 02                  105 	ld	(bc),a
                            106 ;type.c:35: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG2L_ADDR) = CX80_LoByte(pBuffer);
   003F ED 4Br00s00         107 	ld	bc,(_CX80_System_FNC_EntryPoint)
   0043 03                  108 	inc	bc
   0044 03                  109 	inc	bc
   0045 03                  110 	inc	bc
   0046 7B                  111 	ld	a, e
   0047 02                  112 	ld	(bc),a
                            113 ;type.c:36: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG2H_ADDR) = CX80_HiByte(pBuffer);
   0048 FD 21 04 00         114 	ld	iy,#0x0004
   004C ED 4Br00s00         115 	ld	bc,(_CX80_System_FNC_EntryPoint)
   0050 FD 09               116 	add	iy, bc
   0052 FD 72 00            117 	ld	0 (iy), d
                            118 ;type.c:38: *CX80_System_FNC_EntryPoint = CX80_FNC_GET_INPUT_STRING;
   0055 2Ar00s00            119 	ld	hl,(_CX80_System_FNC_EntryPoint)
   0058 36 26               120 	ld	(hl),#0x26
                            121 ;type.c:40: CX80_DO_SYSTEM_CALL;
   005A CD 07 00            122 	call #0x0007
   005D DD E1               123 	pop	ix
   005F C9                  124 	ret
   0060                     125 _GetLine_end::
                            126 ;type.c:43: unsigned char OpenFile(char *FName)
                            127 ;	---------------------------------
                            128 ; Function OpenFile
                            129 ; ---------------------------------
   0060                     130 _OpenFile_start::
   0060                     131 _OpenFile:
   0060 DD E5               132 	push	ix
   0062 DD 21 00 00         133 	ld	ix,#0
   0066 DD 39               134 	add	ix,sp
                            135 ;type.c:45: unsigned short pFileName = (unsigned short)((char *)&FName[0]);
   0068 DD 5E 04            136 	ld	e,4 (ix)
   006B DD 56 05            137 	ld	d,5 (ix)
                            138 ;type.c:47: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR) = FA_READ;
   006E ED 4Br00s00         139 	ld	bc,(_CX80_System_FNC_EntryPoint)
   0072 03                  140 	inc	bc
   0073 3E 01               141 	ld	a,#0x01
   0075 02                  142 	ld	(bc),a
                            143 ;type.c:49: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG2L_ADDR) = CX80_LoByte(pFileName);
   0076 ED 4Br00s00         144 	ld	bc,(_CX80_System_FNC_EntryPoint)
   007A 03                  145 	inc	bc
   007B 03                  146 	inc	bc
   007C 03                  147 	inc	bc
   007D 7B                  148 	ld	a, e
   007E 02                  149 	ld	(bc),a
                            150 ;type.c:50: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG2H_ADDR) = CX80_HiByte(pFileName);
   007F FD 21r00s00         151 	ld	iy,#_CX80_System_FNC_EntryPoint
   0083 FD 7E 00            152 	ld	a,0 (iy)
   0086 C6 04               153 	add	a, #0x04
   0088 4F                  154 	ld	c,a
   0089 FD 7E 01            155 	ld	a,1 (iy)
   008C CE 00               156 	adc	a, #0x00
   008E 47                  157 	ld	b,a
   008F 7A                  158 	ld	a, d
   0090 02                  159 	ld	(bc),a
                            160 ;type.c:52: *CX80_System_FNC_EntryPoint = CX80_FNC_OPEN_CREATE_FILE;
   0091 2Ar00s00            161 	ld	hl,(_CX80_System_FNC_EntryPoint)
   0094 36 17               162 	ld	(hl),#0x17
                            163 ;type.c:54: CX80_DO_SYSTEM_CALL;
   0096 CD 07 00            164 	call #0x0007
                            165 ;type.c:56: return (*(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1H_ADDR));
   0099 2Ar00s00            166 	ld	hl,(_CX80_System_FNC_EntryPoint)
   009C 23                  167 	inc	hl
   009D 23                  168 	inc	hl
   009E 6E                  169 	ld	l,(hl)
   009F DD E1               170 	pop	ix
   00A1 C9                  171 	ret
   00A2                     172 _OpenFile_end::
                            173 ;type.c:59: unsigned char GetString(char fID, char *buffer, unsigned short len)
                            174 ;	---------------------------------
                            175 ; Function GetString
                            176 ; ---------------------------------
   00A2                     177 _GetString_start::
   00A2                     178 _GetString:
   00A2 DD E5               179 	push	ix
   00A4 DD 21 00 00         180 	ld	ix,#0
   00A8 DD 39               181 	add	ix,sp
                            182 ;type.c:61: unsigned short pBuffer = (unsigned short)((char *)&buffer[0]);
   00AA DD 5E 05            183 	ld	e,5 (ix)
   00AD DD 56 06            184 	ld	d,6 (ix)
                            185 ;type.c:63: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR) = fID;
   00B0 ED 4Br00s00         186 	ld	bc,(_CX80_System_FNC_EntryPoint)
   00B4 03                  187 	inc	bc
   00B5 DD 7E 04            188 	ld	a,4 (ix)
   00B8 02                  189 	ld	(bc),a
                            190 ;type.c:64: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG2L_ADDR) = CX80_LoByte(pBuffer);
   00B9 ED 4Br00s00         191 	ld	bc,(_CX80_System_FNC_EntryPoint)
   00BD 03                  192 	inc	bc
   00BE 03                  193 	inc	bc
   00BF 03                  194 	inc	bc
   00C0 7B                  195 	ld	a, e
   00C1 02                  196 	ld	(bc),a
                            197 ;type.c:65: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG2H_ADDR) = CX80_HiByte(pBuffer);
   00C2 FD 21r00s00         198 	ld	iy,#_CX80_System_FNC_EntryPoint
   00C6 FD 7E 00            199 	ld	a,0 (iy)
   00C9 C6 04               200 	add	a, #0x04
   00CB 4F                  201 	ld	c,a
   00CC FD 7E 01            202 	ld	a,1 (iy)
   00CF CE 00               203 	adc	a, #0x00
   00D1 47                  204 	ld	b,a
   00D2 7A                  205 	ld	a, d
   00D3 02                  206 	ld	(bc),a
                            207 ;type.c:66: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG3L_ADDR) = CX80_LoByte(len);
   00D4 FD 7E 00            208 	ld	a,0 (iy)
   00D7 C6 05               209 	add	a, #0x05
   00D9 5F                  210 	ld	e,a
   00DA FD 7E 01            211 	ld	a,1 (iy)
   00DD CE 00               212 	adc	a, #0x00
   00DF 57                  213 	ld	d,a
   00E0 DD 7E 07            214 	ld	a, 7 (ix)
   00E3 12                  215 	ld	(de),a
                            216 ;type.c:67: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG3H_ADDR) = CX80_HiByte(len);
   00E4 FD 7E 00            217 	ld	a,0 (iy)
   00E7 C6 06               218 	add	a, #0x06
   00E9 5F                  219 	ld	e,a
   00EA FD 7E 01            220 	ld	a,1 (iy)
   00ED CE 00               221 	adc	a, #0x00
   00EF 57                  222 	ld	d,a
   00F0 DD 7E 08            223 	ld	a, 8 (ix)
   00F3 12                  224 	ld	(de),a
                            225 ;type.c:69: *CX80_System_FNC_EntryPoint = CX80_FNC_GET_STRING_FROM_FILE;
   00F4 2Ar00s00            226 	ld	hl,(_CX80_System_FNC_EntryPoint)
   00F7 36 2A               227 	ld	(hl),#0x2A
                            228 ;type.c:71: CX80_DO_SYSTEM_CALL;
   00F9 CD 07 00            229 	call #0x0007
                            230 ;type.c:73: return (*(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1H_ADDR));
   00FC 2Ar00s00            231 	ld	hl,(_CX80_System_FNC_EntryPoint)
   00FF 23                  232 	inc	hl
   0100 23                  233 	inc	hl
   0101 6E                  234 	ld	l,(hl)
   0102 DD E1               235 	pop	ix
   0104 C9                  236 	ret
   0105                     237 _GetString_end::
                            238 ;type.c:76: void CloseFile(char fID)
                            239 ;	---------------------------------
                            240 ; Function CloseFile
                            241 ; ---------------------------------
   0105                     242 _CloseFile_start::
   0105                     243 _CloseFile:
                            244 ;type.c:78: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR) = fID;
   0105 ED 5Br00s00         245 	ld	de,(_CX80_System_FNC_EntryPoint)
   0109 13                  246 	inc	de
   010A FD 21 02 00         247 	ld	iy,#2
   010E FD 39               248 	add	iy,sp
   0110 FD 7E 00            249 	ld	a,0 (iy)
   0113 12                  250 	ld	(de),a
                            251 ;type.c:80: *CX80_System_FNC_EntryPoint = CX80_FNC_CLOSE_FILE;
   0114 2Ar00s00            252 	ld	hl,(_CX80_System_FNC_EntryPoint)
   0117 36 1A               253 	ld	(hl),#0x1A
                            254 ;type.c:82: CX80_DO_SYSTEM_CALL;
   0119 CD 07 00            255 	call #0x0007
   011C C9                  256 	ret
   011D                     257 _CloseFile_end::
                            258 ;type.c:85: void MoveCursor(char row, char column)
                            259 ;	---------------------------------
                            260 ; Function MoveCursor
                            261 ; ---------------------------------
   011D                     262 _MoveCursor_start::
   011D                     263 _MoveCursor:
                            264 ;type.c:87: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR) = row;
   011D ED 5Br00s00         265 	ld	de,(_CX80_System_FNC_EntryPoint)
   0121 13                  266 	inc	de
   0122 21 02 00            267 	ld	hl, #2+0
   0125 39                  268 	add	hl, sp
   0126 7E                  269 	ld	a, (hl)
   0127 12                  270 	ld	(de),a
                            271 ;type.c:88: *(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1H_ADDR) = column;
   0128 ED 5Br00s00         272 	ld	de,(_CX80_System_FNC_EntryPoint)
   012C 13                  273 	inc	de
   012D 13                  274 	inc	de
   012E FD 21 03 00         275 	ld	iy,#3
   0132 FD 39               276 	add	iy,sp
   0134 FD 7E 00            277 	ld	a,0 (iy)
   0137 12                  278 	ld	(de),a
                            279 ;type.c:90: *CX80_System_FNC_EntryPoint = CX80_FNC_MOVE_CURSOR;
   0138 2Ar00s00            280 	ld	hl,(_CX80_System_FNC_EntryPoint)
   013B 36 0B               281 	ld	(hl),#0x0B
                            282 ;type.c:92: CX80_DO_SYSTEM_CALL;
   013D CD 07 00            283 	call #0x0007
   0140 C9                  284 	ret
   0141                     285 _MoveCursor_end::
                            286 ;type.c:95: unsigned char GetCh(void)
                            287 ;	---------------------------------
                            288 ; Function GetCh
                            289 ; ---------------------------------
   0141                     290 _GetCh_start::
   0141                     291 _GetCh:
                            292 ;type.c:97: *CX80_System_FNC_EntryPoint = CX80_FNC_WAIT_FOR_KEYPRESSED;
   0141 2Ar00s00            293 	ld	hl,(_CX80_System_FNC_EntryPoint)
   0144 36 24               294 	ld	(hl),#0x24
                            295 ;type.c:99: CX80_DO_SYSTEM_CALL;
   0146 CD 07 00            296 	call #0x0007
                            297 ;type.c:101: return (*(CX80_System_FNC_EntryPoint + CX80_SYSTEM_REG1L_ADDR)); 
   0149 2Ar00s00            298 	ld	hl,(_CX80_System_FNC_EntryPoint)
   014C 23                  299 	inc	hl
   014D 6E                  300 	ld	l,(hl)
   014E C9                  301 	ret
   014F                     302 _GetCh_end::
                            303 ;type.c:104: int main(void)
                            304 ;	---------------------------------
                            305 ; Function main
                            306 ; ---------------------------------
   014F                     307 _main_start::
   014F                     308 _main:
   014F DD E5               309 	push	ix
   0151 DD 21 00 00         310 	ld	ix,#0
   0155 DD 39               311 	add	ix,sp
   0157 3B                  312 	dec	sp
                            313 ;type.c:109: CX80_System_FNC_EntryPoint = (char *)0x0000;
   0158 FD 21r00s00         314 	ld	iy,#_CX80_System_FNC_EntryPoint
   015C FD 36 00 00         315 	ld	0 (iy),#0x00
   0160 FD 36 01 00         316 	ld	1 (iy),#0x00
                            317 ;type.c:111: CX80PrintString("CX80 Type Command.\n\r");
   0164 21r6Bs02            318 	ld	hl,#__str_0
   0167 E5                  319 	push	hl
   0168 CDr00s00            320 	call	_CX80PrintString
                            321 ;type.c:112: CX80PrintString("Show text file on video.\n\r");
   016B 21r80s02            322 	ld	hl, #__str_1
   016E E3                  323 	ex	(sp),hl
   016F CDr00s00            324 	call	_CX80PrintString
                            325 ;type.c:113: CX80PrintString("Filename (empty to exit)\n\r");
   0172 21r9Bs02            326 	ld	hl, #__str_2
   0175 E3                  327 	ex	(sp),hl
   0176 CDr00s00            328 	call	_CX80PrintString
                            329 ;type.c:114: CX80PrintString(":");
   0179 21rB6s02            330 	ld	hl, #__str_3
   017C E3                  331 	ex	(sp),hl
   017D CDr00s00            332 	call	_CX80PrintString
   0180 F1                  333 	pop	af
                            334 ;type.c:116: GetLine(ReadLine, 38);
   0181 11r02s00            335 	ld	de,#_ReadLine
   0184 3E 26               336 	ld	a,#0x26
   0186 F5                  337 	push	af
   0187 33                  338 	inc	sp
   0188 D5                  339 	push	de
   0189 CDr28s00            340 	call	_GetLine
                            341 ;type.c:118: CX80PrintString("\n\r");
   018C 33                  342 	inc	sp
   018D 21rB8s02            343 	ld	hl,#__str_4
   0190 E3                  344 	ex	(sp),hl
   0191 CDr00s00            345 	call	_CX80PrintString
                            346 ;type.c:120: if (strlen(ReadLine) > 0)
   0194 21r02s00            347 	ld	hl, #_ReadLine
   0197 E3                  348 	ex	(sp),hl
   0198 CDr00s00            349 	call	_strlen
   019B F1                  350 	pop	af
   019C 44                  351 	ld	b,h
   019D 78                  352 	ld	a,b
   019E B5                  353 	or	a,l
   019F CAr63s02            354 	jp	Z,00120$
                            355 ;type.c:123: cnt = 0;
   01A2 0E 00               356 	ld	c,#0x00
                            357 ;type.c:125: FileID = OpenFile(ReadLine);
   01A4 21r02s00            358 	ld	hl,#_ReadLine
   01A7 C5                  359 	push	bc
   01A8 E5                  360 	push	hl
   01A9 CDr60s00            361 	call	_OpenFile
   01AC F1                  362 	pop	af
   01AD C1                  363 	pop	bc
   01AE FD 21r28s00         364 	ld	iy,#_FileID
   01B2 FD 75 00            365 	ld	0 (iy),l
                            366 ;type.c:127: if (FileID < 3)
   01B5 FD 7E 00            367 	ld	a,0 (iy)
   01B8 D6 03               368 	sub	a, #0x03
   01BA D2r5Bs02            369 	jp	NC,00117$
                            370 ;type.c:129: while (1)
   01BD                     371 00112$:
                            372 ;type.c:131: ret = GetString(FileID, ReadLine, 38);
   01BD 21r02s00            373 	ld	hl,#_ReadLine
   01C0 C5                  374 	push	bc
   01C1 11 26 00            375 	ld	de,#0x0026
   01C4 D5                  376 	push	de
   01C5 E5                  377 	push	hl
   01C6 3Ar28s00            378 	ld	a,(_FileID)
   01C9 F5                  379 	push	af
   01CA 33                  380 	inc	sp
   01CB CDrA2s00            381 	call	_GetString
   01CE F1                  382 	pop	af
   01CF F1                  383 	pop	af
   01D0 33                  384 	inc	sp
   01D1 C1                  385 	pop	bc
   01D2 DD 75 FF            386 	ld	-1 (ix),l
                            387 ;type.c:133: if (cnt == MAX_LINE_ON_SCREEN)
   01D5 79                  388 	ld	a,c
   01D6 D6 18               389 	sub	a, #0x18
   01D8 20 38               390 	jr	NZ,00106$
                            391 ;type.c:135: MoveCursor(24, 0);
   01DA 21 18 00            392 	ld	hl,#0x0018
   01DD E5                  393 	push	hl
   01DE CDr1Ds01            394 	call	_MoveCursor
                            395 ;type.c:136: CX80PrintString("More? (Y/N)");
   01E1 21rBBs02            396 	ld	hl, #__str_5
   01E4 E3                  397 	ex	(sp),hl
   01E5 CDr00s00            398 	call	_CX80PrintString
   01E8 F1                  399 	pop	af
                            400 ;type.c:138: pCh = GetCh();
   01E9 CDr41s01            401 	call	_GetCh
                            402 ;type.c:140: if ((pCh == 'y') || (pCh == 'Y'))
   01EC 7D                  403 	ld	a,l
   01ED FE 79               404 	cp	a,#0x79
   01EF 28 04               405 	jr	Z,00101$
   01F1 D6 59               406 	sub	a, #0x59
   01F3 20 4C               407 	jr	NZ,00113$
   01F5                     408 00101$:
                            409 ;type.c:142: cnt = 0;
   01F5 0E 00               410 	ld	c,#0x00
                            411 ;type.c:144: MoveCursor(24, 0);
   01F7 C5                  412 	push	bc
   01F8 21 18 00            413 	ld	hl,#0x0018
   01FB E5                  414 	push	hl
   01FC CDr1Ds01            415 	call	_MoveCursor
   01FF F1                  416 	pop	af
   0200 C1                  417 	pop	bc
                            418 ;type.c:146: CX80PrintString("           ");
   0201 21rC7s02            419 	ld	hl,#__str_6
   0204 C5                  420 	push	bc
   0205 E5                  421 	push	hl
   0206 CDr00s00            422 	call	_CX80PrintString
   0209 21 18 00            423 	ld	hl, #0x0018
   020C E3                  424 	ex	(sp),hl
   020D CDr1Ds01            425 	call	_MoveCursor
   0210 F1                  426 	pop	af
   0211 C1                  427 	pop	bc
                            428 ;type.c:151: break;
   0212                     429 00106$:
                            430 ;type.c:154: CX80PrintString(ReadLine);
   0212 21r02s00            431 	ld	hl,#_ReadLine
   0215 C5                  432 	push	bc
   0216 E5                  433 	push	hl
   0217 CDr00s00            434 	call	_CX80PrintString
   021A F1                  435 	pop	af
   021B C1                  436 	pop	bc
                            437 ;type.c:156: cnt++;
   021C 0C                  438 	inc	c
                            439 ;type.c:158: pntch = strchr(ReadLine, '\n');
   021D 21r02s00            440 	ld	hl,#_ReadLine
   0220 C5                  441 	push	bc
   0221 11 0A 00            442 	ld	de,#0x000A
   0224 D5                  443 	push	de
   0225 E5                  444 	push	hl
   0226 CDr00s00            445 	call	_strchr
   0229 F1                  446 	pop	af
   022A F1                  447 	pop	af
   022B C1                  448 	pop	bc
                            449 ;type.c:160: if (pntch == NULL)
   022C 7C                  450 	ld	a,h
   022D B5                  451 	or	a,l
   022E 20 0A               452 	jr	NZ,00108$
                            453 ;type.c:161: CX80PrintString("\n\r");
   0230 21rB8s02            454 	ld	hl,#__str_4
   0233 C5                  455 	push	bc
   0234 E5                  456 	push	hl
   0235 CDr00s00            457 	call	_CX80PrintString
   0238 F1                  458 	pop	af
   0239 C1                  459 	pop	bc
   023A                     460 00108$:
                            461 ;type.c:163: if (ret != 0)
   023A DD 7E FF            462 	ld	a,-1 (ix)
   023D B7                  463 	or	a, a
   023E CArBDs01            464 	jp	Z,00112$
                            465 ;type.c:164: break;
   0241                     466 00113$:
                            467 ;type.c:167: CloseFile(FileID);
   0241 3Ar28s00            468 	ld	a,(_FileID)
   0244 F5                  469 	push	af
   0245 33                  470 	inc	sp
   0246 CDr05s01            471 	call	_CloseFile
   0249 33                  472 	inc	sp
                            473 ;type.c:169: if (ret == 0xAA)
   024A DD 7E FF            474 	ld	a,-1 (ix)
   024D D6 AA               475 	sub	a, #0xAA
   024F 20 12               476 	jr	NZ,00120$
                            477 ;type.c:170: CX80PrintString("Error while read file!\n\r");
   0251 21rD3s02            478 	ld	hl,#__str_7
   0254 E5                  479 	push	hl
   0255 CDr00s00            480 	call	_CX80PrintString
   0258 F1                  481 	pop	af
   0259 18 08               482 	jr	00120$
   025B                     483 00117$:
                            484 ;type.c:173: CX80PrintString("Error while open file!\n\r");
   025B 21rECs02            485 	ld	hl,#__str_8
   025E E5                  486 	push	hl
   025F CDr00s00            487 	call	_CX80PrintString
   0262 F1                  488 	pop	af
   0263                     489 00120$:
                            490 ;type.c:176: return 0;
   0263 21 00 00            491 	ld	hl,#0x0000
   0266 DD F9               492 	ld	sp,ix
   0268 DD E1               493 	pop	ix
   026A C9                  494 	ret
   026B                     495 _main_end::
   026B                     496 __str_0:
   026B 43 58 38 30 20 54   497 	.ascii "CX80 Type Command."
        79 70 65 20 43 6F
        6D 6D 61 6E 64 2E
   027D 0A                  498 	.db 0x0A
   027E 0D                  499 	.db 0x0D
   027F 00                  500 	.db 0x00
   0280                     501 __str_1:
   0280 53 68 6F 77 20 74   502 	.ascii "Show text file on video."
        65 78 74 20 66 69
        6C 65 20 6F 6E 20
        76 69 64 65 6F 2E
   0298 0A                  503 	.db 0x0A
   0299 0D                  504 	.db 0x0D
   029A 00                  505 	.db 0x00
   029B                     506 __str_2:
   029B 46 69 6C 65 6E 61   507 	.ascii "Filename (empty to exit)"
        6D 65 20 28 65 6D
        70 74 79 20 74 6F
        20 65 78 69 74 29
   02B3 0A                  508 	.db 0x0A
   02B4 0D                  509 	.db 0x0D
   02B5 00                  510 	.db 0x00
   02B6                     511 __str_3:
   02B6 3A                  512 	.ascii ":"
   02B7 00                  513 	.db 0x00
   02B8                     514 __str_4:
   02B8 0A                  515 	.db 0x0A
   02B9 0D                  516 	.db 0x0D
   02BA 00                  517 	.db 0x00
   02BB                     518 __str_5:
   02BB 4D 6F 72 65 3F 20   519 	.ascii "More? (Y/N)"
        28 59 2F 4E 29
   02C6 00                  520 	.db 0x00
   02C7                     521 __str_6:
   02C7 20 20 20 20 20 20   522 	.ascii "           "
        20 20 20 20 20
   02D2 00                  523 	.db 0x00
   02D3                     524 __str_7:
   02D3 45 72 72 6F 72 20   525 	.ascii "Error while read file!"
        77 68 69 6C 65 20
        72 65 61 64 20 66
        69 6C 65 21
   02E9 0A                  526 	.db 0x0A
   02EA 0D                  527 	.db 0x0D
   02EB 00                  528 	.db 0x00
   02EC                     529 __str_8:
   02EC 45 72 72 6F 72 20   530 	.ascii "Error while open file!"
        77 68 69 6C 65 20
        6F 70 65 6E 20 66
        69 6C 65 21
   0302 0A                  531 	.db 0x0A
   0303 0D                  532 	.db 0x0D
   0304 00                  533 	.db 0x00
                            534 	.area _CODE
                            535 	.area _CABS (ABS)
