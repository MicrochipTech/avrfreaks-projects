Archive member included because of file (symbol)

c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_prologue.o)
                              xmodem.o (__prologue_saves__)
c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_epilogue.o)
                              xmodem.o (__epilogue_restores__)
c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_copy_data.o)
                              habl.o (__do_copy_data)
c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_clear_bss.o)
                              habl.o (__do_clear_bss)

Discarded input sections

 .stabstr       0x00000000        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00002000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
Address of section .text set to 0x1c00
LOAD habl.o
LOAD avr_uart.o
LOAD xmodem.o
LOAD c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4\libc.a
LOAD c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00001c00      0x3ae
 *(.vectors)
 .vectors       0x00001c00       0x34 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
                0x00001c00                __vectors
                0x00001c00                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00001c34       0x2c habl.o
                0x00001c60                . = ALIGN (0x2)
                0x00001c60                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00001c60        0x0 linker stubs
 *(.trampolines*)
                0x00001c60                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00001c60                __ctors_start = .
 *(.ctors)
                0x00001c60                __ctors_end = .
                0x00001c60                __dtors_start = .
 *(.dtors)
                0x00001c60                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00001c60        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
                0x00001c60                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00001c60        0xc c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00001c6c       0x16 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_copy_data.o)
                0x00001c6c                __do_copy_data
 .init4         0x00001c82       0x10 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_clear_bss.o)
                0x00001c82                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00001c92        0x2 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
 *(.init9)
 *(.text)
 .text          0x00001c94        0x2 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
                0x00001c94                __vector_22
                0x00001c94                __vector_1
                0x00001c94                __vector_24
                0x00001c94                __vector_12
                0x00001c94                __bad_interrupt
                0x00001c94                __vector_6
                0x00001c94                __vector_3
                0x00001c94                __vector_23
                0x00001c94                __vector_25
                0x00001c94                __vector_11
                0x00001c94                __vector_13
                0x00001c94                __vector_17
                0x00001c94                __vector_19
                0x00001c94                __vector_7
                0x00001c94                __vector_5
                0x00001c94                __vector_4
                0x00001c94                __vector_9
                0x00001c94                __vector_2
                0x00001c94                __vector_21
                0x00001c94                __vector_15
                0x00001c94                __vector_8
                0x00001c94                __vector_14
                0x00001c94                __vector_10
                0x00001c94                __vector_16
                0x00001c94                __vector_18
                0x00001c94                __vector_20
 .text          0x00001c96       0x80 habl.o
                0x00001c96                main
 .text          0x00001d16       0x74 avr_uart.o
                0x00001d6c                uart_print_P
                0x00001d54                uart_getchar
                0x00001d16                uart_init
                0x00001d40                uart_waitchar
                0x00001d30                uart_putchar
 .text          0x00001d8a      0x1b6 xmodem.o
                0x00001dca                xmodem
                0x00001d8a                xmodem_crc
 .text          0x00001f40        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_prologue.o)
 .text          0x00001f40        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_epilogue.o)
 .text          0x00001f40        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_copy_data.o)
 .text          0x00001f40        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_clear_bss.o)
                0x00001f40                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001f40       0x38 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_prologue.o)
                0x00001f40                __prologue_saves__
 .text.libgcc   0x00001f78       0x36 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_epilogue.o)
                0x00001f78                __epilogue_restores__
 .text.libgcc   0x00001fae        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_copy_data.o)
 .text.libgcc   0x00001fae        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_clear_bss.o)
                0x00001fae                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x00001fae                _etext = .

.data           0x00800100        0x0 load address 0x00001fae
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
 .data          0x00800100        0x0 habl.o
 .data          0x00800100        0x0 avr_uart.o
 .data          0x00800100        0x0 xmodem.o
 .data          0x00800100        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_prologue.o)
 .data          0x00800100        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_epilogue.o)
 .data          0x00800100        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x2
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o
 .bss           0x00800100        0x2 habl.o
                0x00800100                app
 .bss           0x00800102        0x0 avr_uart.o
 .bss           0x00800102        0x0 xmodem.o
 .bss           0x00800102        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_prologue.o)
 .bss           0x00800102        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_epilogue.o)
 .bss           0x00800102        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_copy_data.o)
 .bss           0x00800102        0x0 c:/winavr/bin/../lib/gcc/avr/4.1.1/avr4\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800102                PROVIDE (__bss_end, .)
                0x00001fae                __data_load_start = LOADADDR (.data)
                0x00001fae                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800102        0x0
                0x00800102                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800102                PROVIDE (__noinit_end, .)
                0x00800102                _end = .
                0x00800102                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x36c
 *(.stab)
 .stab          0x00000000      0x36c c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o

.stabstr        0x00000000       0x84
 *(.stabstr)
 .stabstr       0x00000000       0x84 c:/winavr/bin/../lib/gcc/avr/4.1.1/../../../../avr/lib/avr4/crtm88.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x60
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 habl.o
 .debug_aranges
                0x00000020       0x20 avr_uart.o
 .debug_aranges
                0x00000040       0x20 xmodem.o

.debug_pubnames
                0x00000000       0xb4
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x23 habl.o
 .debug_pubnames
                0x00000023       0x65 avr_uart.o
 .debug_pubnames
                0x00000088       0x2c xmodem.o

.debug_info     0x00000000      0x478
 *(.debug_info)
 .debug_info    0x00000000      0x141 habl.o
 .debug_info    0x00000141      0x1bd avr_uart.o
 .debug_info    0x000002fe      0x17a xmodem.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x287
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0xb5 habl.o
 .debug_abbrev  0x000000b5      0x106 avr_uart.o
 .debug_abbrev  0x000001bb       0xcc xmodem.o

.debug_line     0x00000000      0x4f3
 *(.debug_line)
 .debug_line    0x00000000      0x14b habl.o
 .debug_line    0x0000014b      0x18c avr_uart.o
 .debug_line    0x000002d7      0x21c xmodem.o

.debug_frame    0x00000000       0xb0
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 habl.o
 .debug_frame   0x00000020       0x60 avr_uart.o
 .debug_frame   0x00000080       0x30 xmodem.o

.debug_str      0x00000000      0x173
 *(.debug_str)
 .debug_str     0x00000000       0xae habl.o
                                 0xff (size before relaxing)
 .debug_str     0x000000ae       0x79 avr_uart.o
                                0x15a (size before relaxing)
 .debug_str     0x00000127       0x4c xmodem.o
                                0x105 (size before relaxing)

.debug_loc      0x00000000      0x166
 *(.debug_loc)
 .debug_loc     0x00000000       0x38 habl.o
 .debug_loc     0x00000038       0x46 avr_uart.o
 .debug_loc     0x0000007e       0xe8 xmodem.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(habl.out elf32-avr)
LOAD linker stubs
