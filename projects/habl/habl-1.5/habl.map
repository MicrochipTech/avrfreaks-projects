Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
                              xmodem.o (__prologue_saves__)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
                              xmodem.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o (exit)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                              habl.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                              habl.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
Address of section .text set to 0x3c00
LOAD habl.o
LOAD avr_uart.o
LOAD xmodem.o
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00003c00      0x3a8
 *(.vectors)
 .vectors       0x00003c00       0x68 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x00003c00                __vectors
                0x00003c00                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x00003c68       0x18 habl.o
                0x00003c80                . = ALIGN (0x2)
                0x00003c80                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00003c80        0x0 linker stubs
 *(.trampolines*)
                0x00003c80                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00003c80                __ctors_start = .
 *(.ctors)
                0x00003c80                __ctors_end = .
                0x00003c80                __dtors_start = .
 *(.dtors)
                0x00003c80                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00003c80        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x00003c80                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00003c80        0xc /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00003c8c       0x16 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
                0x00003c8c                __do_copy_data
 .init4         0x00003ca2       0x10 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00003ca2                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00003cb2        0x8 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 *(.init9)
 *(.text)
 .text          0x00003cba        0x4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
                0x00003cba                __vector_22
                0x00003cba                __vector_1
                0x00003cba                __vector_24
                0x00003cba                __vector_12
                0x00003cba                __bad_interrupt
                0x00003cba                __vector_6
                0x00003cba                __vector_3
                0x00003cba                __vector_23
                0x00003cba                __vector_25
                0x00003cba                __vector_11
                0x00003cba                __vector_13
                0x00003cba                __vector_17
                0x00003cba                __vector_19
                0x00003cba                __vector_7
                0x00003cba                __vector_5
                0x00003cba                __vector_4
                0x00003cba                __vector_9
                0x00003cba                __vector_2
                0x00003cba                __vector_21
                0x00003cba                __vector_15
                0x00003cba                __vector_8
                0x00003cba                __vector_14
                0x00003cba                __vector_10
                0x00003cba                __vector_16
                0x00003cba                __vector_18
                0x00003cba                __vector_20
 .text          0x00003cbe       0x86 habl.o
                0x00003cbe                main
 .text          0x00003d44       0x7c avr_uart.o
                0x00003d44                uart_init
                0x00003d5e                uart_putchar
                0x00003d72                uart_waitchar
                0x00003d84                uart_getchar
                0x00003da0                uart_print_P
 .text          0x00003dc0      0x176 xmodem.o
                0x00003dc0                xmodem
 .text          0x00003f36        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .text          0x00003f36        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 .text          0x00003f36        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text          0x00003f36        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text          0x00003f36        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00003f36                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00003f36       0x38 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
                0x00003f36                __prologue_saves__
 .text.libgcc   0x00003f6e       0x36 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
                0x00003f6e                __epilogue_restores__
 .text.libgcc   0x00003fa4        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00003fa4        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00003fa4        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
                0x00003fa4                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00003fa4        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
                0x00003fa4                exit
                0x00003fa4                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00003fa4        0x4 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00003fa8                _etext = .

.data           0x00800100        0x0 load address 0x00003fa8
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 .data          0x00800100        0x0 habl.o
 .data          0x00800100        0x0 avr_uart.o
 .data          0x00800100        0x0 xmodem.o
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .data          0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x2
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 .bss           0x00800100        0x2 habl.o
                0x00800100                app
 .bss           0x00800102        0x0 avr_uart.o
 .bss           0x00800102        0x0 xmodem.o
 .bss           0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_prologue.o)
 .bss           0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_epilogue.o)
 .bss           0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_exit.o)
 .bss           0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800102        0x0 /usr/lib/gcc/avr/4.3.4/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
                0x00800102                PROVIDE (__bss_end, .)
                0x00003fa8                __data_load_start = LOADADDR (.data)
                0x00003fa8                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800102        0x0
                0x00800102                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800102                PROVIDE (__noinit_end, .)
                0x00800102                _end = .
                0x00800102                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000     0x1410
 *(.stab)
 .stab          0x00000000      0x6b4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o
 .stab          0x000006b4      0x534 habl.o
                                0x540 (size before relaxing)
 .stab          0x00000be8      0x3c0 avr_uart.o
                                0x624 (size before relaxing)
 .stab          0x00000fa8      0x468 xmodem.o
                                0x630 (size before relaxing)

.stabstr        0x00000000      0xeb4
 *(.stabstr)
 .stabstr       0x00000000      0xeb4 /usr/lib/gcc/avr/4.3.4/../../../avr/lib/avr5/crtm168.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(habl.out elf32-avr)
LOAD linker stubs
