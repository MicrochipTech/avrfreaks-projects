   1               		.file	"in_out.c"
   2               		.arch atmega8
   3               	__SREG__ = 0x3f
   4               	__SP_H__ = 0x3e
   5               	__SP_L__ = 0x3d
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  11               		.text
  12               	.Ltext0:
  73               		.lcomm pb_last.0,1
  75               	.global	check_buttons
  77               	check_buttons:
   1:in_out.c      **** #include <avr/io.h>
   2:in_out.c      **** 
   3:in_out.c      **** #include "counter.h"
   4:in_out.c      **** #include "led.h"
   5:in_out.c      **** #include "in_out.h"
   6:in_out.c      **** 
   7:in_out.c      **** uint8_t run_stop; 
   8:in_out.c      **** 
   9:in_out.c      **** //this function is called every 5ms
  10:in_out.c      **** void check_buttons(void)
  11:in_out.c      **** {
  79               	.LM1:
  80               	/* prologue: frame size=1 */
  81 0000 CF93      		push r28
  82 0002 DF93      		push r29
  83 0004 CDB7      		in r28,__SP_L__
  84 0006 DEB7      		in r29,__SP_H__
  85 0008 2197      		sbiw r28,1
  86 000a 0FB6      		in __tmp_reg__,__SREG__
  87 000c F894      		cli
  88 000e DEBF      		out __SP_H__,r29
  89 0010 0FBE      		out __SREG__,__tmp_reg__
  90 0012 CDBF      		out __SP_L__,r28
  91               	/* prologue end (size=10) */
  12:in_out.c      **** uint8_t pb;
  13:in_out.c      **** static uint8_t pb_last;
  14:in_out.c      **** 	
  15:in_out.c      **** 	pb = PINB;
  93               	.LM2:
  94 0014 8091 3600 		lds r24,54
  95 0018 8983      		std Y+1,r24
  16:in_out.c      **** 	
  17:in_out.c      **** 	if ( ( pb & _BV(BUTT_RUN_IB)) < (pb_last & _BV(BUTT_RUN_IB)) )
  97               	.LM3:
  98 001a 8981      		ldd r24,Y+1
  99 001c 9927      		clr r25
 100 001e 9C01      		movw r18,r24
 101 0020 2072      		andi r18,lo8(32)
 102 0022 3070      		andi r19,hi8(32)
 103 0024 8091 0000 		lds r24,pb_last.0
 104 0028 9927      		clr r25
 105 002a 8072      		andi r24,lo8(32)
 106 002c 9070      		andi r25,hi8(32)
 107 002e 2817      		cp r18,r24
 108 0030 3907      		cpc r19,r25
 109 0032 0CF4      		brge .L2
  18:in_out.c      **** 	{
  19:in_out.c      **** 		toggle_output();
 111               	.LM4:
 112 0034 A3D0      		rcall toggle_output
 113               	.L2:
  20:in_out.c      **** 	}
  21:in_out.c      **** 		
  22:in_out.c      **** 	if ( ( pb & _BV(BUTT1_IB) ) < ( pb_last & _BV(BUTT1_IB) ) )
 115               	.LM5:
 116 0036 8981      		ldd r24,Y+1
 117 0038 9927      		clr r25
 118 003a 9C01      		movw r18,r24
 119 003c 2071      		andi r18,lo8(16)
 120 003e 3070      		andi r19,hi8(16)
 121 0040 8091 0000 		lds r24,pb_last.0
 122 0044 9927      		clr r25
 123 0046 8071      		andi r24,lo8(16)
 124 0048 9070      		andi r25,hi8(16)
 125 004a 2817      		cp r18,r24
 126 004c 3907      		cpc r19,r25
 127 004e 4CF4      		brge .L3
  23:in_out.c      **** 	{ 
  24:in_out.c      **** 		main_counter += 1;	
 129               	.LM6:
 130 0050 8091 0000 		lds r24,main_counter
 131 0054 9091 0000 		lds r25,(main_counter)+1
 132 0058 0196      		adiw r24,1
 133 005a 9093 0000 		sts (main_counter)+1,r25
 134 005e 8093 0000 		sts main_counter,r24
 135               	.L3:
  25:in_out.c      **** 	}
  26:in_out.c      **** 	if ( ( pb & _BV(BUTT10_IB)) < ( pb_last & _BV(BUTT10_IB) ) )
 137               	.LM7:
 138 0062 8981      		ldd r24,Y+1
 139 0064 9927      		clr r25
 140 0066 9C01      		movw r18,r24
 141 0068 2870      		andi r18,lo8(8)
 142 006a 3070      		andi r19,hi8(8)
 143 006c 8091 0000 		lds r24,pb_last.0
 144 0070 9927      		clr r25
 145 0072 8870      		andi r24,lo8(8)
 146 0074 9070      		andi r25,hi8(8)
 147 0076 2817      		cp r18,r24
 148 0078 3907      		cpc r19,r25
 149 007a 4CF4      		brge .L4
  27:in_out.c      **** 	{
  28:in_out.c      **** 		main_counter += 10;
 151               	.LM8:
 152 007c 8091 0000 		lds r24,main_counter
 153 0080 9091 0000 		lds r25,(main_counter)+1
 154 0084 0A96      		adiw r24,10
 155 0086 9093 0000 		sts (main_counter)+1,r25
 156 008a 8093 0000 		sts main_counter,r24
 157               	.L4:
  29:in_out.c      **** 	}
  30:in_out.c      **** 	if ( ( pb & _BV(BUTT100_IB) ) < ( pb_last & _BV(BUTT100_IB)) )
 159               	.LM9:
 160 008e 8981      		ldd r24,Y+1
 161 0090 9927      		clr r25
 162 0092 9C01      		movw r18,r24
 163 0094 2470      		andi r18,lo8(4)
 164 0096 3070      		andi r19,hi8(4)
 165 0098 8091 0000 		lds r24,pb_last.0
 166 009c 9927      		clr r25
 167 009e 8470      		andi r24,lo8(4)
 168 00a0 9070      		andi r25,hi8(4)
 169 00a2 2817      		cp r18,r24
 170 00a4 3907      		cpc r19,r25
 171 00a6 54F4      		brge .L5
  31:in_out.c      **** 	{
  32:in_out.c      **** 		main_counter += 100;
 173               	.LM10:
 174 00a8 8091 0000 		lds r24,main_counter
 175 00ac 9091 0000 		lds r25,(main_counter)+1
 176 00b0 8C59      		subi r24,lo8(-(100))
 177 00b2 9F4F      		sbci r25,hi8(-(100))
 178 00b4 9093 0000 		sts (main_counter)+1,r25
 179 00b8 8093 0000 		sts main_counter,r24
 180               	.L5:
  33:in_out.c      **** 	}
  34:in_out.c      **** 	if ( ( pb & _BV(BUTT1000_IB)) < ( pb_last & _BV(BUTT1000_IB)) )
 182               	.LM11:
 183 00bc 8981      		ldd r24,Y+1
 184 00be 9927      		clr r25
 185 00c0 9C01      		movw r18,r24
 186 00c2 2270      		andi r18,lo8(2)
 187 00c4 3070      		andi r19,hi8(2)
 188 00c6 8091 0000 		lds r24,pb_last.0
 189 00ca 9927      		clr r25
 190 00cc 8270      		andi r24,lo8(2)
 191 00ce 9070      		andi r25,hi8(2)
 192 00d0 2817      		cp r18,r24
 193 00d2 3907      		cpc r19,r25
 194 00d4 54F4      		brge .L6
  35:in_out.c      **** 	{
  36:in_out.c      **** 		main_counter += 1000;
 196               	.LM12:
 197 00d6 8091 0000 		lds r24,main_counter
 198 00da 9091 0000 		lds r25,(main_counter)+1
 199 00de 8851      		subi r24,lo8(-(1000))
 200 00e0 9C4F      		sbci r25,hi8(-(1000))
 201 00e2 9093 0000 		sts (main_counter)+1,r25
 202 00e6 8093 0000 		sts main_counter,r24
 203               	.L6:
  37:in_out.c      **** 	}
  38:in_out.c      **** 	
  39:in_out.c      **** 	pb_last = pb;	//save old state
 205               	.LM13:
 206 00ea 8981      		ldd r24,Y+1
 207 00ec 8093 0000 		sts pb_last.0,r24
 208               	/* epilogue: frame size=1 */
 209 00f0 2196      		adiw r28,1
 210 00f2 0FB6      		in __tmp_reg__,__SREG__
 211 00f4 F894      		cli
 212 00f6 DEBF      		out __SP_H__,r29
 213 00f8 0FBE      		out __SREG__,__tmp_reg__
 214 00fa CDBF      		out __SP_L__,r28
 215 00fc DF91      		pop r29
 216 00fe CF91      		pop r28
 217 0100 0895      		ret
 218               	/* epilogue end (size=9) */
 219               	/* function check_buttons size 129 (110) */
 225               	.Lscope0:
 227               	.global	port_init
 229               	port_init:
  40:in_out.c      **** }
  41:in_out.c      **** 
  42:in_out.c      **** void port_init(void)
  43:in_out.c      **** {
 231               	.LM14:
 232               	/* prologue: frame size=0 */
 233 0102 CF93      		push r28
 234 0104 DF93      		push r29
 235 0106 CDB7      		in r28,__SP_L__
 236 0108 DEB7      		in r29,__SP_H__
 237               	/* prologue end (size=4) */
  44:in_out.c      **** 	//note : see layout of pins in counter.h file
  45:in_out.c      **** 	
  46:in_out.c      **** 	DDRB = _BV(LED_F_OB) | _BV(LED_G_OB) | _BV(SEG1000_OB);
 239               	.LM15:
 240 010a 81EC      		ldi r24,lo8(-63)
 241 010c 8093 3700 		sts 55,r24
  47:in_out.c      **** 	DDRC = _BV(CLOCK_OC) | _BV(DIR_OC) | _BV(RELAY_OC);
 243               	.LM16:
 244 0110 8CE1      		ldi r24,lo8(28)
 245 0112 8093 3400 		sts 52,r24
  48:in_out.c      **** 	DDRD = _BV(LED_A_OD) | _BV(LED_B_OD) | _BV(LED_C_OD) | _BV(LED_D_OD) | _BV(LED_E_OD) | _BV(SEG100_
 247               	.LM17:
 248 0116 8FEF      		ldi r24,lo8(-1)
 249 0118 8093 3100 		sts 49,r24
  49:in_out.c      **** 	
  50:in_out.c      **** 	//butons - enable internal pull-ups
  51:in_out.c      **** 	PORTB = _BV(BUTT_RUN_IB) | _BV(BUTT1000_IB) | _BV(BUTT100_IB) | _BV(BUTT10_IB) | _BV(BUTT1_IB);
 251               	.LM18:
 252 011c 8EE3      		ldi r24,lo8(62)
 253 011e 8093 3800 		sts 56,r24
 254               	/* epilogue: frame size=0 */
 255 0122 DF91      		pop r29
 256 0124 CF91      		pop r28
 257 0126 0895      		ret
 258               	/* epilogue end (size=3) */
 259               	/* function port_init size 19 (12) */
 261               	.Lscope1:
 264               	.global	set_output
 266               	set_output:
  52:in_out.c      **** }
  53:in_out.c      **** 
  54:in_out.c      **** void set_output(uint8_t in)
  55:in_out.c      **** {
 268               	.LM19:
 269               	/* prologue: frame size=1 */
 270 0128 CF93      		push r28
 271 012a DF93      		push r29
 272 012c CDB7      		in r28,__SP_L__
 273 012e DEB7      		in r29,__SP_H__
 274 0130 2197      		sbiw r28,1
 275 0132 0FB6      		in __tmp_reg__,__SREG__
 276 0134 F894      		cli
 277 0136 DEBF      		out __SP_H__,r29
 278 0138 0FBE      		out __SREG__,__tmp_reg__
 279 013a CDBF      		out __SP_L__,r28
 280               	/* prologue end (size=10) */
 281 013c 8983      		std Y+1,r24
  56:in_out.c      **** 	run_stop = in;
 283               	.LM20:
 284 013e 8981      		ldd r24,Y+1
 285 0140 8093 0000 		sts run_stop,r24
  57:in_out.c      **** 	if (run_stop == RUN) PORTC |= _BV(RELAY_OC);
 287               	.LM21:
 288 0144 8091 0000 		lds r24,run_stop
 289 0148 8130      		cpi r24,lo8(1)
 290 014a 31F4      		brne .L9
 292               	.LM22:
 293 014c 8091 3500 		lds r24,53
 294 0150 8061      		ori r24,lo8(16)
 295 0152 8093 3500 		sts 53,r24
 296 0156 09C0      		rjmp .L8
 297               	.L9:
  58:in_out.c      **** 	else if (run_stop == STOP) PORTC &= ~_BV(RELAY_OC);
 299               	.LM23:
 300 0158 8091 0000 		lds r24,run_stop
 301 015c 8823      		tst r24
 302 015e 29F4      		brne .L8
 303 0160 8091 3500 		lds r24,53
 304 0164 8F7E      		andi r24,lo8(-17)
 305 0166 8093 3500 		sts 53,r24
 306               	.L8:
 307               	/* epilogue: frame size=1 */
 308 016a 2196      		adiw r28,1
 309 016c 0FB6      		in __tmp_reg__,__SREG__
 310 016e F894      		cli
 311 0170 DEBF      		out __SP_H__,r29
 312 0172 0FBE      		out __SREG__,__tmp_reg__
 313 0174 CDBF      		out __SP_L__,r28
 314 0176 DF91      		pop r29
 315 0178 CF91      		pop r28
 316 017a 0895      		ret
 317               	/* epilogue end (size=9) */
 318               	/* function set_output size 42 (23) */
 320               	.Lscope2:
 322               	.global	toggle_output
 324               	toggle_output:
  59:in_out.c      **** }
  60:in_out.c      **** void toggle_output(void)
  61:in_out.c      **** {
 326               	.LM24:
 327               	/* prologue: frame size=0 */
 328 017c CF93      		push r28
 329 017e DF93      		push r29
 330 0180 CDB7      		in r28,__SP_L__
 331 0182 DEB7      		in r29,__SP_H__
 332               	/* prologue end (size=4) */
  62:in_out.c      **** 	if (run_stop == RUN)
 334               	.LM25:
 335 0184 8091 0000 		lds r24,run_stop
 336 0188 8130      		cpi r24,lo8(1)
 337 018a 41F4      		brne .L13
  63:in_out.c      **** 	{
  64:in_out.c      **** 		run_stop = STOP;
 339               	.LM26:
 340 018c 1092 0000 		sts run_stop,__zero_reg__
  65:in_out.c      **** 		PORTC &= ~_BV(RELAY_OC);
 342               	.LM27:
 343 0190 8091 3500 		lds r24,53
 344 0194 8F7E      		andi r24,lo8(-17)
 345 0196 8093 3500 		sts 53,r24
 346 019a 08C0      		rjmp .L12
 347               	.L13:
  66:in_out.c      **** 	}
  67:in_out.c      **** 	else
  68:in_out.c      **** 	{
  69:in_out.c      **** 		run_stop = RUN;
 349               	.LM28:
 350 019c 81E0      		ldi r24,lo8(1)
 351 019e 8093 0000 		sts run_stop,r24
  70:in_out.c      **** 		PORTC |= _BV(RELAY_OC);
 353               	.LM29:
 354 01a2 8091 3500 		lds r24,53
 355 01a6 8061      		ori r24,lo8(16)
 356 01a8 8093 3500 		sts 53,r24
 357               	.L12:
 358               	/* epilogue: frame size=0 */
 359 01ac DF91      		pop r29
 360 01ae CF91      		pop r28
 361 01b0 0895      		ret
 362               	/* epilogue end (size=3) */
 363               	/* function toggle_output size 27 (20) */
 365               	.Lscope3:
 366               		.comm main_counter,2,1
 367               		.comm run_stop,1,1
 370               		.text
 372               	Letext:
 373               	/* File "in_out.c": code  217 = 0x00d9 ( 165), prologues  28, epilogues  24 */
DEFINED SYMBOLS
                            *ABS*:00000000 in_out.c
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:3      *ABS*:0000003f __SREG__
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:4      *ABS*:0000003e __SP_H__
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:5      *ABS*:0000003d __SP_L__
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:6      *ABS*:00000000 __tmp_reg__
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:7      *ABS*:00000001 __zero_reg__
                             .bss:00000000 pb_last.0
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:77     .text:00000000 check_buttons
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:324    .text:0000017c toggle_output
                            *COM*:00000002 main_counter
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:229    .text:00000102 port_init
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:266    .text:00000128 set_output
                            *COM*:00000001 run_stop
C:\DOCUME~1\sk1u02y9\LOCALS~1\Temp/cc0uaaaa.s:372    .text:000001b2 Letext

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
