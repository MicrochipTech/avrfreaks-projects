Archive member included because of file (symbol)

C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_mulsi3.o)
                              SX-Forth.o (__mulsi3)
C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_divmodhi4.o)
                              SX-Forth.o (__divmodhi4)
C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_udivmodsi4.o)
                              SX-Forth.o (__udivmodsi4)
C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_copy_data.o)
                              SX-Forth.o (__do_copy_data)
C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_clear_bss.o)
                              SX-Forth.o (__do_clear_bss)
C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_udivmodhi4.o)
                              C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_divmodhi4.o) (__udivmodhi4)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(atoi.o)
                              SX-Forth.o (atoi)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(isdigit.o)
                              SX-Forth.o (isdigit)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(toupper.o)
                              SX-Forth.o (toupper)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(strcasecmp_P.o)
                              SX-Forth.o (strcasecmp_P)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(strcmp_P.o)
                              SX-Forth.o (strcmp_P)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(itoa.o)
                              SX-Forth.o (itoa)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(mul10.o)
                              C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(atoi.o) (__mulhi_const_10)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(cty_isfalse.o)
                              C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(isdigit.o) (__ctype_isfalse)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(isalpha.o)
                              C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(toupper.o) (isalpha)
C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(strrev.o)
                              C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(itoa.o) (strrev)

Allocating common symbols
Common symbol       size              file

memoryType          0x1               SX-Forth.o
s16Tmp1             0x2               SX-Forth.o
stdin_StringPushIndex
                    0x1               SX-Forth.o
parser_NextIndex    0x1               SX-Forth.o
resCode             0x1               SX-Forth.o
forth_Interpreter_Stdin_Channel
                    0x1               SX-Forth.o
forth_Interpreter_Stdout_Channel
                    0x1               SX-Forth.o
s16Tmp0             0x2               SX-Forth.o
dataTOS             0x1               SX-Forth.o
ramUser             0x40              SX-Forth.o
i_var               0x2               SX-Forth.o
debug               0x1               SX-Forth.o
value_String        0xc               SX-Forth.o
numberBase          0x2               SX-Forth.o
returnSTACK         0x4               SX-Forth.o
j_var               0x2               SX-Forth.o
forth_StateFlags    0x1               SX-Forth.o
forth_Branching     0x1               SX-Forth.o
stdin_TokenPointersRingBuffer
                    0x80              SX-Forth.o
forth_ElseEndifSkiping
                    0x1               SX-Forth.o
s16Tmp2             0x2               SX-Forth.o
returnTOS           0x1               SX-Forth.o
err                 0x1               SX-Forth.o
stdin_StringRingBuffer
                    0x86              SX-Forth.o
u8Tmp0              0x1               SX-Forth.o
forth_Interpreter_Stdin_MemoryAddress
                    0x2               SX-Forth.o
dataSTACK           0x20              SX-Forth.o
step                0x1               SX-Forth.o
forth_CurrentIndex  0x1               SX-Forth.o
errCnt              0x1               SX-Forth.o
stdin_StringPopIndex
                    0x1               SX-Forth.o
forth_Interpreter_Stdout_MemoryAddress
                    0x2               SX-Forth.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5/crtm169.o
LOAD SX-Forth.o
LOAD C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a
LOAD C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a
LOAD C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1ad6
 *(.vectors)
 .vectors       0x00000000       0x5c C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5/crtm169.o
                0x00000000                __vectors
                0x00000000                __vector_default
                0x0000005c                __ctors_start = .
 *(.ctors)
                0x0000005c                __ctors_end = .
                0x0000005c                __dtors_start = .
 *(.dtors)
                0x0000005c                __dtors_end = .
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000005c      0x480 SX-Forth.o
                0x000002ff                GREATHER_OR_EQUAL
                0x000002c8                IND_I_FETCH_BYTE_INC
                0x00000321                AND_
                0x000001f1                MEM_FILL
                0x0000032c                ABS_
                0x00000405                _MEMORY_UNKNOWN_
                0x00000432                _STACK_FULL_
                0x00000319                DIV_
                0x0000034f                ASK_DATA_STACK
                0x000002ec                INC_I
                0x000002a1                ELSE
                0x0000031b                MULT
                0x0000026d                _C_FUNCTION_0
                0x000002b8                IND_I_STORE_BYTE_INC
                0x000002de                DISPLAY_J
                0x00000387                STEP_YES
                0x00000230                MEM_STR_DUMP_
                0x000002c1                IND_I_STORE_INC
                0x000003ed                _INSUFFICIENT_PARAMETERS_
                0x00000316                SCALE_
                0x000002c5                IND_I_STORE
                0x0000020c                MEM_STR_DUMP
                0x00000312                MOD_
                0x00000253                C_FUNCTION_CALL_BY_NAME
                0x00000236                MEM_DUMP
                0x00000374                USER_RAM
                0x0000031f                ADD_
                0x00000304                NOT_EQUAL
                0x00000392                DBG_YES
                0x00000414                _FUNCTION_UNKNOWN_
                0x00000360                FETCH
                0x00000358                DOT_TOS_CHAR
                0x0000024e                MEM_DUMP_
                0x00000425                _WORD_UNKNOWN_
                0x00000307                EQUAL
                0x0000036d                EEPROM_
                0x00000298                DO
                0x00000329                OR__
                0x00000325                XOR_
                0x0000029b                ENDIF
                0x00000283                WORDS
                0x0000034c                ASK_RETURN_STACK
                0x000003c7                _STDIN_RING_BUFFER_FULL_
                0x00000362                STORE_BYTE
                0x0000039b                BASE_DEC
                0x00000355                CR_
                0x0000035d                FETCH_BYTE
                0x000002fd                LOWER
                0x000003de                _WRITE_DISABLED_
                0x000002d8                DEC_J
                0x0000030a                RSH_
                0x00000258                c_DICT
                0x000002e1                FETCH_J
                0x00000367                FLASH_
                0x000002db                INC_J
                0x000002e7                ADDR_J
                0x00000293                LOOP
                0x0000039f                errMsg
                0x000002bd                IND_I_STORE_BYTE
                0x0000037d                RAM_
                0x000002f5                STORE_I
                0x000002e4                STORE_J
                0x00000207                MEM_FILL_
                0x000002af                ZERO_TOS_EXIT
                0x00000289                ZERO_TOS_BREAK
                0x00000264                _C_FUNCTION_1
                0x000002fa                LOWER_OR_EQUAL
                0x00000344                DUP_
                0x0000033f                DROP_
                0x0000031d                DIFF
                0x00000365                STORE
                0x000002e9                DEC_I
                0x0000035b                DOT_TOS
                0x00000330                NOT_
                0x00000276                CHECK_PAUSE
                0x000002cd                IND_I_FETCH_BYTE
                0x000002f2                FETCH_I
                0x00000302                GREATHER
                0x0000030e                LSH_
                0x000002d1                IND_I_FETCH_INC
                0x00000397                BASE_HEX
                0x00000348                CLEAR_STACKS
                0x00000352                DOT_TOS_STRING
                0x000002a6                IF
                0x000002d5                IND_I_FETCH
                0x0000038d                DBG_NO
                0x000002f8                ADDR_I
                0x00000334                DEC_
                0x000002ef                DISPLAY_I
                0x0000033a                SWAP_
                0x00000381                STEP_NO
                0x00000337                INC_
                0x000003af                _PARSER_RING_BUFFER_FULL_
                0x000002a9                USER_ENTRY
                0x0000005c                forth_DICT
                0x0000027d                PAUSE
                0x000004dc                . = ALIGN (0x2)
 *(.init0)
 *(.init1)
 *(.init2)
 .init2         0x000004dc        0xc C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5/crtm169.o
 *(.init3)
 *(.init4)
 .init4         0x000004e8       0x16 C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_copy_data.o)
                0x000004e8                __do_copy_data
 .init4         0x000004fe       0x10 C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_clear_bss.o)
                0x000004fe                __do_clear_bss
 *(.init5)
 *(.init6)
 *(.init7)
 *(.init8)
 *(.init9)
 .init9         0x0000050e        0x4 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5/crtm169.o
 *(.text)
 .text          0x00000512        0x4 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5/crtm169.o
                0x00000512                __vector_22
                0x00000512                __vector_1
                0x00000512                __vector_12
                0x00000512                __bad_interrupt
                0x00000512                __vector_6
                0x00000512                __vector_3
                0x00000512                __vector_11
                0x00000512                __vector_13
                0x00000512                __vector_17
                0x00000512                __vector_19
                0x00000512                __vector_7
                0x00000512                __vector_4
                0x00000512                __vector_9
                0x00000512                __vector_2
                0x00000512                __vector_21
                0x00000512                __vector_15
                0x00000512                __vector_8
                0x00000512                __vector_14
                0x00000512                __vector_10
                0x00000512                __vector_16
                0x00000512                __vector_18
                0x00000512                __vector_20
 .text          0x00000516     0x13b8 SX-Forth.o
                0x000015d2                Forth_Interpreter
                0x000008c2                F_StoreWord
                0x00000fbc                F_Display_I
                0x00001554                STDIN_Parse_String
                0x00000a50                F_Dot_TOS_Char
                0x000007a4                USART_PutRamString
                0x00000750                Push
                0x0000138e                Dec_Stdin_StringPushIndex
                0x00000648                EEPROM_Read
                0x00001540                Inc_Stdin_StringPopIndex
                0x00000e7e                F_NotEqual
                0x00000baa                F_Dec
                0x0000116a                F_Else
                0x0000066e                EEPROM_Write
                0x00000d2c                F_Scaling
                0x00001238                F_Zero_T0S_Break
                0x00000e16                F_ShiftRIGTH
                0x0000101c                F_Display_J
                0x0000109e                F_I_IndirectFetchByteInc
                0x000013a2                STDIN_Get_String
                0x00000fce                F_Inc_I
                0x00001184                F_Do
                0x00000fae                F_Fetch_I
                0x00000fa0                F_Store_I
                0x0000117e                F_Endif
                0x000006e6                USART_Rx_Check
                0x0000091a                F_StoreByte
                0x000010c2                F_I_IndirectStore
                0x00000a24                F_Dot_TOS
                0x000006ba                USART_Tx
                0x0000108c                F_I_IndirectFetchByte
                0x00000c14                F_Xor
                0x00000516                DelayMSEC
                0x00001352                F_CheckPause
                0x00000c6c                F_Add
                0x00000b56                F_Drop
                0x0000052e                OSCCAL_calibration
                0x00001264                F_C_FunctionCALL_by_Name
                0x00000f96                F_Addr_I
                0x000007c2                USART_PutRamString_UpperCase
                0x00000ff6                F_Addr_J
                0x00000a66                F_PutCR
                0x0000102e                F_Inc_J
                0x00000a80                F_Ask_DataSTACK
                0x000007ec                xtoi
                0x00001522                F_User_Entry
                0x00000848                F_DecimalBASE
                0x000008ba                F_Flash
                0x00001316                F_Pause
                0x0000112e                F_Zero_T0S_Exit
                0x00001000                F_Store_J
                0x00000864                F_DBG_Yes
                0x00001146                F_If
                0x00001068                F_I_IndirectFetchInc
                0x00000698                USART_Init
                0x00000e46                F_Equal
                0x00001056                F_I_IndirectFetch
                0x00000f5e                F_LowerOrEqual
                0x000011d0                F_Loop
                0x000010d4                F_I_IndirectStoreInc
                0x000006fc                USART_Rx_Flush
                0x00000bbe                F_Not
                0x0000183c                __vector_5
                0x00000976                F_FetchWord
                0x0000088e                F_UserRamADDR
                0x00000888                F_Ram
                0x000012cc                F_Words_Display
                0x00001884                main
                0x00000882                F_Step_No
                0x00000acc                F_Ask_ReturnSTACK
                0x000005f8                RTC_init
                0x00000de6                F_ShiftLEFT
                0x0000110a                F_I_IndirectStoreByteInc
                0x0000070e                Error
                0x00000b96                F_Inc
                0x000010f8                F_I_IndirectStoreByte
                0x00000eee                F_GreatherOrEqual
                0x00000b64                F_Swap
                0x00001042                F_Dec_J
                0x00000bd4                F_Abs
                0x00000c40                F_And
                0x00000b20                F_Dup
                0x000009cc                F_FetchByte
                0x00000b0e                F_Print_And_ClearSTACKs
                0x00000cc6                F_Mult
                0x0000125a                C_Func_1
                0x00000778                Pop
                0x00001368                Inc_Stdin_StringPushIndex
                0x00000a6e                F_Dot_String
                0x0000086c                F_DBG_No
                0x00000cfe                F_Div
                0x00000856                F_HexadecimalBASE
                0x00001250                C_Func_0
                0x000006ca                USART_PutFlashString
                0x0000100e                F_Fetch_J
                0x000008b2                F_Eeprom
                0x00000be8                F_Or
                0x00000c98                F_Diff
                0x00000876                F_Step_Yes
                0x00000eb6                F_Greather
                0x00000dba                F_Mod
                0x00000fe2                F_Dec_I
                0x00000f26                F_Lower
 .text          0x000018ce       0x5a C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(atoi.o)
                0x000018ce                atoi
 .text          0x00001928       0x26 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(strcasecmp_P.o)
                0x00001928                strcasecmp_P
 .text          0x0000194e       0x14 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(strcmp_P.o)
                0x0000194e                strcmp_P
 .text          0x00001962       0x42 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(itoa.o)
                0x00001962                itoa
 .text          0x000019a4       0x10 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(mul10.o)
                0x000019a4                __mulhi_const_10
 .text          0x000019b4       0x20 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(strrev.o)
                0x000019b4                strrev
                0x000019d4                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000019d4       0x3e C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_mulsi3.o)
                0x000019d4                __mulsi3
 .text.libgcc   0x00001a12       0x26 C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_divmodhi4.o)
                0x00001a12                __divmodhi4
                0x00001a12                _div
 .text.libgcc   0x00001a38       0x44 C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_udivmodsi4.o)
                0x00001a38                __udivmodsi4
 .text.libgcc   0x00001a7c       0x28 C:/WinAVR/lib/gcc/avr/3.4.5/avr5\libgcc.a(_udivmodhi4.o)
                0x00001a7c                __udivmodhi4
 .text.ctype    0x00001aa4        0xc C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(isdigit.o)
                0x00001aa4                isdigit
 .text.ctype    0x00001ab0        0xc C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(toupper.o)
                0x00001ab0                toupper
 .text.ctype    0x00001abc        0x6 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(cty_isfalse.o)
                0x00001ac0                __ctype_istrue
                0x00001abc                __ctype_isfalse
 .text.ctype    0x00001ac2       0x14 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5\libc.a(isalpha.o)
                0x00001ac8                islower
                0x00001ac2                isupper
                0x00001ac6                isalpha
                0x00001ad6                . = ALIGN (0x2)
 *(.fini9)
 *(.fini8)
 *(.fini7)
 *(.fini6)
 *(.fini5)
 *(.fini4)
 *(.fini3)
 *(.fini2)
 *(.fini1)
 *(.fini0)
                0x00001ad6                _etext = .

.data           0x00800100        0x0 load address 0x00001ad6
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100      0x198
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 *(COMMON)
 COMMON         0x00800100      0x198 SX-Forth.o
                0x00800100                memoryType
                0x00800101                s16Tmp1
                0x00800103                stdin_StringPushIndex
                0x00800104                parser_NextIndex
                0x00800105                resCode
                0x00800106                forth_Interpreter_Stdin_Channel
                0x00800107                forth_Interpreter_Stdout_Channel
                0x00800108                s16Tmp0
                0x0080010a                dataTOS
                0x0080010b                ramUser
                0x0080014b                i_var
                0x0080014d                debug
                0x0080014e                value_String
                0x0080015a                numberBase
                0x0080015c                returnSTACK
                0x00800160                j_var
                0x00800162                forth_StateFlags
                0x00800163                forth_Branching
                0x00800164                stdin_TokenPointersRingBuffer
                0x008001e4                forth_ElseEndifSkiping
                0x008001e5                s16Tmp2
                0x008001e7                returnTOS
                0x008001e8                err
                0x008001e9                stdin_StringRingBuffer
                0x0080026f                u8Tmp0
                0x00800270                forth_Interpreter_Stdin_MemoryAddress
                0x00800272                dataSTACK
                0x00800292                step
                0x00800293                forth_CurrentIndex
                0x00800294                errCnt
                0x00800295                stdin_StringPopIndex
                0x00800296                forth_Interpreter_Stdout_MemoryAddress
                0x00800298                PROVIDE (__bss_end, .)
                0x00001ad6                __data_load_start = LOADADDR (.data)
                0x00001ad6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800298        0x0
                0x00800298                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800298                PROVIDE (__noinit_end, .)
                0x00800298                _end = .
                0x00800298                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x36c
 *(.stab)
 .stab          0x00000000      0x36c C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5/crtm169.o

.stabstr        0x00000000       0x84
 *(.stabstr)
 .stabstr       0x00000000       0x84 C:/WinAVR/bin/../lib/gcc/avr/3.4.5/../../../../avr/lib/avr5/crtm169.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x14
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x14 SX-Forth.o

.debug_pubnames
                0x00000000      0xe3d
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0xe3d SX-Forth.o

.debug_info     0x00000000     0x2079
 *(.debug_info)
 .debug_info    0x00000000     0x2079 SX-Forth.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x20a
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x20a SX-Forth.o

.debug_line     0x00000000      0xf6c
 *(.debug_line)
 .debug_line    0x00000000      0xf6c SX-Forth.o

.debug_frame
 *(.debug_frame)

.debug_str      0x00000000      0xca1
 *(.debug_str)
 .debug_str     0x00000000      0xca1 SX-Forth.o
                                0xd27 (size before relaxing)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(SX-Forth.elf elf32-avr)
