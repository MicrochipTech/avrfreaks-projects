Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_prologue.o)
                              8x8leddriver.o (__prologue_saves__)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_epilogue.o)
                              8x8leddriver.o (__epilogue_restores__)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                              8x8leddriver.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                              8x8leddriver.o (__do_clear_bss)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fixunssfsi.o)
                              8x8leddriver.o (__fixunssfsi)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_addsub_sf.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fixunssfsi.o) (__subsf3)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_mul_sf.o)
                              8x8leddriver.o (__mulsf3)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_div_sf.o)
                              8x8leddriver.o (__divsf3)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_gt_sf.o)
                              8x8leddriver.o (__gtsf2)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ge_sf.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fixunssfsi.o) (__gesf2)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_lt_sf.o)
                              8x8leddriver.o (__ltsf2)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_sf_to_si.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fixunssfsi.o) (__fixsfsi)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_thenan_sf.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_addsub_sf.o) (__thenan_sf)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_usi_to_sf.o)
                              8x8leddriver.o (__floatunsisf)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clzsi2.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_usi_to_sf.o) (__clzsi2)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_pack_sf.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_addsub_sf.o) (__pack_f)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_unpack_sf.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_addsub_sf.o) (__unpack_f)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fpcmp_parts_sf.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_gt_sf.o) (__fpcmp_parts_f)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clz.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clzsi2.o) (__clz_tab)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000020000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
LOAD 8x8leddriver.o
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000     0x11ba
 *(.vectors)
 .vectors       0x0000000000000000       0x54 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x0000000000000054                . = ALIGN (0x2)
                0x0000000000000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000054        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000054                __ctors_start = .
 *(.ctors)
                0x0000000000000054                __ctors_end = .
                0x0000000000000054                __dtors_start = .
 *(.dtors)
                0x0000000000000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000054        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
                0x0000000000000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000054        0xc /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 .init4         0x0000000000000076       0x10 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x0000000000000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000086        0x8 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000000000008e        0x4 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
                0x000000000000008e                __vector_1
                0x000000000000008e                __vector_12
                0x000000000000008e                __bad_interrupt
                0x000000000000008e                __vector_6
                0x000000000000008e                __vector_3
                0x000000000000008e                __vector_11
                0x000000000000008e                __vector_13
                0x000000000000008e                __vector_17
                0x000000000000008e                __vector_19
                0x000000000000008e                __vector_7
                0x000000000000008e                __vector_5
                0x000000000000008e                __vector_4
                0x000000000000008e                __vector_9
                0x000000000000008e                __vector_2
                0x000000000000008e                __vector_15
                0x000000000000008e                __vector_8
                0x000000000000008e                __vector_14
                0x000000000000008e                __vector_10
                0x000000000000008e                __vector_16
                0x000000000000008e                __vector_18
                0x000000000000008e                __vector_20
 .text          0x0000000000000092      0x306 8x8leddriver.o
                0x0000000000000092                is_alive_next
                0x00000000000001e8                display_routine
                0x0000000000000370                main
 .text          0x0000000000000398        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_prologue.o)
 .text          0x0000000000000398        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_epilogue.o)
 .text          0x0000000000000398        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text          0x0000000000000398        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000000000000398        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000000000000398       0x4c /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fixunssfsi.o)
                0x0000000000000398                __fixunssfsi
 .text          0x00000000000003e4      0x348 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_addsub_sf.o)
                0x0000000000000670                __subsf3
                0x00000000000006d2                __addsf3
 .text          0x000000000000072c      0x1fe /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_mul_sf.o)
                0x000000000000072c                __mulsf3
 .text          0x000000000000092a      0x16a /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_div_sf.o)
                0x000000000000092a                __divsf3
 .text          0x0000000000000a94       0x6c /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_gt_sf.o)
                0x0000000000000a94                __gtsf2
 .text          0x0000000000000b00       0x6c /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ge_sf.o)
                0x0000000000000b00                __gesf2
 .text          0x0000000000000b6c       0x6c /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_lt_sf.o)
                0x0000000000000b6c                __ltsf2
 .text          0x0000000000000bd8       0xa6 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_sf_to_si.o)
                0x0000000000000bd8                __fixsfsi
 .text          0x0000000000000c7e        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_thenan_sf.o)
 .text          0x0000000000000c7e       0xe6 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_usi_to_sf.o)
                0x0000000000000c7e                __floatunsisf
 .text          0x0000000000000d64       0x9a /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clzsi2.o)
                0x0000000000000d64                __clzsi2
 .text          0x0000000000000dfe      0x1c0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_pack_sf.o)
                0x0000000000000dfe                __pack_f
 .text          0x0000000000000fbe       0xe0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_unpack_sf.o)
                0x0000000000000fbe                __unpack_f
 .text          0x000000000000109e       0xac /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fpcmp_parts_sf.o)
                0x000000000000109e                __fpcmp_parts_f
 .text          0x000000000000114a        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clz.o)
                0x000000000000114a                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000114a       0x38 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_prologue.o)
                0x000000000000114a                __prologue_saves__
 .text.libgcc   0x0000000000001182       0x36 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_epilogue.o)
                0x0000000000001182                __epilogue_restores__
 .text.libgcc   0x00000000000011b8        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000011b8        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000011b8        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x00000000000011b8                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000000000011b8        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                0x00000000000011b8                exit
                0x00000000000011b8                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000000000011b8        0x2 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000000000011ba                _etext = .

.data           0x0000000000800060      0x118 load address 0x00000000000011ba
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x0000000000800060       0x10 8x8leddriver.o
                0x0000000000800068                display_ico
                0x0000000000800060                disp_seq
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_prologue.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_epilogue.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fixunssfsi.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_addsub_sf.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_mul_sf.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_div_sf.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_gt_sf.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ge_sf.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_lt_sf.o)
 .data          0x0000000000800070        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_sf_to_si.o)
 .data          0x0000000000800070        0x8 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_thenan_sf.o)
                0x0000000000800070                __thenan_sf
 .data          0x0000000000800078        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_usi_to_sf.o)
 .data          0x0000000000800078        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clzsi2.o)
 .data          0x0000000000800078        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_pack_sf.o)
 .data          0x0000000000800078        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_unpack_sf.o)
 .data          0x0000000000800078        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fpcmp_parts_sf.o)
 .data          0x0000000000800078      0x100 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clz.o)
                0x0000000000800078                __clz_tab
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x0000000000800178                . = ALIGN (0x2)
                0x0000000000800178                _edata = .
                0x0000000000800178                PROVIDE (__data_end, .)

.bss            0x0000000000800178        0x0 load address 0x00000000000012d2
                0x0000000000800178                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x0000000000800178        0x0 8x8leddriver.o
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_prologue.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_epilogue.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fixunssfsi.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_addsub_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_mul_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_div_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_gt_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ge_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_lt_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_sf_to_si.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_thenan_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_usi_to_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clzsi2.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_pack_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_unpack_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_fpcmp_parts_sf.o)
 .bss           0x0000000000800178        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clz.o)
 *(.bss*)
 *(COMMON)
                0x0000000000800178                PROVIDE (__bss_end, .)
                0x00000000000011ba                __data_load_start = LOADADDR (.data)
                0x00000000000012d2                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0000000000800178        0x0
                0x0000000000800178                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0000000000800178                PROVIDE (__noinit_end, .)
                0x0000000000800178                _end = .
                0x0000000000800178                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0xc54
 *(.stab)
 .stab          0x0000000000000000      0x378 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 .stab          0x0000000000000378      0x8dc 8x8leddriver.o
                                        0x8e8 (size before relaxing)

.stabstr        0x0000000000000000      0x882
 *(.stabstr)
 .stabstr       0x0000000000000000      0x882 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(8x8leddriver.out elf32-avr)
LOAD linker stubs
