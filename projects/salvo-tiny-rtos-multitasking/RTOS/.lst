NOTE: Code bytes are displayed in order matching the disassembly format in AVR documentation.
  For example, 'CALL 2B16' (example only, only labels should normally be used) is displayed as
  0x940E2B16 rather than in little endian byte order.

Interrupt Vectors

Program Code (text area)
_exit:
    0006C CFFF      RJMP	_exit
FILE: C:\Documents and Settings\JimC\Desktop\RTOS\rtos.c
(0001) /*****************************************************************
(0002) RTOS demo using pumpkin salvo tiny RTOS w/ICCAVR C compiler
(0003) Blink 8 leds at different rates using 8 tasks
(0004) Not rocket science, just basic rtos configuration can be used
(0005) as basis for more complicated projects
(0006) 
(0007) 
(0008) JCC KI0BK
(0009) ******************************************************************/
(0010) 
(0011) #include <iccioavr.h>
(0012) #include "rtos.h"
(0013) #include "board.h"
(0014) 
(0015) //Globals
(0016) 
(0017) //tasks
(0018) /*************************************************
(0019) Task1
(0020) *************************************************/
(0021) void Task1 (void)
(0022) {
(0023)     for(;;) //forever
(0024)     {
(0025)         ToggleBit(PORTB, PB0); //blink led
_Task1:
    0006D E081      LDI	R24,1
    0006E B228      IN	R2,0x18
    0006F 2628      EOR	R2,R24
    00070 BA28      OUT	0x18,R2
(0026)         OS_Delay(10);
    00071 E00A      LDI	R16,0xA
    00072 940E 0352 CALL	_OSDelay
    00074 940E 0171 CALL	_OSCtxSw
(0027)     }
    00076 CFF6      RJMP	_Task1
    00077 9508      RET
(0028) }
(0029) 
(0030) /*************************************************
(0031) Task2
(0032) *************************************************/
(0033) void Task2 (void)
(0034) {
(0035)     for(;;) //forever
(0036)     {
(0037)         ToggleBit(PORTB, PB1); //blink led
_Task2:
    00078 E082      LDI	R24,2
    00079 B228      IN	R2,0x18
    0007A 2628      EOR	R2,R24
    0007B BA28      OUT	0x18,R2
(0038)         OS_Delay(20);
    0007C E104      LDI	R16,0x14
    0007D 940E 0352 CALL	_OSDelay
    0007F 940E 0171 CALL	_OSCtxSw
(0039)     }
    00081 CFF6      RJMP	_Task2
    00082 9508      RET
(0040) }
(0041) 
(0042) /*************************************************
(0043) Task3
(0044) *************************************************/
(0045) void Task3 (void)
(0046) {
(0047)     for(;;)
(0048)     {
(0049)         ToggleBit(PORTB, PB2); //blink led
_Task3:
    00083 E084      LDI	R24,4
    00084 B228      IN	R2,0x18
    00085 2628      EOR	R2,R24
    00086 BA28      OUT	0x18,R2
(0050)         OS_Delay(30);
    00087 E10E      LDI	R16,0x1E
    00088 940E 0352 CALL	_OSDelay
    0008A 940E 0171 CALL	_OSCtxSw
(0051)     } //while end
    0008C CFF6      RJMP	_Task3
    0008D 9508      RET
(0052) }
(0053) 
(0054) /*************************************************
(0055)  Task4
(0056) *************************************************/
(0057) void Task4 (void)
(0058) {
(0059)     for(;;)
(0060)     {
(0061)         ToggleBit(PORTB, PB3); //blink led
_Task4:
    0008E E088      LDI	R24,0x8
    0008F B228      IN	R2,0x18
    00090 2628      EOR	R2,R24
    00091 BA28      OUT	0x18,R2
(0062)         OS_Delay(40);
    00092 E208      LDI	R16,0x28
    00093 940E 0352 CALL	_OSDelay
    00095 940E 0171 CALL	_OSCtxSw
(0063)     } //while end
    00097 CFF6      RJMP	_Task4
    00098 9508      RET
(0064) }
(0065) 
(0066) /*************************************************
(0067) Task5
(0068) *************************************************/
(0069) void Task5 (void)
(0070) {
(0071)     for(;;) //forever
(0072)     {
(0073)         ToggleBit(PORTB, PB4); //blink led
_Task5:
    00099 E180      LDI	R24,0x10
    0009A B228      IN	R2,0x18
    0009B 2628      EOR	R2,R24
    0009C BA28      OUT	0x18,R2
(0074)         OS_Delay(50);
    0009D E302      LDI	R16,0x32
    0009E 940E 0352 CALL	_OSDelay
    000A0 940E 0171 CALL	_OSCtxSw
(0075)     }
    000A2 CFF6      RJMP	_Task5
    000A3 9508      RET
(0076) }
(0077) 
(0078) /*************************************************
(0079) Task6
(0080) *************************************************/
(0081) void Task6 (void)
(0082) {
(0083)     for(;;) //forever
(0084)     {
(0085)         ToggleBit(PORTB, PB5); //blink led
_Task6:
    000A4 E280      LDI	R24,0x20
    000A5 B228      IN	R2,0x18
    000A6 2628      EOR	R2,R24
    000A7 BA28      OUT	0x18,R2
(0086)         OS_Delay(60);
    000A8 E30C      LDI	R16,0x3C
    000A9 940E 0352 CALL	_OSDelay
    000AB 940E 0171 CALL	_OSCtxSw
(0087)     }
    000AD CFF6      RJMP	_Task6
    000AE 9508      RET
(0088) }
(0089) 
(0090) /*************************************************
(0091) Task7
(0092) *************************************************/
(0093) void Task7 (void)
(0094) {
(0095)     for(;;) //forever
(0096)     {
(0097)         ToggleBit(PORTB, PB6); //blink led
_Task7:
    000AF E480      LDI	R24,0x40
    000B0 B228      IN	R2,0x18
    000B1 2628      EOR	R2,R24
    000B2 BA28      OUT	0x18,R2
(0098)         OS_Delay(70);
    000B3 E406      LDI	R16,0x46
    000B4 940E 0352 CALL	_OSDelay
    000B6 940E 0171 CALL	_OSCtxSw
(0099)     }
    000B8 CFF6      RJMP	_Task7
    000B9 9508      RET
(0100) }
(0101) 
(0102) /*************************************************
(0103) Task8
(0104) *************************************************/
(0105) void Task8 (void)
(0106) {
(0107)     for(;;) //forever
(0108)     {
(0109)         ToggleBit(PORTB, PB7); //blink led
_Task8:
    000BA E880      LDI	R24,0x80
    000BB B228      IN	R2,0x18
    000BC 2628      EOR	R2,R24
    000BD BA28      OUT	0x18,R2
(0110)         OS_Delay(80);
    000BE E500      LDI	R16,0x50
    000BF 940E 0352 CALL	_OSDelay
    000C1 940E 0171 CALL	_OSCtxSw
(0111)     }
    000C3 CFF6      RJMP	_Task8
    000C4 9508      RET
_main:
    000C5 9721      SBIW	R28,1
(0112) }
(0113) 
(0114) /***********************************************************
(0115) // main
(0116) // init HW, init OS, create tasks
(0117) // start multitasking
(0118) ***********************************************************/
(0119) void main (void)
(0120) {
(0121)     // Hardware-dependent initilization.
(0122)     panel_init();
    000C6 940E 0156 CALL	_panel_init
(0123) 
(0124)     // Initialize Salvo.
(0125)     OSInit();
    000C8 940E 0339 CALL	_OSInit
(0126) 
(0127)     // Create Salvo tasks.
(0128)     OSCreateTask(Task1, TASK_1_P, PRIO_1);
    000CA E081      LDI	R24,1
    000CB 8388      ST	Y,R24
    000CC E725      LDI	R18,0x75
    000CD E030      LDI	R19,0
    000CE E902      LDI	R16,0x92
    000CF E010      LDI	R17,0
    000D0 940E 0304 CALL	_OSCreateTask
(0129)     OSCreateTask(Task2, TASK_2_P, PRIO_2);
    000D2 E082      LDI	R24,2
    000D3 8388      ST	Y,R24
    000D4 E72C      LDI	R18,0x7C
    000D5 E030      LDI	R19,0
    000D6 E900      LDI	R16,0x90
    000D7 E010      LDI	R17,0
    000D8 940E 0304 CALL	_OSCreateTask
(0130)     OSCreateTask(Task3, TASK_3_P, PRIO_3);
    000DA E083      LDI	R24,3
    000DB 8388      ST	Y,R24
    000DC E823      LDI	R18,0x83
    000DD E030      LDI	R19,0
    000DE E80E      LDI	R16,0x8E
    000DF E010      LDI	R17,0
    000E0 940E 0304 CALL	_OSCreateTask
(0131)     OSCreateTask(Task4, TASK_4_P, PRIO_4);
    000E2 E084      LDI	R24,4
    000E3 8388      ST	Y,R24
    000E4 E82A      LDI	R18,0x8A
    000E5 E030      LDI	R19,0
    000E6 E80C      LDI	R16,0x8C
    000E7 E010      LDI	R17,0
    000E8 940E 0304 CALL	_OSCreateTask
(0132)     OSCreateTask(Task5, TASK_5_P, PRIO_5);
    000EA E086      LDI	R24,6
    000EB 8388      ST	Y,R24
    000EC E921      LDI	R18,0x91
    000ED E030      LDI	R19,0
    000EE E80A      LDI	R16,0x8A
    000EF E010      LDI	R17,0
    000F0 940E 0304 CALL	_OSCreateTask
(0133)     OSCreateTask(Task6, TASK_6_P, PRIO_6);
    000F2 E087      LDI	R24,7
    000F3 8388      ST	Y,R24
    000F4 E928      LDI	R18,0x98
    000F5 E030      LDI	R19,0
    000F6 E808      LDI	R16,0x88
    000F7 E010      LDI	R17,0
    000F8 940E 0304 CALL	_OSCreateTask
(0134)     OSCreateTask(Task7, TASK_7_P, PRIO_7);
    000FA E088      LDI	R24,0x8
    000FB 8388      ST	Y,R24
    000FC E92F      LDI	R18,0x9F
    000FD E030      LDI	R19,0
    000FE E806      LDI	R16,0x86
    000FF E010      LDI	R17,0
    00100 940E 0304 CALL	_OSCreateTask
(0135)     OSCreateTask(Task8, TASK_8_P, PRIO_8);
    00102 E08A      LDI	R24,0xA
    00103 8388      ST	Y,R24
    00104 EA26      LDI	R18,0xA6
    00105 E030      LDI	R19,0
    00106 E804      LDI	R16,0x84
    00107 E010      LDI	R17,0
    00108 940E 0304 CALL	_OSCreateTask
(0136) 
(0137)     SEI(); //enable timer interrupts
    0010A 9478      BSET	7
(0138)     // Start multitasking.
(0139)     for(;;)
(0140)     {
(0141)         OSSched();
    0010B 940E 01A6 CALL	_OSSched
(0142)     }
    0010D CFFD      RJMP	0x010B
(0143) }
    0010E 9621      ADIW	R28,1
    0010F 9508      RET
FILE: C:\Documents and Settings\JimC\Desktop\RTOS\board.c
(0001) /*****************************************************************
(0002) //ICC-AVR application builder : 2/15/2013 11:46:31 AM
(0003) // Target : M16
(0004) // Crystal: 14.7456Mhz
(0005) // NOTE: WHILE WE STRIVE TO GENERATE CORRECT CODE FOR ALL SUPPORTED DEVICES,
(0006) //   THE APPBUILDER MAY GENERATE INCORRECT CODE AT TIMES. IF YOU FIND ANY
(0007) //   ISSUES. PLEASE EMAIL support@imagecraft.com. THANK YOU
(0008) ******************************************************************/
(0009) #include "board.h"
(0010) 
(0011) //Globals
(0012) 
(0013) 
(0014) //*************************************************
(0015) // cpu sleeps here when no tasks are active
(0016) //*************************************************
(0017) void OSIdlingHook(void)
(0018) {
(0019)     SLEEP();
_OSIdlingHook:
    00110 9588      SLEEP
    00111 9508      RET
(0020) }
(0021) 
(0022) //****************************************
(0023) //Port initialization
(0024) //****************************************
(0025) void port_init(void)
(0026) {
(0027) //                   7 6 5 4 3 2 1 0
(0028)     PORTB = 0x00;// |N|N|N|N|N|N|N|N| Active Pullups
_port_init:
    00112 2422      CLR	R2
    00113 BA28      OUT	0x18,R2
(0029)     DDRB  = 0xFF;// |O|O|O|O|O|O|O|O|
    00114 EF8F      LDI	R24,0xFF
    00115 BB87      OUT	0x17,R24
(0030)     PORTC = 0x00;// |N|N|N|N|N|N|N|N|
    00116 BA25      OUT	0x15,R2
(0031)     DDRC  = 0x00;// |I|I|I|I|I|I|I|I|
    00117 BA24      OUT	0x14,R2
(0032)     PORTD = 0x00;// |N|N|N|N|N|N|N|N|
    00118 BA22      OUT	0x12,R2
(0033)     DDRD  = 0x00;// |I|I|I|I|I|I|I|I|
    00119 BA21      OUT	0x11,R2
    0011A 9508      RET
(0034) }
(0035) 
(0036) //TIMER2 initialize - prescale:1024
(0037) // WGM: Normal
(0038) // desired value: 100Hz
(0039) // actual value: 100.699Hz (0.7%)
(0040) void timer2_init(void)
(0041) {
(0042)  TCCR2 = 0x00; //stop
_timer2_init:
    0011B 2422      CLR	R2
    0011C BC25      OUT	0x25,R2
(0043)  ASSR  = 0x00; //set async mode
    0011D BC22      OUT	0x22,R2
(0044)  TCNT2 = 0x71; //setup
    0011E E781      LDI	R24,0x71
    0011F BD84      OUT	0x24,R24
(0045)  OCR2  = 0x8F;
    00120 E88F      LDI	R24,0x8F
    00121 BD83      OUT	0x23,R24
(0046)  TCCR2 = 0x07; //start
    00122 E087      LDI	R24,7
    00123 BD85      OUT	0x25,R24
    00124 9508      RET
_timer2_ovf_isr:
    00125 920A      ST	-Y,R0
    00126 921A      ST	-Y,R1
    00127 922A      ST	-Y,R2
    00128 923A      ST	-Y,R3
    00129 924A      ST	-Y,R4
    0012A 925A      ST	-Y,R5
    0012B 926A      ST	-Y,R6
    0012C 927A      ST	-Y,R7
    0012D 928A      ST	-Y,R8
    0012E 929A      ST	-Y,R9
    0012F 930A      ST	-Y,R16
    00130 931A      ST	-Y,R17
    00131 932A      ST	-Y,R18
    00132 933A      ST	-Y,R19
    00133 938A      ST	-Y,R24
    00134 939A      ST	-Y,R25
    00135 93AA      ST	-Y,R26
    00136 93BA      ST	-Y,R27
    00137 93EA      ST	-Y,R30
    00138 93FA      ST	-Y,R31
    00139 B60F      IN	R0,0x3F
    0013A 920A      ST	-Y,R0
(0047) }
(0048) 
(0049) #pragma interrupt_handler timer2_ovf_isr:iv_TIM2_OVF
(0050) void timer2_ovf_isr(void)
(0051) {
(0052)  TCNT2 = 0x71; //reload counter value
    0013B E781      LDI	R24,0x71
    0013C BD84      OUT	0x24,R24
(0053) /************************************************************
(0054) Active ISRs.
(0055) Timer1: Interrupt happens at predefined system tick rate,
(0056)           calls OSTimer(). Since this ISR calls a Salvo
(0057)           service, it (and all other ISRs that call Salvo
(0058)           services) must be disabled by Salvo's interrupt
(0059)           hooks.
(0060) ************************************************************/
(0061)     OSTimer();
    0013D 940E 019A CALL	_OSTimer
    0013F 9009      LD	R0,Y+
    00140 BE0F      OUT	0x3F,R0
    00141 91F9      LD	R31,Y+
    00142 91E9      LD	R30,Y+
    00143 91B9      LD	R27,Y+
    00144 91A9      LD	R26,Y+
    00145 9199      LD	R25,Y+
    00146 9189      LD	R24,Y+
    00147 9139      LD	R19,Y+
    00148 9129      LD	R18,Y+
    00149 9119      LD	R17,Y+
    0014A 9109      LD	R16,Y+
    0014B 9099      LD	R9,Y+
    0014C 9089      LD	R8,Y+
    0014D 9079      LD	R7,Y+
    0014E 9069      LD	R6,Y+
    0014F 9059      LD	R5,Y+
    00150 9049      LD	R4,Y+
    00151 9039      LD	R3,Y+
    00152 9029      LD	R2,Y+
    00153 9019      LD	R1,Y+
    00154 9009      LD	R0,Y+
    00155 9518      RETI
(0062) }
(0063) 
(0064) //*************************************************
(0065) // init all devices
(0066) //*************************************************
(0067) //call this routine to initialize all peripherals
(0068) void panel_init(void)
(0069) {
(0070)  //stop errant interrupts until set up
(0071)  CLI(); //disable all interrupts
_panel_init:
    00156 94F8      BCLR	7
(0072)  port_init();
    00157 DFBA      RCALL	_port_init
(0073)  timer2_init();
    00158 DFC2      RCALL	_timer2_init
(0074) 
(0075)  MCUCR = 0x40; //enable idle sleep mode
    00159 E480      LDI	R24,0x40
    0015A BF85      OUT	0x35,R24
(0076)  GICR  = 0x00;
    0015B 2422      CLR	R2
    0015C BE2B      OUT	0x3B,R2
(0077)  TIMSK = 0x40; //timer interrupt sources
    0015D BF89      OUT	0x39,R24
(0078)  //SEI(); //re-enable interrupts
(0079)  //all peripherals are now initialized
(0080) }
(0081) 
(0082) 
    0015E 9508      RET
_OSDispatch:
    0015F 93CF      PUSH	R28
    00160 93DF      PUSH	R29
    00161 93C0 0060 STS	_OSframeP,R28
    00163 93D0 0061 STS	_OSframeP+1,R29
    00165 91E0 0071 LDS	R30,_OScTcbP
    00167 91F0 0072 LDS	R31,_OScTcbP+1
    00169 8181      LDD	R24,Z+1
    0016A 7090      ANDI	R25,0
    0016B 1BC8      SUB	R28,R24
    0016C 0BD9      SBC	R29,R25
    0016D 8182      LDD	R24,Z+2
    0016E 81F3      LDD	R31,Z+3
    0016F 2FE8      MOV	R30,R24
    00170 9409      IJMP
_OSCtxSw:
    00171 91E0 0071 LDS	R30,_OScTcbP
    00173 91F0 0072 LDS	R31,_OScTcbP+1
    00175 919F      POP	R25
    00176 918F      POP	R24
    00177 8382      STD	Z+2,R24
    00178 8393      STD	Z+3,R25
    00179 9180 0060 LDS	R24,_OSframeP
    0017B 9190 0061 LDS	R25,_OSframeP+1
    0017D 1B8C      SUB	R24,R28
    0017E 0B9D      SBC	R25,R29
    0017F 8381      STD	Z+1,R24
_OSCtxSwRtn:
    00180 91DF      POP	R29
    00181 91CF      POP	R28
    00182 9508      RET
_OSReturn:
    00183 900F      POP	R0
    00184 900F      POP	R0
    00185 940C 0180 JMP	_OSCtxSwRtn
_OSDethunkTFP:
    00187 2FE0      MOV	R30,R16
    00188 2FF1      MOV	R31,R17
    00189 95C8      LPM
    0018A 2D00      MOV	R16,R0
    0018B 9631      ADIW	R30,1
    0018C 95C8      LPM
    0018D 2D10      MOV	R17,R0
    0018E 9508      RET
_OSClrWDTHook:
    0018F 95A8      WDR
    00190 9508      RET
_OSDisableHook:
    00191 B70F      IN	R16,0x3F
    00192 94F8      BCLR	7
    00193 9300 00AD STS	_OStcbArea+56,R16
    00195 9508      RET
_OSEnableHook:
    00196 9020 00AD LDS	R2,_OStcbArea+56
    00198 BE2F      OUT	0x3F,R2
    00199 9508      RET
_OSTimer:
    0019A 9180 0062 LDS	R24,_OSlostTicks
    0019C 3F8F      CPI	R24,0xFF
    0019D F420      BCC	0x01A2
    0019E 5F8F      SUBI	R24,0xFF
    0019F 9380 0062 STS	_OSlostTicks,R24
    001A1 C002      RJMP	0x01A4
    001A2 E001      LDI	R16,1
    001A3 C001      RJMP	0x01A5
    001A4 2700      CLR	R16
    001A5 9508      RET
_OSSched:
    001A6 92AA      ST	-Y,R10
    001A7 92BA      ST	-Y,R11
    001A8 940E 0191 CALL	_OSDisableHook
    001AA 940E 018F CALL	_OSClrWDTHook
    001AC C033      RJMP	0x01E0
    001AD 9020 0065 LDS	R2,_OSsigQoutP
    001AF 9030 0066 LDS	R3,_OSsigQoutP+1
    001B1 9230 0072 STS	_OScTcbP+1,R3
    001B3 9220 0071 STS	_OScTcbP,R2
    001B5 9180 0071 LDS	R24,_OScTcbP
    001B7 9190 0072 LDS	R25,_OScTcbP+1
    001B9 9604      ADIW	R24,4
    001BA 2FE8      MOV	R30,R24
    001BB 2FF9      MOV	R31,R25
    001BC 8020      LD	R2,Z
    001BD 8031      LDD	R3,Z+1
    001BE 9230 0066 STS	_OSsigQoutP+1,R3
    001C0 9220 0065 STS	_OSsigQoutP,R2
    001C2 2422      CLR	R2
    001C3 2433      CLR	R3
    001C4 8231      STD	Z+1,R3
    001C5 8220      ST	Z,R2
    001C6 E723      LDI	R18,0x73
    001C7 E030      LDI	R19,0
    001C8 9100 0071 LDS	R16,_OScTcbP
    001CA 9110 0072 LDS	R17,_OScTcbP+1
    001CC 940E 0289 CALL	_OSInsPrioQ
    001CE 9020 0065 LDS	R2,_OSsigQoutP
    001D0 9030 0066 LDS	R3,_OSsigQoutP+1
    001D2 2022      TST	R2
    001D3 F441      BNE	0x01DC
    001D4 2033      TST	R3
    001D5 F431      BNE	0x01DC
    001D6 2422      CLR	R2
    001D7 2433      CLR	R3
    001D8 9230 0068 STS	_OSsigQinP+1,R3
    001DA 9220 0067 STS	_OSsigQinP,R2
    001DC 940E 0196 CALL	_OSEnableHook
    001DE 940E 0191 CALL	_OSDisableHook
    001E0 9020 0065 LDS	R2,_OSsigQoutP
    001E2 9030 0066 LDS	R3,_OSsigQoutP+1
    001E4 2022      TST	R2
    001E5 F009      BEQ	0x01E7
    001E6 CFC6      RJMP	0x01AD
    001E7 2033      TST	R3
    001E8 F009      BEQ	0x01EA
    001E9 CFC3      RJMP	0x01AD
    001EA C053      RJMP	0x023E
    001EB 9180 0062 LDS	R24,_OSlostTicks
    001ED 5081      SUBI	R24,1
    001EE 9380 0062 STS	_OSlostTicks,R24
    001F0 9020 0063 LDS	R2,_OSdelayQP
    001F2 9030 0064 LDS	R3,_OSdelayQP+1
    001F4 9230 0072 STS	_OScTcbP+1,R3
    001F6 9220 0071 STS	_OScTcbP,R2
    001F8 9020 0071 LDS	R2,_OScTcbP
    001FA 9030 0072 LDS	R3,_OScTcbP+1
    001FC 2022      TST	R2
    001FD F419      BNE	0x0201
    001FE 2033      TST	R3
    001FF F409      BNE	0x0201
    00200 C02F      RJMP	0x0230
    00201 2D82      MOV	R24,R2
    00202 2D93      MOV	R25,R3
    00203 9606      ADIW	R24,6
    00204 2FE8      MOV	R30,R24
    00205 2FF9      MOV	R31,R25
    00206 8180      LD	R24,Z
    00207 5081      SUBI	R24,1
    00208 8380      ST	Z,R24
    00209 C026      RJMP	0x0230
    0020A 91E0 0071 LDS	R30,_OScTcbP
    0020C 91F0 0072 LDS	R31,_OScTcbP+1
    0020E 8024      LDD	R2,Z+4
    0020F 8035      LDD	R3,Z+5
    00210 9230 0064 STS	_OSdelayQP+1,R3
    00212 9220 0063 STS	_OSdelayQP,R2
    00214 2EAE      MOV	R10,R30
    00215 2EBF      MOV	R11,R31
    00216 8180      LD	R24,Z
    00217 8191      LDD	R25,Z+1
    00218 788F      ANDI	R24,0x8F
    00219 6580      ORI	R24,0x50
    0021A 8391      STD	Z+1,R25
    0021B 8380      ST	Z,R24
    0021C E723      LDI	R18,0x73
    0021D E030      LDI	R19,0
    0021E 9100 0071 LDS	R16,_OScTcbP
    00220 9110 0072 LDS	R17,_OScTcbP+1
    00222 940E 0289 CALL	_OSInsPrioQ
    00224 9020 0063 LDS	R2,_OSdelayQP
    00226 9030 0064 LDS	R3,_OSdelayQP+1
    00228 9230 0072 STS	_OScTcbP+1,R3
    0022A 9220 0071 STS	_OScTcbP,R2
    0022C 940E 0196 CALL	_OSEnableHook
    0022E 940E 0191 CALL	_OSDisableHook
    00230 90A0 0071 LDS	R10,_OScTcbP
    00232 90B0 0072 LDS	R11,_OScTcbP+1
    00234 20AA      TST	R10
    00235 F411      BNE	0x0238
    00236 20BB      TST	R11
    00237 F031      BEQ	0x023E
    00238 2DEA      MOV	R30,R10
    00239 2DFB      MOV	R31,R11
    0023A 8026      LDD	R2,Z+6
    0023B 2022      TST	R2
    0023C F409      BNE	0x023E
    0023D CFCC      RJMP	0x020A
    0023E 9020 0062 LDS	R2,_OSlostTicks
    00240 2022      TST	R2
    00241 F009      BEQ	0x0243
    00242 CFA8      RJMP	0x01EB
    00243 9020 0073 LDS	R2,_OSeligQP
    00245 9030 0074 LDS	R3,_OSeligQP+1
    00247 9230 0072 STS	_OScTcbP+1,R3
    00249 9220 0071 STS	_OScTcbP,R2
    0024B 9020 0071 LDS	R2,_OScTcbP
    0024D 9030 0072 LDS	R3,_OScTcbP+1
    0024F 2022      TST	R2
    00250 F411      BNE	0x0253
    00251 2033      TST	R3
    00252 F159      BEQ	0x027E
    00253 91E0 0073 LDS	R30,_OSeligQP
    00255 91F0 0074 LDS	R31,_OSeligQP+1
    00257 8024      LDD	R2,Z+4
    00258 8035      LDD	R3,Z+5
    00259 9230 0074 STS	_OSeligQP+1,R3
    0025B 9220 0073 STS	_OSeligQP,R2
    0025D 940E 0196 CALL	_OSEnableHook
    0025F 940E 015F CALL	_OSDispatch
    00261 940E 0191 CALL	_OSDisableHook
    00263 91E0 0071 LDS	R30,_OScTcbP
    00265 91F0 0072 LDS	R31,_OScTcbP+1
    00267 8180      LD	R24,Z
    00268 8191      LDD	R25,Z+1
    00269 9596      LSR	R25
    0026A 9587      ROR	R24
    0026B 9596      LSR	R25
    0026C 9587      ROR	R24
    0026D 9596      LSR	R25
    0026E 9587      ROR	R24
    0026F 9596      LSR	R25
    00270 9587      ROR	R24
    00271 7087      ANDI	R24,7
    00272 7090      ANDI	R25,0
    00273 3085      CPI	R24,5
    00274 E0A0      LDI	R26,0
    00275 079A      CPC	R25,R26
    00276 F469      BNE	0x0284
    00277 E723      LDI	R18,0x73
    00278 E030      LDI	R19,0
    00279 2F0E      MOV	R16,R30
    0027A 2F1F      MOV	R17,R31
    0027B 940E 0289 CALL	_OSInsPrioQ
    0027D C006      RJMP	0x0284
    0027E 940E 0196 CALL	_OSEnableHook
    00280 940E 0110 CALL	_OSIdlingHook
    00282 940E 0191 CALL	_OSDisableHook
    00284 940E 0196 CALL	_OSEnableHook
    00286 90B9      LD	R11,Y+
    00287 90A9      LD	R10,Y+
    00288 9508      RET
_OSInsPrioQ:
    00289 940E 038F CALL	push_xgset003C
    0028B 9721      SBIW	R28,1
    0028C 2FE2      MOV	R30,R18
    0028D 2FF3      MOV	R31,R19
    0028E 80A0      LD	R10,Z
    0028F 80B1      LDD	R11,Z+1
    00290 20AA      TST	R10
    00291 F461      BNE	0x029E
    00292 20BB      TST	R11
    00293 F451      BNE	0x029E
    00294 8311      STD	Z+1,R17
    00295 8300      ST	Z,R16
    00296 2422      CLR	R2
    00297 2433      CLR	R3
    00298 2FE0      MOV	R30,R16
    00299 2FF1      MOV	R31,R17
    0029A 8235      STD	Z+5,R3
    0029B 8224      STD	Z+4,R2
    0029C 2700      CLR	R16
    0029D C063      RJMP	0x0301
    0029E 24CC      CLR	R12
    0029F 24DD      CLR	R13
    002A0 E683      LDI	R24,0x63
    002A1 E090      LDI	R25,0
    002A2 1728      CP	R18,R24
    002A3 0739      CPC	R19,R25
    002A4 F059      BEQ	0x02B0
    002A5 2CCA      MOV	R12,R10
    002A6 2CDB      MOV	R13,R11
    002A7 2DEA      MOV	R30,R10
    002A8 2DFB      MOV	R31,R11
    002A9 80A4      LDD	R10,Z+4
    002AA 80B5      LDD	R11,Z+5
    002AB 20AA      TST	R10
    002AC F7C1      BNE	0x02A5
    002AD 20BB      TST	R11
    002AE F7B1      BNE	0x02A5
    002AF C03F      RJMP	0x02EF
    002B0 2DEA      MOV	R30,R10
    002B1 2DFB      MOV	R31,R11
    002B2 8026      LDD	R2,Z+6
    002B3 8228      ST	Y,R2
    002B4 C011      RJMP	0x02C6
    002B5 2CCA      MOV	R12,R10
    002B6 2CDB      MOV	R13,R11
    002B7 2DEA      MOV	R30,R10
    002B8 2DFB      MOV	R31,R11
    002B9 80A4      LDD	R10,Z+4
    002BA 80B5      LDD	R11,Z+5
    002BB 20AA      TST	R10
    002BC F419      BNE	0x02C0
    002BD 20BB      TST	R11
    002BE F409      BNE	0x02C0
    002BF C00C      RJMP	0x02CC
    002C0 2DEA      MOV	R30,R10
    002C1 2DFB      MOV	R31,R11
    002C2 8026      LDD	R2,Z+6
    002C3 8038      LD	R3,Y
    002C4 0C32      ADD	R3,R2
    002C5 8238      ST	Y,R3
    002C6 8028      LD	R2,Y
    002C7 2FE0      MOV	R30,R16
    002C8 2FF1      MOV	R31,R17
    002C9 8036      LDD	R3,Z+6
    002CA 1432      CP	R3,R2
    002CB F748      BCC	0x02B5
    002CC 20AA      TST	R10
    002CD F411      BNE	0x02D0
    002CE 20BB      TST	R11
    002CF F031      BEQ	0x02D6
    002D0 2DEA      MOV	R30,R10
    002D1 2DFB      MOV	R31,R11
    002D2 8026      LDD	R2,Z+6
    002D3 8038      LD	R3,Y
    002D4 1832      SUB	R3,R2
    002D5 8238      ST	Y,R3
    002D6 2F80      MOV	R24,R16
    002D7 2F91      MOV	R25,R17
    002D8 9606      ADIW	R24,6
    002D9 8028      LD	R2,Y
    002DA 2FE8      MOV	R30,R24
    002DB 2FF9      MOV	R31,R25
    002DC 8030      LD	R3,Z
    002DD 1832      SUB	R3,R2
    002DE 8230      ST	Z,R3
    002DF 20AA      TST	R10
    002E0 F411      BNE	0x02E3
    002E1 20BB      TST	R11
    002E2 F061      BEQ	0x02EF
    002E3 2FE0      MOV	R30,R16
    002E4 2FF1      MOV	R31,R17
    002E5 8026      LDD	R2,Z+6
    002E6 8228      ST	Y,R2
    002E7 2D8A      MOV	R24,R10
    002E8 2D9B      MOV	R25,R11
    002E9 9606      ADIW	R24,6
    002EA 2FE8      MOV	R30,R24
    002EB 2FF9      MOV	R31,R25
    002EC 8030      LD	R3,Z
    002ED 1832      SUB	R3,R2
    002EE 8230      ST	Z,R3
    002EF 20CC      TST	R12
    002F0 F439      BNE	0x02F8
    002F1 20DD      TST	R13
    002F2 F429      BNE	0x02F8
    002F3 2FE2      MOV	R30,R18
    002F4 2FF3      MOV	R31,R19
    002F5 8311      STD	Z+1,R17
    002F6 8300      ST	Z,R16
    002F7 C004      RJMP	0x02FC
    002F8 2DEC      MOV	R30,R12
    002F9 2DFD      MOV	R31,R13
    002FA 8315      STD	Z+5,R17
    002FB 8304      STD	Z+4,R16
    002FC 2FE0      MOV	R30,R16
    002FD 2FF1      MOV	R31,R17
    002FE 82B5      STD	Z+5,R11
    002FF 82A4      STD	Z+4,R10
    00300 2700      CLR	R16
    00301 9621      ADIW	R28,1
    00302 940C 0384 JMP	pop_xgset003C
_OSCreateTask:
    00304 940E 038F CALL	push_xgset003C
    00306 2EA2      MOV	R10,R18
    00307 2EB3      MOV	R11,R19
    00308 2EC0      MOV	R12,R16
    00309 2ED1      MOV	R13,R17
    0030A 940E 0191 CALL	_OSDisableHook
    0030C 2DEA      MOV	R30,R10
    0030D 2DFB      MOV	R31,R11
    0030E 8180      LD	R24,Z
    0030F 8191      LDD	R25,Z+1
    00310 7090      ANDI	R25,0
    00311 8391      STD	Z+1,R25
    00312 8380      ST	Z,R24
    00313 7F80      ANDI	R24,0xF0
    00314 8391      STD	Z+1,R25
    00315 8380      ST	Z,R24
    00316 788F      ANDI	R24,0x8F
    00317 6180      ORI	R24,0x10
    00318 8391      STD	Z+1,R25
    00319 8380      ST	Z,R24
    0031A 778F      ANDI	R24,0x7F
    0031B 8391      STD	Z+1,R25
    0031C 8380      ST	Z,R24
    0031D 2D0C      MOV	R16,R12
    0031E 2D1D      MOV	R17,R13
    0031F 940E 0187 CALL	_OSDethunkTFP
    00321 2DEA      MOV	R30,R10
    00322 2DFB      MOV	R31,R11
    00323 8313      STD	Z+3,R17
    00324 8302      STD	Z+2,R16
    00325 800C      LDD	R0,Y+4
    00326 FC07      SBRC	R0,7
    00327 C00C      RJMP	0x0334
    00328 8180      LD	R24,Z
    00329 8191      LDD	R25,Z+1
    0032A 788F      ANDI	R24,0x8F
    0032B 6580      ORI	R24,0x50
    0032C 8391      STD	Z+1,R25
    0032D 8380      ST	Z,R24
    0032E E723      LDI	R18,0x73
    0032F E030      LDI	R19,0
    00330 2F0E      MOV	R16,R30
    00331 2F1F      MOV	R17,R31
    00332 940E 0289 CALL	_OSInsPrioQ
    00334 940E 0196 CALL	_OSEnableHook
    00336 2700      CLR	R16
    00337 940C 0384 JMP	pop_xgset003C
_OSInit:
    00339 2422      CLR	R2
    0033A 2433      CLR	R3
    0033B 9230 0074 STS	_OSeligQP+1,R3
    0033D 9220 0073 STS	_OSeligQP,R2
    0033F 9230 0072 STS	_OScTcbP+1,R3
    00341 9220 0071 STS	_OScTcbP,R2
    00343 9230 0064 STS	_OSdelayQP+1,R3
    00345 9220 0063 STS	_OSdelayQP,R2
    00347 9220 0062 STS	_OSlostTicks,R2
    00349 9230 0068 STS	_OSsigQinP+1,R3
    0034B 9220 0067 STS	_OSsigQinP,R2
    0034D 9230 0066 STS	_OSsigQoutP+1,R3
    0034F 9220 0065 STS	_OSsigQoutP,R2
    00351 9508      RET
_OSDelay:
    00352 92AA      ST	-Y,R10
    00353 2EA0      MOV	R10,R16
    00354 940E 0191 CALL	_OSDisableHook
    00356 20AA      TST	R10
    00357 F479      BNE	0x0367
    00358 9020 0071 LDS	R2,_OScTcbP
    0035A 9030 0072 LDS	R3,_OScTcbP+1
    0035C 2DE2      MOV	R30,R2
    0035D 2DF3      MOV	R31,R3
    0035E 8180      LD	R24,Z
    0035F 8191      LDD	R25,Z+1
    00360 788F      ANDI	R24,0x8F
    00361 6180      ORI	R24,0x10
    00362 8391      STD	Z+1,R25
    00363 8380      ST	Z,R24
    00364 940E 0196 CALL	_OSEnableHook
    00366 C01B      RJMP	0x0382
    00367 9020 0071 LDS	R2,_OScTcbP
    00369 9030 0072 LDS	R3,_OScTcbP+1
    0036B 2DE2      MOV	R30,R2
    0036C 2DF3      MOV	R31,R3
    0036D 8180      LD	R24,Z
    0036E 8191      LDD	R25,Z+1
    0036F 788F      ANDI	R24,0x8F
    00370 6280      ORI	R24,0x20
    00371 8391      STD	Z+1,R25
    00372 8380      ST	Z,R24
    00373 91E0 0071 LDS	R30,_OScTcbP
    00375 91F0 0072 LDS	R31,_OScTcbP+1
    00377 82A6      STD	Z+6,R10
    00378 E623      LDI	R18,0x63
    00379 E030      LDI	R19,0
    0037A 9100 0071 LDS	R16,_OScTcbP
    0037C 9110 0072 LDS	R17,_OScTcbP+1
    0037E 940E 0289 CALL	_OSInsPrioQ
    00380 940E 0196 CALL	_OSEnableHook
    00382 90A9      LD	R10,Y+
    00383 9508      RET
pop_xgset003C:
    00384 90A9      LD	R10,Y+
    00385 90B9      LD	R11,Y+
    00386 90C9      LD	R12,Y+
    00387 90D9      LD	R13,Y+
    00388 9508      RET
push_xgsetF0FC:
    00389 937A      ST	-Y,R23
    0038A 936A      ST	-Y,R22
push_xgset30FC:
    0038B 935A      ST	-Y,R21
    0038C 934A      ST	-Y,R20
push_xgset00FC:
    0038D 92FA      ST	-Y,R15
    0038E 92EA      ST	-Y,R14
push_xgset003C:
    0038F 92DA      ST	-Y,R13
    00390 92CA      ST	-Y,R12
    00391 92BA      ST	-Y,R11
    00392 92AA      ST	-Y,R10
    00393 9508      RET
