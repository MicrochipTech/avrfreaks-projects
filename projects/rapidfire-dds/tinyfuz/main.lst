GAS LISTING /tmp/cceEhKeA.s 			page 1


   1               		.file	"main.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   8               		.global __do_copy_data
   9               		.global __do_clear_bss
  10               		.stabs	"/home/chunkierdonkey/tinyfuz/",100,0,2,.Ltext0
  11               		.stabs	"main.c",100,0,2,.Ltext0
  12               		.text
  13               	.Ltext0:
  14               		.stabs	"gcc2_compiled.",60,0,0,0
  15               		.stabs	"int:t(0,1)=r(0,1);-32768;32767;",128,0,1,0
  16               		.stabs	"char:t(0,2)=@s8;r(0,2);0;255;",128,0,1,0
  17               		.stabs	"long int:t(0,3)=@s32;r(0,3);020000000000;017777777777;",128,0,1,0
  18               		.stabs	"unsigned int:t(0,4)=r(0,4);0;0177777;",128,0,1,0
  19               		.stabs	"long unsigned int:t(0,5)=@s32;r(0,5);0;037777777777;",128,0,1,0
  20               		.stabs	"long long int:t(0,6)=@s64;r(0,6);01000000000000000000000;0777777777777777777777;",128,0,1,
  21               		.stabs	"long long unsigned int:t(0,7)=@s64;r(0,7);0;01777777777777777777777;",128,0,1,0
  22               		.stabs	"short int:t(0,8)=r(0,8);-32768;32767;",128,0,1,0
  23               		.stabs	"short unsigned int:t(0,9)=r(0,9);0;0177777;",128,0,1,0
  24               		.stabs	"signed char:t(0,10)=@s8;r(0,10);-128;127;",128,0,1,0
  25               		.stabs	"unsigned char:t(0,11)=@s8;r(0,11);0;255;",128,0,1,0
  26               		.stabs	"float:t(0,12)=r(0,1);4;0;",128,0,1,0
  27               		.stabs	"double:t(0,13)=r(0,1);4;0;",128,0,1,0
  28               		.stabs	"long double:t(0,14)=r(0,1);4;0;",128,0,1,0
  29               		.stabs	"void:t(0,15)=(0,15)",128,0,1,0
  30               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/stdint.h",130,0,0,0
  31               		.stabs	"int8_t:t(1,1)=(0,10)",128,0,121,0
  32               		.stabs	"uint8_t:t(1,2)=(0,11)",128,0,122,0
  33               		.stabs	"int16_t:t(1,3)=(0,1)",128,0,123,0
  34               		.stabs	"uint16_t:t(1,4)=(0,4)",128,0,124,0
  35               		.stabs	"int32_t:t(1,5)=(0,3)",128,0,125,0
  36               		.stabs	"uint32_t:t(1,6)=(0,5)",128,0,126,0
  37               		.stabs	"int64_t:t(1,7)=(0,6)",128,0,128,0
  38               		.stabs	"uint64_t:t(1,8)=(0,7)",128,0,129,0
  39               		.stabs	"intptr_t:t(1,9)=(1,3)",128,0,142,0
  40               		.stabs	"uintptr_t:t(1,10)=(1,4)",128,0,147,0
  41               		.stabs	"int_least8_t:t(1,11)=(1,1)",128,0,159,0
  42               		.stabs	"uint_least8_t:t(1,12)=(1,2)",128,0,164,0
  43               		.stabs	"int_least16_t:t(1,13)=(1,3)",128,0,169,0
  44               		.stabs	"uint_least16_t:t(1,14)=(1,4)",128,0,174,0
  45               		.stabs	"int_least32_t:t(1,15)=(1,5)",128,0,179,0
  46               		.stabs	"uint_least32_t:t(1,16)=(1,6)",128,0,184,0
  47               		.stabs	"int_least64_t:t(1,17)=(1,7)",128,0,192,0
  48               		.stabs	"uint_least64_t:t(1,18)=(1,8)",128,0,199,0
  49               		.stabs	"int_fast8_t:t(1,19)=(1,1)",128,0,213,0
  50               		.stabs	"uint_fast8_t:t(1,20)=(1,2)",128,0,218,0
  51               		.stabs	"int_fast16_t:t(1,21)=(1,3)",128,0,223,0
  52               		.stabs	"uint_fast16_t:t(1,22)=(1,4)",128,0,228,0
  53               		.stabs	"int_fast32_t:t(1,23)=(1,5)",128,0,233,0
  54               		.stabs	"uint_fast32_t:t(1,24)=(1,6)",128,0,238,0
  55               		.stabs	"int_fast64_t:t(1,25)=(1,7)",128,0,246,0
  56               		.stabs	"uint_fast64_t:t(1,26)=(1,8)",128,0,253,0
  57               		.stabs	"intmax_t:t(1,27)=(1,7)",128,0,273,0
GAS LISTING /tmp/cceEhKeA.s 			page 2


  58               		.stabs	"uintmax_t:t(1,28)=(1,8)",128,0,278,0
  59               		.stabn	162,0,0,0
  60               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/stdlib.h",130,0,0,0
  61               		.stabs	"/usr/lib/gcc/avr/4.3.2/include/stddef.h",130,0,0,0
  62               		.stabs	"size_t:t(3,1)=(0,4)",128,0,214,0
  63               		.stabs	"wchar_t:t(3,2)=(0,1)",128,0,326,0
  64               		.stabn	162,0,0,0
  65               		.stabs	"div_t:t(2,1)=(2,2)=s4quot:(0,1),0,16;rem:(0,1),16,16;;",128,0,71,0
  66               		.stabs	"ldiv_t:t(2,3)=(2,4)=s8quot:(0,3),0,32;rem:(0,3),32,32;;",128,0,77,0
  67               		.stabs	"__compar_fn_t:t(2,5)=(2,6)=*(2,7)=f(0,1)",128,0,80,0
  68               		.stabn	162,0,0,0
  69               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/avr/interrupt.h",130,0,0,0
  70               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/avr/io.h",130,0,0,0
  71               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/avr/sfr_defs.h",130,0,0,0
  72               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/inttypes.h",130,0,0,0
  73               		.stabs	"int_farptr_t:t(7,1)=(1,5)",128,0,77,0
  74               		.stabs	"uint_farptr_t:t(7,2)=(1,6)",128,0,81,0
  75               		.stabn	162,0,0,0
  76               		.stabn	162,0,0,0
  77               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/avr/fuse.h",130,0,0,0
  78               		.stabs	"__fuse_t:t(8,1)=(8,2)=s3low:(0,11),0,8;high:(0,11),8,8;extended:(0,11),16,8;;",128,0,219,0
  79               		.stabn	162,0,0,0
  80               		.stabn	162,0,0,0
  81               		.stabn	162,0,0,0
  82               		.stabs	"/usr/lib/gcc/avr/4.3.2/../../../avr/include/avr/pgmspace.h",130,0,0,0
  83               		.stabs	"prog_void:t(9,1)=(9,2)=(9,2)",128,0,210,0
  84               		.stabs	"prog_char:t(9,3)=(9,4)=@s8;r(9,4);0;255;",128,0,211,0
  85               		.stabs	"prog_uchar:t(9,5)=(9,4)",128,0,212,0
  86               		.stabs	"prog_int8_t:t(9,6)=(9,7)=(0,10)",128,0,214,0
  87               		.stabs	"prog_uint8_t:t(9,8)=(9,4)",128,0,215,0
  88               		.stabs	"prog_int16_t:t(9,9)=(9,10)=(0,1)",128,0,216,0
  89               		.stabs	"prog_uint16_t:t(9,11)=(9,12)=(0,4)",128,0,217,0
  90               		.stabs	"prog_int32_t:t(9,13)=(9,14)=(0,3)",128,0,218,0
  91               		.stabs	"prog_uint32_t:t(9,15)=(9,16)=(0,5)",128,0,219,0
  92               		.stabs	"prog_int64_t:t(9,17)=(9,18)=(0,6)",128,0,221,0
  93               		.stabs	"prog_uint64_t:t(9,19)=(9,20)=(0,7)",128,0,222,0
  94               		.stabn	162,0,0,0
  95               		.stabs	"__vector_4:F(0,15)",36,0,53,__vector_4
  96               	.global	__vector_4
  97               		.type	__vector_4, @function
  98               	__vector_4:
  99               		.stabd	46,0,0
   1:main.c        **** /* Justin Goff */
   2:main.c        **** /* Copyright (C) 2008 Justin Goff */
   3:main.c        **** /* stonefoz@myfastmail.com */
   4:main.c        **** 
   5:main.c        **** #include <stdint.h>
   6:main.c        **** #include <stdlib.h>
   7:main.c        **** 
   8:main.c        **** #include "config.h"
   9:main.c        **** 
  10:main.c        **** #include <avr/interrupt.h>
  11:main.c        **** #include <avr/io.h>
  12:main.c        **** #include <avr/sleep.h>
  13:main.c        **** #include <avr/wdt.h>
  14:main.c        **** #include <avr/pgmspace.h>
  15:main.c        **** #include <util/delay.h>
GAS LISTING /tmp/cceEhKeA.s 			page 3


  16:main.c        **** 
  17:main.c        **** #include "sintable.h"
  18:main.c        **** 
  19:main.c        **** /* Change fire rate */
  20:main.c        **** /* move the decimal place two places right */
  21:main.c        **** /* 1300 is 13.00 fires per second */
  22:main.c        **** #define FIRERATE1 1300
  23:main.c        **** 
  24:main.c        **** #define PHASEONE2DIG 87617 
  25:main.c        **** #define SOFTSCALE 255
  26:main.c        **** 
  27:main.c        **** /* Phase acculmulator */
  28:main.c        **** /* 32 bits resolution, accessable by each byte */
  29:main.c        **** union
  30:main.c        **** {
  31:main.c        ****     uint32_t acc;
  32:main.c        ****     uint8_t b[4];
  33:main.c        **** } pax;
  34:main.c        **** 
  35:main.c        **** /* Tuning word */
  36:main.c        **** /* Changes fire rate */
  37:main.c        **** volatile struct
  38:main.c        **** {
  39:main.c        ****     uint32_t step;
  40:main.c        **** } ratectl;
  41:main.c        **** 
  42:main.c        **** /* Flags */
  43:main.c        **** /* ISR only sets, main only clears */
  44:main.c        **** #define SOFTTICK 0
  45:main.c        **** 
  46:main.c        **** volatile struct
  47:main.c        **** {
  48:main.c        ****     uint8_t flags;
  49:main.c        **** } isrflags;
  50:main.c        **** 
  51:main.c        **** /* It's all done here */
  52:main.c        **** ISR(TIMER1_OVF_vect)
  53:main.c        **** {
 100               		.stabn	68,0,53,.LM0-.LFBB1
 101               	.LM0:
 102               	.LFBB1:
 103 0000 1F92      		push __zero_reg__
 104 0002 0F92      		push r0
 105 0004 0FB6      		in r0,__SREG__
 106 0006 0F92      		push r0
 107 0008 1124      		clr __zero_reg__
 108 000a 2F93      		push r18
 109 000c 3F93      		push r19
 110 000e 4F93      		push r20
 111 0010 5F93      		push r21
 112 0012 8F93      		push r24
 113 0014 9F93      		push r25
 114 0016 AF93      		push r26
 115 0018 BF93      		push r27
 116 001a EF93      		push r30
 117 001c FF93      		push r31
 118               	/* prologue: Signal */
GAS LISTING /tmp/cceEhKeA.s 			page 4


 119               	/* frame size = 0 */
  54:main.c        ****     static uint16_t scaler = SOFT_SCALE;
  55:main.c        ****     static uint8_t OCR = 0;
  56:main.c        **** 
  57:main.c        ****     /* output on two pins first to insure timing */
  58:main.c        ****     OCR1A = OCR;
 120               		.stabn	68,0,58,.LM1-.LFBB1
 121               	.LM1:
 122 001e 8091 0000 		lds r24,OCR.1473
 123 0022 8EBD      		out 78-32,r24
  59:main.c        ****     OCR1B = OCR;
 124               		.stabn	68,0,59,.LM2-.LFBB1
 125               	.LM2:
 126 0024 8BBD      		out 75-32,r24
  60:main.c        **** 
  61:main.c        ****     /* bad juju */
  62:main.c        ****     pax.acc += ratectl.step;
 127               		.stabn	68,0,62,.LM3-.LFBB1
 128               	.LM3:
 129 0026 2091 0000 		lds r18,ratectl
 130 002a 3091 0000 		lds r19,(ratectl)+1
 131 002e 4091 0000 		lds r20,(ratectl)+2
 132 0032 5091 0000 		lds r21,(ratectl)+3
 133 0036 8091 0000 		lds r24,pax
 134 003a 9091 0000 		lds r25,(pax)+1
 135 003e A091 0000 		lds r26,(pax)+2
 136 0042 B091 0000 		lds r27,(pax)+3
 137 0046 820F      		add r24,r18
 138 0048 931F      		adc r25,r19
 139 004a A41F      		adc r26,r20
 140 004c B51F      		adc r27,r21
 141 004e 8093 0000 		sts pax,r24
 142 0052 9093 0000 		sts (pax)+1,r25
 143 0056 A093 0000 		sts (pax)+2,r26
 144 005a B093 0000 		sts (pax)+3,r27
 145               	.LBB8:
  63:main.c        ****     OCR = pgm_read_byte
 146               		.stabn	68,0,63,.LM4-.LFBB1
 147               	.LM4:
 148 005e E091 0000 		lds r30,pax+3
 149 0062 E695      		lsr r30
 150 0064 E695      		lsr r30
 151 0066 E695      		lsr r30
 152 0068 F0E0      		ldi r31,lo8(0)
 153 006a E050      		subi r30,lo8(-(sintable))
 154 006c F040      		sbci r31,hi8(-(sintable))
 155               	/* #APP */
 156               	 ;  63 "main.c" 1
 157 006e E491      		lpm r30, Z
 158               		
 159               	 ;  0 "" 2
 160               	/* #NOAPP */
 161               	.LBE8:
 162 0070 E093 0000 		sts OCR.1473,r30
  64:main.c        ****           (
  65:main.c        ****               /* offset into program memory */
  66:main.c        ****               &sintable
GAS LISTING /tmp/cceEhKeA.s 			page 5


  67:main.c        ****               [
  68:main.c        ****                   /* grab the 8 most significant bits from union */
  69:main.c        ****                   /* then shift bits out until size of table */
  70:main.c        ****                   pax.b[3]>>(8-SINTAB2SIZE)
  71:main.c        ****               ]
  72:main.c        ****           );
  73:main.c        **** 
  74:main.c        ****     /* simple soft timers */
  75:main.c        ****     if (--scaler == 0)
 163               		.stabn	68,0,75,.LM5-.LFBB1
 164               	.LM5:
 165 0074 8091 0000 		lds r24,scaler.1472
 166 0078 9091 0000 		lds r25,(scaler.1472)+1
 167 007c 0197      		sbiw r24,1
 168 007e 9093 0000 		sts (scaler.1472)+1,r25
 169 0082 8093 0000 		sts scaler.1472,r24
 170 0086 892B      		or r24,r25
 171 0088 01F4      		brne .L3
  76:main.c        ****     {
  77:main.c        ****         scaler = SOFT_SCALE;
 172               		.stabn	68,0,77,.LM6-.LFBB1
 173               	.LM6:
 174 008a 80E2      		ldi r24,lo8(800)
 175 008c 93E0      		ldi r25,hi8(800)
 176 008e 9093 0000 		sts (scaler.1472)+1,r25
 177 0092 8093 0000 		sts scaler.1472,r24
  78:main.c        ****         isrflags.flags |= _BV(SOFTTICK);
 178               		.stabn	68,0,78,.LM7-.LFBB1
 179               	.LM7:
 180 0096 8091 0000 		lds r24,isrflags
 181 009a 8160      		ori r24,lo8(1)
 182 009c 8093 0000 		sts isrflags,r24
 183               	.L3:
 184               	/* epilogue start */
  79:main.c        ****     }
  80:main.c        **** }
 185               		.stabn	68,0,80,.LM8-.LFBB1
 186               	.LM8:
 187 00a0 FF91      		pop r31
 188 00a2 EF91      		pop r30
 189 00a4 BF91      		pop r27
 190 00a6 AF91      		pop r26
 191 00a8 9F91      		pop r25
 192 00aa 8F91      		pop r24
 193 00ac 5F91      		pop r21
 194 00ae 4F91      		pop r20
 195 00b0 3F91      		pop r19
 196 00b2 2F91      		pop r18
 197 00b4 0F90      		pop r0
 198 00b6 0FBE      		out __SREG__,r0
 199 00b8 0F90      		pop r0
 200 00ba 1F90      		pop __zero_reg__
 201 00bc 1895      		reti
 202               		.size	__vector_4, .-__vector_4
 203               		.stabs	"scaler:V(1,4)",38,0,54,scaler.1472
 204               		.stabs	"OCR:V(1,2)",38,0,55,OCR.1473
 205               		.stabn	192,0,0,.LFBB1-.LFBB1
GAS LISTING /tmp/cceEhKeA.s 			page 6


 206               		.stabs	"__result:r(1,2)",64,0,63,30
 207               		.stabn	192,0,0,.LBB8-.LFBB1
 208               		.stabn	224,0,0,.LBE8-.LFBB1
 209               		.stabn	224,0,0,.Lscope1-.LFBB1
 210               	.Lscope1:
 211               		.stabs	"",36,0,0,.Lscope1-.LFBB1
 212               		.stabd	78,0,0
 213               		.stabs	"ioinit:F(0,15)",36,0,83,ioinit
 214               	.global	ioinit
 215               		.type	ioinit, @function
 216               	ioinit:
 217               		.stabd	46,0,0
  81:main.c        **** 
  82:main.c        **** void ioinit(void)
  83:main.c        **** {
 218               		.stabn	68,0,83,.LM9-.LFBB2
 219               	.LM9:
 220               	.LFBB2:
 221               	/* prologue: function */
 222               	/* frame size = 0 */
  84:main.c        ****     /* set pin for pwm output */
  85:main.c        **** 
  86:main.c        ****     PWMDDR |= 
 223               		.stabn	68,0,86,.LM10-.LFBB2
 224               	.LM10:
 225 00be 87B3      		in r24,55-32
 226 00c0 8360      		ori r24,lo8(3)
 227 00c2 87BB      		out 55-32,r24
  87:main.c        **** 	_BV(PWMA) |
  88:main.c        ****     	_BV(PWMB);
  89:main.c        **** 
  90:main.c        ****     TCCR0A = _BV(COM1A1) | _BV(COM1B1) | _BV(WGM01) | _BV(WGM00);
 228               		.stabn	68,0,90,.LM11-.LFBB2
 229               	.LM11:
 230 00c4 83E2      		ldi r24,lo8(35)
 231 00c6 8ABD      		out 74-32,r24
  91:main.c        ****     TCCR0B = _BV(CS00);
 232               		.stabn	68,0,91,.LM12-.LFBB2
 233               	.LM12:
 234 00c8 81E0      		ldi r24,lo8(1)
 235 00ca 83BF      		out 83-32,r24
  92:main.c        ****     TIMSK |= _BV(TOIE1);
 236               		.stabn	68,0,92,.LM13-.LFBB2
 237               	.LM13:
 238 00cc 89B7      		in r24,89-32
 239 00ce 8460      		ori r24,lo8(4)
 240 00d0 89BF      		out 89-32,r24
  93:main.c        ****     OCR1A = 0;
 241               		.stabn	68,0,93,.LM14-.LFBB2
 242               	.LM14:
 243 00d2 1EBC      		out 78-32,__zero_reg__
  94:main.c        **** 
  95:main.c        ****     /* main has to catch up after start */
  96:main.c        ****     wdt_enable(WDTO_2S);
 244               		.stabn	68,0,96,.LM15-.LFBB2
 245               	.LM15:
 246 00d4 2FE0      		ldi r18,lo8(15)
GAS LISTING /tmp/cceEhKeA.s 			page 7


 247 00d6 88E1      		ldi r24,lo8(24)
 248 00d8 90E0      		ldi r25,hi8(24)
 249               	/* #APP */
 250               	 ;  96 "main.c" 1
 251 00da 0FB6      		in __tmp_reg__,__SREG__
 252 00dc F894      		cli
 253 00de A895      		wdr
 254 00e0 81BD      		out 33,r24
 255 00e2 0FBE      		out __SREG__,__tmp_reg__
 256 00e4 21BD      		out 33,r18
 257               	 ;  0 "" 2
 258               	/* epilogue start */
  97:main.c        **** }
 259               		.stabn	68,0,97,.LM16-.LFBB2
 260               	.LM16:
 261               	/* #NOAPP */
 262 00e6 0895      		ret
 263               		.size	ioinit, .-ioinit
 264               	.Lscope2:
 265               		.stabs	"",36,0,0,.Lscope2-.LFBB2
 266               		.stabd	78,0,0
 267               		.stabs	"readbuttons:F(0,15)",36,0,100,readbuttons
 268               	.global	readbuttons
 269               		.type	readbuttons, @function
 270               	readbuttons:
 271               		.stabd	46,0,0
  98:main.c        **** 
  99:main.c        **** void readbuttons(void)
 100:main.c        **** {
 272               		.stabn	68,0,100,.LM17-.LFBB3
 273               	.LM17:
 274               	.LFBB3:
 275               	/* prologue: function */
 276               	/* frame size = 0 */
 277               	/* epilogue start */
 101:main.c        **** #ifdef DEBUG
 102:main.c        ****     uint32_t stepcopy;
 103:main.c        **** 
 104:main.c        ****     /* Helps with debugging */
 105:main.c        ****     /* ISR never writes */
 106:main.c        ****     stepcopy = ratectl.step;
 107:main.c        **** 
 108:main.c        ****     if (BUTTONIN & _BV(PIN_SLOW))
 109:main.c        ****     {
 110:main.c        ****         if (stepcopy-CTL < stepcopy)
 111:main.c        ****             stepcopy-=CTL;
 112:main.c        ****     }
 113:main.c        ****     if (BUTTONIN &  _BV(PIN_FAST))
 114:main.c        ****     {
 115:main.c        ****         if (stepcopy+CTL < (0xFFFFFFFFl>>2))
 116:main.c        ****             stepcopy+=CTL;
 117:main.c        ****     }
 118:main.c        ****     */
 119:main.c        ****     /* throw dice */
 120:main.c        ****     /* worst case we access while in isr and one phase 
 121:main.c        ****     (1/32)second is jittered */
 122:main.c        ****     ratectl.step=stepcopy;
GAS LISTING /tmp/cceEhKeA.s 			page 8


 123:main.c        **** #endif
 124:main.c        **** }
 278               		.stabn	68,0,124,.LM18-.LFBB3
 279               	.LM18:
 280 00e8 0895      		ret
 281               		.size	readbuttons, .-readbuttons
 282               	.Lscope3:
 283               		.stabs	"",36,0,0,.Lscope3-.LFBB3
 284               		.stabd	78,0,0
 285               		.stabs	"clearflag:F(0,15)",36,0,128,clearflag
 286               		.stabs	"f:P(1,2)",64,0,127,24
 287               	.global	clearflag
 288               		.type	clearflag, @function
 289               	clearflag:
 290               		.stabd	46,0,0
 125:main.c        **** 
 126:main.c        **** /* simple, blocking protection */
 127:main.c        **** inline void clearflag(uint8_t f)
 128:main.c        **** {
 291               		.stabn	68,0,128,.LM19-.LFBB4
 292               	.LM19:
 293               	.LFBB4:
 294               	/* prologue: function */
 295               	/* frame size = 0 */
 129:main.c        ****     cli();
 296               		.stabn	68,0,129,.LM20-.LFBB4
 297               	.LM20:
 298               	/* #APP */
 299               	 ;  129 "main.c" 1
 300 00ea F894      		cli
 301               	 ;  0 "" 2
 130:main.c        ****     isrflags.flags &= ~_BV(f);
 302               		.stabn	68,0,130,.LM21-.LFBB4
 303               	.LM21:
 304               	/* #NOAPP */
 305 00ec 9091 0000 		lds r25,isrflags
 306 00f0 21E0      		ldi r18,lo8(1)
 307 00f2 30E0      		ldi r19,hi8(1)
 308 00f4 00C0      		rjmp 2f
 309 00f6 220F      	1:	lsl r18
 310 00f8 331F      		rol r19
 311 00fa 8A95      	2:	dec r24
 312 00fc 02F4      		brpl 1b
 313 00fe 2095      		com r18
 314 0100 2923      		and r18,r25
 315 0102 2093 0000 		sts isrflags,r18
 131:main.c        ****     sei();
 316               		.stabn	68,0,131,.LM22-.LFBB4
 317               	.LM22:
 318               	/* #APP */
 319               	 ;  131 "main.c" 1
 320 0106 7894      		sei
 321               	 ;  0 "" 2
 322               	/* epilogue start */
 132:main.c        **** }
 323               		.stabn	68,0,132,.LM23-.LFBB4
 324               	.LM23:
GAS LISTING /tmp/cceEhKeA.s 			page 9


 325               	/* #NOAPP */
 326 0108 0895      		ret
 327               		.size	clearflag, .-clearflag
 328               	.Lscope4:
 329               		.stabs	"",36,0,0,.Lscope4-.LFBB4
 330               		.stabd	78,0,0
 331               		.stabs	"main:F(0,1)",36,0,135,main
 332               	.global	main
 333               		.type	main, @function
 334               	main:
 335               		.stabd	46,0,0
 133:main.c        **** 
 134:main.c        **** int main(void)
 135:main.c        **** {
 336               		.stabn	68,0,135,.LM24-.LFBB5
 337               	.LM24:
 338               	.LFBB5:
 339               	/* prologue: function */
 340               	/* frame size = 0 */
 136:main.c        ****     uint8_t flags;
 137:main.c        ****     /* stop gcc optomizer */
 138:main.c        ****     asm("nop");
 341               		.stabn	68,0,138,.LM25-.LFBB5
 342               	.LM25:
 343               	/* #APP */
 344               	 ;  138 "main.c" 1
 345 010a 0000      		nop
 346               	 ;  0 "" 2
 139:main.c        **** 
 140:main.c        ****     /* init globals */
 141:main.c        ****     pax.acc = 1;
 347               		.stabn	68,0,141,.LM26-.LFBB5
 348               	.LM26:
 349               	/* #NOAPP */
 350 010c 81E0      		ldi r24,lo8(1)
 351 010e 90E0      		ldi r25,hi8(1)
 352 0110 A0E0      		ldi r26,hlo8(1)
 353 0112 B0E0      		ldi r27,hhi8(1)
 354 0114 8093 0000 		sts pax,r24
 355 0118 9093 0000 		sts (pax)+1,r25
 356 011c A093 0000 		sts (pax)+2,r26
 357 0120 B093 0000 		sts (pax)+3,r27
 142:main.c        ****     ratectl.step = (PHASEONE2DIG * FIRERATE1);
 358               		.stabn	68,0,142,.LM27-.LFBB5
 359               	.LM27:
 360 0124 84E1      		ldi r24,lo8(113902100)
 361 0126 92E0      		ldi r25,hi8(113902100)
 362 0128 AAEC      		ldi r26,hlo8(113902100)
 363 012a B6E0      		ldi r27,hhi8(113902100)
 364 012c 8093 0000 		sts ratectl,r24
 365 0130 9093 0000 		sts (ratectl)+1,r25
 366 0134 A093 0000 		sts (ratectl)+2,r26
 367 0138 B093 0000 		sts (ratectl)+3,r27
 143:main.c        ****     isrflags.flags = 0;
 368               		.stabn	68,0,143,.LM28-.LFBB5
 369               	.LM28:
 370 013c 1092 0000 		sts isrflags,__zero_reg__
GAS LISTING /tmp/cceEhKeA.s 			page 10


 371               	.LBB9:
 372               	.LBB10:
 373               		.stabn	68,0,86,.LM29-.LFBB5
 374               	.LM29:
 375 0140 87B3      		in r24,55-32
 376 0142 8360      		ori r24,lo8(3)
 377 0144 87BB      		out 55-32,r24
 378               		.stabn	68,0,90,.LM30-.LFBB5
 379               	.LM30:
 380 0146 83E2      		ldi r24,lo8(35)
 381 0148 8ABD      		out 74-32,r24
 382               		.stabn	68,0,91,.LM31-.LFBB5
 383               	.LM31:
 384 014a 81E0      		ldi r24,lo8(1)
 385 014c 83BF      		out 83-32,r24
 386               		.stabn	68,0,92,.LM32-.LFBB5
 387               	.LM32:
 388 014e 89B7      		in r24,89-32
 389 0150 8460      		ori r24,lo8(4)
 390 0152 89BF      		out 89-32,r24
 391               		.stabn	68,0,93,.LM33-.LFBB5
 392               	.LM33:
 393 0154 1EBC      		out 78-32,__zero_reg__
 394               		.stabn	68,0,96,.LM34-.LFBB5
 395               	.LM34:
 396 0156 2FE0      		ldi r18,lo8(15)
 397 0158 88E1      		ldi r24,lo8(24)
 398 015a 90E0      		ldi r25,hi8(24)
 399               	/* #APP */
 400               	 ;  96 "main.c" 1
 401 015c 0FB6      		in __tmp_reg__,__SREG__
 402 015e F894      		cli
 403 0160 A895      		wdr
 404 0162 81BD      		out 33,r24
 405 0164 0FBE      		out __SREG__,__tmp_reg__
 406 0166 21BD      		out 33,r18
 407               	 ;  0 "" 2
 408               	/* #NOAPP */
 409               	.LBE10:
 410               	.LBE9:
 144:main.c        **** 
 145:main.c        ****     ioinit();
 146:main.c        **** 
 147:main.c        ****     set_sleep_mode(SLEEP_MODE_IDLE);
 411               		.stabn	68,0,147,.LM35-.LFBB5
 412               	.LM35:
 413 0168 85B7      		in r24,85-32
 414 016a 877E      		andi r24,lo8(-25)
 415 016c 85BF      		out 85-32,r24
 148:main.c        ****     sei();
 416               		.stabn	68,0,148,.LM36-.LFBB5
 417               	.LM36:
 418               	/* #APP */
 419               	 ;  148 "main.c" 1
 420 016e 7894      		sei
 421               	 ;  0 "" 2
 422               	/* #NOAPP */
GAS LISTING /tmp/cceEhKeA.s 			page 11


 423               	.L12:
 149:main.c        **** 
 150:main.c        ****     /* main loop */
 151:main.c        ****     for (;;) 
 152:main.c        ****     {
 153:main.c        ****         wdt_reset();
 424               		.stabn	68,0,153,.LM37-.LFBB5
 425               	.LM37:
 426               	/* #APP */
 427               	 ;  153 "main.c" 1
 428 0170 A895      		wdr
 429               	 ;  0 "" 2
 154:main.c        ****         flags = isrflags.flags;
 430               		.stabn	68,0,154,.LM38-.LFBB5
 431               	.LM38:
 432               	/* #NOAPP */
 433 0172 8091 0000 		lds r24,isrflags
 155:main.c        **** 
 156:main.c        **** 	/* soft clock tick */
 157:main.c        **** 	/* uses less battery if only checking for updates less offen */
 158:main.c        ****         if (flags &  _BV(SOFTTICK))
 434               		.stabn	68,0,158,.LM39-.LFBB5
 435               	.LM39:
 436 0176 80FF      		sbrs r24,0
 437 0178 00C0      		rjmp .L11
 438               	.LBB11:
 439               	.LBB12:
 440               		.stabn	68,0,129,.LM40-.LFBB5
 441               	.LM40:
 442               	/* #APP */
 443               	 ;  129 "main.c" 1
 444 017a F894      		cli
 445               	 ;  0 "" 2
 446               		.stabn	68,0,130,.LM41-.LFBB5
 447               	.LM41:
 448               	/* #NOAPP */
 449 017c 8091 0000 		lds r24,isrflags
 450 0180 8E7F      		andi r24,lo8(-2)
 451 0182 8093 0000 		sts isrflags,r24
 452               		.stabn	68,0,131,.LM42-.LFBB5
 453               	.LM42:
 454               	/* #APP */
 455               	 ;  131 "main.c" 1
 456 0186 7894      		sei
 457               	 ;  0 "" 2
 458               	/* #NOAPP */
 459               	.L11:
 460               	.LBE12:
 461               	.LBE11:
 159:main.c        ****         {
 160:main.c        ****             clearflag(SOFTTICK);
 161:main.c        **** 	    readbuttons();
 162:main.c        ****         }
 163:main.c        **** 
 164:main.c        ****         /* it is running on battery */
 165:main.c        **** 	/* will sleep until next interupt */
 166:main.c        **** 	sleep_mode();
GAS LISTING /tmp/cceEhKeA.s 			page 12


 462               		.stabn	68,0,166,.LM43-.LFBB5
 463               	.LM43:
 464 0188 85B7      		in r24,85-32
 465 018a 8062      		ori r24,lo8(32)
 466 018c 85BF      		out 85-32,r24
 467               	/* #APP */
 468               	 ;  166 "main.c" 1
 469 018e 8895      		sleep
 470               		
 471               	 ;  0 "" 2
 472               	/* #NOAPP */
 473 0190 85B7      		in r24,85-32
 474 0192 8F7D      		andi r24,lo8(-33)
 475 0194 85BF      		out 85-32,r24
 476 0196 00C0      		rjmp .L12
 477               		.size	main, .-main
 478               		.stabs	"flags:r(1,2)",64,0,136,24
 479               		.stabn	192,0,0,.LFBB5-.LFBB5
 480               		.stabn	224,0,0,.Lscope5-.LFBB5
 481               	.Lscope5:
 482               		.stabs	"",36,0,0,.Lscope5-.LFBB5
 483               		.stabd	78,0,0
 484               		.lcomm OCR.1473,1
 485               		.data
 486               		.type	scaler.1472, @object
 487               		.size	scaler.1472, 2
 488               	scaler.1472:
 489 0000 2003      		.word	800
 490               		.comm pax,4,1
 491               		.comm ratectl,4,1
 492               		.comm isrflags,1,1
 493               		.stabs	"scaler:V(1,4)",38,0,54,scaler.1472
 494               		.stabs	"OCR:V(1,2)",38,0,55,OCR.1473
 495               		.stabs	"pax:G(0,16)=u4acc:(1,6),0,32;b:(0,17)=ar(0,18)=r(0,18);0;0177777;;0;3;(1,2),0,32;;",32,0,3
 496               		.stabs	"ratectl:G(0,19)=B(0,20)=s4step:(1,6),0,32;;",32,0,40,0
 497               		.stabs	"isrflags:G(0,21)=B(0,22)=s1flags:(1,2),0,8;;",32,0,49,0
 498               		.text
 499               		.stabs	"",100,0,0,.Letext0
 500               	.Letext0:
GAS LISTING /tmp/cceEhKeA.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/cceEhKeA.s:2      *ABS*:000000000000003f __SREG__
     /tmp/cceEhKeA.s:3      *ABS*:000000000000003e __SP_H__
     /tmp/cceEhKeA.s:4      *ABS*:000000000000003d __SP_L__
     /tmp/cceEhKeA.s:5      *ABS*:0000000000000034 __CCP__
     /tmp/cceEhKeA.s:6      *ABS*:0000000000000000 __tmp_reg__
     /tmp/cceEhKeA.s:7      *ABS*:0000000000000001 __zero_reg__
     /tmp/cceEhKeA.s:98     .text:0000000000000000 __vector_4
                             .bss:0000000000000000 OCR.1473
                            *COM*:0000000000000004 ratectl
                            *COM*:0000000000000004 pax
     /tmp/cceEhKeA.s:488    .data:0000000000000000 scaler.1472
                            *COM*:0000000000000001 isrflags
     /tmp/cceEhKeA.s:216    .text:00000000000000be ioinit
     /tmp/cceEhKeA.s:270    .text:00000000000000e8 readbuttons
     /tmp/cceEhKeA.s:289    .text:00000000000000ea clearflag
     /tmp/cceEhKeA.s:334    .text:000000000000010a main

UNDEFINED SYMBOLS
__do_copy_data
__do_clear_bss
sintable
