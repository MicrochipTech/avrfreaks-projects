.TH "C:/Projects/R3/kernel++/task.h" 3 "20 Mar 2010" "Version R3" "FunkOS++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Projects/R3/kernel++/task.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'types.h'\fP
.br
\fC#include 'kernelcfg.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBFunkOS_Task\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBTIME_FOREVER\fP   ((USHORT)65535)"
.br
.RI "\fIDefinition of the infinite timeout interval of the system. \fP"
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef void(* \fBTASK_FUNC\fP )(void *pvThis_)"
.br
.RI "\fITask exection function type definition. \fP"
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBTASK_STATE\fP { \fBTASK_UNINIT\fP =  0, \fBTASK_READY\fP, \fBTASK_BLOCKED\fP, \fBTASK_SLEEP\fP, \fBTASK_STOPPED\fP, \fBTASK_TIMEOUT\fP, \fBTASK_STATES\fP }"
.br
.RI "\fIEnumerated type that defines the different running states of the system. \fP"
.ti -1c
.RI "enum \fBTASK_PRIORITY\fP { \fBTASK_PRI_IDLE\fP =  0, \fBTASK_PRI_LOW\fP, \fBTASK_PRI_MED\fP, \fBTASK_PRI_HIGH\fP, \fBTASK_PRI_MAX\fP =  255 }"
.br
.RI "\fITask priority enumeration - basic definitions for simple systems. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Description: Definition of the task class, used by all of the kernel API's. 
.SH "Define Documentation"
.PP 
.SS "#define TIME_FOREVER   ((USHORT)65535)"
.PP
Definition of the infinite timeout interval of the system. 
.SH "Typedef Documentation"
.PP 
.SS "typedef void(* \fBTASK_FUNC\fP)(void *pvThis_)"
.PP
Task exection function type definition. 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBTASK_PRIORITY\fP"
.PP
Task priority enumeration - basic definitions for simple systems. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fITASK_PRI_IDLE \fP\fP
.TP
\fB\fITASK_PRI_LOW \fP\fP
.TP
\fB\fITASK_PRI_MED \fP\fP
.TP
\fB\fITASK_PRI_HIGH \fP\fP
.TP
\fB\fITASK_PRI_MAX \fP\fP

.SS "enum \fBTASK_STATE\fP"
.PP
Enumerated type that defines the different running states of the system. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fITASK_UNINIT \fP\fP
.TP
\fB\fITASK_READY \fP\fP
.TP
\fB\fITASK_BLOCKED \fP\fP
.TP
\fB\fITASK_SLEEP \fP\fP
.TP
\fB\fITASK_STOPPED \fP\fP
.TP
\fB\fITASK_TIMEOUT \fP\fP
.TP
\fB\fITASK_STATES \fP\fP

.SH "Author"
.PP 
Generated automatically by Doxygen for FunkOS++ from the source code.
