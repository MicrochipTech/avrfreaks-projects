.TH "C:/Projects/R3/kernel/watchdog.c" 3 "20 Mar 2010" "Version R3" "FunkOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Projects/R3/kernel/watchdog.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'types.h'\fP
.br
\fC#include 'watchdog.h'\fP
.br
\fC#include 'kernelwdt.h'\fP
.br
\fC#include 'kernelcfg.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBWatchdog_Init\fP (void)"
.br
.ti -1c
.RI "BOOL \fBWatchdog_AddTask\fP (\fBWATCHDOG_TASK\fP *pstTask_, USHORT usTime_)"
.br
.ti -1c
.RI "void \fBWatchdog_RemoveTask\fP (\fBWATCHDOG_TASK\fP *pstTask_)"
.br
.ti -1c
.RI "void \fBWatchdog_StartTask\fP (\fBWATCHDOG_TASK\fP *pstTask_)"
.br
.ti -1c
.RI "void \fBWatchdog_IdleTask\fP (\fBWATCHDOG_TASK\fP *pstTask_)"
.br
.ti -1c
.RI "void \fBWatchdog_Tick\fP (void)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Description: Portable multitasking watchdog timer implementation. Allows for the system watchdog kick to only trigger when every task meets its deadlines. Can be configured to 
.SH "Function Documentation"
.PP 
.SS "BOOL Watchdog_AddTask (\fBWATCHDOG_TASK\fP * pstTask_, USHORT usTime_)"Adds a watchdog timer object to the watchdog task list.
.PP
\fBParameters:\fP
.RS 4
\fIpstTask_\fP - pointer to the watchdog task structure 
.br
\fIusTime_\fP - the task expiry timeout interval 
.RE
.PP
\fBReturns:\fP
.RS 4
BOOL - TRUE on success, FALSE on list full 
.RE
.PP

.SS "void Watchdog_IdleTask (\fBWATCHDOG_TASK\fP * pstTask_)"\fBParameters:\fP
.RS 4
\fIpstTask_\fP - sets the specified watchdog object into its idle state 
.RE
.PP

.SS "void Watchdog_Init (void)"Initializes the watchdog timer object list to an initialized state. 
.SS "void Watchdog_RemoveTask (\fBWATCHDOG_TASK\fP * pstTask_)"Removes the specified watchdog task from the watch list.
.PP
\fBParameters:\fP
.RS 4
\fIpstTask_\fP - Pointer to the watchdog task object 
.RE
.PP

.SS "void Watchdog_StartTask (\fBWATCHDOG_TASK\fP * pstTask_)"Enables a watchdog object. Once enabled, the owner task is obliged to meet the deadline it specified when it was added to the list.
.PP
\fBParameters:\fP
.RS 4
\fIpstTask_\fP - 
.RE
.PP

.SS "void Watchdog_Tick (void)"Controls the system watchdog kick, by ensuring none exceed their deadlines. Called at a regular frequency. Every active timer object in the list is incremented, and if any task has exceeded its deadline time, the function will *not* kick the system WDT - oherwise, the watchdog is kicked. This is especially useful for debugging, where details about the offending task can be logged by the KernelWDT module instead of causing the WDT to expire. 
.SH "Author"
.PP 
Generated automatically by Doxygen for FunkOS from the source code.
