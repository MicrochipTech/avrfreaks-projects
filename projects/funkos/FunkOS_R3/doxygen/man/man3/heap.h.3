.TH "C:/Projects/R3/kernel/heap.h" 3 "20 Mar 2010" "Version R3" "FunkOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Projects/R3/kernel/heap.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kernelcfg.h'\fP
.br
\fC#include 'types.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBHEAP_BLOCK_STRUCT\fP"
.br
.RI "\fI< Defines the structure of a heap block \fP"
.ti -1c
.RI "struct \fBHEAP_STRUCT\fP"
.br
.RI "\fI< Defines the structure of the heap as a whole \fP"
.ti -1c
.RI "struct \fBHEAP_INIT_STRUCT\fP"
.br
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBNUM_BLOCK_SIZES\fP   (5)"
.br
.ti -1c
.RI "#define \fBELEMENT_SIZE_1\fP   (8)"
.br
.ti -1c
.RI "#define \fBELEMENT_SIZE_2\fP   (12)"
.br
.ti -1c
.RI "#define \fBELEMENT_SIZE_3\fP   (16)"
.br
.ti -1c
.RI "#define \fBELEMENT_SIZE_4\fP   (32)"
.br
.ti -1c
.RI "#define \fBELEMENT_SIZE_5\fP   (64)"
.br
.ti -1c
.RI "#define \fBNUM_BLOCK_1\fP   (10)"
.br
.ti -1c
.RI "#define \fBNUM_BLOCK_2\fP   (6)"
.br
.ti -1c
.RI "#define \fBNUM_BLOCK_3\fP   (4)"
.br
.ti -1c
.RI "#define \fBNUM_BLOCK_4\fP   (2)"
.br
.ti -1c
.RI "#define \fBNUM_BLOCK_5\fP   (1)"
.br
.ti -1c
.RI "#define \fBHEAP_NUM_ELEMENTS\fP   (NUM_BLOCK_1 + NUM_BLOCK_2 + NUM_BLOCK_3 + NUM_BLOCK_4 + NUM_BLOCK_5)"
.br
.ti -1c
.RI "#define \fBSIZE_BLOCK_1\fP   (ELEMENT_SIZE_1 * NUM_BLOCK_1)"
.br
.ti -1c
.RI "#define \fBSIZE_BLOCK_2\fP   (ELEMENT_SIZE_2 * NUM_BLOCK_2)"
.br
.ti -1c
.RI "#define \fBSIZE_BLOCK_3\fP   (ELEMENT_SIZE_3 * NUM_BLOCK_3)"
.br
.ti -1c
.RI "#define \fBSIZE_BLOCK_4\fP   (ELEMENT_SIZE_4 * NUM_BLOCK_4)"
.br
.ti -1c
.RI "#define \fBSIZE_BLOCK_5\fP   (ELEMENT_SIZE_5 * NUM_BLOCK_5)"
.br
.ti -1c
.RI "#define \fBHEAP_SIZE_BYTES\fP   (SIZE_BLOCK_1 + SIZE_BLOCK_2 + SIZE_BLOCK_3 +SIZE_BLOCK_4 + SIZE_BLOCK_5)"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBHeap_Init\fP (void)"
.br
.ti -1c
.RI "UCHAR * \fBHeap_Alloc\fP (USHORT usSize_)"
.br
.ti -1c
.RI "void \fBHeap_Free\fP (void *pvData_)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Description: static block-size heap configuration 
.SH "Define Documentation"
.PP 
.SS "#define ELEMENT_SIZE_1   (8)"
.SS "#define ELEMENT_SIZE_2   (12)"
.SS "#define ELEMENT_SIZE_3   (16)"
.SS "#define ELEMENT_SIZE_4   (32)"
.SS "#define ELEMENT_SIZE_5   (64)"
.SS "#define HEAP_NUM_ELEMENTS   (NUM_BLOCK_1 + NUM_BLOCK_2 + NUM_BLOCK_3 + NUM_BLOCK_4 + NUM_BLOCK_5)"
.SS "#define HEAP_SIZE_BYTES   (SIZE_BLOCK_1 + SIZE_BLOCK_2 + SIZE_BLOCK_3 +SIZE_BLOCK_4 + SIZE_BLOCK_5)"
.SS "#define NUM_BLOCK_1   (10)"
.SS "#define NUM_BLOCK_2   (6)"
.SS "#define NUM_BLOCK_3   (4)"
.SS "#define NUM_BLOCK_4   (2)"
.SS "#define NUM_BLOCK_5   (1)"
.SS "#define NUM_BLOCK_SIZES   (5)"
.SS "#define SIZE_BLOCK_1   (ELEMENT_SIZE_1 * NUM_BLOCK_1)"
.SS "#define SIZE_BLOCK_2   (ELEMENT_SIZE_2 * NUM_BLOCK_2)"
.SS "#define SIZE_BLOCK_3   (ELEMENT_SIZE_3 * NUM_BLOCK_3)"
.SS "#define SIZE_BLOCK_4   (ELEMENT_SIZE_4 * NUM_BLOCK_4)"
.SS "#define SIZE_BLOCK_5   (ELEMENT_SIZE_5 * NUM_BLOCK_5)"
.SH "Function Documentation"
.PP 
.SS "UCHAR* Heap_Alloc (USHORT usSize_)"Allocates a single block of memory from the heap based on the required size (if one is available).
.PP
\fBParameters:\fP
.RS 4
\fIusSize_\fP - the size of the block to allocate 
.RE
.PP
\fBReturns:\fP
.RS 4
pointer to the block of newly-allocated memory, or NULL on failure 
.RE
.PP

.SS "void Heap_Free (void * pvData_)"De-allocates a previously allocated block of memory based on the address given.
.PP
\fBParameters:\fP
.RS 4
\fIpvData_\fP - pointer to the previously-allocated memory block 
.RE
.PP

.SS "void Heap_Init (void)"Initializes each heap block header and zeros out the memory pool used for dynamic memory allocation. 
.SH "Author"
.PP 
Generated automatically by Doxygen for FunkOS from the source code.
