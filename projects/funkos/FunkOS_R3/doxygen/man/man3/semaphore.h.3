.TH "C:/Projects/R3/kernel/semaphore.h" 3 "20 Mar 2010" "Version R3" "FunkOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Projects/R3/kernel/semaphore.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'types.h'\fP
.br
\fC#include 'task.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBSEMAPHORE_STRUCT\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBSemaphore_Init\fP (\fBSEMAPHORE_STRUCT\fP *pstSem_)"
.br
.ti -1c
.RI "BOOL \fBSemaphore_Pend\fP (\fBSEMAPHORE_STRUCT\fP *pstSem_, USHORT usTime_)"
.br
.ti -1c
.RI "void \fBSemaphore_Post\fP (\fBSEMAPHORE_STRUCT\fP *pstSem_)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Description: Declaration of binary semaphore API for FunkOS 
.SH "Function Documentation"
.PP 
.SS "void Semaphore_Init (\fBSEMAPHORE_STRUCT\fP * pstSem_)"Initialize a binary semaphore by setting the semaphore value to 0 and emptying the task list. Run this function for each semaphore prior to use.
.PP
\fBParameters:\fP
.RS 4
\fIpstSem_\fP - pointer to the semaphore to initialize 
.RE
.PP

.PP
< set this manually to implement counting semaphores. 
.SS "BOOL Semaphore_Pend (\fBSEMAPHORE_STRUCT\fP * pstSem_, USHORT usTime_)"Signal a task to wait for a semaphore. If the semaphore is not available, the task will block and wait until the semaphore becomes available.
.PP
\fBParameters:\fP
.RS 4
\fIpstSem_\fP - pointer to the semaphore to pend on 
.br
\fIusTime_\fP - the time limit to wait for the semaphore. Integer number of ticks or TIME_FOREVER 
.RE
.PP
\fBReturns:\fP
.RS 4
BOOL - TRUE on success, FALSE on timeout 
.RE
.PP

.PP
! Disable Scheduler !! 
.SS "void Semaphore_Post (\fBSEMAPHORE_STRUCT\fP * pstSem_)"Post (release) a semaphore. If there are other tasks waiting for this semaphore, the highest-priority task in the semaphore wait list will claim the semaphore and run.
.PP
\fBParameters:\fP
.RS 4
\fIpstSem_\fP - pointer to the semaphore to post 
.RE
.PP

.PP
! Disable scheduler + interrupts (callable from ISR) 
.SH "Author"
.PP 
Generated automatically by Doxygen for FunkOS from the source code.
