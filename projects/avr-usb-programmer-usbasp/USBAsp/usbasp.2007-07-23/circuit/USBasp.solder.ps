%!PS-Adobe-3.0 EPSF-3.0
%%Title: EAGLE Drawing E:/Personal/Projects/Eagle/usbasp - SMD/USBasp.brd
%%Creator: EAGLE
%%Pages: 1
%%BoundingBox: 0 0 576 810
%%EndComments

% Coordinate transfer:

/EU { 254 div 0.072 mul } def
/inch { 72 mul } def

% Linestyle:

1 setlinecap
1 setlinejoin

% Drawing functions:

/l {  % draw a line
   /lw exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   newpath
   x1 EU y1 EU moveto
   x2 EU y2 EU lineto
   lw EU setlinewidth
   stroke
   } def

/h {  % draw a hole
   /d  exch def
   /y  exch def
   /x  exch def
   d 0 gt {
     newpath
     x EU y EU d 2 div EU 0 360 arc
     currentgray dup
     1 exch sub setgray
     fill
     setgray
     } if
   } def

/b {  % draw a bar
   /an exch def
   /y2 exch def
   /x2 exch def
   /y1 exch def
   /x1 exch def
   /w2 x2 x1 sub 2 div EU def
   /h2 y2 y1 sub 2 div EU def
   gsave
   x1 x2 add 2 div EU y1 y2 add 2 div EU translate
   an rotate
   newpath
   w2     h2     moveto
   w2 neg h2     lineto
   w2 neg h2 neg lineto
   w2     h2 neg lineto
   closepath
   fill
   grestore
   } def

/c {  % draw a circle
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   newpath
   lw EU setlinewidth
   x EU y EU rd EU 0 360 arc
   stroke
   } def

/a {  % draw an arc
   /lc exch def
   /ae exch def
   /as exch def
   /lw exch def
   /rd exch def
   /y  exch def
   /x  exch def
   lw rd 2 mul gt {
     /rd rd lw 2 div add 2 div def
     /lw rd 2 mul def
     } if
   currentlinecap currentlinejoin
   lc setlinecap 0 setlinejoin
   newpath
   lw EU setlinewidth
   x EU y EU rd EU as ae arc
   stroke
   setlinejoin setlinecap
   } def

/p {  % draw a pie
   /d exch def
   /y exch def
   /x exch def
   newpath
   x EU y EU d 2 div EU 0 360 arc
   fill
   } def

/edge { 0.20710678119 mul } def

/o {  % draw an octagon
   /an exch def
   /dy exch def
   /dx exch def
   /y  exch def
   /x  exch def
   gsave
   x EU y EU translate
   an dx dy lt { 90 add /dx dy /dy dx def def } if rotate
   newpath
      0 dx 2 div sub EU                    0 dy edge  add EU moveto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div add EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div add EU lineto
      0 dx 2 div add EU                    0 dy edge  add EU lineto
      0 dx 2 div add EU                    0 dy edge  sub EU lineto
      0 dx dy sub 2 div add dy edge add EU 0 dy 2 div sub EU lineto
      0 dx dy sub 2 div sub dy edge sub EU 0 dy 2 div sub EU lineto
      0 dx 2 div sub EU                    0 dy edge  sub EU lineto
   closepath
   fill
   grestore
   } def

% the real drawing size:

/MinDrawX      0 EU def
/MinDrawY      0 EU def
/MaxDrawX 694015 EU def
/MaxDrawY 357631 EU def

% the usable page size:

/LeftMargin 0.25 inch def  % change these if drawing gets clipped!
/BotMargin  0.25 inch def
/PageWidth   7.7500 inch def
/PageHeight 11.0000 inch def

% are we going to rotate?:

/RotateDrawing 0 0 ne def

% Media size functions:

/AbortMessage {  % Show a message in a box and stop printing
   /h 100 def
   /Courier findfont 12 scalefont setfont
   mediawidth pagemargin sub h 1 setpage
   newpath
   0 0 moveto
   0 h rlineto
   mediawidth pagemargin sub 0 rlineto
   0 h neg rlineto
   closepath
   5 setlinewidth
   stroke
   newpath 50 60 moveto (ERROR: Jobsize exceeds physical printing area!) show
   newpath 50 40 moveto (       Job has been aborted!) show
   showpage
   stop
   } def

/SelectPage {  % Select the page identified by Row and Column
   /Column exch def
   /Row    exch def

   % the actually exposed area (if the machine knows these parameters!):

   /DrawX MaxDrawX MinDrawX sub def
   /DrawY MaxDrawY MinDrawY sub def
   statusdict /setpage known
   statusdict /mediawidth known and
   statusdict /medialength known and
   statusdict /pagemargin known and {
      % this is for machines that can tell the media size:
      statusdict begin
         /MediaW mediawidth pagemargin sub def
         DrawX DrawY ge {
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            }{
            DrawY MediaW le DrawX medialength le and {
               MediaW DrawX 0 setpage
               0 MediaW DrawY sub 2 div translate
               }{
            DrawX MediaW le DrawY medialength le and {
               MediaW DrawY 1 setpage
               MediaW DrawX sub 2 div 0 translate
               }{
               AbortMessage
               } ifelse
               } ifelse
            } ifelse
         end
      }{
      % this is for machines that can NOT tell the media size:
      % (Ghostscript doesn't like this!)
      /Product product length string def
      /i 0 def
      product { dup 97 lt { 32 add } if Product exch i exch put /i i 1 add def } forall 
      Product (ghostscript) search dup /IsGhostscript exch def
      { pop pop } if
      pop
      IsGhostscript not {
         statusdict /setpage known {
            statusdict begin
               RotateDrawing {
                  LeftMargin PageHeight add BotMargin DrawY add
                  }{
                  BotMargin DrawY add LeftMargin DrawX add 
                  } ifelse
               0 setpage
               end
            } if
         } if
      % set clipping boundary:
      newpath
      LeftMargin BotMargin moveto
      0 PageHeight rlineto
      PageWidth  0 rlineto
      0 PageHeight neg rlineto
      closepath
      clip
      % set the origin:
      LeftMargin BotMargin translate
      RotateDrawing {
         0 PageHeight translate
         -90 rotate
         PageHeight Column mul neg PageWidth Row mul neg translate
         }{
         PageWidth Column mul neg PageHeight Row mul neg translate
         } ifelse
      } ifelse
   % move the lower left corner of the drawing to the origin:
   MinDrawX neg MinDrawY neg translate
   
   % Linestyle:
   
   1 setlinecap
   1 setlinejoin
   
   % invert drawing:
   newpath
   MinDrawX MinDrawY moveto
   MaxDrawX MinDrawY lineto
   MaxDrawX MaxDrawY lineto
   MinDrawX MaxDrawY lineto
   0 setgray
   closepath fill
   1 setgray
   
   } def

% TheDrawing

gsave 0 0 SelectPage
2660 2674 691435 2674 0 l
691435 2674 691435 354974 0 l
691435 354974 2660 354974 0 l
2660 354974 2660 2674 0 l
311855 258199 15240 p
360115 258199 15240 p
631260 128024 16256 16256 0.0 o
605860 128024 16256 16256 0.0 o
631260 153424 16256 16256 0.0 o
605860 153424 16256 16256 0.0 o
631260 178824 16256 16256 0.0 o
605860 178824 16256 16256 0.0 o
631260 204224 16256 16256 0.0 o
605860 204224 16256 16256 0.0 o
631260 229624 16256 16256 0.0 o
605860 229624 16256 16256 0.0 o
551885 216924 15240 28448 0.0 o
526485 216924 15240 28448 0.0 o
501085 216924 15240 28448 0.0 o
475685 216924 15240 28448 0.0 o
450285 216924 15240 28448 0.0 o
424885 216924 15240 28448 0.0 o
399485 216924 15240 28448 0.0 o
374085 216924 15240 28448 0.0 o
348685 216924 15240 28448 0.0 o
323285 216924 15240 28448 0.0 o
297885 216924 15240 28448 0.0 o
272485 216924 15240 28448 0.0 o
247085 216924 15240 28448 0.0 o
221685 216924 15240 28448 0.0 o
221685 140724 15240 28448 0.0 o
247085 140724 15240 28448 0.0 o
272485 140724 15240 28448 0.0 o
297885 140724 15240 28448 0.0 o
323285 140724 15240 28448 0.0 o
348685 140724 15240 28448 0.0 o
374085 140724 15240 28448 0.0 o
399485 140724 15240 28448 0.0 o
424885 140724 15240 28448 0.0 o
450285 140724 15240 28448 0.0 o
475685 140724 15240 28448 0.0 o
501085 140724 15240 28448 0.0 o
526485 140724 15240 28448 0.0 o
551885 140724 15240 28448 0.0 o
110560 239024 35192 p
110560 118624 35192 p
157660 191324 16312 p
137660 191324 16312 p
157660 166324 16312 p
137660 166324 16312 p
176094 207908 191126 225940 0.0 b
195094 207908 210126 225940 0.0 b
176094 233308 191126 251340 0.0 b
195094 233308 210126 251340 0.0 b
176069 179308 191101 197340 270.0 b
176069 160308 191101 178340 270.0 b
341169 80933 356201 98965 90.0 b
341169 99933 356201 117965 90.0 b
410994 179333 426026 197365 180.0 b
391994 179333 407026 197365 180.0 b
393135 86749 15240 15240 0.0 o
418535 86749 15240 15240 0.0 o
415360 267724 15240 15240 0.0 o
440760 267724 15240 15240 0.0 o
369744 233833 384776 250865 90.0 b
369744 252833 384776 269865 90.0 b
287194 233833 302226 250865 90.0 b
287194 252833 302226 269865 90.0 b
360244 100458 375276 117490 0.0 b
379244 100458 394276 117490 0.0 b
147594 111358 175126 157390 90.0 b
147594 47858 175126 93890 90.0 b
493594 179333 508626 197365 0.0 b
512594 179333 527626 197365 0.0 b
135960 267724 15240 15240 0.0 o
135960 216924 15240 15240 0.0 o
161360 267724 15240 15240 0.0 o
161360 216924 15240 15240 0.0 o
491560 105799 30480 16256 180.0 o
491560 80399 30480 16256 180.0 o
456635 80399 30480 16256 0.0 o
456635 105799 30480 16256 0.0 o
250260 80399 30480 16256 0.0 o
250260 105799 30480 16256 0.0 o
214169 96758 229201 114790 270.0 b
214169 77758 229201 95790 270.0 b
showpage grestore
