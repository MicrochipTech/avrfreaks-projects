/*****************************************************
Chip type           : ATmega32
Program type        : Application
Clock frequency     : 12.000000 MHz
Memory model        : Small
External SRAM size  : 0
Data Stack size     : 512
*****************************************************/
#include <mega32.h>
#include <delay.h>   
flash unsigned char PicData[14][24]=
	{
		{0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0xFF,0xFF,0xFF,0xC1,0x3F,0x7F,0xFF,0xF,0xC7,0x33,0x39,0xF1,0xC7,0xE,0xF8,0x0,0x80,0x0},
		{0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xF9,0xF9,0xF7,0xF3,0xF,0xC6,0xF1,0x3C,0x39,0xF8,0xF0,0xC7,0x1,0x4C,0xB1,0x41,0x87,0xE},
		{0x7F,0x9F,0xBF,0x9F,0xCF,0xEF,0xCF,0xCF,0xCF,0x1,0x60,0x83,0xF,0x9E,0x3E,0x9F,0xF,0x83,0x60,0xB2,0x4D,0xB2,0x4D,0xB2},
		{0xE0,0x9F,0x7F,0xFF,0x7F,0x9F,0xEF,0xF3,0xF3,0xFC,0x80,0x1,0x2,0xD,0x12,0xD,0x32,0xD,0x12,0xD,0x2,0xD,0x2,0x81},
		{0xFF,0x1F,0xE3,0xFC,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x1F,0x1C,0x1C,0x1C,0x1C,0x1C,0x1C,0x3,0xC,0x3,0x1},
		{0x7,0xF8,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x1F,0x0,0x38,0x3C,0x7C,0x3C,0x7C,0x3C,0x7C,0x3C,0x64,0x18,0x4,0x1B},
		{0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x3F,0x3,0x0,0x38,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,0xF8,0x20,0xD8,0x20,0x18,0x6},
		{0xF8,0xF7,0xCF,0xCF,0xCF,0xCF,0xF7,0xE7,0xF8,0xFF,0x7E,0xF8,0xF8,0xF0,0xF0,0xC0,0x0,0x0,0xE0,0x30,0xB8,0x38,0x3E,0xB7},
		{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x9F,0xF6,0xFF,0xFF,0xFF,0xFF,0xB3,0xFF,0xFC,0x33,0xFE,0xF9,0xF7,0x70,0x79},
		{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xCF,0xF9,0xFF,0xFF,0xFF,0x7F,0xCF,0xF9,0xFF,0x1F,0xFF,0xF0,0xF3,0x7D,0x99,0x3E,0xFE},
		{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x7C,0xFF,0xFF,0x9F,0xF3,0xFF,0xFE,0xFF,0x1F,0xFF,0xF0,0x73,0x7C,0x9D,0x1E,0xFF,0x30,0x1F},
		{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0x3F,0xFF,0xF3,0x3F,0xFF,0xFF,0xFF,0x18,0xF3,0x7C,0x9F,0x1E,0xFF,0x18,0x1F,0x0,0x0},
		{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x33,0xFF,0xFF,0xFF,0xFB,0x9F,0xFC,0x4,0x3F,0x9F,0xE4,0x7,0xFC,0x0,0x0,0x0},
		{0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xE7,0xFF,0xFF,0xFF,0xFF,0x3F,0xF9,0xFF,0xFF,0xC3,0xDF,0xE7,0xC3,0xFF,0x0,0x0,0x0}
	};
	
	
unsigned char satr=0;/*„ €Ì— ‘„«—‰œÂ ”ÿ—*/
unsigned char hour=12,minute=58,second=30,weekday=6,monthday=7,monthyear=5,timedigit[9];
unsigned int year=1386;
unsigned char char1;
unsigned char char2;

interrupt [TIM1_OVF] void timer1_ovf_isr(void)
{
   unsigned char i=0;
   TCNT1H=0xd1;
   TCNT1L=0x1f;  
   PORTB.0=1;//OE inactive    

   PORTD=0xff-PicData[0][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;          
                         
   PORTD=0xff-PicData[1][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;              
   
   PORTD=0xff-PicData[2][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;                      
   
   PORTD=0xff-PicData[3][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;      

   PORTD=0xff-PicData[4][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;   
                               
   PORTD=0xff-PicData[5][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;

   PORTD=0xff-PicData[6][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;

   PORTD=0xff-PicData[7][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;

   PORTD=0xff-PicData[8][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;     

   PORTD=0xff-PicData[9][satr];
   PORTC=0x20|i;       
   PORTC=PORTC|0x30;
   i++;                      
   
   PORTD=0xff-PicData[10][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;

   PORTD=0xff-PicData[11][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;

   PORTD=0xff-PicData[12][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;

   PORTD=0xff-PicData[13][satr];
   PORTC=0x20|i;
   PORTC=PORTC|0x30;
   i++;
     
   PORTB.0=0;   
   PORTC=satr;
   satr++;   
   if(satr==24)
      satr=0; 
}

// Timer 2 overflow interrupt service routine
interrupt [TIM2_OVF] void timer2_ovf_isr(void)
{                                             
            
}

// Declare your global variables here
void main(void)
{
// Declare your local variables here

// Input/Output Ports initialization
// Port A initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTA=0x00;
DDRA=0xff;

// Port B initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTB=0x00;
DDRB=0x01;

// Port C initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTC=0x00;
DDRC=0xff;

// Port D initialization
// Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In 
// State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T 
PORTD=0x00;
DDRD=0xff;

// Timer/Counter 0 initialization
// Clock source: System Clock
// Clock value: Timer 0 Stopped
// Mode: Normal top=FFh
// OC0 output: Disconnected
TCCR0=0x00;
TCNT0=0x00;
OCR0=0x00;

// Timer/Counter 1 initialization
// Clock source: System Clock
// Clock value: Timer 1 Stopped
// Mode: Normal top=FFFFh
// OC1A output: Discon.
// OC1B output: Discon.
// Noise Canceler: Off
// Input Capture on Falling Edge
// Timer 1 Overflow Interrupt: Off
// Input Capture Interrupt: Off
// Compare A Match Interrupt: Off
// Compare B Match Interrupt: Off

TCCR1A=0x00;
TCCR1B=0x81;
TCNT1H=0xa2;
TCNT1L=0x3f;
ICR1H=0x00;
ICR1L=0x00;
OCR1AH=0x00;
OCR1AL=0x00;
OCR1BH=0x00;
OCR1BL=0x00;

// Timer/Counter 2 initialization
// Clock source: TOSC1 pin
// Clock value: PCK2/128
// Mode: Normal top=FFh
// OC2 output: Disconnected
ASSR=0x08;
TCCR2=0x05;
TCNT2=0x00;
OCR2=0x00;

// External Interrupt(s) initialization
// INT0: Off
// INT1: Off
// INT2: Off
MCUCR=0x00;
MCUCSR=0x00;

// Timer(s)/Counter(s) Interrupt(s) initialization
TIMSK=0x44;

// Analog Comparator initialization
// Analog Comparator: Off
// Analog Comparator Input Capture by Timer/Counter 1: Off
ACSR=0x80;
SFIOR=0x00;

// Global enable interrupts
#asm("sei")

while (1);

}
