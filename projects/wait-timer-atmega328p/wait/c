#include "wait.h"

void waitMillis(long x){
	for ( ; x >= 0; x--){
		COUNTER = 0;				//reset the counter 
		while (COUNTER <= TPMS){	
									//wait until the appropriate number of ticks
									//have elapsed
		}
	}
}

void waitSeconds(long x){
	for ( ; x >= 0; x--){
		waitMillis(1000);
	}
}

void waitMinutes(long x){
	for ( ; x >= 0; x--){
		waitSeconds(60);
	}
}

void waitHours(long x){
	for ( ; x >= 0; x--){
		waitMinutes(60);
	}
}

void waitDays(long x){
	for ( ; x >= 0; x--){
		waitHours(24);
	}
}

void waitYears(long x){
	for ( ; x >= 0; x--){
		waitHours(8766);			//in an attempt to account for leap years 
									//I'm delegating to void waitHours(long)
									//instead of void waitDays(long)
	}
}

void initTimer(void){
	TIMER_OFF;						//reset the timer
	#if defined (SCALER)			//make sure the scaler is set
		#if SCALER == 0x1
			SCALER_1_SET;			//config timer with scaler 1
		#elif SCALER == 0x8
			SCALER_8_SET;			//config timer with scaler 8
		#elif SCALER == 0x40
			SCALER_64_SET;			//config timer with scaler 64
		#elif SCALER == 0x100
			SCALER_256_SET;			//config timer with scaler 256
		#elif SCALER == 0x400
			SCALER_1024_SET			//config timer with scaler 1024
		#endif
	#else
		SCALER_1_SET				//config timer with scaler 1
	#endif
}
