
AVRASM ver. 1.52  CONTER.asm Sat May 26 10:28:04 2007


         ;CodeVisionAVR C Compiler V1.24.0 Standard
         ;(C) Copyright 1998-2003 HP InfoTech s.r.l.
         ;http://www.hpinfotech.ro
         ;e-mail:office@hpinfotech.ro
         
         ;Chip type           : ATmega128
         ;Program type        : Application
         ;Clock frequency     : 16.000000 MHz
         ;Memory model        : Small
         ;Optimize for        : Size
         ;(s)printf features  : int, width
         ;(s)scanf features   : long, width
         ;External SRAM size  : 0
         ;Data Stack size     : 1024 byte(s)
         ;Heap size           : 0 byte(s)
         ;Promote char to int : No
         ;char is unsigned    : Yes
         ;8 bit enums         : Yes
         ;Enhanced core instructions    : On
         ;Automatic register allocation : On
         ;Use AVR Studio 3 Terminal I/O   : No
         
          	.LISTMAC
          	.EQU UDRE=0x5
          	.EQU RXC=0x7
          	.EQU USR=0xB
          	.EQU UDR=0xC
          	.EQU EERE=0x0
          	.EQU EEWE=0x1
          	.EQU EEMWE=0x2
          	.EQU SPSR=0xE
          	.EQU SPDR=0xF
          	.EQU EECR=0x1C
          	.EQU EEDR=0x1D
          	.EQU EEARL=0x1E
          	.EQU EEARH=0x1F
          	.EQU WDTCR=0x21
          	.EQU MCUCR=0x35
          	.EQU RAMPZ=0x3B
          	.EQU SPL=0x3D
          	.EQU SPH=0x3E
          	.EQU SREG=0x3F
          	.EQU XMCRA=0x6D
          	.EQU XMCRB=0x6C
         
          	.DEF R0X0=R0
          	.DEF R0X1=R1
          	.DEF R0X2=R2
          	.DEF R0X3=R3
          	.DEF R0X4=R4
          	.DEF R0X5=R5
          	.DEF R0X6=R6
          	.DEF R0X7=R7
          	.DEF R0X8=R8
          	.DEF R0X9=R9
          	.DEF R0XA=R10
          	.DEF R0XB=R11
          	.DEF R0XC=R12
          	.DEF R0XD=R13
          	.DEF R0XE=R14
          	.DEF R0XF=R15
          	.DEF R0X10=R16
          	.DEF R0X11=R17
          	.DEF R0X12=R18
          	.DEF R0X13=R19
          	.DEF R0X14=R20
          	.DEF R0X15=R21
          	.DEF R0X16=R22
          	.DEF R0X17=R23
          	.DEF R0X18=R24
          	.DEF R0X19=R25
          	.DEF R0X1A=R26
          	.DEF R0X1B=R27
          	.DEF R0X1C=R28
          	.DEF R0X1D=R29
          	.DEF R0X1E=R30
          	.DEF R0X1F=R31
         
          	.EQU __se_bit=0x20
          	.EQU __sm_mask=0x1C
          	.EQU __sm_adc_noise_red=0x08
          	.EQU __sm_powerdown=0x10
          	.EQU __sm_powersave=0x18
          	.EQU __sm_standby=0x14
          	.EQU __sm_ext_standby=0x1C
         
          	.MACRO __CPD1N
          	CPI  R30,LOW(@0)
          	LDI  R26,HIGH(@0)
          	CPC  R31,R26
          	LDI  R26,BYTE3(@0)
          	CPC  R22,R26
          	LDI  R26,BYTE4(@0)
          	CPC  R23,R26
          	.ENDM
         
          	.MACRO __CPD2N
          	CPI  R26,LOW(@0)
          	LDI  R30,HIGH(@0)
          	CPC  R27,R30
          	LDI  R30,BYTE3(@0)
          	CPC  R24,R30
          	LDI  R30,BYTE4(@0)
          	CPC  R25,R30
          	.ENDM
         
          	.MACRO __CPWRR
          	CP   R@0,R@2
          	CPC  R@1,R@3
          	.ENDM
         
          	.MACRO __CPWRN
          	CPI  R@0,LOW(@2)
          	LDI  R30,HIGH(@2)
          	CPC  R@1,R30
          	.ENDM
         
          	.MACRO __ADDD1N
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	SBCI R22,BYTE3(-@0)
          	SBCI R23,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __ADDD2N
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	SBCI R24,BYTE3(-@0)
          	SBCI R25,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __SUBD1N
          	SUBI R30,LOW(@0)
          	SBCI R31,HIGH(@0)
          	SBCI R22,BYTE3(@0)
          	SBCI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __SUBD2N
          	SUBI R26,LOW(@0)
          	SBCI R27,HIGH(@0)
          	SBCI R24,BYTE3(@0)
          	SBCI R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ANDD1N
          	ANDI R30,LOW(@0)
          	ANDI R31,HIGH(@0)
          	ANDI R22,BYTE3(@0)
          	ANDI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ORD1N
          	ORI  R30,LOW(@0)
          	ORI  R31,HIGH(@0)
          	ORI  R22,BYTE3(@0)
          	ORI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __DELAY_USB
          	LDI  R24,LOW(@0)
          __DELAY_USB_LOOP:
          	DEC  R24
          	BRNE __DELAY_USB_LOOP
          	.ENDM
         
          	.MACRO __DELAY_USW
          	LDI  R24,LOW(@0)
          	LDI  R25,HIGH(@0)
          __DELAY_USW_LOOP:
          	SBIW R24,1
          	BRNE __DELAY_USW_LOOP
          	.ENDM
         
          	.MACRO __CLRD1S
          	CLR  R30
          	STD  Y+@0,R30
          	STD  Y+@0+1,R30
          	STD  Y+@0+2,R30
          	STD  Y+@0+3,R30
          	.ENDM
         
          	.MACRO __GETD1S
          	LDD  R30,Y+@0
          	LDD  R31,Y+@0+1
          	LDD  R22,Y+@0+2
          	LDD  R23,Y+@0+3
          	.ENDM
         
          	.MACRO __PUTD1S
          	STD  Y+@0,R30
          	STD  Y+@0+1,R31
          	STD  Y+@0+2,R22
          	STD  Y+@0+3,R23
          	.ENDM
         
          	.MACRO __POINTB1MN
          	LDI  R30,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1MN
          	LDI  R30,LOW(@0+@1)
          	LDI  R31,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1FN
          	LDI  R30,LOW(2*@0+@1)
          	LDI  R31,HIGH(2*@0+@1)
          	.ENDM
         
          	.MACRO __POINTB2MN
          	LDI  R26,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW2MN
          	LDI  R26,LOW(@0+@1)
          	LDI  R27,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __GETD1N
          	LDI  R30,LOW(@0)
          	LDI  R31,HIGH(@0)
          	LDI  R22,BYTE3(@0)
          	LDI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2N
          	LDI  R26,LOW(@0)
          	LDI  R27,HIGH(@0)
          	LDI  R24,BYTE3(@0)
          	LDI  R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2S
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	LDD  R24,Y+@0+2
          	LDD  R25,Y+@0+3
          	.ENDM
         
          	.MACRO __GETB1MN
          	LDS  R30,@0+@1
          	.ENDM
         
          	.MACRO __GETW1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	LDS  R22,@0+@1+2
          	LDS  R23,@0+@1+3
          	.ENDM
         
          	.MACRO __GETBRMN
          	LDS  R@2,@0+@1
          	.ENDM
         
          	.MACRO __GETWRMN
          	LDS  R@2,@0+@1
          	LDS  R@3,@0+@1+1
          	.ENDM
         
          	.MACRO __GETB2MN
          	LDS  R26,@0+@1
          	.ENDM
         
          	.MACRO __GETW2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	LDS  R24,@0+@1+2
          	LDS  R25,@0+@1+3
          	.ENDM
         
          	.MACRO __PUTB1MN
          	STS  @0+@1,R30
          	.ENDM
         
          	.MACRO __PUTW1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	.ENDM
         
          	.MACRO __PUTD1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	STS  @0+@1+2,R22
          	STS  @0+@1+3,R23
          	.ENDM
         
          	.MACRO __PUTBMRN
          	STS  @0+@1,R@2
          	.ENDM
         
          	.MACRO __PUTWMRN
          	STS  @0+@1,R@2
          	STS  @0+@1+1,R@3
          	.ENDM
         
          	.MACRO __GETW1R
          	MOV  R30,R@0
          	MOV  R31,R@1
          	.ENDM
         
          	.MACRO __GETW2R
          	MOV  R26,R@0
          	MOV  R27,R@1
          	.ENDM
         
          	.MACRO __GETWRN
          	LDI  R@0,LOW(@2)
          	LDI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __PUTW1R
          	MOV  R@0,R30
          	MOV  R@1,R31
          	.ENDM
         
          	.MACRO __PUTW2R
          	MOV  R@0,R26
          	MOV  R@1,R27
          	.ENDM
         
          	.MACRO __ADDWRN
          	SUBI R@0,LOW(-@2)
          	SBCI R@1,HIGH(-@2)
          	.ENDM
         
          	.MACRO __ADDWRR
          	ADD  R@0,R@2
          	ADC  R@1,R@3
          	.ENDM
         
          	.MACRO __SUBWRN
          	SUBI R@0,LOW(@2)
          	SBCI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __SUBWRR
          	SUB  R@0,R@2
          	SBC  R@1,R@3
          	.ENDM
         
          	.MACRO __ANDWRN
          	ANDI R@0,LOW(@2)
          	ANDI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ANDWRR
          	AND  R@0,R@2
          	AND  R@1,R@3
          	.ENDM
         
          	.MACRO __ORWRN
          	ORI  R@0,LOW(@2)
          	ORI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ORWRR
          	OR   R@0,R@2
          	OR   R@1,R@3
          	.ENDM
         
          	.MACRO __EORWRR
          	EOR  R@0,R@2
          	EOR  R@1,R@3
          	.ENDM
         
          	.MACRO __GETWRS
          	LDD  R@0,Y+@2
          	LDD  R@1,Y+@2+1
          	.ENDM
         
          	.MACRO __PUTWSR
          	STD  Y+@2,R@0
          	STD  Y+@2+1,R@1
          	.ENDM
         
          	.MACRO __MOVEWRR
          	MOV  R@0,R@2
          	MOV  R@1,R@3
          	.ENDM
         
          	.MACRO __INWR
          	IN   R@0,@2
          	IN   R@1,@2+1
          	.ENDM
         
          	.MACRO __OUTWR
          	OUT  @2+1,R@1
          	OUT  @2,R@0
          	.ENDM
         
          	.MACRO __CALL1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	ICALL
          	.ENDM
         
          	.MACRO __NBST
          	BST  R@0,@1
          	IN   R30,SREG
          	LDI  R31,0x40
          	EOR  R30,R31
          	OUT  SREG,R30
          	.ENDM
         
         
          	.MACRO __PUTB1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __GETB1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R30,Z
          	.ENDM
         
          	.MACRO __GETW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R31,Z
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __GETD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R1,Z+
          	LD   R22,Z+
          	LD   R23,Z
          	MOVW R30,R0
          	.ENDM
         
          	.MACRO __GETB2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R26,X
          	.ENDM
         
          	.MACRO __GETW2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	.ENDM
         
          	.MACRO __GETD2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R1,X+
          	LD   R24,X+
          	LD   R25,X
          	MOVW R26,R0
          	.ENDM
         
          	.MACRO __GETBRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@1)
          	SBCI R31,HIGH(-@1)
          	LD   R@0,Z
          	.ENDM
         
          	.MACRO __GETWRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	LD   R@0,Z+
          	LD   R@1,Z
          	.ENDM
         
          	.MACRO __LSLW8SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R31,Z
          	CLR  R30
          	.ENDM
         
          	.MACRO __PUTB1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __CLRW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __CLRD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __PUTB2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R26
          	.ENDM
         
          	.MACRO __PUTW2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z+,R26
          	ST   Z,R27
          	.ENDM
         
          	.MACRO __PUTBSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTWSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	ST   Z+,R@0
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTB1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __MULBRR
          	MULS R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __MULBRRU
          	MUL  R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.CSEG
          	.ORG 0
         
          	.INCLUDE "CONTER.vec"
         
         ;INTERRUPT VECTORS
000000 940c 008d 	JMP  __RESET
000002 940c 0000 	JMP  0
000004 940c 0000 	JMP  0
000006 940c 0000 	JMP  0
000008 940c 0000 	JMP  0
00000a 940c 0000 	JMP  0
00000c 940c 0000 	JMP  0
00000e 940c 0000 	JMP  0
000010 940c 0000 	JMP  0
000012 940c 0000 	JMP  0
000014 940c 0000 	JMP  0
000016 940c 0000 	JMP  0
000018 940c 0000 	JMP  0
00001a 940c 0000 	JMP  0
00001c 940c 0000 	JMP  0
00001e 940c 0000 	JMP  0
000020 940c 0000 	JMP  0
000022 940c 0000 	JMP  0
000024 940c 0000 	JMP  0
000026 940c 0000 	JMP  0
000028 940c 0000 	JMP  0
00002a 940c 0000 	JMP  0
00002c 940c 0000 	JMP  0
00002e 940c 0000 	JMP  0
000030 940c 0000 	JMP  0
000032 940c 0000 	JMP  0
000034 940c 0000 	JMP  0
000036 940c 0000 	JMP  0
000038 940c 0000 	JMP  0
00003a 940c 0000 	JMP  0
00003c 940c 0000 	JMP  0
00003e 940c 0000 	JMP  0
000040 940c 0000 	JMP  0
000042 940c 0000 	JMP  0
000044 940c 0000 	JMP  0
         
          	.INCLUDE "CONTER.inc"
          _0x32:
          	.DB  0x0,0x0
000046 0000
          	.DB  0x0,0x0
000047 0000
          	.DB  0x0,0x0
000048 0000
          	.DB  0x0,0x0
000049 0000
          	.DB  0x0,0x0
00004a 0000
          	.DB  0x0,0x0
00004b 0000
          _0x43:
          	.DB  0x0,0x0
00004c 0000
          	.DB  0x0,0x0
00004d 0000
          	.DB  0x0,0x0
00004e 0000
          	.DB  0x0,0x0
00004f 0000
          	.DB  0x0,0x0
000050 0000
          	.DB  0x0,0x0
000051 0000
          	.DB  0x0,0x0
000052 0000
          	.DB  0x0,0x0
000053 0000
          	.DB  0x0,0x0
000054 0000
          	.DB  0x0,0x0
000055 0000
          	.DB  0x0,0x0
000056 0000
          	.DB  0x0,0x0
000057 0000
          	.DB  0x0,0x0
000058 0000
          	.DB  0x0,0x0
000059 0000
          	.DB  0x0,0x0
00005a 0000
          	.DB  0x0,0x0
00005b 0000
          	.DB  0x0,0x0
00005c 0000
          	.DB  0x0,0x0
00005d 0000
          _66:
          	.DB  0x20,0x63,0x6D,0x0
00005e 6320
00005f 006d
          __fround_G2:
          	.DW  0xE148,0x3EFA,0xCCCD,0x3D4C,0xD70A,0x3BA3,0x126F,0x3A03,0xB717,0x3851,0xC5AC,0x36A7
000060 e148
000061 3efa
000062 cccd
000063 3d4c
000064 d70a
000065 3ba3
000066 126f
000067 3a03
000068 b717
000069 3851
00006a c5ac
00006b 36a7
          	.DEF _key_flag=R4
          _0xE8:
          	.DB  0x10,0x18
00006c 1810
          	.DB  0x1C,0x1E
00006d 1e1c
          	.DB  0x1C,0x18
00006e 181c
          	.DB  0x10,0x0
00006f 0010
          	.DB  0xF,0x9
000070 090f
          	.DB  0x9,0x9
000071 0909
          	.DB  0x9,0x9
000072 0909
          	.DB  0xF,0x0
000073 000f
          	.DB  0x8,0x8
000074 0808
          	.DB  0x8,0xE
000075 0e08
          	.DB  0x8,0x8
000076 0808
          	.DB  0x8,0x0
000077 0008
          	.DB  0x1,0x2
000078 0201
          	.DB  0x4,0x8
000079 0804
          	.DB  0x0,0x0
00007a 0000
          	.DB  0xF,0x0
00007b 000f
          	.DB  0x10,0x8
00007c 0810
          	.DB  0x4,0x2
00007d 0204
          	.DB  0x0,0x0
00007e 0000
          	.DB  0x1E,0x0
00007f 001e
          	.DB  0xF,0x8
000080 080f
          	.DB  0x8,0xF
000081 0f08
          	.DB  0x8,0x8
000082 0808
          	.DB  0xF,0x0
000083 000f
          	.DB  0x4,0x4
000084 0404
          	.DB  0x4,0x1C
000085 1c04
          	.DB  0x4,0x4
000086 0404
          	.DB  0x4,0x0
000087 0004
          	.DB  0x1,0x3
000088 0301
          	.DB  0x7,0xF
000089 0f07
          	.DB  0x7,0x3
00008a 0307
          	.DB  0x1,0x0
00008b 0001
         
          __GLOBAL_INI_TBL:
          	.DW  0
00008c 0000
         
          __RESET:
00008d 94f8      	CLI
00008e 27ee      	CLR  R30
00008f bbec      	OUT  EECR,R30
         
         ;INTERRUPT VECTORS ARE PLACED
         ;AT THE START OF FLASH
000090 e0f1      	LDI  R31,1
000091 bff5      	OUT  MCUCR,R31
000092 bfe5      	OUT  MCUCR,R30
000093 93e0 006c 	STS  XMCRB,R30
000095 bfeb      	OUT  RAMPZ,R30
         
         ;DISABLE WATCHDOG
000096 e1f8      	LDI  R31,0x18
000097 bdf1      	OUT  WDTCR,R31
000098 e1f0      	LDI  R31,0x10
000099 bdf1      	OUT  WDTCR,R31
         
         ;CLEAR R2-R14
00009a e08d      	LDI  R24,13
00009b e0a2      	LDI  R26,2
00009c 27bb      	CLR  R27
          __CLEAR_REG:
00009d 93ed      	ST   X+,R30
00009e 958a      	DEC  R24
00009f f7e9      	BRNE __CLEAR_REG
         
         ;CLEAR SRAM
0000a0 e080      	LDI  R24,LOW(0x1000)
0000a1 e190      	LDI  R25,HIGH(0x1000)
0000a2 e0a0      	LDI  R26,LOW(0x100)
0000a3 e0b1      	LDI  R27,HIGH(0x100)
          __CLEAR_SRAM:
0000a4 93ed      	ST   X+,R30
0000a5 9701      	SBIW R24,1
0000a6 f7e9      	BRNE __CLEAR_SRAM
         
         ;GLOBAL VARIABLES INITIALIZATION
0000a7 e1e8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000a8 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
          __GLOBAL_INI_NEXT:
0000a9 9005      	LPM  R0,Z+
0000aa 9015      	LPM  R1,Z+
0000ab 01bf      	MOVW R22,R30
0000ac 01f0      	MOVW R30,R0
0000ad 9730      	SBIW R30,0
0000ae f051      	BREQ __GLOBAL_INI_END
0000af 91a5      	LPM  R26,Z+
0000b0 91b5      	LPM  R27,Z+
0000b1 9185      	LPM  R24,Z+
0000b2 9195      	LPM  R25,Z+
          __GLOBAL_INI_LOOP:
0000b3 9005      	LPM  R0,Z+
0000b4 920d      	ST   X+,R0
0000b5 9701      	SBIW R24,1
0000b6 f7e1      	BRNE __GLOBAL_INI_LOOP
0000b7 01fb      	MOVW R30,R22
0000b8 cff0      	RJMP __GLOBAL_INI_NEXT
          __GLOBAL_INI_END:
         
         ;STACK POINTER INITIALIZATION
0000b9 efef      	LDI  R30,LOW(0x10FF)
0000ba bfed      	OUT  SPL,R30
0000bb e1e0      	LDI  R30,HIGH(0x10FF)
0000bc bfee      	OUT  SPH,R30
         
         ;DATA STACK POINTER INITIALIZATION
0000bd e0c0      	LDI  R28,LOW(0x500)
0000be e0d5      	LDI  R29,HIGH(0x500)
         
0000bf 940c 012e 	JMP  _main
         
          	.ESEG
          	.ORG 0
         
          	.DSEG
          	.ORG 0x500
         ;       1 #include <mega128.h>
         ;       2 #include <stdlib.h>
         ;       3 #include <ok128.h>
         ;       4 #include <delay.h>
         ;       5   
         ;       6 #define FALSE	0
         ;       7 #define TRUE	1
         ;       8 
         ;       9 #define ON	1
         ;      10 #define OFF	0	
         ;      11 
         ;      12 #define SONAR_IN	PINB.5 
         ;      13 #define SONAR_OUT	PORTB.4
         ;      14 #define CRYSTAL	16000000
         ;      15 
         ;      16 
         ;      17 void setupSonar(void)
         ;      18 {
         
          	.CSEG
          _setupSonar:
         ;      19 	DDRB.4 = 1;		//trigger as output
0000c1 9abc      	SBI  0x17,4
         ;      20 	DDRB.5 = 0;		//input pin
0000c2 98bd      	CBI  0x17,5
         ;      21 	PORTB.5 = 1;		//pull up?
0000c3 9ac5      	SBI  0x18,5
         ;      22 }
0000c4 9508      	RET
         ;      23            
         ;      24 unsigned long int readSonar(void)
         ;      25 {	
          _readSonar:
         ;      26 	unsigned long int data = 0;
         ;      27 	unsigned long int count = 0;  	
         ;      28 	double time = 0;
         ;      29       
         ;      30  	//DDRB &= 0xFF;
         ;      31   
         ;      32 	SONAR_OUT = ON;
0000c5 972c      	SBIW R28,12
0000c6 e08c      	LDI  R24,12
0000c7 27aa      	CLR  R26
0000c8 27bb      	CLR  R27
0000c9 e8ec      	LDI  R30,LOW(_0x32*2)
0000ca e0f0      	LDI  R31,HIGH(_0x32*2)
0000cb 940e 0582 	CALL __INITLOCB
         ;	data -> Y+8
         ;	count -> Y+4
         ;	time -> Y+0
0000cd 9ac4      	SBI  0x18,4
         ;      33 	delay_us(10);	
0000ce   +  	__DELAY_USB 53
0000ce e385      	LDI  R24,LOW(0x35)
          __DELAY_USB_LOOP:
0000cf 958a      	DEC  R24
0000d0 f7f1      	BRNE __DELAY_USB_LOOP
          	.ENDM
         ;      34 	SONAR_OUT = OFF;
0000d1 98c4      	CBI  0x18,4
         ;      35 
         ;      36 	//PORTB.6 = ON;     	
         ;      37 	
         ;      38 	while(SONAR_IN == OFF)
          _0x33:
0000d2 99b5      	SBIC 0x16,5
0000d3 c012      	RJMP _0x35
         ;      39 	{	
         ;      40 		data++;
0000d4 d1c9      	RCALL SUBOPT_0x0
         ;      41 		
         ;      42 		if (data >= 4294967295)
0000d5 f078      	BRLO _0x36
         ;      43 		{
         ;      44 			count++;
0000d6 d1df      	RCALL SUBOPT_0x1
         ;      45 			data = 0;   
0000d7   +  	__CLRD1S 8
0000d7 27ee      	CLR  R30
0000d8 87e8      	STD  Y+0x8,R30
0000d9 87e9      	STD  Y+0x8+1,R30
0000da 87ea      	STD  Y+0x8+2,R30
0000db 87eb      	STD  Y+0x8+3,R30
          	.ENDM
         ;      46 			
         ;      47 			if (count > 1 || data > 576000) return 0; //sensor is not attached or obstacles out of range
0000dc d1e6      	RCALL SUBOPT_0x2
0000dd f010      	BRLO _0x38
0000de d1ef      	RCALL SUBOPT_0x3
0000df f428      	BRSH _0x37
          _0x38:
0000e0   +  	__GETD1N 0x0
0000e0 e0e0      	LDI  R30,LOW(0x0)
0000e1 e0f0      	LDI  R31,HIGH(0x0)
0000e2 e060      	LDI  R22,BYTE3(0x0)
0000e3 e070      	LDI  R23,BYTE4(0x0)
          	.ENDM
0000e4 c03b      	RJMP _0x18F
         ;      48 		} 				  
          _0x37:
         ;      49 	}			
          _0x36:
0000e5 cfec      	RJMP _0x33
          _0x35:
         ;      50 	
         ;      51 	data = 0; 
0000e6   +  	__CLRD1S 8
0000e6 27ee      	CLR  R30
0000e7 87e8      	STD  Y+0x8,R30
0000e8 87e9      	STD  Y+0x8+1,R30
0000e9 87ea      	STD  Y+0x8+2,R30
0000ea 87eb      	STD  Y+0x8+3,R30
          	.ENDM
         ;      52 	count = 0 ;
0000eb   +  	__CLRD1S 4
0000eb 27ee      	CLR  R30
0000ec 83ec      	STD  Y+0x4,R30
0000ed 83ed      	STD  Y+0x4+1,R30
0000ee 83ee      	STD  Y+0x4+2,R30
0000ef 83ef      	STD  Y+0x4+3,R30
          	.ENDM
         ;      53 	
         ;      54     	while(SONAR_IN == ON)
          _0x3A:
0000f0 9bb5      	SBIS 0x16,5
0000f1 c012      	RJMP _0x3C
         ;      55     	{
         ;      56 		data++; 		
0000f2 d1ab      	RCALL SUBOPT_0x0
         ;      57 			
         ;      58 	    	if (data >= 4294967295)
0000f3 f078      	BRLO _0x3D
         ;      59 		{			
         ;      60 			count++;
0000f4 d1c1      	RCALL SUBOPT_0x1
         ;      61 
         ;      62 			if (count > 1 || data > 576000) return 0; //sensor is not attached or obstacles out of range
0000f5 d1cd      	RCALL SUBOPT_0x2
0000f6 f010      	BRLO _0x3F
0000f7 d1d6      	RCALL SUBOPT_0x3
0000f8 f428      	BRSH _0x3E
          _0x3F:
0000f9   +  	__GETD1N 0x0
0000f9 e0e0      	LDI  R30,LOW(0x0)
0000fa e0f0      	LDI  R31,HIGH(0x0)
0000fb e060      	LDI  R22,BYTE3(0x0)
0000fc e070      	LDI  R23,BYTE4(0x0)
          	.ENDM
0000fd c022      	RJMP _0x18F
         ;      63 			
         ;      64 			data = 0;      
          _0x3E:
0000fe   +  	__CLRD1S 8
0000fe 27ee      	CLR  R30
0000ff 87e8      	STD  Y+0x8,R30
000100 87e9      	STD  Y+0x8+1,R30
000101 87ea      	STD  Y+0x8+2,R30
000102 87eb      	STD  Y+0x8+3,R30
          	.ENDM
         ;      65 		} 
         ;      66     	}   	
          _0x3D:
000103 cfec      	RJMP _0x3A
          _0x3C:
         ;      67 	    	
         ;      68     	time = ((count * 4294967295) + data)/(2) ;
000104   +  	__GETD2S 4
000104 81ac      	LDD  R26,Y+0x4
000105 81bd      	LDD  R27,Y+0x4+1
000106 818e      	LDD  R24,Y+0x4+2
000107 819f      	LDD  R25,Y+0x4+3
          	.ENDM
000108   +  	__GETD1N 0xFFFFFFFF
000108 efef      	LDI  R30,LOW(0xffffffff)
000109 efff      	LDI  R31,HIGH(0xffffffff)
00010a ef6f      	LDI  R22,BYTE3(0xffffffff)
00010b ef7f      	LDI  R23,BYTE4(0xffffffff)
          	.ENDM
00010c 940e 0392 	CALL __MULD12U
00010e   +  	__GETD2S 8
00010e 85a8      	LDD  R26,Y+0x8
00010f 85b9      	LDD  R27,Y+0x8+1
000110 858a      	LDD  R24,Y+0x8+2
000111 859b      	LDD  R25,Y+0x8+3
          	.ENDM
000112 940e 0376 	CALL __ADDD21
000114 01fd      	MOVW R30,R26
000115 01bc      	MOVW R22,R24
000116 940e 0384 	CALL __LSRD1
000118 940e 044a 	CALL __CDF1U
00011a   +  	__PUTD1S 0
00011a 83e8      	STD  Y+0x0,R30
00011b 83f9      	STD  Y+0x0+1,R31
00011c 836a      	STD  Y+0x0+2,R22
00011d 837b      	STD  Y+0x0+3,R23
          	.ENDM
         ;      69     	//time = ((count * 4294967295) + data)/2;
         ;      70 	//PORTB.6 = OFF;
         ;      71 	    	
         ;      72     	return time;  	    	
00011e 940e 0419 	CALL __CFD1
          _0x18F:
000120 962c      	ADIW R28,12
000121 9508      	RET
         ;      73 }
         ;      74 
         ;      75 
         ;      76 float distance(void)
         ;      77 {
          _distance:
         ;      78 	return readSonar()/10;                  
000122 dfa2      	RCALL _readSonar
000123 01df      	MOVW R26,R30
000124 01cb      	MOVW R24,R22
000125   +  	__GETD1N 0xA
000125 e0ea      	LDI  R30,LOW(0xa)
000126 e0f0      	LDI  R31,HIGH(0xa)
000127 e060      	LDI  R22,BYTE3(0xa)
000128 e070      	LDI  R23,BYTE4(0xa)
          	.ENDM
000129 940e 03b2 	CALL __DIVD21U
00012b 940e 044a 	CALL __CDF1U
00012d 9508      	RET
         ;      79 }
         ;      80 
         ;      81 
         ;      82 void main(void)
         ;      83 {
          _main:
         ;      84 	double raw_time = 0;
         ;      85 	char	 buffer[32] = {NULL};
         ;      86 	int angka = 0;
         ;      87 	
         ;      88 	MCU_initialize();
00012e 97a4      	SBIW R28,36
00012f e284      	LDI  R24,36
000130 27aa      	CLR  R26
000131 27bb      	CLR  R27
000132 e9e8      	LDI  R30,LOW(_0x43*2)
000133 e0f0      	LDI  R31,HIGH(_0x43*2)
000134 940e 0582 	CALL __INITLOCB
         ;	raw_time -> Y+32
         ;	buffer -> Y+0
         ;	angka -> R16,R17
000136 e000      	LDI  R16,0
000137 e010      	LDI  R17,0
000138 d0f9      	RCALL _MCU_initialize
         ;      89 	delay_ms(50);
000139 d19f      	RCALL SUBOPT_0x4
         ;      90 	
         ;      91 	LCD_initialize();
00013a d13a      	RCALL _LCD_initialize
         ;      92 	LCD_clear();	
00013b d137      	RCALL _LCD_clear
         ;      93 
         ;      94 	setupSonar(); 
00013c df84      	RCALL _setupSonar
         ;      95 
         ;      96 	while(1)
          _0x44:
         ;      97 	{
         ;      98 		//raw_time = readSonar();
         ;      99 		//delay_ms(50);   
         ;     100 		
         ;     101 		//ftoa(raw_time, 2, buffer);
         ;     102 		//delay_ms(50);
         ;     103 		
         ;     104 		//LCD_puts(buffer);					
         ;     105 
         ;     106 		ftoa(distance(), 2, buffer);
00013d dfe4      	RCALL _distance
00013e 940e 03de 	CALL __PUTPARD1
000140 e0e2      	LDI  R30,LOW(2)
000141 93ea      	ST   -Y,R30
000142 01fe      	MOVW R30,R28
000143 9635      	ADIW R30,5
000144 93fa      	ST   -Y,R31
000145 93ea      	ST   -Y,R30
000146 d01d      	RCALL _ftoa
         ;     107 		delay_ms(50);		
000147 d191      	RCALL SUBOPT_0x4
         ;     108 		LCD16_gotxy_ok128(0, 1);
000148 27ee      	CLR  R30
000149 27ff      	CLR  R31
00014a 93fa      	ST   -Y,R31
00014b 93ea      	ST   -Y,R30
00014c e0e1      	LDI  R30,LOW(1)
00014d e0f0      	LDI  R31,HIGH(1)
00014e 93fa      	ST   -Y,R31
00014f 93ea      	ST   -Y,R30
000150 d136      	RCALL _LCD16_gotxy_ok128
         ;     109 		LCD_puts(buffer);		
000151 01fe      	MOVW R30,R28
000152 93fa      	ST   -Y,R31
000153 93ea      	ST   -Y,R30
000154 d115      	RCALL _LCD_puts
         ;     110 		LCD_putsf(" cm");
000155   +  	__POINTW1FN _66,0
000155 ebec      	LDI  R30,LOW(2*_66+0x0)
000156 e0f0      	LDI  R31,HIGH(2*_66+0x0)
          	.ENDM
000157 93fa      	ST   -Y,R31
000158 93ea      	ST   -Y,R30
000159 d105      	RCALL _LCD_putsf
         ;     111 		
         ;     112 		delay_ms(100);		
00015a e6e4      	LDI  R30,LOW(100)
00015b e0f0      	LDI  R31,HIGH(100)
00015c 93fa      	ST   -Y,R31
00015d 93ea      	ST   -Y,R30
00015e 940e 032c 	CALL _delay_ms
         ;     113 		LCD_clear();
000160 d112      	RCALL _LCD_clear
         ;     114 	}	
000161 cfdb      	RJMP _0x44
         ;     115 		
         ;     116 }
000162 96a4      	ADIW R28,36
          _0x47:
000163 cfff      	RJMP _0x47
         ;     117 
         ;     118 
         ;     119 //Buat debug
         ;     120 /*
         ;     121 	while(1)
         ;     122 	{
         ;     123 		if (SONAR_IN == ON)
         ;     124 		{
         ;     125 			angka++;
         ;     126 			itoa(angka,buffer);
         ;     127 			LCD_clear();
         ;     128 			LCD_puts(buffer);
         ;     129 			delay_ms(500);
         ;     130 			
         ;     131 		}
         ;     132 	} 
         ;     133 */
          _ftoa:
000164 9726      	SBIW R28,6
000165   +  	__GETD2S 9
000165 85a9      	LDD  R26,Y+0x9
000166 85ba      	LDD  R27,Y+0x9+1
000167 858b      	LDD  R24,Y+0x9+2
000168 859c      	LDD  R25,Y+0x9+3
          	.ENDM
000169 940e 056b 	CALL __CPD20
00016b f46c      	BRGE _0x70
00016c   +  	__GETD1S 9
00016c 85e9      	LDD  R30,Y+0x9
00016d 85fa      	LDD  R31,Y+0x9+1
00016e 856b      	LDD  R22,Y+0x9+2
00016f 857c      	LDD  R23,Y+0x9+3
          	.ENDM
000170 940e 03f0 	CALL __ANEGF1
000172   +  	__PUTD1S 9
000172 87e9      	STD  Y+0x9,R30
000173 87fa      	STD  Y+0x9+1,R31
000174 876b      	STD  Y+0x9+2,R22
000175 877c      	STD  Y+0x9+3,R23
          	.ENDM
000176 d168      	RCALL SUBOPT_0x5
000177 e2ed      	LDI  R30,LOW(45)
000178 93ec      	ST   X,R30
          _0x70:
000179 85e8      	LDD  R30,Y+8
00017a 93ea      	ST   -Y,R30
00017b e0e5      	LDI  R30,LOW(5)
00017c 93ea      	ST   -Y,R30
00017d 940e 0326 	CALL _cmin
00017f 87e8      	STD  Y+8,R30
000180 eca0      	LDI  R26,LOW(__fround_G2*2)
000181 e0b0      	LDI  R27,HIGH(__fround_G2*2)
000182 27ff      	CLR  R31
000183 0fee      	LSL  R30
000184 1fff      	ROL  R31
000185 0fee      	LSL  R30
000186 1fff      	ROL  R31
000187 0fea      	ADD  R30,R26
000188 1ffb      	ADC  R31,R27
000189 940e 03d8 	CALL __GETD1PF
00018b   +  	__GETD2S 9
00018b 85a9      	LDD  R26,Y+0x9
00018c 85ba      	LDD  R27,Y+0x9+1
00018d 858b      	LDD  R24,Y+0x9+2
00018e 859c      	LDD  R25,Y+0x9+3
          	.ENDM
00018f 940e 048a 	CALL __ADDF12
000191   +  	__PUTD1S 9
000191 87e9      	STD  Y+0x9,R30
000192 87fa      	STD  Y+0x9+1,R31
000193 876b      	STD  Y+0x9+2,R22
000194 877c      	STD  Y+0x9+3,R23
          	.ENDM
000195 27ee      	CLR  R30
000196 83e9      	STD  Y+1,R30
000197   +  	__GETD1N 0x3F800000
000197 e0e0      	LDI  R30,LOW(0x3f800000)
000198 e0f0      	LDI  R31,HIGH(0x3f800000)
000199 e860      	LDI  R22,BYTE3(0x3f800000)
00019a e37f      	LDI  R23,BYTE4(0x3f800000)
          	.ENDM
00019b   +  	__PUTD1S 2
00019b 83ea      	STD  Y+0x2,R30
00019c 83fb      	STD  Y+0x2+1,R31
00019d 836c      	STD  Y+0x2+2,R22
00019e 837d      	STD  Y+0x2+3,R23
          	.ENDM
          _0x71:
00019f   +  	__GETD1S 2
00019f 81ea      	LDD  R30,Y+0x2
0001a0 81fb      	LDD  R31,Y+0x2+1
0001a1 816c      	LDD  R22,Y+0x2+2
0001a2 817d      	LDD  R23,Y+0x2+3
          	.ENDM
0001a3   +  	__GETD2S 9
0001a3 85a9      	LDD  R26,Y+0x9
0001a4 85ba      	LDD  R27,Y+0x9+1
0001a5 858b      	LDD  R24,Y+0x9+2
0001a6 859c      	LDD  R25,Y+0x9+3
          	.ENDM
0001a7 940e 054b 	CALL __CMPF12
0001a9 f090      	BRLO _0x73
0001aa   +  	__GETD2S 2
0001aa 81aa      	LDD  R26,Y+0x2
0001ab 81bb      	LDD  R27,Y+0x2+1
0001ac 818c      	LDD  R24,Y+0x2+2
0001ad 819d      	LDD  R25,Y+0x2+3
          	.ENDM
0001ae   +  	__GETD1N 0x41200000
0001ae e0e0      	LDI  R30,LOW(0x41200000)
0001af e0f0      	LDI  R31,HIGH(0x41200000)
0001b0 e260      	LDI  R22,BYTE3(0x41200000)
0001b1 e471      	LDI  R23,BYTE4(0x41200000)
          	.ENDM
0001b2 940e 04d8 	CALL __MULF12
0001b4   +  	__PUTD1S 2
0001b4 83ea      	STD  Y+0x2,R30
0001b5 83fb      	STD  Y+0x2+1,R31
0001b6 836c      	STD  Y+0x2+2,R22
0001b7 837d      	STD  Y+0x2+3,R23
          	.ENDM
0001b8 81e9      	LDD  R30,Y+1
0001b9 5fef      	SUBI R30,-LOW(1)
0001ba 83e9      	STD  Y+1,R30
0001bb cfe3      	RJMP _0x71
          _0x73:
0001bc 81e9      	LDD  R30,Y+1
0001bd 30e0      	CPI  R30,0
0001be f421      	BRNE _0x74
0001bf d11f      	RCALL SUBOPT_0x5
0001c0 e3e0      	LDI  R30,LOW(48)
0001c1 93ec      	ST   X,R30
0001c2 c03d      	RJMP _0x75
          _0x74:
          _0x76:
0001c3 81e9      	LDD  R30,Y+1
0001c4 50e1      	SUBI R30,LOW(1)
0001c5 83e9      	STD  Y+1,R30
0001c6 5fef      	SUBI R30,-LOW(1)
0001c7 f1c1      	BREQ _0x78
0001c8   +  	__GETD2S 2
0001c8 81aa      	LDD  R26,Y+0x2
0001c9 81bb      	LDD  R27,Y+0x2+1
0001ca 818c      	LDD  R24,Y+0x2+2
0001cb 819d      	LDD  R25,Y+0x2+3
          	.ENDM
0001cc   +  	__GETD1N 0x41200000
0001cc e0e0      	LDI  R30,LOW(0x41200000)
0001cd e0f0      	LDI  R31,HIGH(0x41200000)
0001ce e260      	LDI  R22,BYTE3(0x41200000)
0001cf e471      	LDI  R23,BYTE4(0x41200000)
          	.ENDM
0001d0 940e 050a 	CALL __DIVF21
0001d2   +  	__GETD2N 0x3F000000
0001d2 e0a0      	LDI  R26,LOW(0x3f000000)
0001d3 e0b0      	LDI  R27,HIGH(0x3f000000)
0001d4 e080      	LDI  R24,BYTE3(0x3f000000)
0001d5 e39f      	LDI  R25,BYTE4(0x3f000000)
          	.ENDM
0001d6 940e 048a 	CALL __ADDF12
0001d8 940e 03de 	CALL __PUTPARD1
0001da 940e 036d 	CALL _floor
0001dc   +  	__PUTD1S 2
0001dc 83ea      	STD  Y+0x2,R30
0001dd 83fb      	STD  Y+0x2+1,R31
0001de 836c      	STD  Y+0x2+2,R22
0001df 837d      	STD  Y+0x2+3,R23
          	.ENDM
0001e0   +  	__GETD2S 9
0001e0 85a9      	LDD  R26,Y+0x9
0001e1 85ba      	LDD  R27,Y+0x9+1
0001e2 858b      	LDD  R24,Y+0x9+2
0001e3 859c      	LDD  R25,Y+0x9+3
          	.ENDM
0001e4 940e 050a 	CALL __DIVF21
0001e6 d0ff      	RCALL SUBOPT_0x6
0001e7 93ff      	PUSH R31
0001e8 93ef      	PUSH R30
0001e9 81e8      	LD   R30,Y
0001ea 5de0      	SUBI R30,-LOW(48)
0001eb 91af      	POP  R26
0001ec 91bf      	POP  R27
0001ed 93ec      	ST   X,R30
0001ee 81e8      	LD   R30,Y
0001ef   +  	__GETD2S 2
0001ef 81aa      	LDD  R26,Y+0x2
0001f0 81bb      	LDD  R27,Y+0x2+1
0001f1 818c      	LDD  R24,Y+0x2+2
0001f2 819d      	LDD  R25,Y+0x2+3
          	.ENDM
0001f3 27ff      	CLR  R31
0001f4 2766      	CLR  R22
0001f5 2777      	CLR  R23
0001f6 940e 044c 	CALL __CDF1
0001f8 940e 04d8 	CALL __MULF12
0001fa   +  	__GETD2S 9
0001fa 85a9      	LDD  R26,Y+0x9
0001fb 85ba      	LDD  R27,Y+0x9+1
0001fc 858b      	LDD  R24,Y+0x9+2
0001fd 859c      	LDD  R25,Y+0x9+3
          	.ENDM
0001fe d0f1      	RCALL SUBOPT_0x7
0001ff cfc3      	RJMP _0x76
          _0x78:
          _0x75:
000200 85e8      	LDD  R30,Y+8
000201 30e0      	CPI  R30,0
000202 f411      	BRNE _0x79
000203 d0f5      	RCALL SUBOPT_0x8
000204 c02b      	RJMP _0x18E
          _0x79:
000205 d0d9      	RCALL SUBOPT_0x5
000206 e2ee      	LDI  R30,LOW(46)
000207 93ec      	ST   X,R30
          _0x7A:
000208 85e8      	LDD  R30,Y+8
000209 50e1      	SUBI R30,LOW(1)
00020a 87e8      	STD  Y+8,R30
00020b 5fef      	SUBI R30,-LOW(1)
00020c f111      	BREQ _0x7C
00020d   +  	__GETD2S 9
00020d 85a9      	LDD  R26,Y+0x9
00020e 85ba      	LDD  R27,Y+0x9+1
00020f 858b      	LDD  R24,Y+0x9+2
000210 859c      	LDD  R25,Y+0x9+3
          	.ENDM
000211   +  	__GETD1N 0x41200000
000211 e0e0      	LDI  R30,LOW(0x41200000)
000212 e0f0      	LDI  R31,HIGH(0x41200000)
000213 e260      	LDI  R22,BYTE3(0x41200000)
000214 e471      	LDI  R23,BYTE4(0x41200000)
          	.ENDM
000215 940e 04d8 	CALL __MULF12
000217   +  	__PUTD1S 9
000217 87e9      	STD  Y+0x9,R30
000218 87fa      	STD  Y+0x9+1,R31
000219 876b      	STD  Y+0x9+2,R22
00021a 877c      	STD  Y+0x9+3,R23
          	.ENDM
00021b d0ca      	RCALL SUBOPT_0x6
00021c 93ff      	PUSH R31
00021d 93ef      	PUSH R30
00021e 81e8      	LD   R30,Y
00021f 5de0      	SUBI R30,-LOW(48)
000220 91af      	POP  R26
000221 91bf      	POP  R27
000222 93ec      	ST   X,R30
000223 81e8      	LD   R30,Y
000224   +  	__GETD2S 9
000224 85a9      	LDD  R26,Y+0x9
000225 85ba      	LDD  R27,Y+0x9+1
000226 858b      	LDD  R24,Y+0x9+2
000227 859c      	LDD  R25,Y+0x9+3
          	.ENDM
000228 27ff      	CLR  R31
000229 2766      	CLR  R22
00022a 2777      	CLR  R23
00022b 940e 044c 	CALL __CDF1
00022d d0c2      	RCALL SUBOPT_0x7
00022e cfd9      	RJMP _0x7A
          _0x7C:
00022f d0c9      	RCALL SUBOPT_0x8
          _0x18E:
000230 962d      	ADIW R28,13
000231 9508      	RET
          _MCU_initialize:
000232 e8e0      	LDI  R30,LOW(128)
000233 bfe5      	OUT  0x35,R30
000234 e4e4      	LDI  R30,LOW(68)
000235 93e0 006d 	STS  0x6D,R30
000237 e8e0      	LDI  R30,LOW(128)
000238 93e0 006c 	STS  0x6C,R30
00023a efef      	LDI  R30,LOW(255)
00023b bbe7      	OUT  0x17,R30
00023c 27ee      	CLR  R30
00023d bbe8      	OUT  0x18,R30
00023e efef      	LDI  R30,LOW(255)
00023f bbe1      	OUT  0x11,R30
000240 27ee      	CLR  R30
000241 bbe2      	OUT  0x12,R30
000242 e0ec      	LDI  R30,LOW(12)
000243 b9e2      	OUT  0x2,R30
000244 27ee      	CLR  R30
000245 b9e3      	OUT  0x3,R30
000246 93e0 0061 	STS  0x61,R30
000248 93e0 2200 	STS  0x2200,R30
00024a 9508      	RET
          _LCD_command:
00024b 27ee      	CLR  R30
00024c d0b1      	RCALL SUBOPT_0x9
00024d e0e1      	LDI  R30,LOW(1)
00024e 93e0 2100 	STS  0x2100,R30
000250 920f      	 PUSH  R0 
000251 900f      	 POP   R0 
000252 27ee      	CLR  R30
000253 d0b0      	RCALL SUBOPT_0xA
000254 9508      	RET
          _LCD_data:
000255 e0e2      	LDI  R30,LOW(2)
000256 d0a7      	RCALL SUBOPT_0x9
000257 e0e3      	LDI  R30,LOW(3)
000258 93e0 2100 	STS  0x2100,R30
00025a 920f      	 PUSH  R0 
00025b 900f      	 POP   R0 
00025c e0e2      	LDI  R30,LOW(2)
00025d d0a6      	RCALL SUBOPT_0xA
00025e 9508      	RET
          _LCD_putsf:
          _0xCF:
00025f 81e8      	LD   R30,Y
000260 81f9      	LDD  R31,Y+1
000261 91e4      	LPM  R30,Z
000262 30e0      	CPI  R30,0
000263 f029      	BREQ _0xD1
000264 81e8      	LD   R30,Y
000265 81f9      	LDD  R31,Y+1
000266 91e4      	LPM  R30,Z
000267 d0a4      	RCALL SUBOPT_0xB
000268 cff6      	RJMP _0xCF
          _0xD1:
000269 c007      	RJMP _0x18D
          _LCD_puts:
          _0xD3:
00026a 81a8      	LD   R26,Y
00026b 81b9      	LDD  R27,Y+1
00026c 91ec      	LD   R30,X
00026d 30e0      	CPI  R30,0
00026e f011      	BREQ _0xD5
00026f d09c      	RCALL SUBOPT_0xB
000270 cff9      	RJMP _0xD3
          _0xD5:
          _0x18D:
000271 9622      	ADIW R28,2
000272 9508      	RET
          _LCD_clear:
000273 d0a0      	RCALL SUBOPT_0xC
000274 9508      	RET
          _LCD_initialize:
000275 e0e3      	LDI  R30,LOW(3)
000276 93e0 2100 	STS  0x2100,R30
000278 e0e2      	LDI  R30,LOW(2)
000279 93e0 2100 	STS  0x2100,R30
00027b d0a1      	RCALL SUBOPT_0xD
00027c e3e8      	LDI  R30,LOW(56)
00027d 93ea      	ST   -Y,R30
00027e dfcc      	RCALL _LCD_command
00027f e0ec      	LDI  R30,LOW(12)
000280 93ea      	ST   -Y,R30
000281 dfc9      	RCALL _LCD_command
000282 e0e6      	LDI  R30,LOW(6)
000283 93ea      	ST   -Y,R30
000284 dfc6      	RCALL _LCD_command
000285 d08e      	RCALL SUBOPT_0xC
000286 9508      	RET
          _LCD16_gotxy_ok128:
000287 81e8      	LD   R30,Y
000288 81f9      	LDD  R31,Y+1
000289 9730      	SBIW R30,0
00028a f431      	BRNE _0xE4
00028b 81ea      	LDD  R30,Y+2
00028c 81fb      	LDD  R31,Y+2+1
00028d 58e0      	SUBI R30,LOW(-128)
00028e 4fff      	SBCI R31,HIGH(-128)
00028f d093      	RCALL SUBOPT_0xE
000290 c00b      	RJMP _0xE5
          _0xE4:
000291 81a8      	LD   R26,Y
000292 81b9      	LDD  R27,Y+1
000293 30a1      	CPI  R26,LOW(0x1)
000294 e0e0      	LDI  R30,HIGH(0x1)
000295 07be      	CPC  R27,R30
000296 f429      	BRNE _0xE6
000297 81ea      	LDD  R30,Y+2
000298 81fb      	LDD  R31,Y+2+1
000299 54e0      	SUBI R30,LOW(-192)
00029a 4fff      	SBCI R31,HIGH(-192)
00029b d087      	RCALL SUBOPT_0xE
          _0xE6:
          _0xE5:
00029c 9624      	ADIW R28,4
00029d 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x0:
00029e   +  	__GETD1S 8
00029e 85e8      	LDD  R30,Y+0x8
00029f 85f9      	LDD  R31,Y+0x8+1
0002a0 856a      	LDD  R22,Y+0x8+2
0002a1 857b      	LDD  R23,Y+0x8+3
          	.ENDM
0002a2   +  	__SUBD1N -1
0002a2 5fef      	SUBI R30,LOW(-0x1)
0002a3 4fff      	SBCI R31,HIGH(-0x1)
0002a4 4f6f      	SBCI R22,BYTE3(-0x1)
0002a5 4f7f      	SBCI R23,BYTE4(-0x1)
          	.ENDM
0002a6   +  	__PUTD1S 8
0002a6 87e8      	STD  Y+0x8,R30
0002a7 87f9      	STD  Y+0x8+1,R31
0002a8 876a      	STD  Y+0x8+2,R22
0002a9 877b      	STD  Y+0x8+3,R23
          	.ENDM
0002aa   +  	__GETD2S 8
0002aa 85a8      	LDD  R26,Y+0x8
0002ab 85b9      	LDD  R27,Y+0x8+1
0002ac 858a      	LDD  R24,Y+0x8+2
0002ad 859b      	LDD  R25,Y+0x8+3
          	.ENDM
0002ae   +  	__CPD2N 0xFFFFFFFF
0002ae 3faf      	CPI  R26,LOW(0xffffffff)
0002af efef      	LDI  R30,HIGH(0xffffffff)
0002b0 07be      	CPC  R27,R30
0002b1 efef      	LDI  R30,BYTE3(0xffffffff)
0002b2 078e      	CPC  R24,R30
0002b3 efef      	LDI  R30,BYTE4(0xffffffff)
0002b4 079e      	CPC  R25,R30
          	.ENDM
0002b5 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x1:
0002b6   +  	__GETD1S 4
0002b6 81ec      	LDD  R30,Y+0x4
0002b7 81fd      	LDD  R31,Y+0x4+1
0002b8 816e      	LDD  R22,Y+0x4+2
0002b9 817f      	LDD  R23,Y+0x4+3
          	.ENDM
0002ba   +  	__SUBD1N -1
0002ba 5fef      	SUBI R30,LOW(-0x1)
0002bb 4fff      	SBCI R31,HIGH(-0x1)
0002bc 4f6f      	SBCI R22,BYTE3(-0x1)
0002bd 4f7f      	SBCI R23,BYTE4(-0x1)
          	.ENDM
0002be   +  	__PUTD1S 4
0002be 83ec      	STD  Y+0x4,R30
0002bf 83fd      	STD  Y+0x4+1,R31
0002c0 836e      	STD  Y+0x4+2,R22
0002c1 837f      	STD  Y+0x4+3,R23
          	.ENDM
0002c2 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x2:
0002c3   +  	__GETD2S 4
0002c3 81ac      	LDD  R26,Y+0x4
0002c4 81bd      	LDD  R27,Y+0x4+1
0002c5 818e      	LDD  R24,Y+0x4+2
0002c6 819f      	LDD  R25,Y+0x4+3
          	.ENDM
0002c7   +  	__GETD1N 0x1
0002c7 e0e1      	LDI  R30,LOW(0x1)
0002c8 e0f0      	LDI  R31,HIGH(0x1)
0002c9 e060      	LDI  R22,BYTE3(0x1)
0002ca e070      	LDI  R23,BYTE4(0x1)
          	.ENDM
0002cb 940e 056f 	CALL __CPD12
0002cd 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x3:
0002ce   +  	__GETD2S 8
0002ce 85a8      	LDD  R26,Y+0x8
0002cf 85b9      	LDD  R27,Y+0x8+1
0002d0 858a      	LDD  R24,Y+0x8+2
0002d1 859b      	LDD  R25,Y+0x8+3
          	.ENDM
0002d2   +  	__GETD1N 0x8CA00
0002d2 e0e0      	LDI  R30,LOW(0x8ca00)
0002d3 ecfa      	LDI  R31,HIGH(0x8ca00)
0002d4 e068      	LDI  R22,BYTE3(0x8ca00)
0002d5 e070      	LDI  R23,BYTE4(0x8ca00)
          	.ENDM
0002d6 940e 056f 	CALL __CPD12
0002d8 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x4:
0002d9 e3e2      	LDI  R30,LOW(50)
0002da e0f0      	LDI  R31,HIGH(50)
0002db 93fa      	ST   -Y,R31
0002dc 93ea      	ST   -Y,R30
0002dd 940c 032c 	JMP  _delay_ms
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x5:
0002df 81ae      	LDD  R26,Y+6
0002e0 81bf      	LDD  R27,Y+6+1
0002e1 9611      	ADIW R26,1
0002e2 83ae      	STD  Y+6,R26
0002e3 83bf      	STD  Y+6+1,R27
0002e4 9711      	SBIW R26,1
0002e5 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x6:
0002e6 940e 0419 	CALL __CFD1
0002e8 83e8      	ST   Y,R30
0002e9 81ee      	LDD  R30,Y+6
0002ea 81ff      	LDD  R31,Y+6+1
0002eb 9631      	ADIW R30,1
0002ec 83ee      	STD  Y+6,R30
0002ed 83ff      	STD  Y+6+1,R31
0002ee 9731      	SBIW R30,1
0002ef 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x7:
0002f0 940e 03e3 	CALL __SWAPD12
0002f2 940e 0483 	CALL __SUBF12
0002f4   +  	__PUTD1S 9
0002f4 87e9      	STD  Y+0x9,R30
0002f5 87fa      	STD  Y+0x9+1,R31
0002f6 876b      	STD  Y+0x9+2,R22
0002f7 877c      	STD  Y+0x9+3,R23
          	.ENDM
0002f8 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x8:
0002f9 81ae      	LDD  R26,Y+6
0002fa 81bf      	LDD  R27,Y+6+1
0002fb 27ee      	CLR  R30
0002fc 93ec      	ST   X,R30
0002fd 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x9:
0002fe 93e0 2100 	STS  0x2100,R30
000300 81e8      	LD   R30,Y
000301 93e0 2000 	STS  0x2000,R30
000303 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0xA:
000304 93e0 2100 	STS  0x2100,R30
000306   +  	__DELAY_USW 200
000306 ec88      	LDI  R24,LOW(0xc8)
000307 e090      	LDI  R25,HIGH(0xc8)
          __DELAY_USW_LOOP:
000308 9701      	SBIW R24,1
000309 f7f1      	BRNE __DELAY_USW_LOOP
          	.ENDM
00030a 9621      	ADIW R28,1
00030b 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0xB:
00030c 93ea      	ST   -Y,R30
00030d df47      	RCALL _LCD_data
00030e 81e8      	LD   R30,Y
00030f 81f9      	LDD  R31,Y+1
000310 9631      	ADIW R30,1
000311 83e8      	ST   Y,R30
000312 83f9      	STD  Y+1,R31
000313 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0xC:
000314 e0e1      	LDI  R30,LOW(1)
000315 93ea      	ST   -Y,R30
000316 df34      	RCALL _LCD_command
000317 e0e2      	LDI  R30,LOW(2)
000318 e0f0      	LDI  R31,HIGH(2)
000319 93fa      	ST   -Y,R31
00031a 93ea      	ST   -Y,R30
00031b 940c 032c 	JMP  _delay_ms
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0xD:
00031d e0e2      	LDI  R30,LOW(2)
00031e e0f0      	LDI  R31,HIGH(2)
00031f 93fa      	ST   -Y,R31
000320 93ea      	ST   -Y,R30
000321 940c 032c 	JMP  _delay_ms
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0xE:
000323 93ea      	ST   -Y,R30
000324 df26      	RCALL _LCD_command
000325 cff7      	RJMP SUBOPT_0xD
         
          _cmin:
000326 91a9      	ld   r26,y+
000327 91e9      	ld   r30,y+
000328 17ea      	cp   r30,r26
000329 f00c      	brlt __cmin0
00032a 2fea      	mov  r30,r26
          __cmin0:
00032b 9508      	ret
         
          _delay_ms:
00032c 91e9      	ld   r30,y+
00032d 91f9      	ld   r31,y+
00032e 9630      	adiw r30,0
00032f f039      	breq __delay_ms1
          __delay_ms0:
000330   +  	__DELAY_USW 0xFA0
000330 ea80      	LDI  R24,LOW(0xfa0)
000331 e09f      	LDI  R25,HIGH(0xfa0)
          __DELAY_USW_LOOP:
000332 9701      	SBIW R24,1
000333 f7f1      	BRNE __DELAY_USW_LOOP
          	.ENDM
000334 95a8      	wdr
000335 9731      	sbiw r30,1
000336 f7c9      	brne __delay_ms0
          __delay_ms1:
000337 9508      	ret
         
          _fabs:
000338 91e9      	ld   r30,y+
000339 91f9      	ld   r31,y+
00033a 9169      	ld   r22,y+
00033b 9179      	ld   r23,y+
00033c 777f      	cbr  r23,0x80
00033d 9508      	ret
         
          __ftrunc:
00033e 817b      	ldd  r23,y+3
00033f 816a      	ldd  r22,y+2
000340 81f9      	ldd  r31,y+1
000341 81e8      	ld   r30,y
000342 fb77      	bst  r23,7
000343 0f77      	lsl  r23
000344 fd67      	sbrc r22,7
000345 6071      	sbr  r23,1
000346 2f97      	mov  r25,r23
000347 579e      	subi r25,0x7e
000348 f081      	breq __ftrunc0
000349 f078      	brcs __ftrunc0
00034a 3198      	cpi  r25,24
00034b f490      	brsh __ftrunc1
00034c 27aa      	clr  r26
00034d 27bb      	clr  r27
00034e 2788      	clr  r24
          __ftrunc2:
00034f 9408      	sec
000350 9587      	ror  r24
000351 95b7      	ror  r27
000352 95a7      	ror  r26
000353 959a      	dec  r25
000354 f7d1      	brne __ftrunc2
000355 23ea      	and  r30,r26
000356 23fb      	and  r31,r27
000357 2368      	and  r22,r24
000358 c005      	rjmp __ftrunc1
          __ftrunc0:
000359 94e8      	clt
00035a 2777      	clr  r23
00035b 27ee      	clr  r30
00035c 27ff      	clr  r31
00035d 2766      	clr  r22
          __ftrunc1:
00035e 776f      	cbr  r22,0x80
00035f 9576      	lsr  r23
000360 f408      	brcc __ftrunc3
000361 6860      	sbr  r22,0x80
          __ftrunc3:
000362 f977      	bld  r23,7
000363 91a9      	ld   r26,y+
000364 91b9      	ld   r27,y+
000365 9189      	ld   r24,y+
000366 9199      	ld   r25,y+
000367 17ea      	cp   r30,r26
000368 07fb      	cpc  r31,r27
000369 0768      	cpc  r22,r24
00036a 0779      	cpc  r23,r25
00036b fb97      	bst  r25,7
00036c 9508      	ret
         
          _floor:
00036d dfd0      	rcall __ftrunc
00036e f409      	brne __floor1
          __floor0:
00036f 9508      	ret
          __floor1:
000370 f7f6      	brtc __floor0
000371 eb9f      	ldi  r25,0xbf
         
          __addfc:
000372 27aa      	clr  r26
000373 27bb      	clr  r27
000374 e880      	ldi  r24,0x80
000375 c114      	rjmp __addf12
         
          __ADDD21:
000376 0fae      	ADD  R26,R30
000377 1fbf      	ADC  R27,R31
000378 1f86      	ADC  R24,R22
000379 1f97      	ADC  R25,R23
00037a 9508      	RET
         
          __ANEGD1:
00037b 95e0      	COM  R30
00037c 95f0      	COM  R31
00037d 9560      	COM  R22
00037e 9570      	COM  R23
00037f 5fef      	SUBI R30,-1
000380 4fff      	SBCI R31,-1
000381 4f6f      	SBCI R22,-1
000382 4f7f      	SBCI R23,-1
000383 9508      	RET
         
          __LSRD1:
000384 9576      	LSR  R23
000385 9567      	ROR  R22
000386 95f7      	ROR  R31
000387 95e7      	ROR  R30
000388 9508      	RET
         
          __CBD1:
000389 27ff      	CLR  R31
00038a 2766      	CLR  R22
00038b 2777      	CLR  R23
00038c ffe7      	SBRS R30,7
00038d 9508      	RET
00038e efff      	SER  R31
00038f ef6f      	SER  R22
000390 ef7f      	SER  R23
000391 9508      	RET
         
          __MULD12U:
000392 9f7a      	MUL  R23,R26
000393 2d70      	MOV  R23,R0
000394 9f6b      	MUL  R22,R27
000395 0d70      	ADD  R23,R0
000396 9ff8      	MUL  R31,R24
000397 0d70      	ADD  R23,R0
000398 9fe9      	MUL  R30,R25
000399 0d70      	ADD  R23,R0
00039a 9f6a      	MUL  R22,R26
00039b 2d60      	MOV  R22,R0
00039c 0d71      	ADD  R23,R1
00039d 9ffb      	MUL  R31,R27
00039e 0d60      	ADD  R22,R0
00039f 1d71      	ADC  R23,R1
0003a0 9fe8      	MUL  R30,R24
0003a1 0d60      	ADD  R22,R0
0003a2 1d71      	ADC  R23,R1
0003a3 2788      	CLR  R24
0003a4 9ffa      	MUL  R31,R26
0003a5 2df0      	MOV  R31,R0
0003a6 0d61      	ADD  R22,R1
0003a7 1f78      	ADC  R23,R24
0003a8 9feb      	MUL  R30,R27
0003a9 0df0      	ADD  R31,R0
0003aa 1d61      	ADC  R22,R1
0003ab 1f78      	ADC  R23,R24
0003ac 9fea      	MUL  R30,R26
0003ad 2de0      	MOV  R30,R0
0003ae 0df1      	ADD  R31,R1
0003af 1f68      	ADC  R22,R24
0003b0 1f78      	ADC  R23,R24
0003b1 9508      	RET
         
          __DIVD21U:
0003b2 933f      	PUSH R19
0003b3 934f      	PUSH R20
0003b4 935f      	PUSH R21
0003b5 2400      	CLR  R0
0003b6 2411      	CLR  R1
0003b7 2733      	CLR  R19
0003b8 2744      	CLR  R20
0003b9 e250      	LDI  R21,32
          __DIVD21U1:
0003ba 0faa      	LSL  R26
0003bb 1fbb      	ROL  R27
0003bc 1f88      	ROL  R24
0003bd 1f99      	ROL  R25
0003be 1c00      	ROL  R0
0003bf 1c11      	ROL  R1
0003c0 1f33      	ROL  R19
0003c1 1f44      	ROL  R20
0003c2 1a0e      	SUB  R0,R30
0003c3 0a1f      	SBC  R1,R31
0003c4 0b36      	SBC  R19,R22
0003c5 0b47      	SBC  R20,R23
0003c6 f428      	BRCC __DIVD21U2
0003c7 0e0e      	ADD  R0,R30
0003c8 1e1f      	ADC  R1,R31
0003c9 1f36      	ADC  R19,R22
0003ca 1f47      	ADC  R20,R23
0003cb c001      	RJMP __DIVD21U3
          __DIVD21U2:
0003cc 60a1      	SBR  R26,1
          __DIVD21U3:
0003cd 955a      	DEC  R21
0003ce f759      	BRNE __DIVD21U1
0003cf 01fd      	MOVW R30,R26
0003d0 01bc      	MOVW R22,R24
0003d1 01d0      	MOVW R26,R0
0003d2 2f83      	MOV  R24,R19
0003d3 2f94      	MOV  R25,R20
0003d4 915f      	POP  R21
0003d5 914f      	POP  R20
0003d6 913f      	POP  R19
0003d7 9508      	RET
         
          __GETD1PF:
0003d8 9005      	LPM  R0,Z+
0003d9 9015      	LPM  R1,Z+
0003da 9165      	LPM  R22,Z+
0003db 9174      	LPM  R23,Z
0003dc 01f0      	MOVW R30,R0
0003dd 9508      	RET
         
          __PUTPARD1:
0003de 937a      	ST   -Y,R23
0003df 936a      	ST   -Y,R22
0003e0 93fa      	ST   -Y,R31
0003e1 93ea      	ST   -Y,R30
0003e2 9508      	RET
         
          __SWAPD12:
0003e3 2e18      	MOV  R1,R24
0003e4 2f86      	MOV  R24,R22
0003e5 2d61      	MOV  R22,R1
0003e6 2e19      	MOV  R1,R25
0003e7 2f97      	MOV  R25,R23
0003e8 2d71      	MOV  R23,R1
         
          __SWAPW12:
0003e9 2e1b      	MOV  R1,R27
0003ea 2fbf      	MOV  R27,R31
0003eb 2df1      	MOV  R31,R1
         
          __SWAPB12:
0003ec 2e1a      	MOV  R1,R26
0003ed 2fae      	MOV  R26,R30
0003ee 2de1      	MOV  R30,R1
0003ef 9508      	RET
         
          __ANEGF1:
0003f0 9730      	SBIW R30,0
0003f1 4060      	SBCI R22,0
0003f2 4070      	SBCI R23,0
0003f3 f009      	BREQ __ANEGF10
0003f4 5870      	SUBI R23,0x80
          __ANEGF10:
0003f5 9508      	RET
         
          __REPACK:
0003f6 e850      	LDI  R21,0x80
0003f7 2757      	EOR  R21,R23
0003f8 f411      	BRNE __REPACK0
0003f9 935f      	PUSH R21
0003fa c0d1      	RJMP __ZERORES
          __REPACK0:
0003fb 3f5f      	CPI  R21,0xFF
0003fc f031      	BREQ __REPACK1
0003fd 0f66      	LSL  R22
0003fe 0c00      	LSL  R0
0003ff 9557      	ROR  R21
000400 9567      	ROR  R22
000401 2f75      	MOV  R23,R21
000402 9508      	RET
          __REPACK1:
000403 935f      	PUSH R21
000404 2000      	TST  R0
000405 f00a      	BRMI __REPACK2
000406 c0cb      	RJMP __MAXRES
          __REPACK2:
000407 c0be      	RJMP __MINRES
         
          __UNPACK:
000408 e850      	LDI  R21,0x80
000409 2e19      	MOV  R1,R25
00040a 2215      	AND  R1,R21
00040b 0f88      	LSL  R24
00040c 1f99      	ROL  R25
00040d 2795      	EOR  R25,R21
00040e 0f55      	LSL  R21
00040f 9587      	ROR  R24
         
          __UNPACK1:
000410 e850      	LDI  R21,0x80
000411 2e07      	MOV  R0,R23
000412 2205      	AND  R0,R21
000413 0f66      	LSL  R22
000414 1f77      	ROL  R23
000415 2775      	EOR  R23,R21
000416 0f55      	LSL  R21
000417 9567      	ROR  R22
000418 9508      	RET
         
          __CFD1:
000419 935f      	PUSH R21
00041a dff5      	RCALL __UNPACK1
00041b 3870      	CPI  R23,0x80
00041c f018      	BRLO __CFD10
00041d 3f7f      	CPI  R23,0xFF
00041e f408      	BRCC __CFD10
00041f c0ac      	RJMP __ZERORES
          __CFD10:
000420 e156      	LDI  R21,22
000421 1b57      	SUB  R21,R23
000422 f492      	BRPL __CFD11
000423 9551      	NEG  R21
000424 3058      	CPI  R21,8
000425 f028      	BRLO __CFD17
000426 efef      	SER  R30
000427 efff      	SER  R31
000428 ef6f      	SER  R22
000429 e77f      	LDI  R23,0x7F
00042a c01a      	RJMP __CFD15
          __CFD17:
00042b 2777      	CLR  R23
00042c 2355      	TST  R21
00042d f0b9      	BREQ __CFD15
          __CFD18:
00042e 0fee      	LSL  R30
00042f 1fff      	ROL  R31
000430 1f66      	ROL  R22
000431 1f77      	ROL  R23
000432 955a      	DEC  R21
000433 f7d1      	BRNE __CFD18
000434 c010      	RJMP __CFD15
          __CFD11:
000435 2777      	CLR  R23
          __CFD12:
000436 3058      	CPI  R21,8
000437 f028      	BRLO __CFD13
000438 2fef      	MOV  R30,R31
000439 2ff6      	MOV  R31,R22
00043a 2f67      	MOV  R22,R23
00043b 5058      	SUBI R21,8
00043c cff9      	RJMP __CFD12
          __CFD13:
00043d 2355      	TST  R21
00043e f031      	BREQ __CFD15
          __CFD14:
00043f 9576      	LSR  R23
000440 9567      	ROR  R22
000441 95f7      	ROR  R31
000442 95e7      	ROR  R30
000443 955a      	DEC  R21
000444 f7d1      	BRNE __CFD14
          __CFD15:
000445 2000      	TST  R0
000446 f40a      	BRPL __CFD16
000447 df33      	RCALL __ANEGD1
          __CFD16:
000448 915f      	POP  R21
000449 9508      	RET
         
          __CDF1U:
00044a 9468      	SET
00044b c001      	RJMP __CDF1U0
          __CDF1:
00044c 94e8      	CLT
          __CDF1U0:
00044d 9730      	SBIW R30,0
00044e 4060      	SBCI R22,0
00044f 4070      	SBCI R23,0
000450 f0b1      	BREQ __CDF10
000451 2400      	CLR  R0
000452 f026      	BRTS __CDF11
000453 2377      	TST  R23
000454 f412      	BRPL __CDF11
000455 9400      	COM  R0
000456 df24      	RCALL __ANEGD1
          __CDF11:
000457 2e17      	MOV  R1,R23
000458 e17e      	LDI  R23,30
000459 2011      	TST  R1
          __CDF12:
00045a f032      	BRMI __CDF13
00045b 957a      	DEC  R23
00045c 0fee      	LSL  R30
00045d 1fff      	ROL  R31
00045e 1f66      	ROL  R22
00045f 1c11      	ROL  R1
000460 cff9      	RJMP __CDF12
          __CDF13:
000461 2fef      	MOV  R30,R31
000462 2ff6      	MOV  R31,R22
000463 2d61      	MOV  R22,R1
000464 935f      	PUSH R21
000465 df90      	RCALL __REPACK
000466 915f      	POP  R21
          __CDF10:
000467 9508      	RET
         
          __SWAPACC:
000468 2f5e      	MOV  R21,R30
000469 2fea      	MOV  R30,R26
00046a 2fa5      	MOV  R26,R21
00046b 2f5f      	MOV  R21,R31
00046c 2ffb      	MOV  R31,R27
00046d 2fb5      	MOV  R27,R21
00046e 2f56      	MOV  R21,R22
00046f 2f68      	MOV  R22,R24
000470 2f85      	MOV  R24,R21
000471 2f57      	MOV  R21,R23
000472 2f79      	MOV  R23,R25
000473 2f95      	MOV  R25,R21
000474 2d50      	MOV  R21,R0
000475 2c01      	MOV  R0,R1
000476 2e15      	MOV  R1,R21
000477 9508      	RET
         
          __UADD12:
000478 0fea      	ADD  R30,R26
000479 1ffb      	ADC  R31,R27
00047a 1f68      	ADC  R22,R24
00047b 9508      	RET
         
          __NEGMAN1:
00047c 95e0      	COM  R30
00047d 95f0      	COM  R31
00047e 9560      	COM  R22
00047f 5fef      	SUBI R30,-1
000480 4fff      	SBCI R31,-1
000481 4f6f      	SBCI R22,-1
000482 9508      	RET
         
          __SUBF12:
000483 935f      	PUSH R21
000484 df83      	RCALL __UNPACK
000485 3890      	CPI  R25,0x80
000486 f171      	BREQ __ADDF129
000487 e850      	LDI  R21,0x80
000488 2615      	EOR  R1,R21
         
000489 c004      	RJMP __ADDF120
         
          __ADDF12:
00048a 935f      	PUSH R21
00048b df7c      	RCALL __UNPACK
00048c 3890      	CPI  R25,0x80
00048d f139      	BREQ __ADDF129
         
          __ADDF120:
00048e 3870      	CPI  R23,0x80
00048f f121      	BREQ __ADDF128
          __ADDF121:
000490 2f57      	MOV  R21,R23
000491 1b59      	SUB  R21,R25
000492 f113      	BRVS __ADDF129
000493 f412      	BRPL __ADDF122
000494 dfd3      	RCALL __SWAPACC
000495 cffa      	RJMP __ADDF121
          __ADDF122:
000496 3158      	CPI  R21,24
000497 f018      	BRLO __ADDF123
000498 27aa      	CLR  R26
000499 27bb      	CLR  R27
00049a 2788      	CLR  R24
          __ADDF123:
00049b 3058      	CPI  R21,8
00049c f028      	BRLO __ADDF124
00049d 2fab      	MOV  R26,R27
00049e 2fb8      	MOV  R27,R24
00049f 2788      	CLR  R24
0004a0 5058      	SUBI R21,8
0004a1 cff9      	RJMP __ADDF123
          __ADDF124:
0004a2 2355      	TST  R21
0004a3 f029      	BREQ __ADDF126
          __ADDF125:
0004a4 9586      	LSR  R24
0004a5 95b7      	ROR  R27
0004a6 95a7      	ROR  R26
0004a7 955a      	DEC  R21
0004a8 f7d9      	BRNE __ADDF125
          __ADDF126:
0004a9 2d50      	MOV  R21,R0
0004aa 2551      	EOR  R21,R1
0004ab f062      	BRMI __ADDF127
0004ac dfcb      	RCALL __UADD12
0004ad f438      	BRCC __ADDF129
0004ae 9567      	ROR  R22
0004af 95f7      	ROR  R31
0004b0 95e7      	ROR  R30
0004b1 9573      	INC  R23
0004b2 f413      	BRVC __ADDF129
0004b3 c01e      	RJMP __MAXRES
          __ADDF128:
0004b4 dfb3      	RCALL __SWAPACC
          __ADDF129:
0004b5 df40      	RCALL __REPACK
0004b6 915f      	POP  R21
0004b7 9508      	RET
          __ADDF127:
0004b8 1bea      	SUB  R30,R26
0004b9 0bfb      	SBC  R31,R27
0004ba 0b68      	SBC  R22,R24
0004bb f081      	BREQ __ZERORES
0004bc f410      	BRCC __ADDF1210
0004bd 9400      	COM  R0
0004be dfbd      	RCALL __NEGMAN1
          __ADDF1210:
0004bf 2366      	TST  R22
0004c0 f3a2      	BRMI __ADDF129
0004c1 0fee      	LSL  R30
0004c2 1fff      	ROL  R31
0004c3 1f66      	ROL  R22
0004c4 957a      	DEC  R23
0004c5 f7cb      	BRVC __ADDF1210
         
          __MINRES:
0004c6 efef      	SER  R30
0004c7 efff      	SER  R31
0004c8 e76f      	LDI  R22,0x7F
0004c9 ef7f      	SER  R23
0004ca 915f      	POP  R21
0004cb 9508      	RET
         
          __ZERORES:
0004cc 27ee      	CLR  R30
0004cd 27ff      	CLR  R31
0004ce 2766      	CLR  R22
0004cf 2777      	CLR  R23
0004d0 915f      	POP  R21
0004d1 9508      	RET
         
          __MAXRES:
0004d2 efef      	SER  R30
0004d3 efff      	SER  R31
0004d4 e76f      	LDI  R22,0x7F
0004d5 e77f      	LDI  R23,0x7F
0004d6 915f      	POP  R21
0004d7 9508      	RET
         
          __MULF12:
0004d8 935f      	PUSH R21
0004d9 df2e      	RCALL __UNPACK
0004da 3870      	CPI  R23,0x80
0004db f381      	BREQ __ZERORES
0004dc 3890      	CPI  R25,0x80
0004dd f371      	BREQ __ZERORES
0004de 2401      	EOR  R0,R1
0004df 9408      	SEC
0004e0 1f79      	ADC  R23,R25
0004e1 f423      	BRVC __MULF124
0004e2 f34c      	BRLT __ZERORES
          __MULF125:
0004e3 2000      	TST  R0
0004e4 f30a      	BRMI __MINRES
0004e5 cfec      	RJMP __MAXRES
          __MULF124:
0004e6 933f      	PUSH R19
0004e7 934f      	PUSH R20
0004e8 2411      	CLR  R1
0004e9 2733      	CLR  R19
0004ea 2744      	CLR  R20
0004eb 2755      	CLR  R21
0004ec e198      	LDI  R25,24
          __MULF120:
0004ed 0f33      	LSL  R19
0004ee 1f44      	ROL  R20
0004ef 1f55      	ROL  R21
0004f0 1fee      	ROL  R30
0004f1 1fff      	ROL  R31
0004f2 1f66      	ROL  R22
0004f3 f430      	BRCC __MULF121
0004f4 0f3a      	ADD  R19,R26
0004f5 1f4b      	ADC  R20,R27
0004f6 1f58      	ADC  R21,R24
0004f7 1de1      	ADC  R30,R1
0004f8 1df1      	ADC  R31,R1
0004f9 1d61      	ADC  R22,R1
          __MULF121:
0004fa 959a      	DEC  R25
0004fb f789      	BRNE __MULF120
0004fc 914f      	POP  R20
0004fd 913f      	POP  R19
0004fe 2366      	TST  R22
0004ff f02a      	BRMI __MULF122
000500 0f55      	LSL  R21
000501 1fee      	ROL  R30
000502 1fff      	ROL  R31
000503 1f66      	ROL  R22
000504 c002      	RJMP __MULF123
          __MULF122:
000505 9573      	INC  R23
000506 f2e3      	BRVS __MULF125
          __MULF123:
000507 deee      	RCALL __REPACK
000508 915f      	POP  R21
000509 9508      	RET
         
          __DIVF21:
00050a 935f      	PUSH R21
00050b defc      	RCALL __UNPACK
00050c 3870      	CPI  R23,0x80
00050d f419      	BRNE __DIVF210
00050e 2011      	TST  R1
          __DIVF211:
00050f f612      	BRPL __MAXRES
000510 cfb5      	RJMP __MINRES
          __DIVF210:
000511 3890      	CPI  R25,0x80
000512 f409      	BRNE __DIVF218
          __DIVF217:
000513 cfb8      	RJMP __ZERORES
          __DIVF218:
000514 2401      	EOR  R0,R1
000515 9408      	SEC
000516 0b97      	SBC  R25,R23
000517 f41b      	BRVC __DIVF216
000518 f3d4      	BRLT __DIVF217
000519 2000      	TST  R0
00051a cff4      	RJMP __DIVF211
          __DIVF216:
00051b 2f79      	MOV  R23,R25
00051c 9566      	LSR  R22
00051d 95f7      	ROR  R31
00051e 95e7      	ROR  R30
00051f 9586      	LSR  R24
000520 95b7      	ROR  R27
000521 95a7      	ROR  R26
000522 934f      	PUSH R20
000523 2411      	CLR  R1
000524 2744      	CLR  R20
000525 2755      	CLR  R21
000526 e198      	LDI  R25,24
          __DIVF212:
000527 17ae      	CP   R26,R30
000528 07bf      	CPC  R27,R31
000529 0786      	CPC  R24,R22
00052a f028      	BRLO __DIVF213
00052b 1bae      	SUB  R26,R30
00052c 0bbf      	SBC  R27,R31
00052d 0b86      	SBC  R24,R22
00052e 9408      	SEC
00052f c001      	RJMP __DIVF214
          __DIVF213:
000530 9488      	CLC
          __DIVF214:
000531 1c11      	ROL  R1
000532 1f44      	ROL  R20
000533 1f55      	ROL  R21
000534 1faa      	ROL  R26
000535 1fbb      	ROL  R27
000536 1f88      	ROL  R24
000537 959a      	DEC  R25
000538 f771      	BRNE __DIVF212
000539 2de1      	MOV  R30,R1
00053a 2ff4      	MOV  R31,R20
00053b 2f65      	MOV  R22,R21
00053c 95a6      	LSR  R26
00053d 1fe9      	ADC  R30,R25
00053e 1ff9      	ADC  R31,R25
00053f 1f69      	ADC  R22,R25
000540 914f      	POP  R20
000541 2366      	TST  R22
000542 f02a      	BRMI __DIVF215
000543 0fee      	LSL  R30
000544 1fff      	ROL  R31
000545 1f66      	ROL  R22
000546 957a      	DEC  R23
000547 f25b      	BRVS __DIVF217
          __DIVF215:
000548 dead      	RCALL __REPACK
000549 915f      	POP  R21
00054a 9508      	RET
         
          __CMPF12:
00054b 2399      	TST  R25
00054c f09a      	BRMI __CMPF120
00054d 2377      	TST  R23
00054e f042      	BRMI __CMPF121
00054f 1797      	CP   R25,R23
000550 f048      	BRLO __CMPF122
000551 f429      	BRNE __CMPF121
000552 17ae      	CP   R26,R30
000553 07bf      	CPC  R27,R31
000554 0786      	CPC  R24,R22
000555 f020      	BRLO __CMPF122
000556 f031      	BREQ __CMPF123
          __CMPF121:
000557 9498      	CLZ
000558 9488      	CLC
000559 9508      	RET
          __CMPF122:
00055a 9498      	CLZ
00055b 9408      	SEC
00055c 9508      	RET
          __CMPF123:
00055d 9418      	SEZ
00055e 9488      	CLC
00055f 9508      	RET
          __CMPF120:
000560 2377      	TST  R23
000561 f7c2      	BRPL __CMPF122
000562 1797      	CP   R25,R23
000563 f398      	BRLO __CMPF121
000564 f7a9      	BRNE __CMPF122
000565 17ea      	CP   R30,R26
000566 07fb      	CPC  R31,R27
000567 0768      	CPC  R22,R24
000568 f388      	BRLO __CMPF122
000569 f399      	BREQ __CMPF123
00056a cfec      	RJMP __CMPF121
         
          __CPD20:
00056b 9710      	SBIW R26,0
00056c 4080      	SBCI R24,0
00056d 4090      	SBCI R25,0
00056e 9508      	RET
         
          __CPD12:
00056f 17ea      	CP   R30,R26
000570 07fb      	CPC  R31,R27
000571 0768      	CPC  R22,R24
000572 0779      	CPC  R23,R25
000573 9508      	RET
         
          __SAVELOCR6:
000574 935a      	ST   -Y,R21
          __SAVELOCR5:
000575 934a      	ST   -Y,R20
          __SAVELOCR4:
000576 933a      	ST   -Y,R19
          __SAVELOCR3:
000577 932a      	ST   -Y,R18
          __SAVELOCR2:
000578 931a      	ST   -Y,R17
000579 930a      	ST   -Y,R16
00057a 9508      	RET
         
          __LOADLOCR6:
00057b 815d      	LDD  R21,Y+5
          __LOADLOCR5:
00057c 814c      	LDD  R20,Y+4
          __LOADLOCR4:
00057d 813b      	LDD  R19,Y+3
          __LOADLOCR3:
00057e 812a      	LDD  R18,Y+2
          __LOADLOCR2:
00057f 8119      	LDD  R17,Y+1
000580 8108      	LD   R16,Y
000581 9508      	RET
         
          __INITLOCB:
          __INITLOCW:
000582 0fac      	ADD R26,R28
000583 1fbd      	ADC R27,R29
          __INITLOC0:
000584 9005      	LPM  R0,Z+
000585 920d      	ST   X+,R0
000586 958a      	DEC  R24
000587 f7e1      	BRNE __INITLOC0
000588 9508      	RET
         

Assembly complete with no errors.
