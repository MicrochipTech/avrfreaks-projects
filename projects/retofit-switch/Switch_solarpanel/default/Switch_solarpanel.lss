
Switch_solarpanel.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001040  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000108  00800060  00001040  000010b4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .debug_aranges 000001a0  00000000  00000000  000011bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000249  00000000  00000000  0000135c  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000025dd  00000000  00000000  000015a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000012ff  00000000  00000000  00003b82  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00001525  00000000  00000000  00004e81  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000220  00000000  00000000  000063a8  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000042d  00000000  00000000  000065c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000c66  00000000  00000000  000069f5  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 000000e0  00000000  00000000  0000765b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
       2:	24 c0       	rjmp	.+72     	; 0x4c <__bad_interrupt>
       4:	23 c0       	rjmp	.+70     	; 0x4c <__bad_interrupt>
       6:	22 c0       	rjmp	.+68     	; 0x4c <__bad_interrupt>
       8:	21 c0       	rjmp	.+66     	; 0x4c <__bad_interrupt>
       a:	20 c0       	rjmp	.+64     	; 0x4c <__bad_interrupt>
       c:	1f c0       	rjmp	.+62     	; 0x4c <__bad_interrupt>
       e:	1e c0       	rjmp	.+60     	; 0x4c <__bad_interrupt>
      10:	1d c0       	rjmp	.+58     	; 0x4c <__bad_interrupt>
      12:	1c c0       	rjmp	.+56     	; 0x4c <__bad_interrupt>
      14:	1b c0       	rjmp	.+54     	; 0x4c <__bad_interrupt>
      16:	1a c0       	rjmp	.+52     	; 0x4c <__bad_interrupt>
      18:	19 c0       	rjmp	.+50     	; 0x4c <__bad_interrupt>
      1a:	18 c0       	rjmp	.+48     	; 0x4c <__bad_interrupt>
      1c:	17 c0       	rjmp	.+46     	; 0x4c <__bad_interrupt>
      1e:	16 c0       	rjmp	.+44     	; 0x4c <__bad_interrupt>
      20:	15 c0       	rjmp	.+42     	; 0x4c <__bad_interrupt>
      22:	14 c0       	rjmp	.+40     	; 0x4c <__bad_interrupt>
      24:	13 c0       	rjmp	.+38     	; 0x4c <__bad_interrupt>

00000026 <__ctors_end>:
      26:	11 24       	eor	r1, r1
      28:	1f be       	out	0x3f, r1	; 63
      2a:	cf e5       	ldi	r28, 0x5F	; 95
      2c:	d4 e0       	ldi	r29, 0x04	; 4
      2e:	de bf       	out	0x3e, r29	; 62
      30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
      32:	11 e0       	ldi	r17, 0x01	; 1
      34:	a0 e6       	ldi	r26, 0x60	; 96
      36:	b0 e0       	ldi	r27, 0x00	; 0
      38:	e0 e4       	ldi	r30, 0x40	; 64
      3a:	f0 e1       	ldi	r31, 0x10	; 16
      3c:	02 c0       	rjmp	.+4      	; 0x42 <.do_copy_data_start>

0000003e <.do_copy_data_loop>:
      3e:	05 90       	lpm	r0, Z+
      40:	0d 92       	st	X+, r0

00000042 <.do_copy_data_start>:
      42:	a8 36       	cpi	r26, 0x68	; 104
      44:	b1 07       	cpc	r27, r17
      46:	d9 f7       	brne	.-10     	; 0x3e <.do_copy_data_loop>
      48:	0c d0       	rcall	.+24     	; 0x62 <main>
      4a:	f8 c7       	rjmp	.+4080   	; 0x103c <_exit>

0000004c <__bad_interrupt>:
      4c:	d9 cf       	rjmp	.-78     	; 0x0 <__vectors>

0000004e <read_adc>:
unsigned int read_adc(unsigned char);

unsigned int read_adc(unsigned char ch)
{

		ADCSRA = _BV(ADEN) | _BV(ADPS2);
      4e:	94 e8       	ldi	r25, 0x84	; 132
      50:	96 b9       	out	0x06, r25	; 6
		ADMUX = ch;						// Select pin ADC0 using MUX		
      52:	87 b9       	out	0x07, r24	; 7
		ADCSRA |= _BV(ADSC);			// Start conversion 		
      54:	36 9a       	sbi	0x06, 6	; 6
		while (ADCSRA & _BV(ADSC)) 	// wait until converstion completed
      56:	36 99       	sbic	0x06, 6	; 6
      58:	fe cf       	rjmp	.-4      	; 0x56 <read_adc+0x8>
		{
		
		}
		return ADCW;
      5a:	24 b1       	in	r18, 0x04	; 4
      5c:	35 b1       	in	r19, 0x05	; 5
}
      5e:	c9 01       	movw	r24, r18
      60:	08 95       	ret

00000062 <main>:
    //unsigned char buffer[7];
    unsigned int  data_solar = 0;
	//unsigned int  data_grid = 0;
    
	
	ADCSRA = _BV(ADEN) | _BV(ADPS2);    // Activate ADC with Prescaler 16 --> 1Mhz/16 = 62.5kHz
      62:	84 e8       	ldi	r24, 0x84	; 132
      64:	86 b9       	out	0x06, r24	; 6
	DDRB=0x10;						//SET DATA DIRECTION REGISTER
      66:	80 e1       	ldi	r24, 0x10	; 16
      68:	87 bb       	out	0x17, r24	; 23
									//ONLY PORTB.0 IS OUTPUT
									//CONFIGURE AS PER REQUIREMENT
									//DEFAULT ALL OTHERS ARE INPUT
									//CHANGE ACCORDING TO USE
	
	DDRD=0xC0;						//SET DATA DIRECTION REGISTER
      6a:	80 ec       	ldi	r24, 0xC0	; 192
      6c:	81 bb       	out	0x11, r24	; 17
									//ONLY PORTD.7 AND PORTD.6 ARE OUTPUT
									//CONFIGURE AS PER REQUIREMENT
									//DEFAULT ALL OTHERS ARE INPUT
									//CHANGE ACCORDING TO USE
	
	sbi(PORTB,4);					//LED1 ON (INDICATION FOR READY TO USE)
      6e:	c4 9a       	sbi	0x18, 4	; 24
	
	//A string on line 2
	//LCDWriteStringXY(0,1,"TEMP ");
	while(1)
	{
		data_solar = read_adc(0);
      70:	80 e0       	ldi	r24, 0x00	; 0
      72:	ed df       	rcall	.-38     	; 0x4e <read_adc>
		data_solar = (data_solar/1023.0)*5*100;
      74:	a0 e0       	ldi	r26, 0x00	; 0
      76:	b0 e0       	ldi	r27, 0x00	; 0
      78:	bc 01       	movw	r22, r24
      7a:	cd 01       	movw	r24, r26
      7c:	17 d5       	rcall	.+2606   	; 0xaac <__floatunsisf>
      7e:	20 e0       	ldi	r18, 0x00	; 0
      80:	30 ec       	ldi	r19, 0xC0	; 192
      82:	4f e7       	ldi	r20, 0x7F	; 127
      84:	54 e4       	ldi	r21, 0x44	; 68
      86:	ef d3       	rcall	.+2014   	; 0x866 <__divsf3>
      88:	20 e0       	ldi	r18, 0x00	; 0
      8a:	30 e0       	ldi	r19, 0x00	; 0
      8c:	40 ea       	ldi	r20, 0xA0	; 160
      8e:	50 e4       	ldi	r21, 0x40	; 64
      90:	f5 d2       	rcall	.+1514   	; 0x67c <__mulsf3>
      92:	20 e0       	ldi	r18, 0x00	; 0
      94:	30 e0       	ldi	r19, 0x00	; 0
      96:	48 ec       	ldi	r20, 0xC8	; 200
      98:	52 e4       	ldi	r21, 0x42	; 66
      9a:	f0 d2       	rcall	.+1504   	; 0x67c <__mulsf3>

		if(data_solar > 216)
      9c:	2b d1       	rcall	.+598    	; 0x2f4 <__fixunssfsi>
      9e:	69 3d       	cpi	r22, 0xD9	; 217
      a0:	71 05       	cpc	r23, r1
      a2:	e8 f0       	brcs	.+58     	; 0xde <main+0x7c>
//			LCDClear();
//			LCDWriteString("SOLAR ON");
//			LCDWriteStringXY(0,1,"CHARGE ON SOLAR ");
			do
			{
				sbi(PORTD, 6);
      a4:	96 9a       	sbi	0x12, 6	; 18
				
				data_solar = read_adc(0);
      a6:	80 e0       	ldi	r24, 0x00	; 0
      a8:	d2 df       	rcall	.-92     	; 0x4e <read_adc>
				data_solar = (data_solar/1023.0)*5*100;
      aa:	a0 e0       	ldi	r26, 0x00	; 0
      ac:	b0 e0       	ldi	r27, 0x00	; 0
      ae:	bc 01       	movw	r22, r24
      b0:	cd 01       	movw	r24, r26
      b2:	fc d4       	rcall	.+2552   	; 0xaac <__floatunsisf>
      b4:	20 e0       	ldi	r18, 0x00	; 0
      b6:	30 ec       	ldi	r19, 0xC0	; 192
      b8:	4f e7       	ldi	r20, 0x7F	; 127
      ba:	54 e4       	ldi	r21, 0x44	; 68
      bc:	d4 d3       	rcall	.+1960   	; 0x866 <__divsf3>
      be:	20 e0       	ldi	r18, 0x00	; 0
      c0:	30 e0       	ldi	r19, 0x00	; 0
      c2:	40 ea       	ldi	r20, 0xA0	; 160
      c4:	50 e4       	ldi	r21, 0x40	; 64
      c6:	da d2       	rcall	.+1460   	; 0x67c <__mulsf3>
      c8:	20 e0       	ldi	r18, 0x00	; 0
      ca:	30 e0       	ldi	r19, 0x00	; 0
      cc:	48 ec       	ldi	r20, 0xC8	; 200
      ce:	52 e4       	ldi	r21, 0x42	; 66
      d0:	d5 d2       	rcall	.+1450   	; 0x67c <__mulsf3>
				
			}while(data_solar > 200);
      d2:	10 d1       	rcall	.+544    	; 0x2f4 <__fixunssfsi>
      d4:	69 3c       	cpi	r22, 0xC9	; 201
      d6:	71 05       	cpc	r23, r1
      d8:	28 f7       	brcc	.-54     	; 0xa4 <main+0x42>
//			LCDClear();
//			LCDWriteString("Charger ON");
			
			cbi(PORTD, 6);
      da:	96 98       	cbi	0x12, 6	; 18
      dc:	c9 cf       	rjmp	.-110    	; 0x70 <main+0xe>
//			LCDWriteString("SOLAR OFF");
//			LCDWriteStringXY(0,1,"CHARGE ON GRID ");
			do
			{
				
				cbi(PORTD, 6);
      de:	96 98       	cbi	0x12, 6	; 18
				data_solar = read_adc(0);
      e0:	80 e0       	ldi	r24, 0x00	; 0
      e2:	b5 df       	rcall	.-150    	; 0x4e <read_adc>
				data_solar = (data_solar/1023.0)*5*100;
      e4:	a0 e0       	ldi	r26, 0x00	; 0
      e6:	b0 e0       	ldi	r27, 0x00	; 0
      e8:	bc 01       	movw	r22, r24
      ea:	cd 01       	movw	r24, r26
      ec:	df d4       	rcall	.+2494   	; 0xaac <__floatunsisf>
      ee:	20 e0       	ldi	r18, 0x00	; 0
      f0:	30 ec       	ldi	r19, 0xC0	; 192
      f2:	4f e7       	ldi	r20, 0x7F	; 127
      f4:	54 e4       	ldi	r21, 0x44	; 68
      f6:	b7 d3       	rcall	.+1902   	; 0x866 <__divsf3>
      f8:	20 e0       	ldi	r18, 0x00	; 0
      fa:	30 e0       	ldi	r19, 0x00	; 0
      fc:	40 ea       	ldi	r20, 0xA0	; 160
      fe:	50 e4       	ldi	r21, 0x40	; 64
     100:	bd d2       	rcall	.+1402   	; 0x67c <__mulsf3>
     102:	20 e0       	ldi	r18, 0x00	; 0
     104:	30 e0       	ldi	r19, 0x00	; 0
     106:	48 ec       	ldi	r20, 0xC8	; 200
     108:	52 e4       	ldi	r21, 0x42	; 66
     10a:	b8 d2       	rcall	.+1392   	; 0x67c <__mulsf3>
				
				
			}while(data_solar < 216);
     10c:	f3 d0       	rcall	.+486    	; 0x2f4 <__fixunssfsi>
     10e:	68 3d       	cpi	r22, 0xD8	; 216
     110:	71 05       	cpc	r23, r1
     112:	28 f3       	brcs	.-54     	; 0xde <main+0x7c>
     114:	ad cf       	rjmp	.-166    	; 0x70 <main+0xe>

00000116 <LCDBusyLoop>:
	//This function waits till lcd is BUSY

	uint8_t busy,status=0x00,temp;

	//Change Port to input type because we are reading data
	LCD_DATA_DDR&=0xF0;
     116:	87 b3       	in	r24, 0x17	; 23
     118:	80 7f       	andi	r24, 0xF0	; 240
     11a:	87 bb       	out	0x17, r24	; 23

	//change LCD mode
	SET_RW();		//Read mode
     11c:	ab 9a       	sbi	0x15, 3	; 21
	CLEAR_RS();		//Read status
     11e:	aa 98       	cbi	0x15, 2	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     120:	82 e0       	ldi	r24, 0x02	; 2
     122:	8a 95       	dec	r24
     124:	f1 f7       	brne	.-4      	; 0x122 <LCDBusyLoop+0xc>

	
	do
	{

		SET_E();
     126:	22 e0       	ldi	r18, 0x02	; 2
     128:	34 e0       	ldi	r19, 0x04	; 4
     12a:	ac 9a       	sbi	0x15, 4	; 21
     12c:	82 2f       	mov	r24, r18
     12e:	8a 95       	dec	r24
     130:	f1 f7       	brne	.-4      	; 0x12e <LCDBusyLoop+0x18>

		//Wait tDA for data to become available
		_delay_us(0.5);

		status=LCD_DATA_PIN;
     132:	86 b3       	in	r24, 0x16	; 22
		status=status<<4;
     134:	82 95       	swap	r24
     136:	80 7f       	andi	r24, 0xF0	; 240
     138:	92 2f       	mov	r25, r18
     13a:	9a 95       	dec	r25
     13c:	f1 f7       	brne	.-4      	; 0x13a <LCDBusyLoop+0x24>

		_delay_us(0.5);

		//Pull E low
		CLEAR_E();
     13e:	ac 98       	cbi	0x15, 4	; 21
     140:	93 2f       	mov	r25, r19
     142:	9a 95       	dec	r25
     144:	f1 f7       	brne	.-4      	; 0x142 <LCDBusyLoop+0x2c>
		_delay_us(1);	//tEL

		SET_E();
     146:	ac 9a       	sbi	0x15, 4	; 21
     148:	92 2f       	mov	r25, r18
     14a:	9a 95       	dec	r25
     14c:	f1 f7       	brne	.-4      	; 0x14a <LCDBusyLoop+0x34>
		_delay_us(0.5);

		temp=LCD_DATA_PIN;
     14e:	96 b3       	in	r25, 0x16	; 22
     150:	92 2f       	mov	r25, r18
     152:	9a 95       	dec	r25
     154:	f1 f7       	brne	.-4      	; 0x152 <LCDBusyLoop+0x3c>
		status=status|temp;

		busy=status & 0b10000000;

		_delay_us(0.5);
		CLEAR_E();
     156:	ac 98       	cbi	0x15, 4	; 21
     158:	93 2f       	mov	r25, r19
     15a:	9a 95       	dec	r25
     15c:	f1 f7       	brne	.-4      	; 0x15a <LCDBusyLoop+0x44>
		_delay_us(1);	//tEL
	}while(busy);
     15e:	87 fd       	sbrc	r24, 7
     160:	e4 cf       	rjmp	.-56     	; 0x12a <LCDBusyLoop+0x14>

	CLEAR_RW();		//write mode
     162:	ab 98       	cbi	0x15, 3	; 21
	//Change Port to output
	LCD_DATA_DDR|=0x0F;
     164:	87 b3       	in	r24, 0x17	; 23
     166:	8f 60       	ori	r24, 0x0F	; 15
     168:	87 bb       	out	0x17, r24	; 23

}
     16a:	08 95       	ret

0000016c <LCDByte>:
#define CLEAR_RW() (LCD_RW_PORT&=(~(1<<LCD_RW_POS)))



void LCDByte(uint8_t c,uint8_t isdata)
{
     16c:	28 2f       	mov	r18, r24
uint8_t temp;

hn=c>>4;
ln=(c & 0x0F);

if(isdata==0)
     16e:	66 23       	and	r22, r22
     170:	11 f4       	brne	.+4      	; 0x176 <LCDByte+0xa>
	CLEAR_RS();
     172:	aa 98       	cbi	0x15, 2	; 21
     174:	01 c0       	rjmp	.+2      	; 0x178 <LCDByte+0xc>
else
	SET_RS();
     176:	aa 9a       	sbi	0x15, 2	; 21
     178:	82 e0       	ldi	r24, 0x02	; 2
     17a:	8a 95       	dec	r24
     17c:	f1 f7       	brne	.-4      	; 0x17a <LCDByte+0xe>

_delay_us(0.500);		//tAS

SET_E();
     17e:	ac 9a       	sbi	0x15, 4	; 21

//Send high nibble

temp=(LCD_DATA_PORT & 0XF0)|(hn);
     180:	88 b3       	in	r24, 0x18	; 24
     182:	92 2f       	mov	r25, r18
     184:	92 95       	swap	r25
     186:	9f 70       	andi	r25, 0x0F	; 15
     188:	80 7f       	andi	r24, 0xF0	; 240
     18a:	98 2b       	or	r25, r24
LCD_DATA_PORT=temp;
     18c:	98 bb       	out	0x18, r25	; 24
     18e:	94 e0       	ldi	r25, 0x04	; 4
     190:	89 2f       	mov	r24, r25
     192:	8a 95       	dec	r24
     194:	f1 f7       	brne	.-4      	; 0x192 <LCDByte+0x26>

_delay_us(1);			//tEH

//Now data lines are stable pull E low for transmission

CLEAR_E();
     196:	ac 98       	cbi	0x15, 4	; 21
     198:	89 2f       	mov	r24, r25
     19a:	8a 95       	dec	r24
     19c:	f1 f7       	brne	.-4      	; 0x19a <LCDByte+0x2e>

_delay_us(1);

//Send the lower nibble
SET_E();
     19e:	ac 9a       	sbi	0x15, 4	; 21

temp=(LCD_DATA_PORT & 0XF0)|(ln);
     1a0:	88 b3       	in	r24, 0x18	; 24
     1a2:	2f 70       	andi	r18, 0x0F	; 15
     1a4:	80 7f       	andi	r24, 0xF0	; 240
     1a6:	82 2b       	or	r24, r18

LCD_DATA_PORT=temp;
     1a8:	88 bb       	out	0x18, r24	; 24
     1aa:	89 2f       	mov	r24, r25
     1ac:	8a 95       	dec	r24
     1ae:	f1 f7       	brne	.-4      	; 0x1ac <LCDByte+0x40>

_delay_us(1);			//tEH

//SEND

CLEAR_E();
     1b0:	ac 98       	cbi	0x15, 4	; 21
     1b2:	9a 95       	dec	r25
     1b4:	f1 f7       	brne	.-4      	; 0x1b2 <LCDByte+0x46>

_delay_us(1);			//tEL

LCDBusyLoop();
     1b6:	af df       	rcall	.-162    	; 0x116 <LCDBusyLoop>
}
     1b8:	08 95       	ret

000001ba <InitLCD>:
	LCD_DATA_DDR|=0x0F;

}

void InitLCD(uint8_t style)
{
     1ba:	1f 93       	push	r17
     1bc:	18 2f       	mov	r17, r24
     1be:	8c e2       	ldi	r24, 0x2C	; 44
     1c0:	91 e0       	ldi	r25, 0x01	; 1
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     1c2:	2c e2       	ldi	r18, 0x2C	; 44
     1c4:	31 e0       	ldi	r19, 0x01	; 1
     1c6:	f9 01       	movw	r30, r18
     1c8:	31 97       	sbiw	r30, 0x01	; 1
     1ca:	f1 f7       	brne	.-4      	; 0x1c8 <InitLCD+0xe>
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     1cc:	01 97       	sbiw	r24, 0x01	; 1
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     1ce:	d9 f7       	brne	.-10     	; 0x1c6 <InitLCD+0xc>
	
	//After power on Wait for LCD to Initialize
	_delay_ms(30);
	
	//Set IO Ports
	LCD_DATA_DDR|=(0x0F);
     1d0:	87 b3       	in	r24, 0x17	; 23
     1d2:	8f 60       	ori	r24, 0x0F	; 15
     1d4:	87 bb       	out	0x17, r24	; 23
	LCD_E_DDR|=(1<<LCD_E_POS);
     1d6:	a4 9a       	sbi	0x14, 4	; 20
	LCD_RS_DDR|=(1<<LCD_RS_POS);
     1d8:	a2 9a       	sbi	0x14, 2	; 20
	LCD_RW_DDR|=(1<<LCD_RW_POS);
     1da:	a3 9a       	sbi	0x14, 3	; 20

	LCD_DATA_PORT&=0XF0;
     1dc:	88 b3       	in	r24, 0x18	; 24
     1de:	80 7f       	andi	r24, 0xF0	; 240
     1e0:	88 bb       	out	0x18, r24	; 24
	CLEAR_E();
     1e2:	ac 98       	cbi	0x15, 4	; 21
	CLEAR_RW();
     1e4:	ab 98       	cbi	0x15, 3	; 21
	CLEAR_RS();
     1e6:	aa 98       	cbi	0x15, 2	; 21
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
     1e8:	81 e0       	ldi	r24, 0x01	; 1
     1ea:	8a 95       	dec	r24
     1ec:	f1 f7       	brne	.-4      	; 0x1ea <InitLCD+0x30>

	//Set 4-bit mode
	_delay_us(0.3);	//tAS

	SET_E();
     1ee:	ac 9a       	sbi	0x15, 4	; 21
	LCD_DATA_PORT|=(0b00000010); //[B] To transfer 0b00100000 i was using LCD_DATA_PORT|=0b00100000
     1f0:	c1 9a       	sbi	0x18, 1	; 24
     1f2:	84 e0       	ldi	r24, 0x04	; 4
     1f4:	98 2f       	mov	r25, r24
     1f6:	9a 95       	dec	r25
     1f8:	f1 f7       	brne	.-4      	; 0x1f6 <InitLCD+0x3c>
	_delay_us(1);
	CLEAR_E();
     1fa:	ac 98       	cbi	0x15, 4	; 21
     1fc:	8a 95       	dec	r24
     1fe:	f1 f7       	brne	.-4      	; 0x1fc <InitLCD+0x42>
	_delay_us(1);
	
	//Wait for LCD to execute the Functionset Command
	LCDBusyLoop();                                    //[B] Forgot this delay
     200:	8a df       	rcall	.-236    	; 0x116 <LCDBusyLoop>

	//Now the LCD is in 4-bit mode

	LCDCmd(0b00001100|style);	//Display On
     202:	81 2f       	mov	r24, r17
     204:	8c 60       	ori	r24, 0x0C	; 12
     206:	60 e0       	ldi	r22, 0x00	; 0
     208:	b1 df       	rcall	.-158    	; 0x16c <LCDByte>
	LCDCmd(0b00101000);			//function set 4-bit,2 line 5x7 dot format
     20a:	88 e2       	ldi	r24, 0x28	; 40
     20c:	60 e0       	ldi	r22, 0x00	; 0
     20e:	ae df       	rcall	.-164    	; 0x16c <LCDByte>
}
     210:	1f 91       	pop	r17
     212:	08 95       	ret

00000214 <LCDWriteString>:
void LCDWriteString(const char *msg)
{
     214:	cf 93       	push	r28
     216:	df 93       	push	r29
     218:	ec 01       	movw	r28, r24
     21a:	03 c0       	rjmp	.+6      	; 0x222 <LCDWriteString+0xe>


	*****************************************************************/
 while(*msg!='\0')
 {
	LCDData(*msg);
     21c:	61 e0       	ldi	r22, 0x01	; 1
     21e:	a6 df       	rcall	.-180    	; 0x16c <LCDByte>
	msg++;
     220:	21 96       	adiw	r28, 0x01	; 1
	Arguments:
	msg: a null terminated string to print


	*****************************************************************/
 while(*msg!='\0')
     222:	88 81       	ld	r24, Y
     224:	88 23       	and	r24, r24
     226:	d1 f7       	brne	.-12     	; 0x21c <LCDWriteString+0x8>
 {
	LCDData(*msg);
	msg++;
 }
}
     228:	df 91       	pop	r29
     22a:	cf 91       	pop	r28
     22c:	08 95       	ret

0000022e <LCDWriteInt>:

void LCDWriteInt(int val,unsigned int field_length)
{
     22e:	ef 92       	push	r14
     230:	ff 92       	push	r15
     232:	0f 93       	push	r16
     234:	1f 93       	push	r17
     236:	df 93       	push	r29
     238:	cf 93       	push	r28
     23a:	00 d0       	rcall	.+0      	; 0x23c <LCDWriteInt+0xe>
     23c:	00 d0       	rcall	.+0      	; 0x23e <LCDWriteInt+0x10>
     23e:	0f 92       	push	r0
     240:	cd b7       	in	r28, 0x3d	; 61
     242:	de b7       	in	r29, 0x3e	; 62
     244:	9c 01       	movw	r18, r24
     246:	8b 01       	movw	r16, r22
	2)unsigned int field_length :total length of field in which the value is printed
	must be between 1-5 if it is -1 the field length is no of digits in the val

	****************************************************************/

	char str[5]={0,0,0,0,0};
     248:	fe 01       	movw	r30, r28
     24a:	31 96       	adiw	r30, 0x01	; 1
     24c:	85 e0       	ldi	r24, 0x05	; 5
     24e:	df 01       	movw	r26, r30
     250:	1d 92       	st	X+, r1
     252:	8a 95       	dec	r24
     254:	e9 f7       	brne	.-6      	; 0x250 <LCDWriteInt+0x22>
     256:	fe 01       	movw	r30, r28
     258:	35 96       	adiw	r30, 0x05	; 5
     25a:	0b c0       	rjmp	.+22     	; 0x272 <LCDWriteInt+0x44>
	int i=4,j=0;
	while(val)
	{
	str[i]=val%10;
     25c:	c9 01       	movw	r24, r18
     25e:	6a e0       	ldi	r22, 0x0A	; 10
     260:	70 e0       	ldi	r23, 0x00	; 0
     262:	8e d6       	rcall	.+3356   	; 0xf80 <__divmodhi4>
     264:	80 83       	st	Z, r24
	val=val/10;
     266:	c9 01       	movw	r24, r18
     268:	6a e0       	ldi	r22, 0x0A	; 10
     26a:	70 e0       	ldi	r23, 0x00	; 0
     26c:	89 d6       	rcall	.+3346   	; 0xf80 <__divmodhi4>
     26e:	9b 01       	movw	r18, r22
     270:	31 97       	sbiw	r30, 0x01	; 1

	****************************************************************/

	char str[5]={0,0,0,0,0};
	int i=4,j=0;
	while(val)
     272:	21 15       	cp	r18, r1
     274:	31 05       	cpc	r19, r1
     276:	91 f7       	brne	.-28     	; 0x25c <LCDWriteInt+0x2e>
	{
	str[i]=val%10;
	val=val/10;
	i--;
	}
	if(field_length==-1)
     278:	bf ef       	ldi	r27, 0xFF	; 255
     27a:	0f 3f       	cpi	r16, 0xFF	; 255
     27c:	1b 07       	cpc	r17, r27
     27e:	79 f4       	brne	.+30     	; 0x29e <LCDWriteInt+0x70>
     280:	20 e0       	ldi	r18, 0x00	; 0
     282:	30 e0       	ldi	r19, 0x00	; 0
		while(str[j]==0) j++;
     284:	ae 01       	movw	r20, r28
     286:	4f 5f       	subi	r20, 0xFF	; 255
     288:	5f 4f       	sbci	r21, 0xFF	; 255
     28a:	02 c0       	rjmp	.+4      	; 0x290 <LCDWriteInt+0x62>
     28c:	2f 5f       	subi	r18, 0xFF	; 255
     28e:	3f 4f       	sbci	r19, 0xFF	; 255
     290:	fa 01       	movw	r30, r20
     292:	e2 0f       	add	r30, r18
     294:	f3 1f       	adc	r31, r19
     296:	80 81       	ld	r24, Z
     298:	88 23       	and	r24, r24
     29a:	c1 f3       	breq	.-16     	; 0x28c <LCDWriteInt+0x5e>
     29c:	04 c0       	rjmp	.+8      	; 0x2a6 <LCDWriteInt+0x78>
	else
		j=5-field_length;
     29e:	25 e0       	ldi	r18, 0x05	; 5
     2a0:	30 e0       	ldi	r19, 0x00	; 0
     2a2:	20 1b       	sub	r18, r16
     2a4:	31 0b       	sbc	r19, r17
     2a6:	7e 01       	movw	r14, r28
     2a8:	08 94       	sec
     2aa:	e1 1c       	adc	r14, r1
     2ac:	f1 1c       	adc	r15, r1
     2ae:	e2 0e       	add	r14, r18
     2b0:	f3 1e       	adc	r15, r19
     2b2:	89 01       	movw	r16, r18
     2b4:	08 c0       	rjmp	.+16     	; 0x2c6 <LCDWriteInt+0x98>

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
	{
	LCDData(48+str[i]);
     2b6:	f7 01       	movw	r30, r14
     2b8:	81 91       	ld	r24, Z+
     2ba:	7f 01       	movw	r14, r30
     2bc:	80 5d       	subi	r24, 0xD0	; 208
     2be:	61 e0       	ldi	r22, 0x01	; 1
     2c0:	55 df       	rcall	.-342    	; 0x16c <LCDByte>
		while(str[j]==0) j++;
	else
		j=5-field_length;

	if(val<0) LCDData('-');
	for(i=j;i<5;i++)
     2c2:	0f 5f       	subi	r16, 0xFF	; 255
     2c4:	1f 4f       	sbci	r17, 0xFF	; 255
     2c6:	05 30       	cpi	r16, 0x05	; 5
     2c8:	11 05       	cpc	r17, r1
     2ca:	ac f3       	brlt	.-22     	; 0x2b6 <LCDWriteInt+0x88>
	{
	LCDData(48+str[i]);
	}
}
     2cc:	0f 90       	pop	r0
     2ce:	0f 90       	pop	r0
     2d0:	0f 90       	pop	r0
     2d2:	0f 90       	pop	r0
     2d4:	0f 90       	pop	r0
     2d6:	cf 91       	pop	r28
     2d8:	df 91       	pop	r29
     2da:	1f 91       	pop	r17
     2dc:	0f 91       	pop	r16
     2de:	ff 90       	pop	r15
     2e0:	ef 90       	pop	r14
     2e2:	08 95       	ret

000002e4 <LCDGotoXY>:
void LCDGotoXY(uint8_t x,uint8_t y)
{
 if(x<40)
     2e4:	88 32       	cpi	r24, 0x28	; 40
     2e6:	28 f4       	brcc	.+10     	; 0x2f2 <LCDGotoXY+0xe>
 {
  if(y) x|=0b01000000;
     2e8:	61 11       	cpse	r22, r1
     2ea:	80 64       	ori	r24, 0x40	; 64
  x|=0b10000000;
  LCDCmd(x);
     2ec:	80 68       	ori	r24, 0x80	; 128
     2ee:	60 e0       	ldi	r22, 0x00	; 0
     2f0:	3d df       	rcall	.-390    	; 0x16c <LCDByte>
     2f2:	08 95       	ret

000002f4 <__fixunssfsi>:
     2f4:	ef 92       	push	r14
     2f6:	ff 92       	push	r15
     2f8:	0f 93       	push	r16
     2fa:	1f 93       	push	r17
     2fc:	7b 01       	movw	r14, r22
     2fe:	8c 01       	movw	r16, r24
     300:	20 e0       	ldi	r18, 0x00	; 0
     302:	30 e0       	ldi	r19, 0x00	; 0
     304:	40 e0       	ldi	r20, 0x00	; 0
     306:	5f e4       	ldi	r21, 0x4F	; 79
     308:	55 d3       	rcall	.+1706   	; 0x9b4 <__gesf2>
     30a:	88 23       	and	r24, r24
     30c:	7c f0       	brlt	.+30     	; 0x32c <__fixunssfsi+0x38>
     30e:	c8 01       	movw	r24, r16
     310:	b7 01       	movw	r22, r14
     312:	20 e0       	ldi	r18, 0x00	; 0
     314:	30 e0       	ldi	r19, 0x00	; 0
     316:	40 e0       	ldi	r20, 0x00	; 0
     318:	5f e4       	ldi	r21, 0x4F	; 79
     31a:	5e d1       	rcall	.+700    	; 0x5d8 <__subsf3>
     31c:	76 d3       	rcall	.+1772   	; 0xa0a <__fixsfsi>
     31e:	9b 01       	movw	r18, r22
     320:	ac 01       	movw	r20, r24
     322:	20 50       	subi	r18, 0x00	; 0
     324:	30 40       	sbci	r19, 0x00	; 0
     326:	40 40       	sbci	r20, 0x00	; 0
     328:	50 48       	sbci	r21, 0x80	; 128
     32a:	05 c0       	rjmp	.+10     	; 0x336 <__fixunssfsi+0x42>
     32c:	c8 01       	movw	r24, r16
     32e:	b7 01       	movw	r22, r14
     330:	6c d3       	rcall	.+1752   	; 0xa0a <__fixsfsi>
     332:	9b 01       	movw	r18, r22
     334:	ac 01       	movw	r20, r24
     336:	b9 01       	movw	r22, r18
     338:	ca 01       	movw	r24, r20
     33a:	1f 91       	pop	r17
     33c:	0f 91       	pop	r16
     33e:	ff 90       	pop	r15
     340:	ef 90       	pop	r14
     342:	08 95       	ret

00000344 <_fpadd_parts>:
     344:	a0 e0       	ldi	r26, 0x00	; 0
     346:	b0 e0       	ldi	r27, 0x00	; 0
     348:	e7 ea       	ldi	r30, 0xA7	; 167
     34a:	f1 e0       	ldi	r31, 0x01	; 1
     34c:	40 c6       	rjmp	.+3200   	; 0xfce <__prologue_saves__>
     34e:	dc 01       	movw	r26, r24
     350:	2b 01       	movw	r4, r22
     352:	fa 01       	movw	r30, r20
     354:	9c 91       	ld	r25, X
     356:	92 30       	cpi	r25, 0x02	; 2
     358:	08 f4       	brcc	.+2      	; 0x35c <_fpadd_parts+0x18>
     35a:	39 c1       	rjmp	.+626    	; 0x5ce <__stack+0x16f>
     35c:	eb 01       	movw	r28, r22
     35e:	88 81       	ld	r24, Y
     360:	82 30       	cpi	r24, 0x02	; 2
     362:	08 f4       	brcc	.+2      	; 0x366 <_fpadd_parts+0x22>
     364:	33 c1       	rjmp	.+614    	; 0x5cc <__stack+0x16d>
     366:	94 30       	cpi	r25, 0x04	; 4
     368:	69 f4       	brne	.+26     	; 0x384 <_fpadd_parts+0x40>
     36a:	84 30       	cpi	r24, 0x04	; 4
     36c:	09 f0       	breq	.+2      	; 0x370 <_fpadd_parts+0x2c>
     36e:	2f c1       	rjmp	.+606    	; 0x5ce <__stack+0x16f>
     370:	11 96       	adiw	r26, 0x01	; 1
     372:	9c 91       	ld	r25, X
     374:	11 97       	sbiw	r26, 0x01	; 1
     376:	89 81       	ldd	r24, Y+1	; 0x01
     378:	98 17       	cp	r25, r24
     37a:	09 f4       	brne	.+2      	; 0x37e <_fpadd_parts+0x3a>
     37c:	28 c1       	rjmp	.+592    	; 0x5ce <__stack+0x16f>
     37e:	a0 e6       	ldi	r26, 0x60	; 96
     380:	b0 e0       	ldi	r27, 0x00	; 0
     382:	25 c1       	rjmp	.+586    	; 0x5ce <__stack+0x16f>
     384:	84 30       	cpi	r24, 0x04	; 4
     386:	09 f4       	brne	.+2      	; 0x38a <_fpadd_parts+0x46>
     388:	21 c1       	rjmp	.+578    	; 0x5cc <__stack+0x16d>
     38a:	82 30       	cpi	r24, 0x02	; 2
     38c:	a9 f4       	brne	.+42     	; 0x3b8 <_fpadd_parts+0x74>
     38e:	92 30       	cpi	r25, 0x02	; 2
     390:	09 f0       	breq	.+2      	; 0x394 <_fpadd_parts+0x50>
     392:	1d c1       	rjmp	.+570    	; 0x5ce <__stack+0x16f>
     394:	9a 01       	movw	r18, r20
     396:	ad 01       	movw	r20, r26
     398:	88 e0       	ldi	r24, 0x08	; 8
     39a:	ea 01       	movw	r28, r20
     39c:	09 90       	ld	r0, Y+
     39e:	ae 01       	movw	r20, r28
     3a0:	e9 01       	movw	r28, r18
     3a2:	09 92       	st	Y+, r0
     3a4:	9e 01       	movw	r18, r28
     3a6:	81 50       	subi	r24, 0x01	; 1
     3a8:	c1 f7       	brne	.-16     	; 0x39a <_fpadd_parts+0x56>
     3aa:	e2 01       	movw	r28, r4
     3ac:	89 81       	ldd	r24, Y+1	; 0x01
     3ae:	11 96       	adiw	r26, 0x01	; 1
     3b0:	9c 91       	ld	r25, X
     3b2:	89 23       	and	r24, r25
     3b4:	81 83       	std	Z+1, r24	; 0x01
     3b6:	08 c1       	rjmp	.+528    	; 0x5c8 <__stack+0x169>
     3b8:	92 30       	cpi	r25, 0x02	; 2
     3ba:	09 f4       	brne	.+2      	; 0x3be <_fpadd_parts+0x7a>
     3bc:	07 c1       	rjmp	.+526    	; 0x5cc <__stack+0x16d>
     3be:	12 96       	adiw	r26, 0x02	; 2
     3c0:	2d 90       	ld	r2, X+
     3c2:	3c 90       	ld	r3, X
     3c4:	13 97       	sbiw	r26, 0x03	; 3
     3c6:	eb 01       	movw	r28, r22
     3c8:	8a 81       	ldd	r24, Y+2	; 0x02
     3ca:	9b 81       	ldd	r25, Y+3	; 0x03
     3cc:	14 96       	adiw	r26, 0x04	; 4
     3ce:	ad 90       	ld	r10, X+
     3d0:	bd 90       	ld	r11, X+
     3d2:	cd 90       	ld	r12, X+
     3d4:	dc 90       	ld	r13, X
     3d6:	17 97       	sbiw	r26, 0x07	; 7
     3d8:	ec 80       	ldd	r14, Y+4	; 0x04
     3da:	fd 80       	ldd	r15, Y+5	; 0x05
     3dc:	0e 81       	ldd	r16, Y+6	; 0x06
     3de:	1f 81       	ldd	r17, Y+7	; 0x07
     3e0:	91 01       	movw	r18, r2
     3e2:	28 1b       	sub	r18, r24
     3e4:	39 0b       	sbc	r19, r25
     3e6:	b9 01       	movw	r22, r18
     3e8:	37 ff       	sbrs	r19, 7
     3ea:	04 c0       	rjmp	.+8      	; 0x3f4 <_fpadd_parts+0xb0>
     3ec:	66 27       	eor	r22, r22
     3ee:	77 27       	eor	r23, r23
     3f0:	62 1b       	sub	r22, r18
     3f2:	73 0b       	sbc	r23, r19
     3f4:	60 32       	cpi	r22, 0x20	; 32
     3f6:	71 05       	cpc	r23, r1
     3f8:	0c f0       	brlt	.+2      	; 0x3fc <_fpadd_parts+0xb8>
     3fa:	61 c0       	rjmp	.+194    	; 0x4be <__stack+0x5f>
     3fc:	12 16       	cp	r1, r18
     3fe:	13 06       	cpc	r1, r19
     400:	6c f5       	brge	.+90     	; 0x45c <_fpadd_parts+0x118>
     402:	37 01       	movw	r6, r14
     404:	48 01       	movw	r8, r16
     406:	06 2e       	mov	r0, r22
     408:	04 c0       	rjmp	.+8      	; 0x412 <_fpadd_parts+0xce>
     40a:	96 94       	lsr	r9
     40c:	87 94       	ror	r8
     40e:	77 94       	ror	r7
     410:	67 94       	ror	r6
     412:	0a 94       	dec	r0
     414:	d2 f7       	brpl	.-12     	; 0x40a <_fpadd_parts+0xc6>
     416:	21 e0       	ldi	r18, 0x01	; 1
     418:	30 e0       	ldi	r19, 0x00	; 0
     41a:	40 e0       	ldi	r20, 0x00	; 0
     41c:	50 e0       	ldi	r21, 0x00	; 0
     41e:	04 c0       	rjmp	.+8      	; 0x428 <_fpadd_parts+0xe4>
     420:	22 0f       	add	r18, r18
     422:	33 1f       	adc	r19, r19
     424:	44 1f       	adc	r20, r20
     426:	55 1f       	adc	r21, r21
     428:	6a 95       	dec	r22
     42a:	d2 f7       	brpl	.-12     	; 0x420 <_fpadd_parts+0xdc>
     42c:	21 50       	subi	r18, 0x01	; 1
     42e:	30 40       	sbci	r19, 0x00	; 0
     430:	40 40       	sbci	r20, 0x00	; 0
     432:	50 40       	sbci	r21, 0x00	; 0
     434:	2e 21       	and	r18, r14
     436:	3f 21       	and	r19, r15
     438:	40 23       	and	r20, r16
     43a:	51 23       	and	r21, r17
     43c:	21 15       	cp	r18, r1
     43e:	31 05       	cpc	r19, r1
     440:	41 05       	cpc	r20, r1
     442:	51 05       	cpc	r21, r1
     444:	21 f0       	breq	.+8      	; 0x44e <_fpadd_parts+0x10a>
     446:	21 e0       	ldi	r18, 0x01	; 1
     448:	30 e0       	ldi	r19, 0x00	; 0
     44a:	40 e0       	ldi	r20, 0x00	; 0
     44c:	50 e0       	ldi	r21, 0x00	; 0
     44e:	79 01       	movw	r14, r18
     450:	8a 01       	movw	r16, r20
     452:	e6 28       	or	r14, r6
     454:	f7 28       	or	r15, r7
     456:	08 29       	or	r16, r8
     458:	19 29       	or	r17, r9
     45a:	3c c0       	rjmp	.+120    	; 0x4d4 <__stack+0x75>
     45c:	23 2b       	or	r18, r19
     45e:	d1 f1       	breq	.+116    	; 0x4d4 <__stack+0x75>
     460:	26 0e       	add	r2, r22
     462:	37 1e       	adc	r3, r23
     464:	35 01       	movw	r6, r10
     466:	46 01       	movw	r8, r12
     468:	06 2e       	mov	r0, r22
     46a:	04 c0       	rjmp	.+8      	; 0x474 <__stack+0x15>
     46c:	96 94       	lsr	r9
     46e:	87 94       	ror	r8
     470:	77 94       	ror	r7
     472:	67 94       	ror	r6
     474:	0a 94       	dec	r0
     476:	d2 f7       	brpl	.-12     	; 0x46c <__stack+0xd>
     478:	21 e0       	ldi	r18, 0x01	; 1
     47a:	30 e0       	ldi	r19, 0x00	; 0
     47c:	40 e0       	ldi	r20, 0x00	; 0
     47e:	50 e0       	ldi	r21, 0x00	; 0
     480:	04 c0       	rjmp	.+8      	; 0x48a <__stack+0x2b>
     482:	22 0f       	add	r18, r18
     484:	33 1f       	adc	r19, r19
     486:	44 1f       	adc	r20, r20
     488:	55 1f       	adc	r21, r21
     48a:	6a 95       	dec	r22
     48c:	d2 f7       	brpl	.-12     	; 0x482 <__stack+0x23>
     48e:	21 50       	subi	r18, 0x01	; 1
     490:	30 40       	sbci	r19, 0x00	; 0
     492:	40 40       	sbci	r20, 0x00	; 0
     494:	50 40       	sbci	r21, 0x00	; 0
     496:	2a 21       	and	r18, r10
     498:	3b 21       	and	r19, r11
     49a:	4c 21       	and	r20, r12
     49c:	5d 21       	and	r21, r13
     49e:	21 15       	cp	r18, r1
     4a0:	31 05       	cpc	r19, r1
     4a2:	41 05       	cpc	r20, r1
     4a4:	51 05       	cpc	r21, r1
     4a6:	21 f0       	breq	.+8      	; 0x4b0 <__stack+0x51>
     4a8:	21 e0       	ldi	r18, 0x01	; 1
     4aa:	30 e0       	ldi	r19, 0x00	; 0
     4ac:	40 e0       	ldi	r20, 0x00	; 0
     4ae:	50 e0       	ldi	r21, 0x00	; 0
     4b0:	59 01       	movw	r10, r18
     4b2:	6a 01       	movw	r12, r20
     4b4:	a6 28       	or	r10, r6
     4b6:	b7 28       	or	r11, r7
     4b8:	c8 28       	or	r12, r8
     4ba:	d9 28       	or	r13, r9
     4bc:	0b c0       	rjmp	.+22     	; 0x4d4 <__stack+0x75>
     4be:	82 15       	cp	r24, r2
     4c0:	93 05       	cpc	r25, r3
     4c2:	2c f0       	brlt	.+10     	; 0x4ce <__stack+0x6f>
     4c4:	1c 01       	movw	r2, r24
     4c6:	aa 24       	eor	r10, r10
     4c8:	bb 24       	eor	r11, r11
     4ca:	65 01       	movw	r12, r10
     4cc:	03 c0       	rjmp	.+6      	; 0x4d4 <__stack+0x75>
     4ce:	ee 24       	eor	r14, r14
     4d0:	ff 24       	eor	r15, r15
     4d2:	87 01       	movw	r16, r14
     4d4:	11 96       	adiw	r26, 0x01	; 1
     4d6:	9c 91       	ld	r25, X
     4d8:	d2 01       	movw	r26, r4
     4da:	11 96       	adiw	r26, 0x01	; 1
     4dc:	8c 91       	ld	r24, X
     4de:	98 17       	cp	r25, r24
     4e0:	09 f4       	brne	.+2      	; 0x4e4 <__stack+0x85>
     4e2:	45 c0       	rjmp	.+138    	; 0x56e <__stack+0x10f>
     4e4:	99 23       	and	r25, r25
     4e6:	39 f0       	breq	.+14     	; 0x4f6 <__stack+0x97>
     4e8:	a8 01       	movw	r20, r16
     4ea:	97 01       	movw	r18, r14
     4ec:	2a 19       	sub	r18, r10
     4ee:	3b 09       	sbc	r19, r11
     4f0:	4c 09       	sbc	r20, r12
     4f2:	5d 09       	sbc	r21, r13
     4f4:	06 c0       	rjmp	.+12     	; 0x502 <__stack+0xa3>
     4f6:	a6 01       	movw	r20, r12
     4f8:	95 01       	movw	r18, r10
     4fa:	2e 19       	sub	r18, r14
     4fc:	3f 09       	sbc	r19, r15
     4fe:	40 0b       	sbc	r20, r16
     500:	51 0b       	sbc	r21, r17
     502:	57 fd       	sbrc	r21, 7
     504:	08 c0       	rjmp	.+16     	; 0x516 <__stack+0xb7>
     506:	11 82       	std	Z+1, r1	; 0x01
     508:	33 82       	std	Z+3, r3	; 0x03
     50a:	22 82       	std	Z+2, r2	; 0x02
     50c:	24 83       	std	Z+4, r18	; 0x04
     50e:	35 83       	std	Z+5, r19	; 0x05
     510:	46 83       	std	Z+6, r20	; 0x06
     512:	57 83       	std	Z+7, r21	; 0x07
     514:	1d c0       	rjmp	.+58     	; 0x550 <__stack+0xf1>
     516:	81 e0       	ldi	r24, 0x01	; 1
     518:	81 83       	std	Z+1, r24	; 0x01
     51a:	33 82       	std	Z+3, r3	; 0x03
     51c:	22 82       	std	Z+2, r2	; 0x02
     51e:	88 27       	eor	r24, r24
     520:	99 27       	eor	r25, r25
     522:	dc 01       	movw	r26, r24
     524:	82 1b       	sub	r24, r18
     526:	93 0b       	sbc	r25, r19
     528:	a4 0b       	sbc	r26, r20
     52a:	b5 0b       	sbc	r27, r21
     52c:	84 83       	std	Z+4, r24	; 0x04
     52e:	95 83       	std	Z+5, r25	; 0x05
     530:	a6 83       	std	Z+6, r26	; 0x06
     532:	b7 83       	std	Z+7, r27	; 0x07
     534:	0d c0       	rjmp	.+26     	; 0x550 <__stack+0xf1>
     536:	22 0f       	add	r18, r18
     538:	33 1f       	adc	r19, r19
     53a:	44 1f       	adc	r20, r20
     53c:	55 1f       	adc	r21, r21
     53e:	24 83       	std	Z+4, r18	; 0x04
     540:	35 83       	std	Z+5, r19	; 0x05
     542:	46 83       	std	Z+6, r20	; 0x06
     544:	57 83       	std	Z+7, r21	; 0x07
     546:	82 81       	ldd	r24, Z+2	; 0x02
     548:	93 81       	ldd	r25, Z+3	; 0x03
     54a:	01 97       	sbiw	r24, 0x01	; 1
     54c:	93 83       	std	Z+3, r25	; 0x03
     54e:	82 83       	std	Z+2, r24	; 0x02
     550:	24 81       	ldd	r18, Z+4	; 0x04
     552:	35 81       	ldd	r19, Z+5	; 0x05
     554:	46 81       	ldd	r20, Z+6	; 0x06
     556:	57 81       	ldd	r21, Z+7	; 0x07
     558:	da 01       	movw	r26, r20
     55a:	c9 01       	movw	r24, r18
     55c:	01 97       	sbiw	r24, 0x01	; 1
     55e:	a1 09       	sbc	r26, r1
     560:	b1 09       	sbc	r27, r1
     562:	8f 5f       	subi	r24, 0xFF	; 255
     564:	9f 4f       	sbci	r25, 0xFF	; 255
     566:	af 4f       	sbci	r26, 0xFF	; 255
     568:	bf 43       	sbci	r27, 0x3F	; 63
     56a:	28 f3       	brcs	.-54     	; 0x536 <__stack+0xd7>
     56c:	0b c0       	rjmp	.+22     	; 0x584 <__stack+0x125>
     56e:	91 83       	std	Z+1, r25	; 0x01
     570:	33 82       	std	Z+3, r3	; 0x03
     572:	22 82       	std	Z+2, r2	; 0x02
     574:	ea 0c       	add	r14, r10
     576:	fb 1c       	adc	r15, r11
     578:	0c 1d       	adc	r16, r12
     57a:	1d 1d       	adc	r17, r13
     57c:	e4 82       	std	Z+4, r14	; 0x04
     57e:	f5 82       	std	Z+5, r15	; 0x05
     580:	06 83       	std	Z+6, r16	; 0x06
     582:	17 83       	std	Z+7, r17	; 0x07
     584:	83 e0       	ldi	r24, 0x03	; 3
     586:	80 83       	st	Z, r24
     588:	24 81       	ldd	r18, Z+4	; 0x04
     58a:	35 81       	ldd	r19, Z+5	; 0x05
     58c:	46 81       	ldd	r20, Z+6	; 0x06
     58e:	57 81       	ldd	r21, Z+7	; 0x07
     590:	57 ff       	sbrs	r21, 7
     592:	1a c0       	rjmp	.+52     	; 0x5c8 <__stack+0x169>
     594:	c9 01       	movw	r24, r18
     596:	aa 27       	eor	r26, r26
     598:	97 fd       	sbrc	r25, 7
     59a:	a0 95       	com	r26
     59c:	ba 2f       	mov	r27, r26
     59e:	81 70       	andi	r24, 0x01	; 1
     5a0:	90 70       	andi	r25, 0x00	; 0
     5a2:	a0 70       	andi	r26, 0x00	; 0
     5a4:	b0 70       	andi	r27, 0x00	; 0
     5a6:	56 95       	lsr	r21
     5a8:	47 95       	ror	r20
     5aa:	37 95       	ror	r19
     5ac:	27 95       	ror	r18
     5ae:	82 2b       	or	r24, r18
     5b0:	93 2b       	or	r25, r19
     5b2:	a4 2b       	or	r26, r20
     5b4:	b5 2b       	or	r27, r21
     5b6:	84 83       	std	Z+4, r24	; 0x04
     5b8:	95 83       	std	Z+5, r25	; 0x05
     5ba:	a6 83       	std	Z+6, r26	; 0x06
     5bc:	b7 83       	std	Z+7, r27	; 0x07
     5be:	82 81       	ldd	r24, Z+2	; 0x02
     5c0:	93 81       	ldd	r25, Z+3	; 0x03
     5c2:	01 96       	adiw	r24, 0x01	; 1
     5c4:	93 83       	std	Z+3, r25	; 0x03
     5c6:	82 83       	std	Z+2, r24	; 0x02
     5c8:	df 01       	movw	r26, r30
     5ca:	01 c0       	rjmp	.+2      	; 0x5ce <__stack+0x16f>
     5cc:	d2 01       	movw	r26, r4
     5ce:	cd 01       	movw	r24, r26
     5d0:	cd b7       	in	r28, 0x3d	; 61
     5d2:	de b7       	in	r29, 0x3e	; 62
     5d4:	e2 e1       	ldi	r30, 0x12	; 18
     5d6:	17 c5       	rjmp	.+2606   	; 0x1006 <__epilogue_restores__>

000005d8 <__subsf3>:
     5d8:	a0 e2       	ldi	r26, 0x20	; 32
     5da:	b0 e0       	ldi	r27, 0x00	; 0
     5dc:	e1 ef       	ldi	r30, 0xF1	; 241
     5de:	f2 e0       	ldi	r31, 0x02	; 2
     5e0:	02 c5       	rjmp	.+2564   	; 0xfe6 <__prologue_saves__+0x18>
     5e2:	69 83       	std	Y+1, r22	; 0x01
     5e4:	7a 83       	std	Y+2, r23	; 0x02
     5e6:	8b 83       	std	Y+3, r24	; 0x03
     5e8:	9c 83       	std	Y+4, r25	; 0x04
     5ea:	2d 83       	std	Y+5, r18	; 0x05
     5ec:	3e 83       	std	Y+6, r19	; 0x06
     5ee:	4f 83       	std	Y+7, r20	; 0x07
     5f0:	58 87       	std	Y+8, r21	; 0x08
     5f2:	e9 e0       	ldi	r30, 0x09	; 9
     5f4:	ee 2e       	mov	r14, r30
     5f6:	f1 2c       	mov	r15, r1
     5f8:	ec 0e       	add	r14, r28
     5fa:	fd 1e       	adc	r15, r29
     5fc:	ce 01       	movw	r24, r28
     5fe:	01 96       	adiw	r24, 0x01	; 1
     600:	b7 01       	movw	r22, r14
     602:	ed d3       	rcall	.+2010   	; 0xdde <__unpack_f>
     604:	8e 01       	movw	r16, r28
     606:	0f 5e       	subi	r16, 0xEF	; 239
     608:	1f 4f       	sbci	r17, 0xFF	; 255
     60a:	ce 01       	movw	r24, r28
     60c:	05 96       	adiw	r24, 0x05	; 5
     60e:	b8 01       	movw	r22, r16
     610:	e6 d3       	rcall	.+1996   	; 0xdde <__unpack_f>
     612:	8a 89       	ldd	r24, Y+18	; 0x12
     614:	91 e0       	ldi	r25, 0x01	; 1
     616:	89 27       	eor	r24, r25
     618:	8a 8b       	std	Y+18, r24	; 0x12
     61a:	c7 01       	movw	r24, r14
     61c:	b8 01       	movw	r22, r16
     61e:	ae 01       	movw	r20, r28
     620:	47 5e       	subi	r20, 0xE7	; 231
     622:	5f 4f       	sbci	r21, 0xFF	; 255
     624:	8f de       	rcall	.-738    	; 0x344 <_fpadd_parts>
     626:	06 d3       	rcall	.+1548   	; 0xc34 <__pack_f>
     628:	a0 96       	adiw	r28, 0x20	; 32
     62a:	e6 e0       	ldi	r30, 0x06	; 6
     62c:	f8 c4       	rjmp	.+2544   	; 0x101e <__epilogue_restores__+0x18>

0000062e <__addsf3>:
     62e:	a0 e2       	ldi	r26, 0x20	; 32
     630:	b0 e0       	ldi	r27, 0x00	; 0
     632:	ec e1       	ldi	r30, 0x1C	; 28
     634:	f3 e0       	ldi	r31, 0x03	; 3
     636:	d7 c4       	rjmp	.+2478   	; 0xfe6 <__prologue_saves__+0x18>
     638:	69 83       	std	Y+1, r22	; 0x01
     63a:	7a 83       	std	Y+2, r23	; 0x02
     63c:	8b 83       	std	Y+3, r24	; 0x03
     63e:	9c 83       	std	Y+4, r25	; 0x04
     640:	2d 83       	std	Y+5, r18	; 0x05
     642:	3e 83       	std	Y+6, r19	; 0x06
     644:	4f 83       	std	Y+7, r20	; 0x07
     646:	58 87       	std	Y+8, r21	; 0x08
     648:	f9 e0       	ldi	r31, 0x09	; 9
     64a:	ef 2e       	mov	r14, r31
     64c:	f1 2c       	mov	r15, r1
     64e:	ec 0e       	add	r14, r28
     650:	fd 1e       	adc	r15, r29
     652:	ce 01       	movw	r24, r28
     654:	01 96       	adiw	r24, 0x01	; 1
     656:	b7 01       	movw	r22, r14
     658:	c2 d3       	rcall	.+1924   	; 0xdde <__unpack_f>
     65a:	8e 01       	movw	r16, r28
     65c:	0f 5e       	subi	r16, 0xEF	; 239
     65e:	1f 4f       	sbci	r17, 0xFF	; 255
     660:	ce 01       	movw	r24, r28
     662:	05 96       	adiw	r24, 0x05	; 5
     664:	b8 01       	movw	r22, r16
     666:	bb d3       	rcall	.+1910   	; 0xdde <__unpack_f>
     668:	c7 01       	movw	r24, r14
     66a:	b8 01       	movw	r22, r16
     66c:	ae 01       	movw	r20, r28
     66e:	47 5e       	subi	r20, 0xE7	; 231
     670:	5f 4f       	sbci	r21, 0xFF	; 255
     672:	68 de       	rcall	.-816    	; 0x344 <_fpadd_parts>
     674:	df d2       	rcall	.+1470   	; 0xc34 <__pack_f>
     676:	a0 96       	adiw	r28, 0x20	; 32
     678:	e6 e0       	ldi	r30, 0x06	; 6
     67a:	d1 c4       	rjmp	.+2466   	; 0x101e <__epilogue_restores__+0x18>

0000067c <__mulsf3>:
     67c:	a0 e2       	ldi	r26, 0x20	; 32
     67e:	b0 e0       	ldi	r27, 0x00	; 0
     680:	e3 e4       	ldi	r30, 0x43	; 67
     682:	f3 e0       	ldi	r31, 0x03	; 3
     684:	a4 c4       	rjmp	.+2376   	; 0xfce <__prologue_saves__>
     686:	69 83       	std	Y+1, r22	; 0x01
     688:	7a 83       	std	Y+2, r23	; 0x02
     68a:	8b 83       	std	Y+3, r24	; 0x03
     68c:	9c 83       	std	Y+4, r25	; 0x04
     68e:	2d 83       	std	Y+5, r18	; 0x05
     690:	3e 83       	std	Y+6, r19	; 0x06
     692:	4f 83       	std	Y+7, r20	; 0x07
     694:	58 87       	std	Y+8, r21	; 0x08
     696:	ce 01       	movw	r24, r28
     698:	01 96       	adiw	r24, 0x01	; 1
     69a:	be 01       	movw	r22, r28
     69c:	67 5f       	subi	r22, 0xF7	; 247
     69e:	7f 4f       	sbci	r23, 0xFF	; 255
     6a0:	9e d3       	rcall	.+1852   	; 0xdde <__unpack_f>
     6a2:	ce 01       	movw	r24, r28
     6a4:	05 96       	adiw	r24, 0x05	; 5
     6a6:	be 01       	movw	r22, r28
     6a8:	6f 5e       	subi	r22, 0xEF	; 239
     6aa:	7f 4f       	sbci	r23, 0xFF	; 255
     6ac:	98 d3       	rcall	.+1840   	; 0xdde <__unpack_f>
     6ae:	99 85       	ldd	r25, Y+9	; 0x09
     6b0:	92 30       	cpi	r25, 0x02	; 2
     6b2:	88 f0       	brcs	.+34     	; 0x6d6 <__mulsf3+0x5a>
     6b4:	89 89       	ldd	r24, Y+17	; 0x11
     6b6:	82 30       	cpi	r24, 0x02	; 2
     6b8:	c8 f0       	brcs	.+50     	; 0x6ec <__mulsf3+0x70>
     6ba:	94 30       	cpi	r25, 0x04	; 4
     6bc:	19 f4       	brne	.+6      	; 0x6c4 <__mulsf3+0x48>
     6be:	82 30       	cpi	r24, 0x02	; 2
     6c0:	51 f4       	brne	.+20     	; 0x6d6 <__mulsf3+0x5a>
     6c2:	04 c0       	rjmp	.+8      	; 0x6cc <__mulsf3+0x50>
     6c4:	84 30       	cpi	r24, 0x04	; 4
     6c6:	29 f4       	brne	.+10     	; 0x6d2 <__mulsf3+0x56>
     6c8:	92 30       	cpi	r25, 0x02	; 2
     6ca:	81 f4       	brne	.+32     	; 0x6ec <__mulsf3+0x70>
     6cc:	80 e6       	ldi	r24, 0x60	; 96
     6ce:	90 e0       	ldi	r25, 0x00	; 0
     6d0:	c6 c0       	rjmp	.+396    	; 0x85e <__mulsf3+0x1e2>
     6d2:	92 30       	cpi	r25, 0x02	; 2
     6d4:	49 f4       	brne	.+18     	; 0x6e8 <__mulsf3+0x6c>
     6d6:	20 e0       	ldi	r18, 0x00	; 0
     6d8:	9a 85       	ldd	r25, Y+10	; 0x0a
     6da:	8a 89       	ldd	r24, Y+18	; 0x12
     6dc:	98 13       	cpse	r25, r24
     6de:	21 e0       	ldi	r18, 0x01	; 1
     6e0:	2a 87       	std	Y+10, r18	; 0x0a
     6e2:	ce 01       	movw	r24, r28
     6e4:	09 96       	adiw	r24, 0x09	; 9
     6e6:	bb c0       	rjmp	.+374    	; 0x85e <__mulsf3+0x1e2>
     6e8:	82 30       	cpi	r24, 0x02	; 2
     6ea:	49 f4       	brne	.+18     	; 0x6fe <__mulsf3+0x82>
     6ec:	20 e0       	ldi	r18, 0x00	; 0
     6ee:	9a 85       	ldd	r25, Y+10	; 0x0a
     6f0:	8a 89       	ldd	r24, Y+18	; 0x12
     6f2:	98 13       	cpse	r25, r24
     6f4:	21 e0       	ldi	r18, 0x01	; 1
     6f6:	2a 8b       	std	Y+18, r18	; 0x12
     6f8:	ce 01       	movw	r24, r28
     6fa:	41 96       	adiw	r24, 0x11	; 17
     6fc:	b0 c0       	rjmp	.+352    	; 0x85e <__mulsf3+0x1e2>
     6fe:	2d 84       	ldd	r2, Y+13	; 0x0d
     700:	3e 84       	ldd	r3, Y+14	; 0x0e
     702:	4f 84       	ldd	r4, Y+15	; 0x0f
     704:	58 88       	ldd	r5, Y+16	; 0x10
     706:	6d 88       	ldd	r6, Y+21	; 0x15
     708:	7e 88       	ldd	r7, Y+22	; 0x16
     70a:	8f 88       	ldd	r8, Y+23	; 0x17
     70c:	98 8c       	ldd	r9, Y+24	; 0x18
     70e:	ee 24       	eor	r14, r14
     710:	ff 24       	eor	r15, r15
     712:	87 01       	movw	r16, r14
     714:	aa 24       	eor	r10, r10
     716:	bb 24       	eor	r11, r11
     718:	65 01       	movw	r12, r10
     71a:	40 e0       	ldi	r20, 0x00	; 0
     71c:	50 e0       	ldi	r21, 0x00	; 0
     71e:	60 e0       	ldi	r22, 0x00	; 0
     720:	70 e0       	ldi	r23, 0x00	; 0
     722:	e0 e0       	ldi	r30, 0x00	; 0
     724:	f0 e0       	ldi	r31, 0x00	; 0
     726:	c1 01       	movw	r24, r2
     728:	81 70       	andi	r24, 0x01	; 1
     72a:	90 70       	andi	r25, 0x00	; 0
     72c:	89 2b       	or	r24, r25
     72e:	e9 f0       	breq	.+58     	; 0x76a <__mulsf3+0xee>
     730:	e6 0c       	add	r14, r6
     732:	f7 1c       	adc	r15, r7
     734:	08 1d       	adc	r16, r8
     736:	19 1d       	adc	r17, r9
     738:	9a 01       	movw	r18, r20
     73a:	ab 01       	movw	r20, r22
     73c:	2a 0d       	add	r18, r10
     73e:	3b 1d       	adc	r19, r11
     740:	4c 1d       	adc	r20, r12
     742:	5d 1d       	adc	r21, r13
     744:	80 e0       	ldi	r24, 0x00	; 0
     746:	90 e0       	ldi	r25, 0x00	; 0
     748:	a0 e0       	ldi	r26, 0x00	; 0
     74a:	b0 e0       	ldi	r27, 0x00	; 0
     74c:	e6 14       	cp	r14, r6
     74e:	f7 04       	cpc	r15, r7
     750:	08 05       	cpc	r16, r8
     752:	19 05       	cpc	r17, r9
     754:	20 f4       	brcc	.+8      	; 0x75e <__mulsf3+0xe2>
     756:	81 e0       	ldi	r24, 0x01	; 1
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	a0 e0       	ldi	r26, 0x00	; 0
     75c:	b0 e0       	ldi	r27, 0x00	; 0
     75e:	ba 01       	movw	r22, r20
     760:	a9 01       	movw	r20, r18
     762:	48 0f       	add	r20, r24
     764:	59 1f       	adc	r21, r25
     766:	6a 1f       	adc	r22, r26
     768:	7b 1f       	adc	r23, r27
     76a:	aa 0c       	add	r10, r10
     76c:	bb 1c       	adc	r11, r11
     76e:	cc 1c       	adc	r12, r12
     770:	dd 1c       	adc	r13, r13
     772:	97 fe       	sbrs	r9, 7
     774:	08 c0       	rjmp	.+16     	; 0x786 <__mulsf3+0x10a>
     776:	81 e0       	ldi	r24, 0x01	; 1
     778:	90 e0       	ldi	r25, 0x00	; 0
     77a:	a0 e0       	ldi	r26, 0x00	; 0
     77c:	b0 e0       	ldi	r27, 0x00	; 0
     77e:	a8 2a       	or	r10, r24
     780:	b9 2a       	or	r11, r25
     782:	ca 2a       	or	r12, r26
     784:	db 2a       	or	r13, r27
     786:	31 96       	adiw	r30, 0x01	; 1
     788:	e0 32       	cpi	r30, 0x20	; 32
     78a:	f1 05       	cpc	r31, r1
     78c:	49 f0       	breq	.+18     	; 0x7a0 <__mulsf3+0x124>
     78e:	66 0c       	add	r6, r6
     790:	77 1c       	adc	r7, r7
     792:	88 1c       	adc	r8, r8
     794:	99 1c       	adc	r9, r9
     796:	56 94       	lsr	r5
     798:	47 94       	ror	r4
     79a:	37 94       	ror	r3
     79c:	27 94       	ror	r2
     79e:	c3 cf       	rjmp	.-122    	; 0x726 <__mulsf3+0xaa>
     7a0:	fa 85       	ldd	r31, Y+10	; 0x0a
     7a2:	ea 89       	ldd	r30, Y+18	; 0x12
     7a4:	2b 89       	ldd	r18, Y+19	; 0x13
     7a6:	3c 89       	ldd	r19, Y+20	; 0x14
     7a8:	8b 85       	ldd	r24, Y+11	; 0x0b
     7aa:	9c 85       	ldd	r25, Y+12	; 0x0c
     7ac:	28 0f       	add	r18, r24
     7ae:	39 1f       	adc	r19, r25
     7b0:	2e 5f       	subi	r18, 0xFE	; 254
     7b2:	3f 4f       	sbci	r19, 0xFF	; 255
     7b4:	17 c0       	rjmp	.+46     	; 0x7e4 <__mulsf3+0x168>
     7b6:	ca 01       	movw	r24, r20
     7b8:	81 70       	andi	r24, 0x01	; 1
     7ba:	90 70       	andi	r25, 0x00	; 0
     7bc:	89 2b       	or	r24, r25
     7be:	61 f0       	breq	.+24     	; 0x7d8 <__mulsf3+0x15c>
     7c0:	16 95       	lsr	r17
     7c2:	07 95       	ror	r16
     7c4:	f7 94       	ror	r15
     7c6:	e7 94       	ror	r14
     7c8:	80 e0       	ldi	r24, 0x00	; 0
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	a0 e0       	ldi	r26, 0x00	; 0
     7ce:	b0 e8       	ldi	r27, 0x80	; 128
     7d0:	e8 2a       	or	r14, r24
     7d2:	f9 2a       	or	r15, r25
     7d4:	0a 2b       	or	r16, r26
     7d6:	1b 2b       	or	r17, r27
     7d8:	76 95       	lsr	r23
     7da:	67 95       	ror	r22
     7dc:	57 95       	ror	r21
     7de:	47 95       	ror	r20
     7e0:	2f 5f       	subi	r18, 0xFF	; 255
     7e2:	3f 4f       	sbci	r19, 0xFF	; 255
     7e4:	77 fd       	sbrc	r23, 7
     7e6:	e7 cf       	rjmp	.-50     	; 0x7b6 <__mulsf3+0x13a>
     7e8:	0c c0       	rjmp	.+24     	; 0x802 <__mulsf3+0x186>
     7ea:	44 0f       	add	r20, r20
     7ec:	55 1f       	adc	r21, r21
     7ee:	66 1f       	adc	r22, r22
     7f0:	77 1f       	adc	r23, r23
     7f2:	17 fd       	sbrc	r17, 7
     7f4:	41 60       	ori	r20, 0x01	; 1
     7f6:	ee 0c       	add	r14, r14
     7f8:	ff 1c       	adc	r15, r15
     7fa:	00 1f       	adc	r16, r16
     7fc:	11 1f       	adc	r17, r17
     7fe:	21 50       	subi	r18, 0x01	; 1
     800:	30 40       	sbci	r19, 0x00	; 0
     802:	40 30       	cpi	r20, 0x00	; 0
     804:	90 e0       	ldi	r25, 0x00	; 0
     806:	59 07       	cpc	r21, r25
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	69 07       	cpc	r22, r25
     80c:	90 e4       	ldi	r25, 0x40	; 64
     80e:	79 07       	cpc	r23, r25
     810:	60 f3       	brcs	.-40     	; 0x7ea <__mulsf3+0x16e>
     812:	2b 8f       	std	Y+27, r18	; 0x1b
     814:	3c 8f       	std	Y+28, r19	; 0x1c
     816:	db 01       	movw	r26, r22
     818:	ca 01       	movw	r24, r20
     81a:	8f 77       	andi	r24, 0x7F	; 127
     81c:	90 70       	andi	r25, 0x00	; 0
     81e:	a0 70       	andi	r26, 0x00	; 0
     820:	b0 70       	andi	r27, 0x00	; 0
     822:	80 34       	cpi	r24, 0x40	; 64
     824:	91 05       	cpc	r25, r1
     826:	a1 05       	cpc	r26, r1
     828:	b1 05       	cpc	r27, r1
     82a:	61 f4       	brne	.+24     	; 0x844 <__mulsf3+0x1c8>
     82c:	47 fd       	sbrc	r20, 7
     82e:	0a c0       	rjmp	.+20     	; 0x844 <__mulsf3+0x1c8>
     830:	e1 14       	cp	r14, r1
     832:	f1 04       	cpc	r15, r1
     834:	01 05       	cpc	r16, r1
     836:	11 05       	cpc	r17, r1
     838:	29 f0       	breq	.+10     	; 0x844 <__mulsf3+0x1c8>
     83a:	40 5c       	subi	r20, 0xC0	; 192
     83c:	5f 4f       	sbci	r21, 0xFF	; 255
     83e:	6f 4f       	sbci	r22, 0xFF	; 255
     840:	7f 4f       	sbci	r23, 0xFF	; 255
     842:	40 78       	andi	r20, 0x80	; 128
     844:	1a 8e       	std	Y+26, r1	; 0x1a
     846:	fe 17       	cp	r31, r30
     848:	11 f0       	breq	.+4      	; 0x84e <__mulsf3+0x1d2>
     84a:	81 e0       	ldi	r24, 0x01	; 1
     84c:	8a 8f       	std	Y+26, r24	; 0x1a
     84e:	4d 8f       	std	Y+29, r20	; 0x1d
     850:	5e 8f       	std	Y+30, r21	; 0x1e
     852:	6f 8f       	std	Y+31, r22	; 0x1f
     854:	78 a3       	std	Y+32, r23	; 0x20
     856:	83 e0       	ldi	r24, 0x03	; 3
     858:	89 8f       	std	Y+25, r24	; 0x19
     85a:	ce 01       	movw	r24, r28
     85c:	49 96       	adiw	r24, 0x19	; 25
     85e:	ea d1       	rcall	.+980    	; 0xc34 <__pack_f>
     860:	a0 96       	adiw	r28, 0x20	; 32
     862:	e2 e1       	ldi	r30, 0x12	; 18
     864:	d0 c3       	rjmp	.+1952   	; 0x1006 <__epilogue_restores__>

00000866 <__divsf3>:
     866:	a8 e1       	ldi	r26, 0x18	; 24
     868:	b0 e0       	ldi	r27, 0x00	; 0
     86a:	e8 e3       	ldi	r30, 0x38	; 56
     86c:	f4 e0       	ldi	r31, 0x04	; 4
     86e:	b7 c3       	rjmp	.+1902   	; 0xfde <__prologue_saves__+0x10>
     870:	69 83       	std	Y+1, r22	; 0x01
     872:	7a 83       	std	Y+2, r23	; 0x02
     874:	8b 83       	std	Y+3, r24	; 0x03
     876:	9c 83       	std	Y+4, r25	; 0x04
     878:	2d 83       	std	Y+5, r18	; 0x05
     87a:	3e 83       	std	Y+6, r19	; 0x06
     87c:	4f 83       	std	Y+7, r20	; 0x07
     87e:	58 87       	std	Y+8, r21	; 0x08
     880:	b9 e0       	ldi	r27, 0x09	; 9
     882:	eb 2e       	mov	r14, r27
     884:	f1 2c       	mov	r15, r1
     886:	ec 0e       	add	r14, r28
     888:	fd 1e       	adc	r15, r29
     88a:	ce 01       	movw	r24, r28
     88c:	01 96       	adiw	r24, 0x01	; 1
     88e:	b7 01       	movw	r22, r14
     890:	a6 d2       	rcall	.+1356   	; 0xdde <__unpack_f>
     892:	8e 01       	movw	r16, r28
     894:	0f 5e       	subi	r16, 0xEF	; 239
     896:	1f 4f       	sbci	r17, 0xFF	; 255
     898:	ce 01       	movw	r24, r28
     89a:	05 96       	adiw	r24, 0x05	; 5
     89c:	b8 01       	movw	r22, r16
     89e:	9f d2       	rcall	.+1342   	; 0xdde <__unpack_f>
     8a0:	29 85       	ldd	r18, Y+9	; 0x09
     8a2:	22 30       	cpi	r18, 0x02	; 2
     8a4:	08 f4       	brcc	.+2      	; 0x8a8 <__divsf3+0x42>
     8a6:	7e c0       	rjmp	.+252    	; 0x9a4 <__divsf3+0x13e>
     8a8:	39 89       	ldd	r19, Y+17	; 0x11
     8aa:	32 30       	cpi	r19, 0x02	; 2
     8ac:	10 f4       	brcc	.+4      	; 0x8b2 <__divsf3+0x4c>
     8ae:	b8 01       	movw	r22, r16
     8b0:	7c c0       	rjmp	.+248    	; 0x9aa <__divsf3+0x144>
     8b2:	8a 85       	ldd	r24, Y+10	; 0x0a
     8b4:	9a 89       	ldd	r25, Y+18	; 0x12
     8b6:	89 27       	eor	r24, r25
     8b8:	8a 87       	std	Y+10, r24	; 0x0a
     8ba:	24 30       	cpi	r18, 0x04	; 4
     8bc:	11 f0       	breq	.+4      	; 0x8c2 <__divsf3+0x5c>
     8be:	22 30       	cpi	r18, 0x02	; 2
     8c0:	31 f4       	brne	.+12     	; 0x8ce <__divsf3+0x68>
     8c2:	23 17       	cp	r18, r19
     8c4:	09 f0       	breq	.+2      	; 0x8c8 <__divsf3+0x62>
     8c6:	6e c0       	rjmp	.+220    	; 0x9a4 <__divsf3+0x13e>
     8c8:	60 e6       	ldi	r22, 0x60	; 96
     8ca:	70 e0       	ldi	r23, 0x00	; 0
     8cc:	6e c0       	rjmp	.+220    	; 0x9aa <__divsf3+0x144>
     8ce:	34 30       	cpi	r19, 0x04	; 4
     8d0:	39 f4       	brne	.+14     	; 0x8e0 <__divsf3+0x7a>
     8d2:	1d 86       	std	Y+13, r1	; 0x0d
     8d4:	1e 86       	std	Y+14, r1	; 0x0e
     8d6:	1f 86       	std	Y+15, r1	; 0x0f
     8d8:	18 8a       	std	Y+16, r1	; 0x10
     8da:	1c 86       	std	Y+12, r1	; 0x0c
     8dc:	1b 86       	std	Y+11, r1	; 0x0b
     8de:	04 c0       	rjmp	.+8      	; 0x8e8 <__divsf3+0x82>
     8e0:	32 30       	cpi	r19, 0x02	; 2
     8e2:	21 f4       	brne	.+8      	; 0x8ec <__divsf3+0x86>
     8e4:	84 e0       	ldi	r24, 0x04	; 4
     8e6:	89 87       	std	Y+9, r24	; 0x09
     8e8:	b7 01       	movw	r22, r14
     8ea:	5f c0       	rjmp	.+190    	; 0x9aa <__divsf3+0x144>
     8ec:	2b 85       	ldd	r18, Y+11	; 0x0b
     8ee:	3c 85       	ldd	r19, Y+12	; 0x0c
     8f0:	8b 89       	ldd	r24, Y+19	; 0x13
     8f2:	9c 89       	ldd	r25, Y+20	; 0x14
     8f4:	28 1b       	sub	r18, r24
     8f6:	39 0b       	sbc	r19, r25
     8f8:	3c 87       	std	Y+12, r19	; 0x0c
     8fa:	2b 87       	std	Y+11, r18	; 0x0b
     8fc:	ed 84       	ldd	r14, Y+13	; 0x0d
     8fe:	fe 84       	ldd	r15, Y+14	; 0x0e
     900:	0f 85       	ldd	r16, Y+15	; 0x0f
     902:	18 89       	ldd	r17, Y+16	; 0x10
     904:	ad 88       	ldd	r10, Y+21	; 0x15
     906:	be 88       	ldd	r11, Y+22	; 0x16
     908:	cf 88       	ldd	r12, Y+23	; 0x17
     90a:	d8 8c       	ldd	r13, Y+24	; 0x18
     90c:	ea 14       	cp	r14, r10
     90e:	fb 04       	cpc	r15, r11
     910:	0c 05       	cpc	r16, r12
     912:	1d 05       	cpc	r17, r13
     914:	40 f4       	brcc	.+16     	; 0x926 <__divsf3+0xc0>
     916:	ee 0c       	add	r14, r14
     918:	ff 1c       	adc	r15, r15
     91a:	00 1f       	adc	r16, r16
     91c:	11 1f       	adc	r17, r17
     91e:	21 50       	subi	r18, 0x01	; 1
     920:	30 40       	sbci	r19, 0x00	; 0
     922:	3c 87       	std	Y+12, r19	; 0x0c
     924:	2b 87       	std	Y+11, r18	; 0x0b
     926:	20 e0       	ldi	r18, 0x00	; 0
     928:	30 e0       	ldi	r19, 0x00	; 0
     92a:	40 e0       	ldi	r20, 0x00	; 0
     92c:	50 e0       	ldi	r21, 0x00	; 0
     92e:	80 e0       	ldi	r24, 0x00	; 0
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e4       	ldi	r27, 0x40	; 64
     936:	60 e0       	ldi	r22, 0x00	; 0
     938:	70 e0       	ldi	r23, 0x00	; 0
     93a:	ea 14       	cp	r14, r10
     93c:	fb 04       	cpc	r15, r11
     93e:	0c 05       	cpc	r16, r12
     940:	1d 05       	cpc	r17, r13
     942:	40 f0       	brcs	.+16     	; 0x954 <__divsf3+0xee>
     944:	28 2b       	or	r18, r24
     946:	39 2b       	or	r19, r25
     948:	4a 2b       	or	r20, r26
     94a:	5b 2b       	or	r21, r27
     94c:	ea 18       	sub	r14, r10
     94e:	fb 08       	sbc	r15, r11
     950:	0c 09       	sbc	r16, r12
     952:	1d 09       	sbc	r17, r13
     954:	b6 95       	lsr	r27
     956:	a7 95       	ror	r26
     958:	97 95       	ror	r25
     95a:	87 95       	ror	r24
     95c:	ee 0c       	add	r14, r14
     95e:	ff 1c       	adc	r15, r15
     960:	00 1f       	adc	r16, r16
     962:	11 1f       	adc	r17, r17
     964:	6f 5f       	subi	r22, 0xFF	; 255
     966:	7f 4f       	sbci	r23, 0xFF	; 255
     968:	6f 31       	cpi	r22, 0x1F	; 31
     96a:	71 05       	cpc	r23, r1
     96c:	31 f7       	brne	.-52     	; 0x93a <__divsf3+0xd4>
     96e:	da 01       	movw	r26, r20
     970:	c9 01       	movw	r24, r18
     972:	8f 77       	andi	r24, 0x7F	; 127
     974:	90 70       	andi	r25, 0x00	; 0
     976:	a0 70       	andi	r26, 0x00	; 0
     978:	b0 70       	andi	r27, 0x00	; 0
     97a:	80 34       	cpi	r24, 0x40	; 64
     97c:	91 05       	cpc	r25, r1
     97e:	a1 05       	cpc	r26, r1
     980:	b1 05       	cpc	r27, r1
     982:	61 f4       	brne	.+24     	; 0x99c <__divsf3+0x136>
     984:	27 fd       	sbrc	r18, 7
     986:	0a c0       	rjmp	.+20     	; 0x99c <__divsf3+0x136>
     988:	e1 14       	cp	r14, r1
     98a:	f1 04       	cpc	r15, r1
     98c:	01 05       	cpc	r16, r1
     98e:	11 05       	cpc	r17, r1
     990:	29 f0       	breq	.+10     	; 0x99c <__divsf3+0x136>
     992:	20 5c       	subi	r18, 0xC0	; 192
     994:	3f 4f       	sbci	r19, 0xFF	; 255
     996:	4f 4f       	sbci	r20, 0xFF	; 255
     998:	5f 4f       	sbci	r21, 0xFF	; 255
     99a:	20 78       	andi	r18, 0x80	; 128
     99c:	2d 87       	std	Y+13, r18	; 0x0d
     99e:	3e 87       	std	Y+14, r19	; 0x0e
     9a0:	4f 87       	std	Y+15, r20	; 0x0f
     9a2:	58 8b       	std	Y+16, r21	; 0x10
     9a4:	be 01       	movw	r22, r28
     9a6:	67 5f       	subi	r22, 0xF7	; 247
     9a8:	7f 4f       	sbci	r23, 0xFF	; 255
     9aa:	cb 01       	movw	r24, r22
     9ac:	43 d1       	rcall	.+646    	; 0xc34 <__pack_f>
     9ae:	68 96       	adiw	r28, 0x18	; 24
     9b0:	ea e0       	ldi	r30, 0x0A	; 10
     9b2:	31 c3       	rjmp	.+1634   	; 0x1016 <__epilogue_restores__+0x10>

000009b4 <__gesf2>:
     9b4:	a8 e1       	ldi	r26, 0x18	; 24
     9b6:	b0 e0       	ldi	r27, 0x00	; 0
     9b8:	ef ed       	ldi	r30, 0xDF	; 223
     9ba:	f4 e0       	ldi	r31, 0x04	; 4
     9bc:	14 c3       	rjmp	.+1576   	; 0xfe6 <__prologue_saves__+0x18>
     9be:	69 83       	std	Y+1, r22	; 0x01
     9c0:	7a 83       	std	Y+2, r23	; 0x02
     9c2:	8b 83       	std	Y+3, r24	; 0x03
     9c4:	9c 83       	std	Y+4, r25	; 0x04
     9c6:	2d 83       	std	Y+5, r18	; 0x05
     9c8:	3e 83       	std	Y+6, r19	; 0x06
     9ca:	4f 83       	std	Y+7, r20	; 0x07
     9cc:	58 87       	std	Y+8, r21	; 0x08
     9ce:	89 e0       	ldi	r24, 0x09	; 9
     9d0:	e8 2e       	mov	r14, r24
     9d2:	f1 2c       	mov	r15, r1
     9d4:	ec 0e       	add	r14, r28
     9d6:	fd 1e       	adc	r15, r29
     9d8:	ce 01       	movw	r24, r28
     9da:	01 96       	adiw	r24, 0x01	; 1
     9dc:	b7 01       	movw	r22, r14
     9de:	ff d1       	rcall	.+1022   	; 0xdde <__unpack_f>
     9e0:	8e 01       	movw	r16, r28
     9e2:	0f 5e       	subi	r16, 0xEF	; 239
     9e4:	1f 4f       	sbci	r17, 0xFF	; 255
     9e6:	ce 01       	movw	r24, r28
     9e8:	05 96       	adiw	r24, 0x05	; 5
     9ea:	b8 01       	movw	r22, r16
     9ec:	f8 d1       	rcall	.+1008   	; 0xdde <__unpack_f>
     9ee:	89 85       	ldd	r24, Y+9	; 0x09
     9f0:	82 30       	cpi	r24, 0x02	; 2
     9f2:	38 f0       	brcs	.+14     	; 0xa02 <__gesf2+0x4e>
     9f4:	89 89       	ldd	r24, Y+17	; 0x11
     9f6:	82 30       	cpi	r24, 0x02	; 2
     9f8:	20 f0       	brcs	.+8      	; 0xa02 <__gesf2+0x4e>
     9fa:	c7 01       	movw	r24, r14
     9fc:	b8 01       	movw	r22, r16
     9fe:	67 d2       	rcall	.+1230   	; 0xece <__fpcmp_parts_f>
     a00:	01 c0       	rjmp	.+2      	; 0xa04 <__gesf2+0x50>
     a02:	8f ef       	ldi	r24, 0xFF	; 255
     a04:	68 96       	adiw	r28, 0x18	; 24
     a06:	e6 e0       	ldi	r30, 0x06	; 6
     a08:	0a c3       	rjmp	.+1556   	; 0x101e <__epilogue_restores__+0x18>

00000a0a <__fixsfsi>:
     a0a:	ac e0       	ldi	r26, 0x0C	; 12
     a0c:	b0 e0       	ldi	r27, 0x00	; 0
     a0e:	ea e0       	ldi	r30, 0x0A	; 10
     a10:	f5 e0       	ldi	r31, 0x05	; 5
     a12:	ed c2       	rjmp	.+1498   	; 0xfee <__prologue_saves__+0x20>
     a14:	69 83       	std	Y+1, r22	; 0x01
     a16:	7a 83       	std	Y+2, r23	; 0x02
     a18:	8b 83       	std	Y+3, r24	; 0x03
     a1a:	9c 83       	std	Y+4, r25	; 0x04
     a1c:	ce 01       	movw	r24, r28
     a1e:	01 96       	adiw	r24, 0x01	; 1
     a20:	be 01       	movw	r22, r28
     a22:	6b 5f       	subi	r22, 0xFB	; 251
     a24:	7f 4f       	sbci	r23, 0xFF	; 255
     a26:	db d1       	rcall	.+950    	; 0xdde <__unpack_f>
     a28:	8d 81       	ldd	r24, Y+5	; 0x05
     a2a:	82 30       	cpi	r24, 0x02	; 2
     a2c:	61 f1       	breq	.+88     	; 0xa86 <__fixsfsi+0x7c>
     a2e:	82 30       	cpi	r24, 0x02	; 2
     a30:	50 f1       	brcs	.+84     	; 0xa86 <__fixsfsi+0x7c>
     a32:	84 30       	cpi	r24, 0x04	; 4
     a34:	21 f4       	brne	.+8      	; 0xa3e <__fixsfsi+0x34>
     a36:	8e 81       	ldd	r24, Y+6	; 0x06
     a38:	88 23       	and	r24, r24
     a3a:	51 f1       	breq	.+84     	; 0xa90 <__fixsfsi+0x86>
     a3c:	2e c0       	rjmp	.+92     	; 0xa9a <__fixsfsi+0x90>
     a3e:	2f 81       	ldd	r18, Y+7	; 0x07
     a40:	38 85       	ldd	r19, Y+8	; 0x08
     a42:	37 fd       	sbrc	r19, 7
     a44:	20 c0       	rjmp	.+64     	; 0xa86 <__fixsfsi+0x7c>
     a46:	6e 81       	ldd	r22, Y+6	; 0x06
     a48:	2f 31       	cpi	r18, 0x1F	; 31
     a4a:	31 05       	cpc	r19, r1
     a4c:	1c f0       	brlt	.+6      	; 0xa54 <__fixsfsi+0x4a>
     a4e:	66 23       	and	r22, r22
     a50:	f9 f0       	breq	.+62     	; 0xa90 <__fixsfsi+0x86>
     a52:	23 c0       	rjmp	.+70     	; 0xa9a <__fixsfsi+0x90>
     a54:	8e e1       	ldi	r24, 0x1E	; 30
     a56:	90 e0       	ldi	r25, 0x00	; 0
     a58:	82 1b       	sub	r24, r18
     a5a:	93 0b       	sbc	r25, r19
     a5c:	29 85       	ldd	r18, Y+9	; 0x09
     a5e:	3a 85       	ldd	r19, Y+10	; 0x0a
     a60:	4b 85       	ldd	r20, Y+11	; 0x0b
     a62:	5c 85       	ldd	r21, Y+12	; 0x0c
     a64:	04 c0       	rjmp	.+8      	; 0xa6e <__fixsfsi+0x64>
     a66:	56 95       	lsr	r21
     a68:	47 95       	ror	r20
     a6a:	37 95       	ror	r19
     a6c:	27 95       	ror	r18
     a6e:	8a 95       	dec	r24
     a70:	d2 f7       	brpl	.-12     	; 0xa66 <__fixsfsi+0x5c>
     a72:	66 23       	and	r22, r22
     a74:	b1 f0       	breq	.+44     	; 0xaa2 <__fixsfsi+0x98>
     a76:	50 95       	com	r21
     a78:	40 95       	com	r20
     a7a:	30 95       	com	r19
     a7c:	21 95       	neg	r18
     a7e:	3f 4f       	sbci	r19, 0xFF	; 255
     a80:	4f 4f       	sbci	r20, 0xFF	; 255
     a82:	5f 4f       	sbci	r21, 0xFF	; 255
     a84:	0e c0       	rjmp	.+28     	; 0xaa2 <__fixsfsi+0x98>
     a86:	20 e0       	ldi	r18, 0x00	; 0
     a88:	30 e0       	ldi	r19, 0x00	; 0
     a8a:	40 e0       	ldi	r20, 0x00	; 0
     a8c:	50 e0       	ldi	r21, 0x00	; 0
     a8e:	09 c0       	rjmp	.+18     	; 0xaa2 <__fixsfsi+0x98>
     a90:	2f ef       	ldi	r18, 0xFF	; 255
     a92:	3f ef       	ldi	r19, 0xFF	; 255
     a94:	4f ef       	ldi	r20, 0xFF	; 255
     a96:	5f e7       	ldi	r21, 0x7F	; 127
     a98:	04 c0       	rjmp	.+8      	; 0xaa2 <__fixsfsi+0x98>
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	40 e0       	ldi	r20, 0x00	; 0
     aa0:	50 e8       	ldi	r21, 0x80	; 128
     aa2:	b9 01       	movw	r22, r18
     aa4:	ca 01       	movw	r24, r20
     aa6:	2c 96       	adiw	r28, 0x0c	; 12
     aa8:	e2 e0       	ldi	r30, 0x02	; 2
     aaa:	bd c2       	rjmp	.+1402   	; 0x1026 <__epilogue_restores__+0x20>

00000aac <__floatunsisf>:
     aac:	a8 e0       	ldi	r26, 0x08	; 8
     aae:	b0 e0       	ldi	r27, 0x00	; 0
     ab0:	eb e5       	ldi	r30, 0x5B	; 91
     ab2:	f5 e0       	ldi	r31, 0x05	; 5
     ab4:	94 c2       	rjmp	.+1320   	; 0xfde <__prologue_saves__+0x10>
     ab6:	7b 01       	movw	r14, r22
     ab8:	8c 01       	movw	r16, r24
     aba:	61 15       	cp	r22, r1
     abc:	71 05       	cpc	r23, r1
     abe:	81 05       	cpc	r24, r1
     ac0:	91 05       	cpc	r25, r1
     ac2:	19 f4       	brne	.+6      	; 0xaca <__floatunsisf+0x1e>
     ac4:	82 e0       	ldi	r24, 0x02	; 2
     ac6:	89 83       	std	Y+1, r24	; 0x01
     ac8:	5f c0       	rjmp	.+190    	; 0xb88 <__floatunsisf+0xdc>
     aca:	83 e0       	ldi	r24, 0x03	; 3
     acc:	89 83       	std	Y+1, r24	; 0x01
     ace:	8e e1       	ldi	r24, 0x1E	; 30
     ad0:	c8 2e       	mov	r12, r24
     ad2:	d1 2c       	mov	r13, r1
     ad4:	dc 82       	std	Y+4, r13	; 0x04
     ad6:	cb 82       	std	Y+3, r12	; 0x03
     ad8:	ed 82       	std	Y+5, r14	; 0x05
     ada:	fe 82       	std	Y+6, r15	; 0x06
     adc:	0f 83       	std	Y+7, r16	; 0x07
     ade:	18 87       	std	Y+8, r17	; 0x08
     ae0:	c8 01       	movw	r24, r16
     ae2:	b7 01       	movw	r22, r14
     ae4:	58 d0       	rcall	.+176    	; 0xb96 <__clzsi2>
     ae6:	fc 01       	movw	r30, r24
     ae8:	31 97       	sbiw	r30, 0x01	; 1
     aea:	f7 ff       	sbrs	r31, 7
     aec:	3b c0       	rjmp	.+118    	; 0xb64 <__floatunsisf+0xb8>
     aee:	22 27       	eor	r18, r18
     af0:	33 27       	eor	r19, r19
     af2:	2e 1b       	sub	r18, r30
     af4:	3f 0b       	sbc	r19, r31
     af6:	57 01       	movw	r10, r14
     af8:	68 01       	movw	r12, r16
     afa:	02 2e       	mov	r0, r18
     afc:	04 c0       	rjmp	.+8      	; 0xb06 <__floatunsisf+0x5a>
     afe:	d6 94       	lsr	r13
     b00:	c7 94       	ror	r12
     b02:	b7 94       	ror	r11
     b04:	a7 94       	ror	r10
     b06:	0a 94       	dec	r0
     b08:	d2 f7       	brpl	.-12     	; 0xafe <__floatunsisf+0x52>
     b0a:	40 e0       	ldi	r20, 0x00	; 0
     b0c:	50 e0       	ldi	r21, 0x00	; 0
     b0e:	60 e0       	ldi	r22, 0x00	; 0
     b10:	70 e0       	ldi	r23, 0x00	; 0
     b12:	81 e0       	ldi	r24, 0x01	; 1
     b14:	90 e0       	ldi	r25, 0x00	; 0
     b16:	a0 e0       	ldi	r26, 0x00	; 0
     b18:	b0 e0       	ldi	r27, 0x00	; 0
     b1a:	04 c0       	rjmp	.+8      	; 0xb24 <__floatunsisf+0x78>
     b1c:	88 0f       	add	r24, r24
     b1e:	99 1f       	adc	r25, r25
     b20:	aa 1f       	adc	r26, r26
     b22:	bb 1f       	adc	r27, r27
     b24:	2a 95       	dec	r18
     b26:	d2 f7       	brpl	.-12     	; 0xb1c <__floatunsisf+0x70>
     b28:	01 97       	sbiw	r24, 0x01	; 1
     b2a:	a1 09       	sbc	r26, r1
     b2c:	b1 09       	sbc	r27, r1
     b2e:	8e 21       	and	r24, r14
     b30:	9f 21       	and	r25, r15
     b32:	a0 23       	and	r26, r16
     b34:	b1 23       	and	r27, r17
     b36:	00 97       	sbiw	r24, 0x00	; 0
     b38:	a1 05       	cpc	r26, r1
     b3a:	b1 05       	cpc	r27, r1
     b3c:	21 f0       	breq	.+8      	; 0xb46 <__floatunsisf+0x9a>
     b3e:	41 e0       	ldi	r20, 0x01	; 1
     b40:	50 e0       	ldi	r21, 0x00	; 0
     b42:	60 e0       	ldi	r22, 0x00	; 0
     b44:	70 e0       	ldi	r23, 0x00	; 0
     b46:	4a 29       	or	r20, r10
     b48:	5b 29       	or	r21, r11
     b4a:	6c 29       	or	r22, r12
     b4c:	7d 29       	or	r23, r13
     b4e:	4d 83       	std	Y+5, r20	; 0x05
     b50:	5e 83       	std	Y+6, r21	; 0x06
     b52:	6f 83       	std	Y+7, r22	; 0x07
     b54:	78 87       	std	Y+8, r23	; 0x08
     b56:	8e e1       	ldi	r24, 0x1E	; 30
     b58:	90 e0       	ldi	r25, 0x00	; 0
     b5a:	8e 1b       	sub	r24, r30
     b5c:	9f 0b       	sbc	r25, r31
     b5e:	9c 83       	std	Y+4, r25	; 0x04
     b60:	8b 83       	std	Y+3, r24	; 0x03
     b62:	12 c0       	rjmp	.+36     	; 0xb88 <__floatunsisf+0xdc>
     b64:	30 97       	sbiw	r30, 0x00	; 0
     b66:	81 f0       	breq	.+32     	; 0xb88 <__floatunsisf+0xdc>
     b68:	0e 2e       	mov	r0, r30
     b6a:	04 c0       	rjmp	.+8      	; 0xb74 <__floatunsisf+0xc8>
     b6c:	ee 0c       	add	r14, r14
     b6e:	ff 1c       	adc	r15, r15
     b70:	00 1f       	adc	r16, r16
     b72:	11 1f       	adc	r17, r17
     b74:	0a 94       	dec	r0
     b76:	d2 f7       	brpl	.-12     	; 0xb6c <__floatunsisf+0xc0>
     b78:	ed 82       	std	Y+5, r14	; 0x05
     b7a:	fe 82       	std	Y+6, r15	; 0x06
     b7c:	0f 83       	std	Y+7, r16	; 0x07
     b7e:	18 87       	std	Y+8, r17	; 0x08
     b80:	ce 1a       	sub	r12, r30
     b82:	df 0a       	sbc	r13, r31
     b84:	dc 82       	std	Y+4, r13	; 0x04
     b86:	cb 82       	std	Y+3, r12	; 0x03
     b88:	1a 82       	std	Y+2, r1	; 0x02
     b8a:	ce 01       	movw	r24, r28
     b8c:	01 96       	adiw	r24, 0x01	; 1
     b8e:	52 d0       	rcall	.+164    	; 0xc34 <__pack_f>
     b90:	28 96       	adiw	r28, 0x08	; 8
     b92:	ea e0       	ldi	r30, 0x0A	; 10
     b94:	40 c2       	rjmp	.+1152   	; 0x1016 <__epilogue_restores__+0x10>

00000b96 <__clzsi2>:
     b96:	ef 92       	push	r14
     b98:	ff 92       	push	r15
     b9a:	0f 93       	push	r16
     b9c:	1f 93       	push	r17
     b9e:	7b 01       	movw	r14, r22
     ba0:	8c 01       	movw	r16, r24
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	e8 16       	cp	r14, r24
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	f8 06       	cpc	r15, r24
     baa:	81 e0       	ldi	r24, 0x01	; 1
     bac:	08 07       	cpc	r16, r24
     bae:	80 e0       	ldi	r24, 0x00	; 0
     bb0:	18 07       	cpc	r17, r24
     bb2:	88 f4       	brcc	.+34     	; 0xbd6 <__clzsi2+0x40>
     bb4:	8f ef       	ldi	r24, 0xFF	; 255
     bb6:	e8 16       	cp	r14, r24
     bb8:	f1 04       	cpc	r15, r1
     bba:	01 05       	cpc	r16, r1
     bbc:	11 05       	cpc	r17, r1
     bbe:	31 f0       	breq	.+12     	; 0xbcc <__clzsi2+0x36>
     bc0:	28 f0       	brcs	.+10     	; 0xbcc <__clzsi2+0x36>
     bc2:	88 e0       	ldi	r24, 0x08	; 8
     bc4:	90 e0       	ldi	r25, 0x00	; 0
     bc6:	a0 e0       	ldi	r26, 0x00	; 0
     bc8:	b0 e0       	ldi	r27, 0x00	; 0
     bca:	17 c0       	rjmp	.+46     	; 0xbfa <__clzsi2+0x64>
     bcc:	80 e0       	ldi	r24, 0x00	; 0
     bce:	90 e0       	ldi	r25, 0x00	; 0
     bd0:	a0 e0       	ldi	r26, 0x00	; 0
     bd2:	b0 e0       	ldi	r27, 0x00	; 0
     bd4:	12 c0       	rjmp	.+36     	; 0xbfa <__clzsi2+0x64>
     bd6:	80 e0       	ldi	r24, 0x00	; 0
     bd8:	e8 16       	cp	r14, r24
     bda:	80 e0       	ldi	r24, 0x00	; 0
     bdc:	f8 06       	cpc	r15, r24
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	08 07       	cpc	r16, r24
     be2:	81 e0       	ldi	r24, 0x01	; 1
     be4:	18 07       	cpc	r17, r24
     be6:	28 f0       	brcs	.+10     	; 0xbf2 <__clzsi2+0x5c>
     be8:	88 e1       	ldi	r24, 0x18	; 24
     bea:	90 e0       	ldi	r25, 0x00	; 0
     bec:	a0 e0       	ldi	r26, 0x00	; 0
     bee:	b0 e0       	ldi	r27, 0x00	; 0
     bf0:	04 c0       	rjmp	.+8      	; 0xbfa <__clzsi2+0x64>
     bf2:	80 e1       	ldi	r24, 0x10	; 16
     bf4:	90 e0       	ldi	r25, 0x00	; 0
     bf6:	a0 e0       	ldi	r26, 0x00	; 0
     bf8:	b0 e0       	ldi	r27, 0x00	; 0
     bfa:	20 e2       	ldi	r18, 0x20	; 32
     bfc:	30 e0       	ldi	r19, 0x00	; 0
     bfe:	40 e0       	ldi	r20, 0x00	; 0
     c00:	50 e0       	ldi	r21, 0x00	; 0
     c02:	28 1b       	sub	r18, r24
     c04:	39 0b       	sbc	r19, r25
     c06:	4a 0b       	sbc	r20, r26
     c08:	5b 0b       	sbc	r21, r27
     c0a:	04 c0       	rjmp	.+8      	; 0xc14 <__clzsi2+0x7e>
     c0c:	16 95       	lsr	r17
     c0e:	07 95       	ror	r16
     c10:	f7 94       	ror	r15
     c12:	e7 94       	ror	r14
     c14:	8a 95       	dec	r24
     c16:	d2 f7       	brpl	.-12     	; 0xc0c <__clzsi2+0x76>
     c18:	f7 01       	movw	r30, r14
     c1a:	e8 59       	subi	r30, 0x98	; 152
     c1c:	ff 4f       	sbci	r31, 0xFF	; 255
     c1e:	80 81       	ld	r24, Z
     c20:	28 1b       	sub	r18, r24
     c22:	31 09       	sbc	r19, r1
     c24:	41 09       	sbc	r20, r1
     c26:	51 09       	sbc	r21, r1
     c28:	c9 01       	movw	r24, r18
     c2a:	1f 91       	pop	r17
     c2c:	0f 91       	pop	r16
     c2e:	ff 90       	pop	r15
     c30:	ef 90       	pop	r14
     c32:	08 95       	ret

00000c34 <__pack_f>:
     c34:	df 92       	push	r13
     c36:	ef 92       	push	r14
     c38:	ff 92       	push	r15
     c3a:	0f 93       	push	r16
     c3c:	1f 93       	push	r17
     c3e:	fc 01       	movw	r30, r24
     c40:	e4 80       	ldd	r14, Z+4	; 0x04
     c42:	f5 80       	ldd	r15, Z+5	; 0x05
     c44:	06 81       	ldd	r16, Z+6	; 0x06
     c46:	17 81       	ldd	r17, Z+7	; 0x07
     c48:	d1 80       	ldd	r13, Z+1	; 0x01
     c4a:	80 81       	ld	r24, Z
     c4c:	82 30       	cpi	r24, 0x02	; 2
     c4e:	48 f4       	brcc	.+18     	; 0xc62 <__pack_f+0x2e>
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	a0 e1       	ldi	r26, 0x10	; 16
     c56:	b0 e0       	ldi	r27, 0x00	; 0
     c58:	e8 2a       	or	r14, r24
     c5a:	f9 2a       	or	r15, r25
     c5c:	0a 2b       	or	r16, r26
     c5e:	1b 2b       	or	r17, r27
     c60:	a5 c0       	rjmp	.+330    	; 0xdac <__pack_f+0x178>
     c62:	84 30       	cpi	r24, 0x04	; 4
     c64:	09 f4       	brne	.+2      	; 0xc68 <__pack_f+0x34>
     c66:	9f c0       	rjmp	.+318    	; 0xda6 <__pack_f+0x172>
     c68:	82 30       	cpi	r24, 0x02	; 2
     c6a:	21 f4       	brne	.+8      	; 0xc74 <__pack_f+0x40>
     c6c:	ee 24       	eor	r14, r14
     c6e:	ff 24       	eor	r15, r15
     c70:	87 01       	movw	r16, r14
     c72:	05 c0       	rjmp	.+10     	; 0xc7e <__pack_f+0x4a>
     c74:	e1 14       	cp	r14, r1
     c76:	f1 04       	cpc	r15, r1
     c78:	01 05       	cpc	r16, r1
     c7a:	11 05       	cpc	r17, r1
     c7c:	19 f4       	brne	.+6      	; 0xc84 <__pack_f+0x50>
     c7e:	e0 e0       	ldi	r30, 0x00	; 0
     c80:	f0 e0       	ldi	r31, 0x00	; 0
     c82:	96 c0       	rjmp	.+300    	; 0xdb0 <__pack_f+0x17c>
     c84:	62 81       	ldd	r22, Z+2	; 0x02
     c86:	73 81       	ldd	r23, Z+3	; 0x03
     c88:	9f ef       	ldi	r25, 0xFF	; 255
     c8a:	62 38       	cpi	r22, 0x82	; 130
     c8c:	79 07       	cpc	r23, r25
     c8e:	0c f0       	brlt	.+2      	; 0xc92 <__pack_f+0x5e>
     c90:	5b c0       	rjmp	.+182    	; 0xd48 <__pack_f+0x114>
     c92:	22 e8       	ldi	r18, 0x82	; 130
     c94:	3f ef       	ldi	r19, 0xFF	; 255
     c96:	26 1b       	sub	r18, r22
     c98:	37 0b       	sbc	r19, r23
     c9a:	2a 31       	cpi	r18, 0x1A	; 26
     c9c:	31 05       	cpc	r19, r1
     c9e:	2c f0       	brlt	.+10     	; 0xcaa <__pack_f+0x76>
     ca0:	20 e0       	ldi	r18, 0x00	; 0
     ca2:	30 e0       	ldi	r19, 0x00	; 0
     ca4:	40 e0       	ldi	r20, 0x00	; 0
     ca6:	50 e0       	ldi	r21, 0x00	; 0
     ca8:	2a c0       	rjmp	.+84     	; 0xcfe <__pack_f+0xca>
     caa:	b8 01       	movw	r22, r16
     cac:	a7 01       	movw	r20, r14
     cae:	02 2e       	mov	r0, r18
     cb0:	04 c0       	rjmp	.+8      	; 0xcba <__pack_f+0x86>
     cb2:	76 95       	lsr	r23
     cb4:	67 95       	ror	r22
     cb6:	57 95       	ror	r21
     cb8:	47 95       	ror	r20
     cba:	0a 94       	dec	r0
     cbc:	d2 f7       	brpl	.-12     	; 0xcb2 <__pack_f+0x7e>
     cbe:	81 e0       	ldi	r24, 0x01	; 1
     cc0:	90 e0       	ldi	r25, 0x00	; 0
     cc2:	a0 e0       	ldi	r26, 0x00	; 0
     cc4:	b0 e0       	ldi	r27, 0x00	; 0
     cc6:	04 c0       	rjmp	.+8      	; 0xcd0 <__pack_f+0x9c>
     cc8:	88 0f       	add	r24, r24
     cca:	99 1f       	adc	r25, r25
     ccc:	aa 1f       	adc	r26, r26
     cce:	bb 1f       	adc	r27, r27
     cd0:	2a 95       	dec	r18
     cd2:	d2 f7       	brpl	.-12     	; 0xcc8 <__pack_f+0x94>
     cd4:	01 97       	sbiw	r24, 0x01	; 1
     cd6:	a1 09       	sbc	r26, r1
     cd8:	b1 09       	sbc	r27, r1
     cda:	8e 21       	and	r24, r14
     cdc:	9f 21       	and	r25, r15
     cde:	a0 23       	and	r26, r16
     ce0:	b1 23       	and	r27, r17
     ce2:	00 97       	sbiw	r24, 0x00	; 0
     ce4:	a1 05       	cpc	r26, r1
     ce6:	b1 05       	cpc	r27, r1
     ce8:	21 f0       	breq	.+8      	; 0xcf2 <__pack_f+0xbe>
     cea:	81 e0       	ldi	r24, 0x01	; 1
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	a0 e0       	ldi	r26, 0x00	; 0
     cf0:	b0 e0       	ldi	r27, 0x00	; 0
     cf2:	9a 01       	movw	r18, r20
     cf4:	ab 01       	movw	r20, r22
     cf6:	28 2b       	or	r18, r24
     cf8:	39 2b       	or	r19, r25
     cfa:	4a 2b       	or	r20, r26
     cfc:	5b 2b       	or	r21, r27
     cfe:	da 01       	movw	r26, r20
     d00:	c9 01       	movw	r24, r18
     d02:	8f 77       	andi	r24, 0x7F	; 127
     d04:	90 70       	andi	r25, 0x00	; 0
     d06:	a0 70       	andi	r26, 0x00	; 0
     d08:	b0 70       	andi	r27, 0x00	; 0
     d0a:	80 34       	cpi	r24, 0x40	; 64
     d0c:	91 05       	cpc	r25, r1
     d0e:	a1 05       	cpc	r26, r1
     d10:	b1 05       	cpc	r27, r1
     d12:	39 f4       	brne	.+14     	; 0xd22 <__pack_f+0xee>
     d14:	27 ff       	sbrs	r18, 7
     d16:	09 c0       	rjmp	.+18     	; 0xd2a <__pack_f+0xf6>
     d18:	20 5c       	subi	r18, 0xC0	; 192
     d1a:	3f 4f       	sbci	r19, 0xFF	; 255
     d1c:	4f 4f       	sbci	r20, 0xFF	; 255
     d1e:	5f 4f       	sbci	r21, 0xFF	; 255
     d20:	04 c0       	rjmp	.+8      	; 0xd2a <__pack_f+0xf6>
     d22:	21 5c       	subi	r18, 0xC1	; 193
     d24:	3f 4f       	sbci	r19, 0xFF	; 255
     d26:	4f 4f       	sbci	r20, 0xFF	; 255
     d28:	5f 4f       	sbci	r21, 0xFF	; 255
     d2a:	e0 e0       	ldi	r30, 0x00	; 0
     d2c:	f0 e0       	ldi	r31, 0x00	; 0
     d2e:	20 30       	cpi	r18, 0x00	; 0
     d30:	a0 e0       	ldi	r26, 0x00	; 0
     d32:	3a 07       	cpc	r19, r26
     d34:	a0 e0       	ldi	r26, 0x00	; 0
     d36:	4a 07       	cpc	r20, r26
     d38:	a0 e4       	ldi	r26, 0x40	; 64
     d3a:	5a 07       	cpc	r21, r26
     d3c:	10 f0       	brcs	.+4      	; 0xd42 <__pack_f+0x10e>
     d3e:	e1 e0       	ldi	r30, 0x01	; 1
     d40:	f0 e0       	ldi	r31, 0x00	; 0
     d42:	79 01       	movw	r14, r18
     d44:	8a 01       	movw	r16, r20
     d46:	27 c0       	rjmp	.+78     	; 0xd96 <__pack_f+0x162>
     d48:	60 38       	cpi	r22, 0x80	; 128
     d4a:	71 05       	cpc	r23, r1
     d4c:	64 f5       	brge	.+88     	; 0xda6 <__pack_f+0x172>
     d4e:	fb 01       	movw	r30, r22
     d50:	e1 58       	subi	r30, 0x81	; 129
     d52:	ff 4f       	sbci	r31, 0xFF	; 255
     d54:	d8 01       	movw	r26, r16
     d56:	c7 01       	movw	r24, r14
     d58:	8f 77       	andi	r24, 0x7F	; 127
     d5a:	90 70       	andi	r25, 0x00	; 0
     d5c:	a0 70       	andi	r26, 0x00	; 0
     d5e:	b0 70       	andi	r27, 0x00	; 0
     d60:	80 34       	cpi	r24, 0x40	; 64
     d62:	91 05       	cpc	r25, r1
     d64:	a1 05       	cpc	r26, r1
     d66:	b1 05       	cpc	r27, r1
     d68:	39 f4       	brne	.+14     	; 0xd78 <__pack_f+0x144>
     d6a:	e7 fe       	sbrs	r14, 7
     d6c:	0d c0       	rjmp	.+26     	; 0xd88 <__pack_f+0x154>
     d6e:	80 e4       	ldi	r24, 0x40	; 64
     d70:	90 e0       	ldi	r25, 0x00	; 0
     d72:	a0 e0       	ldi	r26, 0x00	; 0
     d74:	b0 e0       	ldi	r27, 0x00	; 0
     d76:	04 c0       	rjmp	.+8      	; 0xd80 <__pack_f+0x14c>
     d78:	8f e3       	ldi	r24, 0x3F	; 63
     d7a:	90 e0       	ldi	r25, 0x00	; 0
     d7c:	a0 e0       	ldi	r26, 0x00	; 0
     d7e:	b0 e0       	ldi	r27, 0x00	; 0
     d80:	e8 0e       	add	r14, r24
     d82:	f9 1e       	adc	r15, r25
     d84:	0a 1f       	adc	r16, r26
     d86:	1b 1f       	adc	r17, r27
     d88:	17 ff       	sbrs	r17, 7
     d8a:	05 c0       	rjmp	.+10     	; 0xd96 <__pack_f+0x162>
     d8c:	16 95       	lsr	r17
     d8e:	07 95       	ror	r16
     d90:	f7 94       	ror	r15
     d92:	e7 94       	ror	r14
     d94:	31 96       	adiw	r30, 0x01	; 1
     d96:	87 e0       	ldi	r24, 0x07	; 7
     d98:	16 95       	lsr	r17
     d9a:	07 95       	ror	r16
     d9c:	f7 94       	ror	r15
     d9e:	e7 94       	ror	r14
     da0:	8a 95       	dec	r24
     da2:	d1 f7       	brne	.-12     	; 0xd98 <__pack_f+0x164>
     da4:	05 c0       	rjmp	.+10     	; 0xdb0 <__pack_f+0x17c>
     da6:	ee 24       	eor	r14, r14
     da8:	ff 24       	eor	r15, r15
     daa:	87 01       	movw	r16, r14
     dac:	ef ef       	ldi	r30, 0xFF	; 255
     dae:	f0 e0       	ldi	r31, 0x00	; 0
     db0:	6e 2f       	mov	r22, r30
     db2:	67 95       	ror	r22
     db4:	66 27       	eor	r22, r22
     db6:	67 95       	ror	r22
     db8:	90 2f       	mov	r25, r16
     dba:	9f 77       	andi	r25, 0x7F	; 127
     dbc:	d7 94       	ror	r13
     dbe:	dd 24       	eor	r13, r13
     dc0:	d7 94       	ror	r13
     dc2:	8e 2f       	mov	r24, r30
     dc4:	86 95       	lsr	r24
     dc6:	49 2f       	mov	r20, r25
     dc8:	46 2b       	or	r20, r22
     dca:	58 2f       	mov	r21, r24
     dcc:	5d 29       	or	r21, r13
     dce:	b7 01       	movw	r22, r14
     dd0:	ca 01       	movw	r24, r20
     dd2:	1f 91       	pop	r17
     dd4:	0f 91       	pop	r16
     dd6:	ff 90       	pop	r15
     dd8:	ef 90       	pop	r14
     dda:	df 90       	pop	r13
     ddc:	08 95       	ret

00000dde <__unpack_f>:
     dde:	fc 01       	movw	r30, r24
     de0:	db 01       	movw	r26, r22
     de2:	40 81       	ld	r20, Z
     de4:	51 81       	ldd	r21, Z+1	; 0x01
     de6:	22 81       	ldd	r18, Z+2	; 0x02
     de8:	62 2f       	mov	r22, r18
     dea:	6f 77       	andi	r22, 0x7F	; 127
     dec:	70 e0       	ldi	r23, 0x00	; 0
     dee:	22 1f       	adc	r18, r18
     df0:	22 27       	eor	r18, r18
     df2:	22 1f       	adc	r18, r18
     df4:	93 81       	ldd	r25, Z+3	; 0x03
     df6:	89 2f       	mov	r24, r25
     df8:	88 0f       	add	r24, r24
     dfa:	82 2b       	or	r24, r18
     dfc:	28 2f       	mov	r18, r24
     dfe:	30 e0       	ldi	r19, 0x00	; 0
     e00:	99 1f       	adc	r25, r25
     e02:	99 27       	eor	r25, r25
     e04:	99 1f       	adc	r25, r25
     e06:	11 96       	adiw	r26, 0x01	; 1
     e08:	9c 93       	st	X, r25
     e0a:	11 97       	sbiw	r26, 0x01	; 1
     e0c:	21 15       	cp	r18, r1
     e0e:	31 05       	cpc	r19, r1
     e10:	a9 f5       	brne	.+106    	; 0xe7c <__unpack_f+0x9e>
     e12:	41 15       	cp	r20, r1
     e14:	51 05       	cpc	r21, r1
     e16:	61 05       	cpc	r22, r1
     e18:	71 05       	cpc	r23, r1
     e1a:	11 f4       	brne	.+4      	; 0xe20 <__unpack_f+0x42>
     e1c:	82 e0       	ldi	r24, 0x02	; 2
     e1e:	37 c0       	rjmp	.+110    	; 0xe8e <__unpack_f+0xb0>
     e20:	82 e8       	ldi	r24, 0x82	; 130
     e22:	9f ef       	ldi	r25, 0xFF	; 255
     e24:	13 96       	adiw	r26, 0x03	; 3
     e26:	9c 93       	st	X, r25
     e28:	8e 93       	st	-X, r24
     e2a:	12 97       	sbiw	r26, 0x02	; 2
     e2c:	9a 01       	movw	r18, r20
     e2e:	ab 01       	movw	r20, r22
     e30:	67 e0       	ldi	r22, 0x07	; 7
     e32:	22 0f       	add	r18, r18
     e34:	33 1f       	adc	r19, r19
     e36:	44 1f       	adc	r20, r20
     e38:	55 1f       	adc	r21, r21
     e3a:	6a 95       	dec	r22
     e3c:	d1 f7       	brne	.-12     	; 0xe32 <__unpack_f+0x54>
     e3e:	83 e0       	ldi	r24, 0x03	; 3
     e40:	8c 93       	st	X, r24
     e42:	0d c0       	rjmp	.+26     	; 0xe5e <__unpack_f+0x80>
     e44:	22 0f       	add	r18, r18
     e46:	33 1f       	adc	r19, r19
     e48:	44 1f       	adc	r20, r20
     e4a:	55 1f       	adc	r21, r21
     e4c:	12 96       	adiw	r26, 0x02	; 2
     e4e:	8d 91       	ld	r24, X+
     e50:	9c 91       	ld	r25, X
     e52:	13 97       	sbiw	r26, 0x03	; 3
     e54:	01 97       	sbiw	r24, 0x01	; 1
     e56:	13 96       	adiw	r26, 0x03	; 3
     e58:	9c 93       	st	X, r25
     e5a:	8e 93       	st	-X, r24
     e5c:	12 97       	sbiw	r26, 0x02	; 2
     e5e:	20 30       	cpi	r18, 0x00	; 0
     e60:	80 e0       	ldi	r24, 0x00	; 0
     e62:	38 07       	cpc	r19, r24
     e64:	80 e0       	ldi	r24, 0x00	; 0
     e66:	48 07       	cpc	r20, r24
     e68:	80 e4       	ldi	r24, 0x40	; 64
     e6a:	58 07       	cpc	r21, r24
     e6c:	58 f3       	brcs	.-42     	; 0xe44 <__unpack_f+0x66>
     e6e:	14 96       	adiw	r26, 0x04	; 4
     e70:	2d 93       	st	X+, r18
     e72:	3d 93       	st	X+, r19
     e74:	4d 93       	st	X+, r20
     e76:	5c 93       	st	X, r21
     e78:	17 97       	sbiw	r26, 0x07	; 7
     e7a:	08 95       	ret
     e7c:	2f 3f       	cpi	r18, 0xFF	; 255
     e7e:	31 05       	cpc	r19, r1
     e80:	79 f4       	brne	.+30     	; 0xea0 <__unpack_f+0xc2>
     e82:	41 15       	cp	r20, r1
     e84:	51 05       	cpc	r21, r1
     e86:	61 05       	cpc	r22, r1
     e88:	71 05       	cpc	r23, r1
     e8a:	19 f4       	brne	.+6      	; 0xe92 <__unpack_f+0xb4>
     e8c:	84 e0       	ldi	r24, 0x04	; 4
     e8e:	8c 93       	st	X, r24
     e90:	08 95       	ret
     e92:	64 ff       	sbrs	r22, 4
     e94:	03 c0       	rjmp	.+6      	; 0xe9c <__unpack_f+0xbe>
     e96:	81 e0       	ldi	r24, 0x01	; 1
     e98:	8c 93       	st	X, r24
     e9a:	12 c0       	rjmp	.+36     	; 0xec0 <__unpack_f+0xe2>
     e9c:	1c 92       	st	X, r1
     e9e:	10 c0       	rjmp	.+32     	; 0xec0 <__unpack_f+0xe2>
     ea0:	2f 57       	subi	r18, 0x7F	; 127
     ea2:	30 40       	sbci	r19, 0x00	; 0
     ea4:	13 96       	adiw	r26, 0x03	; 3
     ea6:	3c 93       	st	X, r19
     ea8:	2e 93       	st	-X, r18
     eaa:	12 97       	sbiw	r26, 0x02	; 2
     eac:	83 e0       	ldi	r24, 0x03	; 3
     eae:	8c 93       	st	X, r24
     eb0:	87 e0       	ldi	r24, 0x07	; 7
     eb2:	44 0f       	add	r20, r20
     eb4:	55 1f       	adc	r21, r21
     eb6:	66 1f       	adc	r22, r22
     eb8:	77 1f       	adc	r23, r23
     eba:	8a 95       	dec	r24
     ebc:	d1 f7       	brne	.-12     	; 0xeb2 <__unpack_f+0xd4>
     ebe:	70 64       	ori	r23, 0x40	; 64
     ec0:	14 96       	adiw	r26, 0x04	; 4
     ec2:	4d 93       	st	X+, r20
     ec4:	5d 93       	st	X+, r21
     ec6:	6d 93       	st	X+, r22
     ec8:	7c 93       	st	X, r23
     eca:	17 97       	sbiw	r26, 0x07	; 7
     ecc:	08 95       	ret

00000ece <__fpcmp_parts_f>:
     ece:	1f 93       	push	r17
     ed0:	dc 01       	movw	r26, r24
     ed2:	fb 01       	movw	r30, r22
     ed4:	9c 91       	ld	r25, X
     ed6:	92 30       	cpi	r25, 0x02	; 2
     ed8:	08 f4       	brcc	.+2      	; 0xedc <__fpcmp_parts_f+0xe>
     eda:	47 c0       	rjmp	.+142    	; 0xf6a <__fpcmp_parts_f+0x9c>
     edc:	80 81       	ld	r24, Z
     ede:	82 30       	cpi	r24, 0x02	; 2
     ee0:	08 f4       	brcc	.+2      	; 0xee4 <__fpcmp_parts_f+0x16>
     ee2:	43 c0       	rjmp	.+134    	; 0xf6a <__fpcmp_parts_f+0x9c>
     ee4:	94 30       	cpi	r25, 0x04	; 4
     ee6:	51 f4       	brne	.+20     	; 0xefc <__fpcmp_parts_f+0x2e>
     ee8:	11 96       	adiw	r26, 0x01	; 1
     eea:	1c 91       	ld	r17, X
     eec:	84 30       	cpi	r24, 0x04	; 4
     eee:	99 f5       	brne	.+102    	; 0xf56 <__fpcmp_parts_f+0x88>
     ef0:	81 81       	ldd	r24, Z+1	; 0x01
     ef2:	68 2f       	mov	r22, r24
     ef4:	70 e0       	ldi	r23, 0x00	; 0
     ef6:	61 1b       	sub	r22, r17
     ef8:	71 09       	sbc	r23, r1
     efa:	3f c0       	rjmp	.+126    	; 0xf7a <__fpcmp_parts_f+0xac>
     efc:	84 30       	cpi	r24, 0x04	; 4
     efe:	21 f0       	breq	.+8      	; 0xf08 <__fpcmp_parts_f+0x3a>
     f00:	92 30       	cpi	r25, 0x02	; 2
     f02:	31 f4       	brne	.+12     	; 0xf10 <__fpcmp_parts_f+0x42>
     f04:	82 30       	cpi	r24, 0x02	; 2
     f06:	b9 f1       	breq	.+110    	; 0xf76 <__fpcmp_parts_f+0xa8>
     f08:	81 81       	ldd	r24, Z+1	; 0x01
     f0a:	88 23       	and	r24, r24
     f0c:	89 f1       	breq	.+98     	; 0xf70 <__fpcmp_parts_f+0xa2>
     f0e:	2d c0       	rjmp	.+90     	; 0xf6a <__fpcmp_parts_f+0x9c>
     f10:	11 96       	adiw	r26, 0x01	; 1
     f12:	1c 91       	ld	r17, X
     f14:	11 97       	sbiw	r26, 0x01	; 1
     f16:	82 30       	cpi	r24, 0x02	; 2
     f18:	f1 f0       	breq	.+60     	; 0xf56 <__fpcmp_parts_f+0x88>
     f1a:	81 81       	ldd	r24, Z+1	; 0x01
     f1c:	18 17       	cp	r17, r24
     f1e:	d9 f4       	brne	.+54     	; 0xf56 <__fpcmp_parts_f+0x88>
     f20:	12 96       	adiw	r26, 0x02	; 2
     f22:	2d 91       	ld	r18, X+
     f24:	3c 91       	ld	r19, X
     f26:	13 97       	sbiw	r26, 0x03	; 3
     f28:	82 81       	ldd	r24, Z+2	; 0x02
     f2a:	93 81       	ldd	r25, Z+3	; 0x03
     f2c:	82 17       	cp	r24, r18
     f2e:	93 07       	cpc	r25, r19
     f30:	94 f0       	brlt	.+36     	; 0xf56 <__fpcmp_parts_f+0x88>
     f32:	28 17       	cp	r18, r24
     f34:	39 07       	cpc	r19, r25
     f36:	bc f0       	brlt	.+46     	; 0xf66 <__fpcmp_parts_f+0x98>
     f38:	14 96       	adiw	r26, 0x04	; 4
     f3a:	8d 91       	ld	r24, X+
     f3c:	9d 91       	ld	r25, X+
     f3e:	0d 90       	ld	r0, X+
     f40:	bc 91       	ld	r27, X
     f42:	a0 2d       	mov	r26, r0
     f44:	24 81       	ldd	r18, Z+4	; 0x04
     f46:	35 81       	ldd	r19, Z+5	; 0x05
     f48:	46 81       	ldd	r20, Z+6	; 0x06
     f4a:	57 81       	ldd	r21, Z+7	; 0x07
     f4c:	28 17       	cp	r18, r24
     f4e:	39 07       	cpc	r19, r25
     f50:	4a 07       	cpc	r20, r26
     f52:	5b 07       	cpc	r21, r27
     f54:	18 f4       	brcc	.+6      	; 0xf5c <__fpcmp_parts_f+0x8e>
     f56:	11 23       	and	r17, r17
     f58:	41 f0       	breq	.+16     	; 0xf6a <__fpcmp_parts_f+0x9c>
     f5a:	0a c0       	rjmp	.+20     	; 0xf70 <__fpcmp_parts_f+0xa2>
     f5c:	82 17       	cp	r24, r18
     f5e:	93 07       	cpc	r25, r19
     f60:	a4 07       	cpc	r26, r20
     f62:	b5 07       	cpc	r27, r21
     f64:	40 f4       	brcc	.+16     	; 0xf76 <__fpcmp_parts_f+0xa8>
     f66:	11 23       	and	r17, r17
     f68:	19 f0       	breq	.+6      	; 0xf70 <__fpcmp_parts_f+0xa2>
     f6a:	61 e0       	ldi	r22, 0x01	; 1
     f6c:	70 e0       	ldi	r23, 0x00	; 0
     f6e:	05 c0       	rjmp	.+10     	; 0xf7a <__fpcmp_parts_f+0xac>
     f70:	6f ef       	ldi	r22, 0xFF	; 255
     f72:	7f ef       	ldi	r23, 0xFF	; 255
     f74:	02 c0       	rjmp	.+4      	; 0xf7a <__fpcmp_parts_f+0xac>
     f76:	60 e0       	ldi	r22, 0x00	; 0
     f78:	70 e0       	ldi	r23, 0x00	; 0
     f7a:	cb 01       	movw	r24, r22
     f7c:	1f 91       	pop	r17
     f7e:	08 95       	ret

00000f80 <__divmodhi4>:
     f80:	97 fb       	bst	r25, 7
     f82:	09 2e       	mov	r0, r25
     f84:	07 26       	eor	r0, r23
     f86:	0a d0       	rcall	.+20     	; 0xf9c <__divmodhi4_neg1>
     f88:	77 fd       	sbrc	r23, 7
     f8a:	04 d0       	rcall	.+8      	; 0xf94 <__divmodhi4_neg2>
     f8c:	0c d0       	rcall	.+24     	; 0xfa6 <__udivmodhi4>
     f8e:	06 d0       	rcall	.+12     	; 0xf9c <__divmodhi4_neg1>
     f90:	00 20       	and	r0, r0
     f92:	1a f4       	brpl	.+6      	; 0xf9a <__divmodhi4_exit>

00000f94 <__divmodhi4_neg2>:
     f94:	70 95       	com	r23
     f96:	61 95       	neg	r22
     f98:	7f 4f       	sbci	r23, 0xFF	; 255

00000f9a <__divmodhi4_exit>:
     f9a:	08 95       	ret

00000f9c <__divmodhi4_neg1>:
     f9c:	f6 f7       	brtc	.-4      	; 0xf9a <__divmodhi4_exit>
     f9e:	90 95       	com	r25
     fa0:	81 95       	neg	r24
     fa2:	9f 4f       	sbci	r25, 0xFF	; 255
     fa4:	08 95       	ret

00000fa6 <__udivmodhi4>:
     fa6:	aa 1b       	sub	r26, r26
     fa8:	bb 1b       	sub	r27, r27
     faa:	51 e1       	ldi	r21, 0x11	; 17
     fac:	07 c0       	rjmp	.+14     	; 0xfbc <__udivmodhi4_ep>

00000fae <__udivmodhi4_loop>:
     fae:	aa 1f       	adc	r26, r26
     fb0:	bb 1f       	adc	r27, r27
     fb2:	a6 17       	cp	r26, r22
     fb4:	b7 07       	cpc	r27, r23
     fb6:	10 f0       	brcs	.+4      	; 0xfbc <__udivmodhi4_ep>
     fb8:	a6 1b       	sub	r26, r22
     fba:	b7 0b       	sbc	r27, r23

00000fbc <__udivmodhi4_ep>:
     fbc:	88 1f       	adc	r24, r24
     fbe:	99 1f       	adc	r25, r25
     fc0:	5a 95       	dec	r21
     fc2:	a9 f7       	brne	.-22     	; 0xfae <__udivmodhi4_loop>
     fc4:	80 95       	com	r24
     fc6:	90 95       	com	r25
     fc8:	bc 01       	movw	r22, r24
     fca:	cd 01       	movw	r24, r26
     fcc:	08 95       	ret

00000fce <__prologue_saves__>:
     fce:	2f 92       	push	r2
     fd0:	3f 92       	push	r3
     fd2:	4f 92       	push	r4
     fd4:	5f 92       	push	r5
     fd6:	6f 92       	push	r6
     fd8:	7f 92       	push	r7
     fda:	8f 92       	push	r8
     fdc:	9f 92       	push	r9
     fde:	af 92       	push	r10
     fe0:	bf 92       	push	r11
     fe2:	cf 92       	push	r12
     fe4:	df 92       	push	r13
     fe6:	ef 92       	push	r14
     fe8:	ff 92       	push	r15
     fea:	0f 93       	push	r16
     fec:	1f 93       	push	r17
     fee:	cf 93       	push	r28
     ff0:	df 93       	push	r29
     ff2:	cd b7       	in	r28, 0x3d	; 61
     ff4:	de b7       	in	r29, 0x3e	; 62
     ff6:	ca 1b       	sub	r28, r26
     ff8:	db 0b       	sbc	r29, r27
     ffa:	0f b6       	in	r0, 0x3f	; 63
     ffc:	f8 94       	cli
     ffe:	de bf       	out	0x3e, r29	; 62
    1000:	0f be       	out	0x3f, r0	; 63
    1002:	cd bf       	out	0x3d, r28	; 61
    1004:	09 94       	ijmp

00001006 <__epilogue_restores__>:
    1006:	2a 88       	ldd	r2, Y+18	; 0x12
    1008:	39 88       	ldd	r3, Y+17	; 0x11
    100a:	48 88       	ldd	r4, Y+16	; 0x10
    100c:	5f 84       	ldd	r5, Y+15	; 0x0f
    100e:	6e 84       	ldd	r6, Y+14	; 0x0e
    1010:	7d 84       	ldd	r7, Y+13	; 0x0d
    1012:	8c 84       	ldd	r8, Y+12	; 0x0c
    1014:	9b 84       	ldd	r9, Y+11	; 0x0b
    1016:	aa 84       	ldd	r10, Y+10	; 0x0a
    1018:	b9 84       	ldd	r11, Y+9	; 0x09
    101a:	c8 84       	ldd	r12, Y+8	; 0x08
    101c:	df 80       	ldd	r13, Y+7	; 0x07
    101e:	ee 80       	ldd	r14, Y+6	; 0x06
    1020:	fd 80       	ldd	r15, Y+5	; 0x05
    1022:	0c 81       	ldd	r16, Y+4	; 0x04
    1024:	1b 81       	ldd	r17, Y+3	; 0x03
    1026:	aa 81       	ldd	r26, Y+2	; 0x02
    1028:	b9 81       	ldd	r27, Y+1	; 0x01
    102a:	ce 0f       	add	r28, r30
    102c:	d1 1d       	adc	r29, r1
    102e:	0f b6       	in	r0, 0x3f	; 63
    1030:	f8 94       	cli
    1032:	de bf       	out	0x3e, r29	; 62
    1034:	0f be       	out	0x3f, r0	; 63
    1036:	cd bf       	out	0x3d, r28	; 61
    1038:	ed 01       	movw	r28, r26
    103a:	08 95       	ret

0000103c <_exit>:
    103c:	f8 94       	cli

0000103e <__stop_program>:
    103e:	ff cf       	rjmp	.-2      	; 0x103e <__stop_program>
