
********************************************************
Proj_1C:  Target practice: Testing your reaction time.  Another repetitive display.	LEDS are disabled provided sw2 is pressed at the instant they are illuminated.

It Introduces		1. Interrupts:  These can occur at any time, for example when a switch is pressed.	Program flow jumps to a special routine known as the Interrupt Service Routine (ISR).	When the ISR has been executed program flow control jumps back to the point	at which the interrupt occurred.

2. The .h file ("Proj_1C_header_file.h")   This is provided to simplify the program file.	A lot of information that could be placed in the program file is removed and placed in this file.	It gives details of the code segments and the locations of the subroutines.	It also tells the compiler about certain WinAVR files that will be required. 


3. Project Firm WARE	a. config_sw1_and_sw2_for_PCI   (Pin Change Interrupt)	This is a code segment that enables switches to generate interrupts	when they change an input from high to low and visa versa.

b. switch_2_up      A code segment that returns a zero when the switch is pressed and a 1 when it is not.	An "if(switch_2_up)" statement is present in the PCI ISR to specify the response when sw_2 has just been released.	Note there is also "switch_2_down" and similar segments for sw1 and sw3.

c. SW_reset      A code segment that enables the UNO Atmega 328 to be reset by the program.	It initialises a special timer known as the watch dog timer (WDT) that triggers a reset when it times out.

Want a bit of help with the C and microcontrollers in general: Then google	https://epdf.tips/c-programming-for-microcontrollers.html. for a great introductory read.

Operation	Press sw2 and the LED illuminated at that time will transfer from the top row to the bottom.	Continue until all LEDs have been shot down.