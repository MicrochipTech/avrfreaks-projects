****************************************
Proj_2F:  Display numbers manually	This shows how the numbers we read on the display are no more than simple patterns	in the segments that go to make them up.  

It introduces 
1.      The user prompt: a message that is sent to the PC when the program first runs.

2.      The project variable "watch_dog_reset".	When power is first applied or immediately after programming it is zero.	However when the program re-starts following a SW_reset it is set to 1.		This program uses the "watch_dog_reset" to generate different user prompts.	The full prompt is used when the program first runs following power-up or programming.	However following a SW_reset an abbreviated prompt is used.

3.      The Watch Dog Timer (WDT):  This is primarily a safety device to ensure that program code	never comes to an indefinite standstill.	Unless it is reset by the code it generates a reset after a preset time interval (30mS in this case).		This type of thing never comes to order and therefore sw1 is used to generate an interruption.	Note: The "SW_reset" code segment uses the WDT.

4.      Project subroutines "isCharavailable()" and "receiveChar()".		Obviously a user entering data at the keyboard cannot be constrained by the WDT.	"isCharavailable()" waits several mS for a keypress and if one is not forth coming	it resets the WDT and waits again.		When the user eventually does make a key press "receiveChar()" gets the data from the	USART and the program continue on its way.

5.      Project subroutine "waitforkeypress()" is simpler to use and good for exercises,	but not very good practice because it cannot be used with the WDT. 
