
AVRASM ver. 2.1.9  master.asm Sat Jul 03 11:00:10 2010

master.asm(995): Including file 'master.vec'
master.asm(996): Including file 'master.inc'
master.inc(9): warning: Register r4 already defined by the .DEF directive
master.asm(996): 'master.inc' included form here
master.inc(10): warning: Register r3 already defined by the .DEF directive
master.asm(996): 'master.inc' included form here
master.inc(11): warning: Register r6 already defined by the .DEF directive
master.asm(996): 'master.inc' included form here
                 
                 
                 ;CodeVisionAVR C Compiler V1.25.8 Standard
                 ;(C) Copyright 1998-2007 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type              : ATmega2560
                 ;Program type           : Application
                 ;Clock frequency        : 11,059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External SRAM size     : 0
                 ;Data Stack size        : 2048 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote char to int    : Yes
                 ;char is unsigned       : Yes
                 ;8 bit enums            : Yes
                 ;Word align FLASH struct: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8192
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	LDI  R30,0
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+@1)
                 	LDI  R31,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	LDI  R22,BYTE3(2*@0+@1)
                 	LDI  R23,BYTE4(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+@2)
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+@3)
                 	LDI  R@1,HIGH(@2+@3)
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+@3)
                 	LDI  R@1,HIGH(@2*2+@3)
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	LDS  R22,@0+@1+2
                 	LDS  R23,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+@2
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+@3
                 	LDS  R@1,@2+@3+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	LDS  R24,@0+@1+2
                 	LDS  R25,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	STS  @0+@1+2,R22
                 	STS  @0+@1+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+@1,R0
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+@1,R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+@1,R@2
                 	STS  @0+@1+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0
                 
                 	.INCLUDE "master.vec"
                 
                 ;INTERRUPT VECTORS
000000 940c 0091 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 0000 	JMP  0x00
000048 940c 0000 	JMP  0x00
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 0000 	JMP  0x00
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 0000 	JMP  0x00
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 0000 	JMP  0x00
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 	.INCLUDE "master.inc"
                 
                 _tbl10_G3:
000072 2710
000073 03e8
000074 0064
000075 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000076 0001      	.DB  0x1,0x0
                 _tbl16_G3:
000077 1000
000078 0100
000079 0010
00007a 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 _199:
00007b c080      	.DB  0x80,0xC0
                 	.DEF __lcd_x=R4
                 	.DEF __lcd_y=R3
                 	.DEF __lcd_maxx=R6
                 _208:
00007c 0000      	.DW  0x00
                 _0:
00007d 7274
00007e 6e61
00007f 6d73
000080 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
000081 3a20
000082 3120
000083 0039
000084 6572      	.DB  0x20,0x3A,0x20,0x31,0x39,0x0,0x72,0x65
000085 6563
000086 7669
000087 2065
000088 203a      	.DB  0x63,0x65,0x69,0x76,0x65,0x20,0x3A,0x20
master.inc(18): warning: .cseg .db misalignment - padding zero byte
master.asm(996): 'master.inc' included form here
000089 0000      	.DB  0x0
                 
                 ;GPIOR0 INITIALIZATION
                 	.EQU  __GPIOR0_INIT=0x00
                 
                 __GLOBAL_INI_TBL:
00008a 0002      	.DW  0x02
00008b 0a00      	.DW  __base_y_G4
00008c 00f6      	.DW  _199*2
                 
00008d 0002      	.DW  0x02
00008e 0a04      	.DW  _p_S55
00008f 00f8      	.DW  _208*2
                 
000090 0000      	.DW  0
                 _0xD7:
                 
                 __RESET:
000091 94f8      	CLI
000092 27ee      	CLR  R30
000093 bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000094 e0f1      	LDI  R31,1
000095 bff5      	OUT  MCUCR,R31
000096 bfe5      	OUT  MCUCR,R30
000097 93e0 0074 	STS  XMCRA,R30
000099 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
00009b e1f8      	LDI  R31,0x18
00009c 95a8      	WDR
00009d b7a4      	IN   R26,MCUSR
00009e 7fa7      	CBR  R26,8
00009f bfa4      	OUT  MCUSR,R26
0000a0 93f0 0060 	STS  WDTCSR,R31
0000a2 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0000a4 e08d      	LDI  R24,13
0000a5 e0a2      	LDI  R26,2
0000a6 27bb      	CLR  R27
                 __CLEAR_REG:
0000a7 93ed      	ST   X+,R30
0000a8 958a      	DEC  R24
0000a9 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0000aa e080      	LDI  R24,LOW(0x2000)
0000ab e290      	LDI  R25,HIGH(0x2000)
0000ac e0a0      	LDI  R26,LOW(0x200)
0000ad e0b2      	LDI  R27,HIGH(0x200)
                 __CLEAR_SRAM:
0000ae 93ed      	ST   X+,R30
0000af 9701      	SBIW R24,1
0000b0 f7e9      	BRNE __CLEAR_SRAM
                 
0000b1 bf8b      	OUT  RAMPZ,R24
0000b2 bf8c      	OUT  EIND,R24
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0000b3 e1e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000b4 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0000b5 9185      	LPM  R24,Z+
0000b6 9195      	LPM  R25,Z+
0000b7 9700      	SBIW R24,0
0000b8 f061      	BREQ __GLOBAL_INI_END
0000b9 91a5      	LPM  R26,Z+
0000ba 91b5      	LPM  R27,Z+
0000bb 9005      	LPM  R0,Z+
0000bc 9015      	LPM  R1,Z+
0000bd 01bf      	MOVW R22,R30
0000be 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0000bf 9005      	LPM  R0,Z+
0000c0 920d      	ST   X+,R0
0000c1 9701      	SBIW R24,1
0000c2 f7e1      	BRNE __GLOBAL_INI_LOOP
0000c3 01fb      	MOVW R30,R22
0000c4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0000c5 e0e0      	LDI  R30,__GPIOR0_INIT
0000c6 bbee      	OUT  GPIOR0,R30
                 
                 ;STACK POINTER INITIALIZATION
0000c7 efef      	LDI  R30,LOW(0x21FF)
0000c8 bfed      	OUT  SPL,R30
0000c9 e2e1      	LDI  R30,HIGH(0x21FF)
0000ca bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0000cb e0c0      	LDI  R28,LOW(0xA00)
0000cc e0da      	LDI  R29,HIGH(0xA00)
                 
0000cd 940c 00cf 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xA00
                 ;       1 /**
                 ;       2     author: saripudin (saripudin2@gmail.com)
                 ;       3     ver: 03 Juli 2010
                 ;       4     @desc: this is uC master software
                 ;       5 
                 ;       6 */
                 ;       7 
                 ;       8 //pake interrupt untuk Rx dan Tx ternyata sama2 jalan juga
                 ;       9 
                 ;      10 #include <mega2560.h>
                 ;      11 	#ifndef __SLEEP_DEFINED__
                 	#ifndef __SLEEP_DEFINED__
                 ;      12 	#define __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 ;      13 	.EQU __se_bit=0x01
                 	.EQU __se_bit=0x01
                 ;      14 	.EQU __sm_mask=0x0E
                 	.EQU __sm_mask=0x0E
                 ;      15 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powerdown=0x04
                 ;      16 	.EQU __sm_powersave=0x06
                 	.EQU __sm_powersave=0x06
                 ;      17 	.EQU __sm_standby=0x0C
                 	.EQU __sm_standby=0x0C
                 ;      18 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_ext_standby=0x0E
                 ;      19 	.EQU __sm_adc_noise_red=0x02
                 	.EQU __sm_adc_noise_red=0x02
                 ;      20 	.SET power_ctrl_reg=smcr
                 	.SET power_ctrl_reg=smcr
                 ;      21 	#endif
                 	#endif
                 ;      22 #include <stdlib.h>
                 ;      23 #include <delay.h>
                 ;      24 #include <stdio.h>
                 ;      25 #asm
                 ;      26    .equ __lcd_port=0x11 ;PORTF
                    .equ __lcd_port=0x11 ;PORTF
                 ;      27 #endasm
                 ;      28 #include <lcd.h>
                 ;      29 
                 ;      30 // Declare your global variables here
                 ;      31 
                 ;      32 void main(void)
                 ;      33 {
                 
                 	.CSEG
                 _main:
                 ;      34 unsigned char data;
                 ;      35 
                 ;      36 char lcd[15];
                 ;      37 #pragma optsize-
                 ;      38 CLKPR=0x80;
0000cf 972f      	SBIW R28,15
                 ;	data -> R17
                 ;	lcd -> Y+0
0000d0 e8e0      	LDI  R30,LOW(128)
0000d1 93e0 0061 	STS  97,R30
                 ;      39 CLKPR=0x00;
0000d3 e0e0      	LDI  R30,LOW(0)
0000d4 93e0 0061 	STS  97,R30
                 ;      40 #ifdef _OPTIMIZE_SIZE_
                 ;      41 #pragma optsize+
                 ;      42 #endif
                 ;      43 
                 ;      44 lcd_init(16);
0000d6 e1e0      	LDI  R30,LOW(16)
0000d7 93ea      	ST   -Y,R30
0000d8 940e 020d 	CALL _lcd_init
                 ;      45 // USART1 initialization
                 ;      46 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ;      47 // USART1 Receiver: On
                 ;      48 // USART1 Transmitter: On
                 ;      49 // USART1 Mode: Asynchronous
                 ;      50 // USART1 Baud Rate: 9600
                 ;      51 UCSR0A=0x00;
0000da e0e0      	LDI  R30,LOW(0)
0000db 93e0 00c0 	STS  192,R30
                 ;      52 UCSR0B=0x18;
0000dd e1e8      	LDI  R30,LOW(24)
0000de 93e0 00c1 	STS  193,R30
                 ;      53 UCSR0C=0x06;
0000e0 e0e6      	LDI  R30,LOW(6)
0000e1 93e0 00c2 	STS  194,R30
                 ;      54 UBRR0H=0x00;
0000e3 e0e0      	LDI  R30,LOW(0)
0000e4 93e0 00c5 	STS  197,R30
                 ;      55 UBRR0L=0x47;
0000e6 e4e7      	LDI  R30,LOW(71)
0000e7 93e0 00c4 	STS  196,R30
                 ;      56 
                 ;      57 lcd_putsf("transmit : 19");
0000e9 efea
0000ea e0f0      	__POINTW1FN _0,0
0000eb 93fa      	ST   -Y,R31
0000ec 93ea      	ST   -Y,R30
0000ed 940e 01ea 	CALL _lcd_putsf
                 ;      58 putchar(19);
0000ef e1e3      	LDI  R30,LOW(19)
0000f0 93ea      	ST   -Y,R30
0000f1 940e 0147 	CALL _putchar
                 ;      59 data=getchar();
0000f3 940e 0140 	CALL _getchar
0000f5 2f1e      	MOV  R17,R30
                 ;      60 if(data==38)
0000f6 3216      	CPI  R17,38
0000f7 f4d1      	BRNE _0x3
                 ;      61 {
                 ;      62     lcd_gotoxy(0,1);
0000f8 e0e0      	LDI  R30,LOW(0)
0000f9 93ea      	ST   -Y,R30
0000fa e0e1      	LDI  R30,LOW(1)
0000fb 93ea      	ST   -Y,R30
0000fc 940e 0197 	CALL _lcd_gotoxy
                 ;      63     lcd_putsf("receive : ");
0000fe e0e8
0000ff e0f1      	__POINTW1FN _0,14
000100 93fa      	ST   -Y,R31
000101 93ea      	ST   -Y,R30
000102 940e 01ea 	CALL _lcd_putsf
                 ;      64     itoa(data, lcd);
000104 2fe1      	MOV  R30,R17
000105 e0f0      	LDI  R31,0
000106 93fa      	ST   -Y,R31
000107 93ea      	ST   -Y,R30
000108 01fe      	MOVW R30,R28
000109 9632      	ADIW R30,2
00010a 93fa      	ST   -Y,R31
00010b 93ea      	ST   -Y,R30
00010c d007      	RCALL _itoa
                 ;      65     lcd_puts(lcd);
00010d 01fe      	MOVW R30,R28
00010e 93fa      	ST   -Y,R31
00010f 93ea      	ST   -Y,R30
000110 940e 01db 	CALL _lcd_puts
                 ;      66 }
                 ;      67 
                 ;      68 while (1);
                 _0x3:
                 _0x4:
000112 cfff      	RJMP _0x4
                 ;      69 }
                 _0x7:
000113 cfff      	RJMP _0x7
                 
                 _itoa:
000114 91a9          ld   r26,y+
000115 91b9          ld   r27,y+
000116 91e9          ld   r30,y+
000117 91f9          ld   r31,y+
000118 9630          adiw r30,0
000119 f42a          brpl __itoa0
00011a 95e0          com  r30
00011b 95f0          com  r31
00011c 9631          adiw r30,1
00011d e26d          ldi  r22,'-'
00011e 936d          st   x+,r22
                 __itoa0:
00011f 94e8          clt
000120 e180          ldi  r24,low(10000)
000121 e297          ldi  r25,high(10000)
000122 d00d          rcall __itoa1
000123 ee88          ldi  r24,low(1000)
000124 e093          ldi  r25,high(1000)
000125 d00a          rcall __itoa1
000126 e684          ldi  r24,100
000127 2799          clr  r25
000128 d007          rcall __itoa1
000129 e08a          ldi  r24,10
00012a d005          rcall __itoa1
00012b 2f6e          mov  r22,r30
00012c d010          rcall __itoa5
00012d 2766          clr  r22
00012e 936c          st   x,r22
00012f 9508          ret
                 __itoa1:
000130 2766          clr	 r22
                 __itoa2:
000131 17e8          cp   r30,r24
000132 07f9          cpc  r31,r25
000133 f020          brlo __itoa3
000134 9563          inc  r22
000135 1be8          sub  r30,r24
000136 0bf9          sbc  r31,r25
000137 f7c9          brne __itoa2
                 __itoa3:
000138 2366          tst  r22
000139 f411          brne __itoa4
00013a f016          brts __itoa5
00013b 9508          ret
                 __itoa4:
00013c 9468          set
                 __itoa5:
00013d 5d60          subi r22,-0x30
00013e 936d          st   x+,r22
00013f 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 _getchar:
                 _0x8:
000140 91e0 00c0 	LDS  R30,192
000142 78e0      	ANDI R30,LOW(0x80)
000143 f3e1      	BREQ _0x8
000144 91e0 00c6 	LDS  R30,198
000146 9508      	RET
                 _putchar:
                 _0xB:
000147 91e0 00c0 	LDS  R30,192
000149 72e0      	ANDI R30,LOW(0x20)
00014a f3e1      	BREQ _0xB
00014b 81e8      	LD   R30,Y
00014c 93e0 00c6 	STS  198,R30
00014e 9621      	ADIW R28,1
00014f 9508      	RET
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 __base_y_G4:
000a00           	.BYTE 0x4
                 
                 	.CSEG
                 __lcd_delay_G4:
000150 e0ff          ldi   r31,15
                 __lcd_delay0:
000151 95fa          dec   r31
000152 f7f1          brne  __lcd_delay0
000153 9508      	RET
                 __lcd_ready:
000154 b3a0          in    r26,__lcd_direction
000155 70af          andi  r26,0xf                 ;set as input
000156 bba0          out   __lcd_direction,r26
000157 9a89          sbi   __lcd_port,__lcd_rd     ;RD=1
000158 9888          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
000159 940e 0150 	CALL __lcd_delay_G4
00015b 9a8a          sbi   __lcd_port,__lcd_enable ;EN=1
00015c 940e 0150 	CALL __lcd_delay_G4
00015e b1af          in    r26,__lcd_pin
00015f 988a          cbi   __lcd_port,__lcd_enable ;EN=0
000160 940e 0150 	CALL __lcd_delay_G4
000162 9a8a          sbi   __lcd_port,__lcd_enable ;EN=1
000163 940e 0150 	CALL __lcd_delay_G4
000165 988a          cbi   __lcd_port,__lcd_enable ;EN=0
000166 fda7          sbrc  r26,__lcd_busy_flag
000167 cff1          rjmp  __lcd_busy
000168 9508      	RET
                 __lcd_write_nibble_G4:
000169 7fa0          andi  r26,0xf0
00016a 2bab          or    r26,r27
00016b bba1          out   __lcd_port,r26          ;write
00016c 9a8a          sbi   __lcd_port,__lcd_enable ;EN=1
00016d 940e 0150 	CALL __lcd_delay_G4
00016f 988a          cbi   __lcd_port,__lcd_enable ;EN=0
000170 940e 0150 	CALL __lcd_delay_G4
000172 9508      	RET
                 __lcd_write_data:
000173 9889          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000174 b3a0          in    r26,__lcd_direction
000175 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output    
000176 bba0          out   __lcd_direction,r26
000177 b3b1          in    r27,__lcd_port
000178 70bf          andi  r27,0xf
000179 81a8          ld    r26,y
00017a 940e 0169 	CALL __lcd_write_nibble_G4
00017c 81a8          ld    r26,y
00017d 95a2          swap  r26
00017e 940e 0169 	CALL __lcd_write_nibble_G4
000180 9a89          sbi   __lcd_port,__lcd_rd     ;RD=1
000181 9621      	ADIW R28,1
000182 9508      	RET
                 __lcd_read_nibble_G4:
000183 9a8a          sbi   __lcd_port,__lcd_enable ;EN=1
000184 940e 0150 	CALL __lcd_delay_G4
000186 b1ef          in    r30,__lcd_pin           ;read
000187 988a          cbi   __lcd_port,__lcd_enable ;EN=0
000188 940e 0150 	CALL __lcd_delay_G4
00018a 7fe0          andi  r30,0xf0
00018b 9508      	RET
                 _lcd_read_byte0_G4:
00018c 940e 0150 	CALL __lcd_delay_G4
00018e 940e 0183 	CALL __lcd_read_nibble_G4
000190 2fae          mov   r26,r30
000191 940e 0183 	CALL __lcd_read_nibble_G4
000193 9889          cbi   __lcd_port,__lcd_rd     ;RD=0
000194 95e2          swap  r30
000195 2bea          or    r30,r26
000196 9508      	RET
                 _lcd_gotoxy:
000197 940e 0154 	CALL __lcd_ready
000199 81e8      	LD   R30,Y
00019a e0f0      	LDI  R31,0
00019b 50e0      	SUBI R30,LOW(-__base_y_G4)
00019c 4ff6      	SBCI R31,HIGH(-__base_y_G4)
00019d 81e0      	LD   R30,Z
00019e 2fae      	MOV  R26,R30
00019f 81e9      	LDD  R30,Y+1
0001a0 e0f0      	LDI  R31,0
0001a1 e0b0      	LDI  R27,0
0001a2 0fea      	ADD  R30,R26
0001a3 1ffb      	ADC  R31,R27
0001a4 93ea      	ST   -Y,R30
0001a5 940e 0173 	CALL __lcd_write_data
0001a7 8049      	LDD  R4,Y+1
0001a8 8038      	LDD  R3,Y+0
0001a9 9622      	ADIW R28,2
0001aa 9508      	RET
                 _lcd_clear:
0001ab 940e 0154 	CALL __lcd_ready
0001ad e0e2      	LDI  R30,LOW(2)
0001ae 93ea      	ST   -Y,R30
0001af 940e 0173 	CALL __lcd_write_data
0001b1 940e 0154 	CALL __lcd_ready
0001b3 e0ec      	LDI  R30,LOW(12)
0001b4 93ea      	ST   -Y,R30
0001b5 940e 0173 	CALL __lcd_write_data
0001b7 940e 0154 	CALL __lcd_ready
0001b9 e0e1      	LDI  R30,LOW(1)
0001ba 93ea      	ST   -Y,R30
0001bb 940e 0173 	CALL __lcd_write_data
0001bd e0e0      	LDI  R30,LOW(0)
0001be 2e3e      	MOV  R3,R30
0001bf 2e4e      	MOV  R4,R30
0001c0 9508      	RET
                 _lcd_putchar:
0001c1 93ef          push r30
0001c2 93ff          push r31
0001c3 81a8          ld   r26,y
0001c4 9468          set
0001c5 30aa          cpi  r26,10
0001c6 f021          breq __lcd_putchar1
0001c7 94e8          clt
0001c8 9443      	INC  R4
0001c9 1464      	CP   R6,R4
0001ca f438      	BRSH _0xC8
                 	__lcd_putchar1:
0001cb 9433      	INC  R3
0001cc e0e0      	LDI  R30,LOW(0)
0001cd 93ea      	ST   -Y,R30
0001ce 923a      	ST   -Y,R3
0001cf 940e 0197 	CALL _lcd_gotoxy
0001d1 f02e      	brts __lcd_putchar0
                 _0xC8:
0001d2 df81          rcall __lcd_ready
0001d3 9a88          sbi  __lcd_port,__lcd_rs ;RS=1
0001d4 81a8          ld   r26,y
0001d5 93aa          st   -y,r26
0001d6 df9c          rcall __lcd_write_data
                 __lcd_putchar0:
0001d7 91ff          pop  r31
0001d8 91ef          pop  r30
0001d9 9621      	ADIW R28,1
0001da 9508      	RET
                 _lcd_puts:
0001db 931a      	ST   -Y,R17
                 _0xC9:
0001dc 81a9      	LDD  R26,Y+1
0001dd 81ba      	LDD  R27,Y+1+1
0001de 91ed      	LD   R30,X+
0001df 83a9      	STD  Y+1,R26
0001e0 83ba      	STD  Y+1+1,R27
0001e1 2f1e      	MOV  R17,R30
0001e2 30e0      	CPI  R30,0
0001e3 f021      	BREQ _0xCB
0001e4 931a      	ST   -Y,R17
0001e5 940e 01c1 	CALL _lcd_putchar
0001e7 cff4      	RJMP _0xC9
                 _0xCB:
0001e8 8118      	LDD  R17,Y+0
0001e9 c010      	RJMP _0xD6
                 _lcd_putsf:
0001ea 931a      	ST   -Y,R17
                 _0xCC:
0001eb 81e9      	LDD  R30,Y+1
0001ec 81fa      	LDD  R31,Y+1+1
0001ed 9631      	ADIW R30,1
0001ee 83e9      	STD  Y+1,R30
0001ef 83fa      	STD  Y+1+1,R31
0001f0 9731      	SBIW R30,1
0001f1 91e4      	LPM  R30,Z
0001f2 2f1e      	MOV  R17,R30
0001f3 30e0      	CPI  R30,0
0001f4 f021      	BREQ _0xCE
0001f5 931a      	ST   -Y,R17
0001f6 940e 01c1 	CALL _lcd_putchar
0001f8 cff2      	RJMP _0xCC
                 _0xCE:
0001f9 8118      	LDD  R17,Y+0
                 _0xD6:
0001fa 9623      	ADIW R28,3
0001fb 9508      	RET
                 __long_delay_G4:
0001fc 27aa          clr   r26
0001fd 27bb          clr   r27
                 __long_delay0:
0001fe 9711          sbiw  r26,1         ;2 cycles
0001ff f7f1          brne  __long_delay0 ;2 cycles
000200 9508      	RET
                 __lcd_init_write_G4:
000201 9889          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000202 b3a0          in    r26,__lcd_direction
000203 6fa7          ori   r26,0xf7                ;set as output
000204 bba0          out   __lcd_direction,r26
000205 b3b1          in    r27,__lcd_port
000206 70bf          andi  r27,0xf
000207 81a8          ld    r26,y
000208 940e 0169 	CALL __lcd_write_nibble_G4
00020a 9a89          sbi   __lcd_port,__lcd_rd     ;RD=1
00020b 9621      	ADIW R28,1
00020c 9508      	RET
                 _lcd_init:
00020d 988a          cbi   __lcd_port,__lcd_enable ;EN=0
00020e 9888          cbi   __lcd_port,__lcd_rs     ;RS=0
00020f 8068      	LDD  R6,Y+0
000210 81e8      	LD   R30,Y
000211 58e0      	SUBI R30,-LOW(128)
000212 93e0 0a02 	__PUTB1MN __base_y_G4,2
000214 81e8      	LD   R30,Y
000215 54e0      	SUBI R30,-LOW(192)
000216 93e0 0a03 	__PUTB1MN __base_y_G4,3
000218 940e 0244 	CALL SUBOPT_0x0
00021a 940e 0244 	CALL SUBOPT_0x0
00021c 940e 0244 	CALL SUBOPT_0x0
00021e 940e 01fc 	CALL __long_delay_G4
000220 e2e0      	LDI  R30,LOW(32)
000221 93ea      	ST   -Y,R30
000222 940e 0201 	CALL __lcd_init_write_G4
000224 940e 01fc 	CALL __long_delay_G4
000226 e2e8      	LDI  R30,LOW(40)
000227 940e 024a 	CALL SUBOPT_0x1
000229 e0e4      	LDI  R30,LOW(4)
00022a 940e 024a 	CALL SUBOPT_0x1
00022c e8e5      	LDI  R30,LOW(133)
00022d 940e 024a 	CALL SUBOPT_0x1
00022f b3a0          in    r26,__lcd_direction
000230 70af          andi  r26,0xf                 ;set as input
000231 bba0          out   __lcd_direction,r26
000232 9a89          sbi   __lcd_port,__lcd_rd     ;RD=1
000233 940e 018c 	CALL _lcd_read_byte0_G4
000235 30e5      	CPI  R30,LOW(0x5)
000236 f011      	BREQ _0xCF
000237 e0e0      	LDI  R30,LOW(0)
000238 c009      	RJMP _0xD5
                 _0xCF:
000239 940e 0154 	CALL __lcd_ready
00023b e0e6      	LDI  R30,LOW(6)
00023c 93ea      	ST   -Y,R30
00023d 940e 0173 	CALL __lcd_write_data
00023f 940e 01ab 	CALL _lcd_clear
000241 e0e1      	LDI  R30,LOW(1)
                 _0xD5:
000242 9621      	ADIW R28,1
000243 9508      	RET
                 
                 	.DSEG
                 _p_S55:
000a04           	.BYTE 0x2
                 
                 	.CSEG
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x0:
000244 940e 01fc 	CALL __long_delay_G4
000246 e3e0      	LDI  R30,LOW(48)
000247 93ea      	ST   -Y,R30
000248 940c 0201 	JMP  __lcd_init_write_G4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
00024a 93ea      	ST   -Y,R30
00024b 940e 0173 	CALL __lcd_write_data
00024d 940c 01fc 	JMP  __long_delay_G4
                 
                 __SAVELOCR6:
00024f 935a      	ST   -Y,R21
                 __SAVELOCR5:
000250 934a      	ST   -Y,R20
                 __SAVELOCR4:
000251 933a      	ST   -Y,R19
                 __SAVELOCR3:
000252 932a      	ST   -Y,R18
                 __SAVELOCR2:
000253 931a      	ST   -Y,R17
000254 930a      	ST   -Y,R16
000255 9508      	RET
                 
                 __LOADLOCR6:
000256 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000257 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000258 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000259 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00025a 8119      	LDD  R17,Y+1
00025b 8108      	LD   R16,Y
00025c 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   4 r4 :   4 r5 :   0 r6 :   2 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   2 r17:  13 r18:   2 r19:   2 r20:   2 r21:   2 r22:  12 r23:   0 
r24:  15 r25:   7 r26:  40 r27:  14 r28:  11 r29:   1 r30: 120 r31:  27 
x  :   7 y  :  68 z  :   9 
Registers used: 23 out of 35 (65.7%)

ATmega2560 instruction use summary:
adc   :   1 add   :   1 adiw  :  11 and   :   0 andi  :   8 asr   :   0 
bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 
break :   0 breq  :   7 brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 
brie  :   0 brlo  :   1 brlt  :   0 brmi  :   0 brne  :   8 brpl  :   1 
brsh  :   1 brtc  :   0 brts  :   2 brvc  :   0 brvs  :   0 bset  :   0 
bst   :   0 call  :  47 cbi   :  10 cbr   :   1 clc   :   0 clh   :   0 
cli   :   1 cln   :   0 clr   :   7 cls   :   0 clt   :   2 clv   :   0 
clz   :   0 com   :   2 cp    :   2 cpc   :   1 cpi   :   5 cpse  :   0 
dec   :   2 eicall:   0 eijmp :   0 elpm  :   0 eor   :   0 fmul  :   0 
fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 in    :   9 inc   :   3 
jmp   :  60 ld    :  16 ldd   :  15 ldi   :  55 lds   :   3 lpm   :   8 
lsl   :   0 lsr   :   0 mov   :   9 movw  :   5 mul   :   0 muls  :   0 
mulsu :   0 neg   :   0 nop   :   0 or    :   2 ori   :   2 out   :  14 
pop   :   2 push  :   2 rcall :   8 ret   :  20 reti  :   0 rjmp  :   8 
rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 sbi   :   9 sbic  :   0 
sbis  :   0 sbiw  :   6 sbr   :   0 sbrc  :   1 sbrs  :   0 sec   :   0 
seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 set   :   2 
sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  41 std   :   4 
sts   :  14 sub   :   1 subi  :   4 swap  :   2 tst   :   1 wdr   :   1 

Instructions used: 53 out of 114 (46.5%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0004ba   1148     62   1210  262144   0.5%
[.dseg] 0x000200 0x000a06      0      6      6    8192   0.1%
[.eseg] 0x000000 0x000000      0      0      0    4096   0.0%

Assembly complete, 0 errors, 4 warnings
