
AVRASM ver. 2.1.9  slave.asm Sat Jul 03 10:36:27 2010

slave.asm(989): Including file 'slave.vec'
slave.asm(990): Including file 'slave.inc'
slave.inc(9): warning: Register r5 already defined by the .DEF directive
slave.asm(990): 'slave.inc' included form here
slave.inc(10): warning: Register r4 already defined by the .DEF directive
slave.asm(990): 'slave.inc' included form here
slave.inc(11): warning: Register r7 already defined by the .DEF directive
slave.asm(990): 'slave.inc' included form here
                 
                 
                 ;CodeVisionAVR C Compiler V1.25.8 Standard
                 ;(C) Copyright 1998-2007 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type              : ATmega8
                 ;Program type           : Application
                 ;Clock frequency        : 11,059200 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External SRAM size     : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote char to int    : Yes
                 ;char is unsigned       : Yes
                 ;8 bit enums            : Yes
                 ;Word align FLASH struct: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega8
                 	#pragma AVRPART MEMORY PROG_FLASH 8192
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	LDI  R30,0
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+@1)
                 	LDI  R31,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	LDI  R22,BYTE3(2*@0+@1)
                 	LDI  R23,BYTE4(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+@2)
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+@3)
                 	LDI  R@1,HIGH(@2+@3)
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+@3)
                 	LDI  R@1,HIGH(@2*2+@3)
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	LDS  R22,@0+@1+2
                 	LDS  R23,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+@2
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+@3
                 	LDS  R@1,@2+@3+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	LDS  R24,@0+@1+2
                 	LDS  R25,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	STS  @0+@1+2,R22
                 	STS  @0+@1+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+@1,R0
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+@1,R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+@1,R@2
                 	STS  @0+@1+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	RCALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	RCALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	RCALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	CLR  R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z+,R0
                 	ST   Z,R0
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0
                 
                 	.INCLUDE "slave.vec"
                 
                 ;INTERRUPT VECTORS
000000 c031      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
                 
                 	.INCLUDE "slave.inc"
                 
                 _tbl10_G2:
000013 2710
000014 03e8
000015 0064
000016 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
000017 0001      	.DB  0x1,0x0
                 _tbl16_G2:
000018 1000
000019 0100
00001a 0010
00001b 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 _193:
00001c c080      	.DB  0x80,0xC0
                 	.DEF __lcd_x=R5
                 	.DEF __lcd_y=R4
                 	.DEF __lcd_maxx=R7
                 _202:
00001d 0000      	.DW  0x00
                 _0:
00001e 6572
00001f 6563
000020 7669
000021 2065      	.DB  0x72,0x65,0x63,0x65,0x69,0x76,0x65,0x20
000022 203a
000023 7400
000024 6172
000025 736e      	.DB  0x3A,0x20,0x0,0x74,0x72,0x61,0x6E,0x73
000026 696d
000027 2074
000028 203a
000029 3833      	.DB  0x6D,0x69,0x74,0x20,0x3A,0x20,0x33,0x38
slave.inc(18): warning: .cseg .db misalignment - padding zero byte
slave.asm(990): 'slave.inc' included form here
00002a 0000      	.DB  0x0
                 
                 __GLOBAL_INI_TBL:
00002b 0002      	.DW  0x02
00002c 0160      	.DW  __base_y_G4
00002d 0038      	.DW  _193*2
                 
00002e 0002      	.DW  0x02
00002f 0164      	.DW  _p_S55
000030 003a      	.DW  _202*2
                 
000031 0000      	.DW  0
                 _0xD1:
                 
                 __RESET:
000032 94f8      	CLI
000033 27ee      	CLR  R30
000034 bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
000035 e0f1      	LDI  R31,1
000036 bffb      	OUT  GICR,R31
000037 bfeb      	OUT  GICR,R30
000038 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000039 e1f8      	LDI  R31,0x18
00003a bdf1      	OUT  WDTCR,R31
00003b bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
00003c e08d      	LDI  R24,13
00003d e0a2      	LDI  R26,2
00003e 27bb      	CLR  R27
                 __CLEAR_REG:
00003f 93ed      	ST   X+,R30
000040 958a      	DEC  R24
000041 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000042 e080      	LDI  R24,LOW(0x400)
000043 e094      	LDI  R25,HIGH(0x400)
000044 e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
000045 93ed      	ST   X+,R30
000046 9701      	SBIW R24,1
000047 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000048 e5e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000049 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00004a 9185      	LPM  R24,Z+
00004b 9195      	LPM  R25,Z+
00004c 9700      	SBIW R24,0
00004d f061      	BREQ __GLOBAL_INI_END
00004e 91a5      	LPM  R26,Z+
00004f 91b5      	LPM  R27,Z+
000050 9005      	LPM  R0,Z+
000051 9015      	LPM  R1,Z+
000052 01bf      	MOVW R22,R30
000053 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
000054 9005      	LPM  R0,Z+
000055 920d      	ST   X+,R0
000056 9701      	SBIW R24,1
000057 f7e1      	BRNE __GLOBAL_INI_LOOP
000058 01fb      	MOVW R30,R22
000059 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
00005a e5ef      	LDI  R30,LOW(0x45F)
00005b bfed      	OUT  SPL,R30
00005c e0e4      	LDI  R30,HIGH(0x45F)
00005d bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
00005e e6c0      	LDI  R28,LOW(0x160)
00005f e0d1      	LDI  R29,HIGH(0x160)
                 
000060 c000      	RJMP _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 ;       1 /**
                 ;       2 @author vektor dewanto
                 ;       3 @ver 18Jan10
                 ;       4 @desc this is slave's main-software
                 ;       5 */
                 ;       6 
                 ;       7 #include <mega8.h>
                 ;       8 	#ifndef __SLEEP_DEFINED__
                 	#ifndef __SLEEP_DEFINED__
                 ;       9 	#define __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 ;      10 	.EQU __se_bit=0x80
                 	.EQU __se_bit=0x80
                 ;      11 	.EQU __sm_mask=0x70
                 	.EQU __sm_mask=0x70
                 ;      12 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powerdown=0x20
                 ;      13 	.EQU __sm_powersave=0x30
                 	.EQU __sm_powersave=0x30
                 ;      14 	.EQU __sm_standby=0x60
                 	.EQU __sm_standby=0x60
                 ;      15 	.EQU __sm_ext_standby=0x70
                 	.EQU __sm_ext_standby=0x70
                 ;      16 	.EQU __sm_adc_noise_red=0x10
                 	.EQU __sm_adc_noise_red=0x10
                 ;      17 	.SET power_ctrl_reg=mcucr
                 	.SET power_ctrl_reg=mcucr
                 ;      18 	#endif
                 	#endif
                 ;      19 #include <stdio.h>
                 ;      20 #include <delay.h>
                 ;      21 #include <stdlib.h>
                 ;      22 
                 ;      23 #asm
                 ;      24    .equ __lcd_port=0x18 ;PORTB
                    .equ __lcd_port=0x18 ;PORTB
                 ;      25 #endasm
                 ;      26 #include <lcd.h>
                 ;      27 
                 ;      28 
                 ;      29 void main(){
                 
                 	.CSEG
                 _main:
                 ;      30    unsigned char data;
                 ;      31    char lcd[15];
                 ;      32 
                 ;      33    PORTB=0x00;DDRB=0x00;
000061 972f      	SBIW R28,15
                 ;	data -> R17
                 ;	lcd -> Y+0
000062 e0e0      	LDI  R30,LOW(0)
000063 bbe8      	OUT  0x18,R30
000064 bbe7      	OUT  0x17,R30
                 ;      34    PORTC=0x00;DDRC=0x00;
000065 bbe5      	OUT  0x15,R30
000066 bbe4      	OUT  0x14,R30
                 ;      35    PORTD=0x00;DDRD=0x00;
000067 bbe2      	OUT  0x12,R30
000068 bbe1      	OUT  0x11,R30
                 ;      36 
                 ;      37    // USART initialization NO INTERRUPT
                 ;      38    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ;      39    // USART Receiver: On
                 ;      40    // USART Transmitter: On
                 ;      41    // USART Mode: Asynchronous
                 ;      42    // USART Baud Rate: 9600
                 ;      43    UCSRA=0x00;
000069 b9eb      	OUT  0xB,R30
                 ;      44    UCSRB=0x18;
00006a e1e8      	LDI  R30,LOW(24)
00006b b9ea      	OUT  0xA,R30
                 ;      45    UCSRC=0x86;
00006c e8e6      	LDI  R30,LOW(134)
00006d bde0      	OUT  0x20,R30
                 ;      46    UBRRH=0x00;
00006e e0e0      	LDI  R30,LOW(0)
00006f bde0      	OUT  0x20,R30
                 ;      47    UBRRL=0x47;
000070 e4e7      	LDI  R30,LOW(71)
000071 b9e9      	OUT  0x9,R30
                 ;      48 
                 ;      49    lcd_init(16);
000072 e1e0      	LDI  R30,LOW(16)
000073 93ea      	ST   -Y,R30
000074 d0fa      	RCALL _lcd_init
                 ;      50    while(9)
                 _0x3:
                 ;      51    {
                 ;      52    data=getchar();
000075 d023      	RCALL _getchar
000076 2f1e      	MOV  R17,R30
                 ;      53 
                 ;      54    if(data==19)
000077 3113      	CPI  R17,19
000078 f4f1      	BRNE _0x6
                 ;      55    {
                 ;      56         itoa(data,lcd);
000079 2fe1      	MOV  R30,R17
00007a d120      	RCALL SUBOPT_0x0
00007b d121      	RCALL SUBOPT_0x1
00007c 01fe      	MOVW R30,R28
00007d 9632      	ADIW R30,2
00007e d11e      	RCALL SUBOPT_0x1
00007f d023      	RCALL _itoa
                 ;      57         lcd_putsf("receive : ");
000080 e3ec
000081 e0f0      	__POINTW1FN _0,0
000082 d11a      	RCALL SUBOPT_0x1
000083 d0ca      	RCALL _lcd_putsf
                 ;      58         lcd_puts(lcd);
000084 01fe      	MOVW R30,R28
000085 d117      	RCALL SUBOPT_0x1
000086 d0b9      	RCALL _lcd_puts
                 ;      59         lcd_gotoxy(0,1);
000087 e0e0      	LDI  R30,LOW(0)
000088 93ea      	ST   -Y,R30
000089 e0e1      	LDI  R30,LOW(1)
00008a 93ea      	ST   -Y,R30
00008b d07d      	RCALL _lcd_gotoxy
                 ;      60 
                 ;      61         lcd_putsf("transmit : 38");
00008c e4e7
00008d e0f0      	__POINTW1FN _0,11
00008e d10e      	RCALL SUBOPT_0x1
00008f d0be      	RCALL _lcd_putsf
                 ;      62         putchar(38);
000090 e2e6      	LDI  R30,LOW(38)
000091 93ea      	ST   -Y,R30
000092 d00a      	RCALL _putchar
                 ;      63         delay_ms(2000);
000093 ede0      	LDI  R30,LOW(2000)
000094 e0f7      	LDI  R31,HIGH(2000)
000095 d107      	RCALL SUBOPT_0x1
000096 d10f      	RCALL _delay_ms
                 ;      64    }
                 ;      65    };
                 _0x6:
000097 cfdd      	RJMP _0x3
                 ;      66    //-------------------------End of yours
                 ;      67 }//end main
                 _0x7:
000098 cfff      	RJMP _0x7
                 
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 _getchar:
000099 9b5f           sbis usr,rxc
00009a cffe           rjmp _getchar
00009b b1ec           in   r30,udr
00009c 9508      	RET
                 _putchar:
00009d 9b5d           sbis usr,udre
00009e cffe           rjmp _putchar
00009f 81e8           ld   r30,y
0000a0 b9ec           out  udr,r30
0000a1 9621      	ADIW R28,1
0000a2 9508      	RET
                 _itoa:
0000a3 91a9          ld   r26,y+
0000a4 91b9          ld   r27,y+
0000a5 91e9          ld   r30,y+
0000a6 91f9          ld   r31,y+
0000a7 9630          adiw r30,0
0000a8 f42a          brpl __itoa0
0000a9 95e0          com  r30
0000aa 95f0          com  r31
0000ab 9631          adiw r30,1
0000ac e26d          ldi  r22,'-'
0000ad 936d          st   x+,r22
                 __itoa0:
0000ae 94e8          clt
0000af e180          ldi  r24,low(10000)
0000b0 e297          ldi  r25,high(10000)
0000b1 d00d          rcall __itoa1
0000b2 ee88          ldi  r24,low(1000)
0000b3 e093          ldi  r25,high(1000)
0000b4 d00a          rcall __itoa1
0000b5 e684          ldi  r24,100
0000b6 2799          clr  r25
0000b7 d007          rcall __itoa1
0000b8 e08a          ldi  r24,10
0000b9 d005          rcall __itoa1
0000ba 2f6e          mov  r22,r30
0000bb d010          rcall __itoa5
0000bc 2766          clr  r22
0000bd 936c          st   x,r22
0000be 9508          ret
                 __itoa1:
0000bf 2766          clr	 r22
                 __itoa2:
0000c0 17e8          cp   r30,r24
0000c1 07f9          cpc  r31,r25
0000c2 f020          brlo __itoa3
0000c3 9563          inc  r22
0000c4 1be8          sub  r30,r24
0000c5 0bf9          sbc  r31,r25
0000c6 f7c9          brne __itoa2
                 __itoa3:
0000c7 2366          tst  r22
0000c8 f411          brne __itoa4
0000c9 f016          brts __itoa5
0000ca 9508          ret
                 __itoa4:
0000cb 9468          set
                 __itoa5:
0000cc 5d60          subi r22,-0x30
0000cd 936d          st   x+,r22
0000ce 9508          ret
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 __base_y_G4:
000160           	.BYTE 0x4
                 
                 	.CSEG
                 __lcd_delay_G4:
0000cf e0ff          ldi   r31,15
                 __lcd_delay0:
0000d0 95fa          dec   r31
0000d1 f7f1          brne  __lcd_delay0
0000d2 9508      	RET
                 __lcd_ready:
0000d3 b3a7          in    r26,__lcd_direction
0000d4 70af          andi  r26,0xf                 ;set as input
0000d5 bba7          out   __lcd_direction,r26
0000d6 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0000d7 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0000d8 dff6      	RCALL __lcd_delay_G4
0000d9 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
0000da dff4      	RCALL __lcd_delay_G4
0000db b3a6          in    r26,__lcd_pin
0000dc 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0000dd dff1      	RCALL __lcd_delay_G4
0000de 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
0000df dfef      	RCALL __lcd_delay_G4
0000e0 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0000e1 fda7          sbrc  r26,__lcd_busy_flag
0000e2 cff5          rjmp  __lcd_busy
0000e3 9508      	RET
                 __lcd_write_nibble_G4:
0000e4 7fa0          andi  r26,0xf0
0000e5 2bab          or    r26,r27
0000e6 bba8          out   __lcd_port,r26          ;write
0000e7 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
0000e8 dfe6      	RCALL __lcd_delay_G4
0000e9 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0000ea dfe4      	RCALL __lcd_delay_G4
0000eb 9508      	RET
                 __lcd_write_data:
0000ec 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
0000ed b3a7          in    r26,__lcd_direction
0000ee 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output    
0000ef bba7          out   __lcd_direction,r26
0000f0 b3b8          in    r27,__lcd_port
0000f1 70bf          andi  r27,0xf
0000f2 81a8          ld    r26,y
0000f3 dff0      	RCALL __lcd_write_nibble_G4
0000f4 81a8          ld    r26,y
0000f5 95a2          swap  r26
0000f6 dfed      	RCALL __lcd_write_nibble_G4
0000f7 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
0000f8 9621      	ADIW R28,1
0000f9 9508      	RET
                 __lcd_read_nibble_G4:
0000fa 9ac2          sbi   __lcd_port,__lcd_enable ;EN=1
0000fb dfd3      	RCALL __lcd_delay_G4
0000fc b3e6          in    r30,__lcd_pin           ;read
0000fd 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
0000fe dfd0      	RCALL __lcd_delay_G4
0000ff 7fe0          andi  r30,0xf0
000100 9508      	RET
                 _lcd_read_byte0_G4:
000101 dfcd      	RCALL __lcd_delay_G4
000102 dff7      	RCALL __lcd_read_nibble_G4
000103 2fae          mov   r26,r30
000104 dff5      	RCALL __lcd_read_nibble_G4
000105 98c1          cbi   __lcd_port,__lcd_rd     ;RD=0
000106 95e2          swap  r30
000107 2bea          or    r30,r26
000108 9508      	RET
                 _lcd_gotoxy:
000109 dfc9      	RCALL __lcd_ready
00010a 81e8      	LD   R30,Y
00010b d08f      	RCALL SUBOPT_0x0
00010c 5ae0      	SUBI R30,LOW(-__base_y_G4)
00010d 4ffe      	SBCI R31,HIGH(-__base_y_G4)
00010e 81e0      	LD   R30,Z
00010f 2fae      	MOV  R26,R30
000110 81e9      	LDD  R30,Y+1
000111 d089      	RCALL SUBOPT_0x0
000112 e0b0      	LDI  R27,0
000113 0fea      	ADD  R30,R26
000114 1ffb      	ADC  R31,R27
000115 d08a      	RCALL SUBOPT_0x2
000116 8059      	LDD  R5,Y+1
000117 8048      	LDD  R4,Y+0
000118 9622      	ADIW R28,2
000119 9508      	RET
                 _lcd_clear:
00011a dfb8      	RCALL __lcd_ready
00011b e0e2      	LDI  R30,LOW(2)
00011c d083      	RCALL SUBOPT_0x2
00011d dfb5      	RCALL __lcd_ready
00011e e0ec      	LDI  R30,LOW(12)
00011f d080      	RCALL SUBOPT_0x2
000120 dfb2      	RCALL __lcd_ready
000121 e0e1      	LDI  R30,LOW(1)
000122 d07d      	RCALL SUBOPT_0x2
000123 e0e0      	LDI  R30,LOW(0)
000124 2e4e      	MOV  R4,R30
000125 2e5e      	MOV  R5,R30
000126 9508      	RET
                 _lcd_putchar:
000127 93ef          push r30
000128 93ff          push r31
000129 81a8          ld   r26,y
00012a 9468          set
00012b 30aa          cpi  r26,10
00012c f021          breq __lcd_putchar1
00012d 94e8          clt
00012e 9453      	INC  R5
00012f 1475      	CP   R7,R5
000130 f430      	BRSH _0xC2
                 	__lcd_putchar1:
000131 9443      	INC  R4
000132 e0e0      	LDI  R30,LOW(0)
000133 93ea      	ST   -Y,R30
000134 924a      	ST   -Y,R4
000135 dfd3      	RCALL _lcd_gotoxy
000136 f02e      	brts __lcd_putchar0
                 _0xC2:
000137 df9b          rcall __lcd_ready
000138 9ac0          sbi  __lcd_port,__lcd_rs ;RS=1
000139 81a8          ld   r26,y
00013a 93aa          st   -y,r26
00013b dfb0          rcall __lcd_write_data
                 __lcd_putchar0:
00013c 91ff          pop  r31
00013d 91ef          pop  r30
00013e 9621      	ADIW R28,1
00013f 9508      	RET
                 _lcd_puts:
000140 931a      	ST   -Y,R17
                 _0xC3:
000141 81a9      	LDD  R26,Y+1
000142 81ba      	LDD  R27,Y+1+1
000143 91ed      	LD   R30,X+
000144 83a9      	STD  Y+1,R26
000145 83ba      	STD  Y+1+1,R27
000146 2f1e      	MOV  R17,R30
000147 30e0      	CPI  R30,0
000148 f019      	BREQ _0xC5
000149 931a      	ST   -Y,R17
00014a dfdc      	RCALL _lcd_putchar
00014b cff5      	RJMP _0xC3
                 _0xC5:
00014c 8118      	LDD  R17,Y+0
00014d c00f      	RJMP _0xD0
                 _lcd_putsf:
00014e 931a      	ST   -Y,R17
                 _0xC6:
00014f 81e9      	LDD  R30,Y+1
000150 81fa      	LDD  R31,Y+1+1
000151 9631      	ADIW R30,1
000152 83e9      	STD  Y+1,R30
000153 83fa      	STD  Y+1+1,R31
000154 9731      	SBIW R30,1
000155 91e4      	LPM  R30,Z
000156 2f1e      	MOV  R17,R30
000157 30e0      	CPI  R30,0
000158 f019      	BREQ _0xC8
000159 931a      	ST   -Y,R17
00015a dfcc      	RCALL _lcd_putchar
00015b cff3      	RJMP _0xC6
                 _0xC8:
00015c 8118      	LDD  R17,Y+0
                 _0xD0:
00015d 9623      	ADIW R28,3
00015e 9508      	RET
                 __long_delay_G4:
00015f 27aa          clr   r26
000160 27bb          clr   r27
                 __long_delay0:
000161 9711          sbiw  r26,1         ;2 cycles
000162 f7f1          brne  __long_delay0 ;2 cycles
000163 9508      	RET
                 __lcd_init_write_G4:
000164 98c1          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000165 b3a7          in    r26,__lcd_direction
000166 6fa7          ori   r26,0xf7                ;set as output
000167 bba7          out   __lcd_direction,r26
000168 b3b8          in    r27,__lcd_port
000169 70bf          andi  r27,0xf
00016a 81a8          ld    r26,y
00016b df78      	RCALL __lcd_write_nibble_G4
00016c 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
00016d 9621      	ADIW R28,1
00016e 9508      	RET
                 _lcd_init:
00016f 98c2          cbi   __lcd_port,__lcd_enable ;EN=0
000170 98c0          cbi   __lcd_port,__lcd_rs     ;RS=0
000171 8078      	LDD  R7,Y+0
000172 81e8      	LD   R30,Y
000173 58e0      	SUBI R30,-LOW(128)
000174 93e0 0162 	__PUTB1MN __base_y_G4,2
000176 81e8      	LD   R30,Y
000177 54e0      	SUBI R30,-LOW(192)
000178 93e0 0163 	__PUTB1MN __base_y_G4,3
00017a d027      	RCALL SUBOPT_0x3
00017b d026      	RCALL SUBOPT_0x3
00017c d025      	RCALL SUBOPT_0x3
00017d dfe1      	RCALL __long_delay_G4
00017e e2e0      	LDI  R30,LOW(32)
00017f 93ea      	ST   -Y,R30
000180 dfe3      	RCALL __lcd_init_write_G4
000181 dfdd      	RCALL __long_delay_G4
000182 e2e8      	LDI  R30,LOW(40)
000183 d01c      	RCALL SUBOPT_0x2
000184 dfda      	RCALL __long_delay_G4
000185 e0e4      	LDI  R30,LOW(4)
000186 d019      	RCALL SUBOPT_0x2
000187 dfd7      	RCALL __long_delay_G4
000188 e8e5      	LDI  R30,LOW(133)
000189 d016      	RCALL SUBOPT_0x2
00018a dfd4      	RCALL __long_delay_G4
00018b b3a7          in    r26,__lcd_direction
00018c 70af          andi  r26,0xf                 ;set as input
00018d bba7          out   __lcd_direction,r26
00018e 9ac1          sbi   __lcd_port,__lcd_rd     ;RD=1
00018f df71      	RCALL _lcd_read_byte0_G4
000190 30e5      	CPI  R30,LOW(0x5)
000191 f011      	BREQ _0xC9
000192 e0e0      	LDI  R30,LOW(0)
000193 c005      	RJMP _0xCF
                 _0xC9:
000194 df3e      	RCALL __lcd_ready
000195 e0e6      	LDI  R30,LOW(6)
000196 d009      	RCALL SUBOPT_0x2
000197 df82      	RCALL _lcd_clear
000198 e0e1      	LDI  R30,LOW(1)
                 _0xCF:
000199 9621      	ADIW R28,1
00019a 9508      	RET
                 
                 	.DSEG
                 _p_S55:
000164           	.BYTE 0x2
                 
                 	.CSEG
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x0:
00019b e0f0      	LDI  R31,0
00019c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1:
00019d 93fa      	ST   -Y,R31
00019e 93ea      	ST   -Y,R30
00019f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2:
0001a0 93ea      	ST   -Y,R30
0001a1 cf4a      	RJMP __lcd_write_data
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3:
0001a2 dfbc      	RCALL __long_delay_G4
0001a3 e3e0      	LDI  R30,LOW(48)
0001a4 93ea      	ST   -Y,R30
0001a5 cfbe      	RJMP __lcd_init_write_G4
                 
                 _delay_ms:
0001a6 91e9      	ld   r30,y+
0001a7 91f9      	ld   r31,y+
0001a8 9630      	adiw r30,0
0001a9 f039      	breq __delay_ms1
                 __delay_ms0:
0001aa ec8d
0001ab e09a
0001ac 9701
0001ad f7f1      	__DELAY_USW 0xACD
0001ae 95a8      	wdr
0001af 9731      	sbiw r30,1
0001b0 f7c9      	brne __delay_ms0
                 __delay_ms1:
0001b1 9508      	ret
                 
                 __SAVELOCR6:
0001b2 935a      	ST   -Y,R21
                 __SAVELOCR5:
0001b3 934a      	ST   -Y,R20
                 __SAVELOCR4:
0001b4 933a      	ST   -Y,R19
                 __SAVELOCR3:
0001b5 932a      	ST   -Y,R18
                 __SAVELOCR2:
0001b6 931a      	ST   -Y,R17
0001b7 930a      	ST   -Y,R16
0001b8 9508      	RET
                 
                 __LOADLOCR6:
0001b9 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
0001ba 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
0001bb 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
0001bc 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
0001bd 8119      	LDD  R17,Y+1
0001be 8108      	LD   R16,Y
0001bf 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega8 register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   4 r6 :   0 r7 :   2 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   2 r17:  13 r18:   2 r19:   2 r20:   2 r21:   2 r22:  12 r23:   0 
r24:  15 r25:   8 r26:  37 r27:  13 r28:  11 r29:   1 r30: 110 r31:  23 
x  :   7 y  :  57 z  :   9 
Registers used: 23 out of 35 (65.7%)

ATmega8 instruction use summary:
adc   :   1 add   :   1 adiw  :  12 and   :   0 andi  :   6 asr   :   0 
bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 
break :   0 breq  :   6 brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 
brie  :   0 brlo  :   1 brlt  :   0 brmi  :   0 brne  :  10 brpl  :   1 
brsh  :   1 brtc  :   0 brts  :   2 brvc  :   0 brvs  :   0 bset  :   0 
bst   :   0 cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 
cln   :   0 clr   :   7 cls   :   0 clt   :   2 clv   :   0 clz   :   0 
com   :   2 cp    :   2 cpc   :   1 cpi   :   5 cpse  :   0 dec   :   2 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   9 inc   :   3 ld    :  18 ldd   :  15 ldi   :  53 lds   :   0 
lpm   :   8 lsl   :   0 lsr   :   0 mov   :   9 movw  :   5 mul   :   0 
muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   2 ori   :   2 
out   :  25 pop   :   2 push  :   2 rcall :  67 ret   :  23 reti  :   0 
rjmp  :  32 rol   :   0 ror   :   0 sbc   :   1 sbci  :   1 sbi   :   9 
sbic  :   0 sbis  :   2 sbiw  :   8 sbr   :   0 sbrc  :   1 sbrs  :   0 
sec   :   0 seh   :   0 sei   :   0 sen   :   0 ser   :   0 ses   :   0 
set   :   2 sev   :   0 sez   :   0 sleep :   0 spm   :   0 st    :  28 
std   :   4 sts   :   2 sub   :   1 subi  :   4 swap  :   2 tst   :   1 
wdr   :   1 
Instructions used: 50 out of 109 (45.9%)

ATmega8 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x000380    834     62    896    8192  10.9%
[.dseg] 0x000060 0x000166      0      6      6    1024   0.6%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 4 warnings
