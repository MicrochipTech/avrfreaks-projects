;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.04.8b Evaluation
;Automatic Program Generator
;© Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 9/6/2010
;Author  : Freeware, for evaluation and non-commercial use only
;Company :
;Comments:
;
;
;Chip type               : AT90S8515
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 128
;*****************************************************/
;
;#include <90s8515.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x10
;PCODE: $00000004 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000005 VOL: 0
	#endif
;PCODE: $00000006 VOL: 0
;PCODE: $00000007 VOL: 0
;#include <math.h>
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $00000008 VOL: 0
   .equ __lcd_port=0x12 ;PORTD
;PCODE: $00000009 VOL: 0
;PCODE: $0000000A VOL: 0
; 0000 001C #endasm
;#include <lcd.h>
;#include <delay.h>
;#include <stdio.h>
;// Declare your global variables here
;char lcd_buffer [33];
;unsigned char wpm;
;int spc;
;int timing;
;void main(void)
; 0000 0026 {

	.CSEG
;PCODE: $0000000B VOL: 0
; 0000 0027 // Declare your local variables here
; 0000 0028 #define Keyon PORTC.0=0;   //CW Keyer Line
; 0000 0029 #define Keyoff PORTC.0=1;  //   PortC Pin 1
; 0000 002A #define dot PINA.7    //Keyer - Dot  Port A Pin 7
; 0000 002B #define dash PINA.6   //Keyer - Dash Port A Pin 6
; 0000 002C #define sup PINA.0    //Speed Up - Port A Pin 0
; 0000 002D #define sud PINA.1    //Speed Down - Port A Pin 1
; 0000 002E spc=1200;  // Constant for calculating Char speed in Mil Seconds
;PCODE: $0000000C VOL: 0
;PCODE: $0000000D VOL: 0
; 0000 002F wpm=10;     // Words per minute Default Keyer Speed
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0030 
; 0000 0031 // Input/Output Ports initialization
; 0000 0032 // Port A initialization
; 0000 0033 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0034 // State7=P State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 0035 PORTA=0xFF;
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0036 DDRA=0x00;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0037 
; 0000 0038 // Port B initialization
; 0000 0039 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 003A // State7=P State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 003B PORTB=0xFF;
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 003C DDRB=0x00;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 003D 
; 0000 003E // Port C initialization
; 0000 003F // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=Out Func0=Out
; 0000 0040 // State7=0 State6=0 State5=0 State4=0 State3=0 State2=0 State1=0 State0=0
; 0000 0041 PORTC=0xFF;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0042 DDRC=0xFF;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0043 
; 0000 0044 // Port D initialization
; 0000 0045 // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 0046 // State7=P State6=P State5=P State4=P State3=P State2=P State1=P State0=P
; 0000 0047 PORTD=0xFF;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 0048 DDRD=0x00;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0049 
; 0000 004A // Timer/Counter 0 initialization
; 0000 004B // Clock source: System Clock
; 0000 004C // Clock value: Timer 0 Stopped
; 0000 004D TCCR0=0x00;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 004E TCNT0=0x00;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 004F 
; 0000 0050 // Timer/Counter 1 initialization
; 0000 0051 // Clock source: System Clock
; 0000 0052 // Clock value: Timer1 Stopped
; 0000 0053 // Mode: Normal top=FFFFh
; 0000 0054 // OC1A output: Discon.
; 0000 0055 // OC1B output: Discon.
; 0000 0056 // Noise Canceler: Off
; 0000 0057 // Input Capture on Falling Edge
; 0000 0058 // Timer1 Overflow Interrupt: Off
; 0000 0059 // Input Capture Interrupt: Off
; 0000 005A // Compare A Match Interrupt: Off
; 0000 005B // Compare B Match Interrupt: Off
; 0000 005C TCCR1A=0x00;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
; 0000 005D TCCR1B=0x00;
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
; 0000 005E TCNT1H=0x00;
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 005F TCNT1L=0x00;
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
; 0000 0060 OCR1AH=0x00;
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0061 OCR1AL=0x00;
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
; 0000 0062 OCR1BH=0x00;
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 0063 OCR1BL=0x00;
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0064 
; 0000 0065 // External Interrupt(s) initialization
; 0000 0066 // INT0: Off
; 0000 0067 // INT1: Off
; 0000 0068 GIMSK=0x00;
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
; 0000 0069 MCUCR=0x00;
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 006A 
; 0000 006B // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 006C TIMSK=0x00;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 006D ACSR=0x80;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 006E 
; 0000 006F // LCD module initialization
; 0000 0070 lcd_init(16);
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 0071 
; 0000 0072 // Keyer Loop
; 0000 0073 
; 0000 0074 do {
;PCODE: $0000003F VOL: 0
; 0000 0075 timing = spc/wpm; //Calculate Diming delay
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0076 sprintf(lcd_buffer,"%d Dly-%d",wpm,timing); //Push Delay to LCD Buffer
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0077 lcd_gotoxy(0,0); //Position LCD
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 0078 lcd_putsf("V1.2 CW Keyer"); // Line 1 of lcd
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0079 lcd_gotoxy(0,1);  // Line 2 of LCD - WPM and Delay
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 007A lcd_putsf("WPM-");
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 007B lcd_gotoxy(5,1);
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 007C lcd_puts(lcd_buffer);  // End of LCD Setup
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 007D if (dot!=1) {
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 007E do  {
;PCODE: $00000071 VOL: 0
; 0000 007F Keyon;
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0080 delay_ms(timing);
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0081 Keyoff;
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 0082 delay_ms(timing);
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 0083    }
; 0000 0084 while (dot!=1);
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 0085       }
; 0000 0086 else {Keyoff;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 0087     };
;PCODE: $00000084 VOL: 0
; 0000 0088 if (dash!=1) {
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
; 0000 0089 do  {
;PCODE: $00000088 VOL: 0
; 0000 008A Keyon;
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 008B delay_ms(timing);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
; 0000 008C delay_ms(timing);
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 008D delay_ms(timing);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
; 0000 008E Keyoff;
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 008F delay_ms(timing);
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
; 0000 0090    }
; 0000 0091 while (dash!=1);
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 0092       }
; 0000 0093 else {Keyoff;
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
; 0000 0094     };
;PCODE: $0000009F VOL: 0
; 0000 0095  if (sup!=1) {
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
; 0000 0096 do  {
;PCODE: $000000A3 VOL: 0
; 0000 0097 
; 0000 0098 wpm = wpm + 1;
;PCODE: $000000A4 VOL: 0
; 0000 0099 
; 0000 009A delay_ms(100);
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 009B lcd_gotoxy(12,1);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
; 0000 009C lcd_putsf("     ");
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
; 0000 009D    }
; 0000 009E while (sup!=1);
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
; 0000 009F       }
; 0000 00A0 if (sud!=1) {
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00A1 do  {
;PCODE: $000000BB VOL: 0
; 0000 00A2 
; 0000 00A3 wpm = wpm - 1;
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
; 0000 00A4 
; 0000 00A5 delay_ms(100);
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
; 0000 00A6 lcd_gotoxy(12,1);
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00A7 lcd_putsf("     ");
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
; 0000 00A8    }
; 0000 00A9 while (sud!=1);
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
; 0000 00AA       }
; 0000 00AB // stop here
; 0000 00AC }
;PCODE: $000000D2 VOL: 0
; 0000 00AD 
; 0000 00AE 
; 0000 00AF while (1);
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 00B0 
; 0000 00B1 
; 0000 00B2 
; 0000 00B3 }
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;
