// AVR.h
// AVR definitions and data

#include "Familys.h"					// Product wide Family definitions

// Family ID
#define FAMILY_ID FAMILY_AVR

// Family Name
#define FAMILY_NAME "AVR"

// Family Version
#define FAMILY_VERSION "1.1"

// Number of chips in this family library
#define NUMBERCHIPS 24

// CPU definitions
#define FIRSTCHIPID 1
#define CHIP_AT90S1200 1
#define CHIP_AT90S2313 2
#define CHIP_AT90S2323 3
#define CHIP_AT90S2343 4
#define CHIP_AT90S2333 5
#define CHIP_AT90S4433 6
#define CHIP_AT90S4414 7
#define CHIP_AT90S4434 8
#define CHIP_AT90C8534 9
#define CHIP_AT90S8515 10
#define CHIP_AT90S8535 11
#define CHIP_ATMEGA8 12
#define CHIP_ATMEGA16 13
#define CHIP_ATMEGA161 14
#define CHIP_ATMEGA163 15
#define CHIP_ATMEGA323 16
#define CHIP_ATMEGA64 17
#define CHIP_ATMEGA103 18
#define CHIP_ATMEGA128 19
#define CHIP_ATTINY11 20
#define CHIP_ATTINY12 21
#define CHIP_ATTINY15 22
#define CHIP_ATTINY22 23
#define CHIP_ATTINY28 24
#define LASTCHIPID 24

// Chip IDs
int ids[] = {
	CHIP_AT90S1200, CHIP_AT90S2313, CHIP_AT90S2323, CHIP_AT90S2343,
	CHIP_AT90S2333, CHIP_AT90S4433, CHIP_AT90S4414, CHIP_AT90S4434,
	CHIP_AT90C8534, CHIP_AT90S8515, CHIP_AT90S8535, CHIP_ATMEGA8,
	CHIP_ATMEGA16, CHIP_ATMEGA161, CHIP_ATMEGA163, CHIP_ATMEGA323,
	CHIP_ATMEGA64, CHIP_ATMEGA103, CHIP_ATMEGA128, CHIP_ATTINY11,
	CHIP_ATTINY12, CHIP_ATTINY15, CHIP_ATTINY22, CHIP_ATTINY28};

// Length of each chip name
#define CHIPNAMELENGTH 15

// Chip names
char chipNames[][CHIPNAMELENGTH] = {	// Must have 1 entry per ID
	"",
	"AT90S1200", "AT90S2313", "AT90S2323", "AT90S2343",
	"AT90S2333", "AT90S4433", "AT90S4414", "AT90S4434",
	"AT90C8534", "AT90S8515", "AT90S8535", "ATmega8",
	"ATmega16", "ATmega161", "ATmega163", "ATmega323",
	"ATmega64", "ATmega103", "ATmega128", "ATtiny11",
	"ATtiny12", "ATtiny15", "ATtiny22", "ATtiny28"};

// Chip PC size
int chipPC[] = {
	0,
	2, 2, 2, 2,
	2, 2, 2, 2,
	2, 2, 2, 2,
	2, 2, 2, 2,
	2, 2, 2, 2,
	2, 2, 2, 2};
	
// Chip registers size
int chipRegisters[] = {
	0,
	37, 37, 37, 37,
	37, 37, 37, 37,
	37, 37, 37, 37,
	37, 37, 37, 37,
	37, 37, 37, 37,
	37, 37, 37, 37};

// Chip SRAM start addresses
int chipSramStart[] = {
	0, 
	0,  96, 96, 96,
	96, 96, 96, 96,
	96, 96, 96, 96,
	96, 96, 96, 96,
	96, 96, 96, 0,
	0,  96, 96, 0};

// Chip SRAM size
int chipSRAM[] = {
	0,
	0,    128,  128,  128,
	128,  128,  256,  256,
	256,  512,  512,  1024,
	1024, 1024, 1024, 2048,
	4096, 4096, 4096, 0,
	0,    0,    128,  0};

// Chip SRAM start addresses
int chipEepromStart[] = {
	0, 
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0,
	0, 0, 0, 0};

// Chip EEPROM size
int chipEEPROM[] = {
	0,
	64,   128,  128,  128,
	128,  256,  256,  256,
	512,  512,  512,  512,
	512,  512,  512,  1024,
	2048, 4096, 4096, 0,
	64,   64,   128,  0};

// Chip image sizes
int imageSizes[] = {
	0,0,     0,0,     0,0,     0,0,     0,0,     0,0,
	0,0,     0,0,     100,180, 0,0,     130,130, 130,130,
	0,0,     0,0,     100,180, 0,0,     130,130, 0,0,
	0,0,     0,0,     130,130, 0,0,     130,130, 0,0,
	0,0,     0,0,     130,130, 0,0,     130,130, 0,0,
	130,130, 0,0,     100,180, 0,0,     0,0,     0,0,
	130,130, 0,0,     100,180, 0,0,     0,0,     0,0,
	130,130, 130,130, 100,180, 0,0,     0,0,     0,0,
	130,130, 130,130, 100,180, 0,0,     0,0,     0,0,
	130,130, 0,0,     0,0,     0,0,     0,0,     0,0,
	130,130, 130,130, 100,180, 0,0,     0,0,     0,0,
	130,130, 130,130, 100,180, 130,130, 0,0,     0,0,
	130,130, 0,0,     100,180, 130,130, 0,0,     0,0,
	130,130, 0,0,     100,180, 0,0,     0,0,     0,0,
	130,130, 0,0,     100,180, 0,0,     0,0,     0,0,
	130,130, 0,0,     100,180, 0,0,     0,0,     0,0,
	130,130, 0,0,     100,180, 0,0,     0,0,     0,0,
	130,130, 0,0,     0,0,     0,0,     0,0,     0,0,
	130,130, 0,0,     0,0,     0,0,     0,0,     0,0,
	130,130, 0,0,     0,0,     0,0,     0,0,     0,0,
	0,0,     0,0,     130,130, 0,0,     130,130, 0,0,
	0,0,     0,0,     130,130, 0,0,     130,130, 0,0,
	0,0,     0,0,     130,130, 0,0,     130,130, 0,0,
	0,0,     0,0,     130,130, 0,0,     130,130, 0,0,
	130,130, 0,0,     100,180, 130,130, 0,0,     0,0};

// Number of different packages
#define NUMBERPACKAGES 6

// Package types
#define PACKAGE_TQFP 0
#define PACKAGE_PLCC 1
#define PACKAGE_PDIP 2
#define PACKAGE_MLF 3
#define PACKAGE_SOIC 4
#define PACKAGE_SSOP 5

// Length of each package name
#define PACKAGENAMELENGTH 10

// Package names
char packageNames[][PACKAGENAMELENGTH] = {
	"TQFP", "PLCC", "PDIP", "MLF", "SOIC", "SSOP"};

// Available packages
int availablePackages[] = {
	-1,           -1,           -1,           -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, PACKAGE_SSOP, -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, -1,           -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, -1,           -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PLCC, PACKAGE_PDIP, -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PLCC, PACKAGE_PDIP, -1,          -1, -1,
	PACKAGE_TQFP, -1,           -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PLCC, PACKAGE_PDIP, -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PLCC, PACKAGE_PDIP, PACKAGE_MLF, -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, PACKAGE_MLF,  -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, -1,           -1,          -1, -1,
	PACKAGE_TQFP, -1,           -1,           -1,          -1, -1,
	PACKAGE_TQFP, -1,           -1,           -1,          -1, -1,
	PACKAGE_TQFP, -1,           -1,           -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, -1,           -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, -1,           -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, -1,           -1,          -1, -1,
	PACKAGE_PDIP, PACKAGE_SOIC, -1,           -1,          -1, -1,
	PACKAGE_TQFP, PACKAGE_PDIP, PACKAGE_MLF,  -1,          -1, -1};

// Pin flag definitions (as used by Studio+)
#define PINN 0x01						// No pin
#define PINU 0x02						// Unknown
#define PINL 0x04						// Low
#define PINH 0x08						// High
#define PINX 0x10						// Crystal
#define PINA 0x20						// Analogue
#define PINI 0x40						// Input
#define PINO 0x80						// Output

// Number of pins for each package of each chip
int chipPins[] = {						// 1 row per ID
	0,  0,  0,  0,  0,  0,				// 0
	0,  0,  20, 0,  20, 20,				// AT90S1200
	0,  0,  20, 0,  20, 0,				// AT90S2313
	0,  0,  8,  0,  8,  0,				// AT90S2323
	0,  0,  8,  0,  8,  0,				// AT90S2343
	32, 0,  28, 0,  0,  0,				// AT90S2333
	32, 0,  28, 0,  0,  0,				// AT90S4433
	44, 44, 40, 0,  0,  0,				// AT90S4414
	44, 44, 40, 0,  0,  0,				// AT90S4434
	48, 0,  0,  0,  0,  0,				// AT90C8534
	44, 44, 40, 0,  0,  0,				// AT90S8515
	44, 44, 40, 44, 0,  0,				// AT90S8535
	32, 0,  28, 32, 0,  0,				// ATmega8
	44, 0,  40, 0,  0,  0,				// ATmega16
	44, 0,  40, 0,  0,  0,				// ATmega161
	44, 0,  40, 0,  0,  0,				// ATmega163
	44, 0,  40, 0,  0,  0,				// ATmega232
	64, 0,  0,  0,  0,  0,				// ATmega64
	64, 0,  0,  0,  0,  0,				// ATmega103
	64, 0,  0,  0,  0,  0,				// ATmega128
	0,  0,  8,  0,  8,  0,				// ATtiny11
	0,  0,  8,  0,  8,  0,				// ATtiny12
	0,  0,  8,  0,  8,  0,				// ATtiny15
	0,  0,  8,  0,  8,  0,				// ATtiny22
	32, 0,  28, 32, 0,  0};				// ATtiny28

// Pin type flags for each chip
int pinsAT90S1200[] = {
	// PDIP
	PINH, PINL, PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINH, PINL, PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SSOP
	PINH, PINL, PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsAT90S2313[] = {
	// PDIP
	PINH, PINL, PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINH, PINL, PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsAT90S2323[] = {
	// PDIP
	PINH, PINX, PINX, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINH, PINX, PINX, PINL, PINL, PINL, PINL, PINH};

int pinsAT90S2343[] = {
	// PDIP
	PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsAT90S2333[] = {
	// TQFP
	PINL, PINL, PINN, PINH, PINL, PINN, PINX, PINX,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINA, PINN, PINA, PINA, PINN, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL,
	// PDIP
	PINH, PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINX, PINX, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsAT90S4433[] = {
	// TQFP
	PINL, PINL, PINN, PINH, PINL, PINN, PINX, PINX,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINA, PINN, PINA, PINA, PINN, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL,
	// PDIP
	PINH, PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINX, PINX, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsAT90S4414[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINX, PINX, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINU, PINU, PINN, PINU, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINN, PINL, PINL, PINL, PINL, PINL,
	// PLCC
	PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINX, PINX, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINU, PINU, PINN, PINU, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINX, PINX, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINU, PINU,
	PINU, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsAT90S4434[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL, PINL,
	// PLCC
	PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINH,
	PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINA,
	PINA, PINA, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsAT90C8534[] = {
	// TQFP
	PINA, PINN, PINN, PINN, PINN, PINN, PINN, PINN, PINN, PINN, PINA, PINN,
	PINA, PINA, PINA, PINA, PINA, PINA, PINN, PINH, PINN, PINH, PINX, PINX,
	PINN, PINN, PINN, PINN, PINN, PINN, PINL, PINN, PINL, PINI, PINI, PINN,
	PINN, PINL, PINL, PINN, PINN, PINN, PINN, PINL, PINL, PINL, PINL, PINN};
	
int pinsAT90S8515[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINX, PINX, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINU, PINU, PINN, PINU, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINN, PINL, PINL, PINL, PINL, PINL,
	// PLCC
	PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINX, PINX, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINU, PINU, PINN, PINU, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINX, PINX, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINU, PINU,
	PINU, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsAT90S8535[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL, PINL,
	// PLCC
	PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINH,
	PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINA,
	PINA, PINA, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	// MLF
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsATmega8[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINL, PINH, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINA, PINA, PINA, PINA, PINA, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL, PINL, PINL,
	// MLF
	PINL, PINL, PINL, PINH, PINL, PINH, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINA, PINA, PINA, PINA, PINA, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsATmega16[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINL, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL, PINL,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINH,
	PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINA,
	PINL, PINA, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsATmega161[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINX, PINX, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINN, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINN, PINL, PINL, PINL, PINL, PINL,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINX, PINX, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsATmega163[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL, PINL,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINH,
	PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINA,
	PINA, PINA, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsATmega323[] = {
	// TQFP
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINA, PINA, PINA, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL, PINL, PINL,
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH, PINH,
	PINL, PINX, PINX, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINA,
	PINA, PINA, PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL};

int pinsATmega64[] = {
	// TQFP
	PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINA, PINA, PINA};

int pinsATmega103[] = {
	// TQFP
	PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINU, PINU, PINH, PINH, PINL, PINX, PINX,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINU, PINU, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINU, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINA, PINA, PINA};

int pinsATmega128[] = {
	// TQFP
	PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINH, PINL, PINX, PINX,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINH, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINA, PINA, PINA};

int pinsATtiny11[] = {
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsATtiny12[] = {
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsATtiny15[] = {
	// PDIP
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsATtiny22[] = {
	// PDIP
	PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINH,
	// SOIC
	PINH, PINL, PINL, PINL, PINL, PINL, PINL, PINH};

int pinsATtiny28[] = {
	// TQFP
	PINL, PINL, PINN, PINH, PINL, PINN, PINX, PINX,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINH, PINN, PINN, PINL, PINN, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL,
	// PDIP
	PINH, PINL, PINL, PINL, PINL, PINL, PINH, PINL, PINX, PINX, PINL, PINL, PINL, PINL,
	PINL, PINL, PINL, PINL, PINL, PINH, PINN, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	// MLF
	PINL, PINL, PINN, PINH, PINL, PINN, PINX, PINX,
	PINL, PINL, PINL, PINL, PINL, PINL, PINL, PINL,
	PINL, PINH, PINN, PINN, PINL, PINN, PINL, PINL,
	PINL, PINL, PINL, PINL, PINH, PINL, PINL, PINL};

// Pin flag array pointers
int * pinFlagPointers[] = {				// Must be 1 entry per ID
	0,
	pinsAT90S1200,
	pinsAT90S2313,
	pinsAT90S2323,
	pinsAT90S2343,
	pinsAT90S2333,
	pinsAT90S4433,
	pinsAT90S4414,
	pinsAT90S4434,
	pinsAT90C8534,
	pinsAT90S8515,
	pinsAT90S8535,
	pinsATmega8,
	pinsATmega16,
	pinsATmega161,
	pinsATmega163,
	pinsATmega323,
	pinsATmega64,
	pinsATmega103,
	pinsATmega128,
	pinsATtiny11,
	pinsATtiny12,
	pinsATtiny15,
	pinsATtiny22,
	pinsATtiny28};
