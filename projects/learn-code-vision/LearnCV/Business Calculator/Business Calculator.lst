
AVRASM ver. 1.52  Business Calculator.asm Thu Jul 10 21:25:37 2008


         ;CodeVisionAVR C Compiler V1.24.6 Professional
         ;(C) Copyright 1998-2005 Pavel Haiduc, HP InfoTech s.r.l.
         ;http://www.hpinfotech.com
         ;e-mail:office@hpinfotech.com
         
         ;Chip type              : ATmega8535
         ;Program type           : Application
         ;Clock frequency        : 1.000000 MHz
         ;Memory model           : Small
         ;Optimize for           : Size
         ;(s)printf features     : int, width
         ;(s)scanf features      : int, width
         ;External SRAM size     : 0
         ;Data Stack size        : 128 byte(s)
         ;Heap size              : 0 byte(s)
         ;Promote char to int    : No
         ;char is unsigned       : Yes
         ;8 bit enums            : No
         ;Word align FLASH struct: No
         ;Enhanced core instructions    : On
         ;Automatic register allocation : On
         
          	.EQU UDRE=0x5
          	.EQU RXC=0x7
          	.EQU USR=0xB
          	.EQU UDR=0xC
          	.EQU SPSR=0xE
          	.EQU SPDR=0xF
          	.EQU EERE=0x0
          	.EQU EEWE=0x1
          	.EQU EEMWE=0x2
          	.EQU EECR=0x1C
          	.EQU EEDR=0x1D
          	.EQU EEARL=0x1E
          	.EQU EEARH=0x1F
          	.EQU WDTCR=0x21
          	.EQU MCUCR=0x35
          	.EQU GICR=0x3B
          	.EQU SPL=0x3D
          	.EQU SPH=0x3E
          	.EQU SREG=0x3F
         
          	.DEF R0X0=R0
          	.DEF R0X1=R1
          	.DEF R0X2=R2
          	.DEF R0X3=R3
          	.DEF R0X4=R4
          	.DEF R0X5=R5
          	.DEF R0X6=R6
          	.DEF R0X7=R7
          	.DEF R0X8=R8
          	.DEF R0X9=R9
          	.DEF R0XA=R10
          	.DEF R0XB=R11
          	.DEF R0XC=R12
          	.DEF R0XD=R13
          	.DEF R0XE=R14
          	.DEF R0XF=R15
          	.DEF R0X10=R16
          	.DEF R0X11=R17
          	.DEF R0X12=R18
          	.DEF R0X13=R19
          	.DEF R0X14=R20
          	.DEF R0X15=R21
          	.DEF R0X16=R22
          	.DEF R0X17=R23
          	.DEF R0X18=R24
          	.DEF R0X19=R25
          	.DEF R0X1A=R26
          	.DEF R0X1B=R27
          	.DEF R0X1C=R28
          	.DEF R0X1D=R29
          	.DEF R0X1E=R30
          	.DEF R0X1F=R31
         
          	.EQU __se_bit=0x40
          	.EQU __sm_mask=0xB0
          	.EQU __sm_adc_noise_red=0x10
          	.EQU __sm_powerdown=0x20
          	.EQU __sm_powersave=0x30
          	.EQU __sm_standby=0xA0
          	.EQU __sm_ext_standby=0xB0
         
          	.MACRO __CPD1N
          	CPI  R30,LOW(@0)
          	LDI  R26,HIGH(@0)
          	CPC  R31,R26
          	LDI  R26,BYTE3(@0)
          	CPC  R22,R26
          	LDI  R26,BYTE4(@0)
          	CPC  R23,R26
          	.ENDM
         
          	.MACRO __CPD2N
          	CPI  R26,LOW(@0)
          	LDI  R30,HIGH(@0)
          	CPC  R27,R30
          	LDI  R30,BYTE3(@0)
          	CPC  R24,R30
          	LDI  R30,BYTE4(@0)
          	CPC  R25,R30
          	.ENDM
         
          	.MACRO __CPWRR
          	CP   R@0,R@2
          	CPC  R@1,R@3
          	.ENDM
         
          	.MACRO __CPWRN
          	CPI  R@0,LOW(@2)
          	LDI  R30,HIGH(@2)
          	CPC  R@1,R30
          	.ENDM
         
          	.MACRO __ADDD1N
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	SBCI R22,BYTE3(-@0)
          	SBCI R23,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __ADDD2N
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	SBCI R24,BYTE3(-@0)
          	SBCI R25,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __SUBD1N
          	SUBI R30,LOW(@0)
          	SBCI R31,HIGH(@0)
          	SBCI R22,BYTE3(@0)
          	SBCI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __SUBD2N
          	SUBI R26,LOW(@0)
          	SBCI R27,HIGH(@0)
          	SBCI R24,BYTE3(@0)
          	SBCI R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ANDD1N
          	ANDI R30,LOW(@0)
          	ANDI R31,HIGH(@0)
          	ANDI R22,BYTE3(@0)
          	ANDI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ORD1N
          	ORI  R30,LOW(@0)
          	ORI  R31,HIGH(@0)
          	ORI  R22,BYTE3(@0)
          	ORI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __DELAY_USB
          	LDI  R24,LOW(@0)
          __DELAY_USB_LOOP:
          	DEC  R24
          	BRNE __DELAY_USB_LOOP
          	.ENDM
         
          	.MACRO __DELAY_USW
          	LDI  R24,LOW(@0)
          	LDI  R25,HIGH(@0)
          __DELAY_USW_LOOP:
          	SBIW R24,1
          	BRNE __DELAY_USW_LOOP
          	.ENDM
         
          	.MACRO __CLRD1S
          	LDI  R30,0
          	STD  Y+@0,R30
          	STD  Y+@0+1,R30
          	STD  Y+@0+2,R30
          	STD  Y+@0+3,R30
          	.ENDM
         
          	.MACRO __GETD1S
          	LDD  R30,Y+@0
          	LDD  R31,Y+@0+1
          	LDD  R22,Y+@0+2
          	LDD  R23,Y+@0+3
          	.ENDM
         
          	.MACRO __PUTD1S
          	STD  Y+@0,R30
          	STD  Y+@0+1,R31
          	STD  Y+@0+2,R22
          	STD  Y+@0+3,R23
          	.ENDM
         
          	.MACRO __POINTB1MN
          	LDI  R30,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1MN
          	LDI  R30,LOW(@0+@1)
          	LDI  R31,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1FN
          	LDI  R30,LOW(2*@0+@1)
          	LDI  R31,HIGH(2*@0+@1)
          	.ENDM
         
          	.MACRO __POINTB2MN
          	LDI  R26,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW2MN
          	LDI  R26,LOW(@0+@1)
          	LDI  R27,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __POINTBRM
          	LDI  R@0,LOW(@1)
          	.ENDM
         
          	.MACRO __POINTWRM
          	LDI  R@0,LOW(@2)
          	LDI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __POINTBRMN
          	LDI  R@0,LOW(@1+@2)
          	.ENDM
         
          	.MACRO __POINTWRMN
          	LDI  R@0,LOW(@2+@3)
          	LDI  R@1,HIGH(@2+@3)
          	.ENDM
         
          	.MACRO __GETD1N
          	LDI  R30,LOW(@0)
          	LDI  R31,HIGH(@0)
          	LDI  R22,BYTE3(@0)
          	LDI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2N
          	LDI  R26,LOW(@0)
          	LDI  R27,HIGH(@0)
          	LDI  R24,BYTE3(@0)
          	LDI  R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2S
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	LDD  R24,Y+@0+2
          	LDD  R25,Y+@0+3
          	.ENDM
         
          	.MACRO __GETB1MN
          	LDS  R30,@0+@1
          	.ENDM
         
          	.MACRO __GETW1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	LDS  R22,@0+@1+2
          	LDS  R23,@0+@1+3
          	.ENDM
         
          	.MACRO __GETBRMN
          	LDS  R@0,@1+@2
          	.ENDM
         
          	.MACRO __GETWRMN
          	LDS  R@0,@2+@3
          	LDS  R@1,@2+@3+1
          	.ENDM
         
          	.MACRO __GETWRZ
          	LDD  R@0,Z+@2
          	LDD  R@1,Z+@2+1
          	.ENDM
         
          	.MACRO __GETD2Z
          	LDD  R26,Z+@0
          	LDD  R27,Z+@0+1
          	LDD  R24,Z+@0+2
          	LDD  R25,Z+@0+3
          	.ENDM
         
          	.MACRO __GETB2MN
          	LDS  R26,@0+@1
          	.ENDM
         
          	.MACRO __GETW2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	LDS  R24,@0+@1+2
          	LDS  R25,@0+@1+3
          	.ENDM
         
          	.MACRO __PUTB1MN
          	STS  @0+@1,R30
          	.ENDM
         
          	.MACRO __PUTW1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	.ENDM
         
          	.MACRO __PUTD1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	STS  @0+@1+2,R22
          	STS  @0+@1+3,R23
          	.ENDM
         
          	.MACRO __PUTDZ2
          	STD  Z+@0,R26
          	STD  Z+@0+1,R27
          	STD  Z+@0+2,R24
          	STD  Z+@0+3,R25
          	.ENDM
         
          	.MACRO __PUTBMRN
          	STS  @0+@1,R@2
          	.ENDM
         
          	.MACRO __PUTWMRN
          	STS  @0+@1,R@2
          	STS  @0+@1+1,R@3
          	.ENDM
         
          	.MACRO __PUTBZR
          	STD  Z+@1,R@0
          	.ENDM
         
          	.MACRO __PUTWZR
          	STD  Z+@2,R@0
          	STD  Z+@2+1,R@1
          	.ENDM
         
          	.MACRO __GETW1R
          	MOV  R30,R@0
          	MOV  R31,R@1
          	.ENDM
         
          	.MACRO __GETW2R
          	MOV  R26,R@0
          	MOV  R27,R@1
          	.ENDM
         
          	.MACRO __GETWRN
          	LDI  R@0,LOW(@2)
          	LDI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __PUTW1R
          	MOV  R@0,R30
          	MOV  R@1,R31
          	.ENDM
         
          	.MACRO __PUTW2R
          	MOV  R@0,R26
          	MOV  R@1,R27
          	.ENDM
         
          	.MACRO __ADDWRN
          	SUBI R@0,LOW(-@2)
          	SBCI R@1,HIGH(-@2)
          	.ENDM
         
          	.MACRO __ADDWRR
          	ADD  R@0,R@2
          	ADC  R@1,R@3
          	.ENDM
         
          	.MACRO __SUBWRN
          	SUBI R@0,LOW(@2)
          	SBCI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __SUBWRR
          	SUB  R@0,R@2
          	SBC  R@1,R@3
          	.ENDM
         
          	.MACRO __ANDWRN
          	ANDI R@0,LOW(@2)
          	ANDI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ANDWRR
          	AND  R@0,R@2
          	AND  R@1,R@3
          	.ENDM
         
          	.MACRO __ORWRN
          	ORI  R@0,LOW(@2)
          	ORI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ORWRR
          	OR   R@0,R@2
          	OR   R@1,R@3
          	.ENDM
         
          	.MACRO __EORWRR
          	EOR  R@0,R@2
          	EOR  R@1,R@3
          	.ENDM
         
          	.MACRO __GETWRS
          	LDD  R@0,Y+@2
          	LDD  R@1,Y+@2+1
          	.ENDM
         
          	.MACRO __PUTWSR
          	STD  Y+@2,R@0
          	STD  Y+@2+1,R@1
          	.ENDM
         
          	.MACRO __MOVEWRR
          	MOV  R@0,R@2
          	MOV  R@1,R@3
          	.ENDM
         
          	.MACRO __INWR
          	IN   R@0,@2
          	IN   R@1,@2+1
          	.ENDM
         
          	.MACRO __OUTWR
          	OUT  @2+1,R@1
          	OUT  @2,R@0
          	.ENDM
         
          	.MACRO __CALL1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	ICALL
          	.ENDM
         
         
          	.MACRO __CALL1FN
          	LDI  R30,LOW(2*@0+@1)
          	LDI  R31,HIGH(2*@0+@1)
          	RCALL __GETW1PF
          	ICALL
          	.ENDM
         
         
          	.MACRO __CALL2EN
          	LDI  R26,LOW(@0+@1)
          	LDI  R27,HIGH(@0+@1)
          	RCALL __EEPROMRDW
          	ICALL
          	.ENDM
         
         
          	.MACRO __GETW1STACK
          	IN   R26,SPL
          	IN   R27,SPH
          	ADIW R26,@0+1
          	LD   R30,X+
          	LD   R31,X
          	.ENDM
         
          	.MACRO __NBST
          	BST  R@0,@1
          	IN   R30,SREG
          	LDI  R31,0x40
          	EOR  R30,R31
          	OUT  SREG,R30
          	.ENDM
         
         
          	.MACRO __PUTB1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1RN
          	MOVW R26,R@0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1RN
          	MOVW R26,R@0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1RN
          	MOVW R26,R@0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1RNS
          	MOVW R26,R@0
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1RNS
          	MOVW R26,R@0
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1RNS
          	MOVW R26,R@0
          	ADIW R26,@1
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1RON
          	MOV  R26,R@0
          	MOV  R27,R@1
          	SUBI R26,LOW(-@2)
          	SBCI R27,HIGH(-@2)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1RON
          	MOV  R26,R@0
          	MOV  R27,R@1
          	SUBI R26,LOW(-@2)
          	SBCI R27,HIGH(-@2)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1RON
          	MOV  R26,R@0
          	MOV  R27,R@1
          	SUBI R26,LOW(-@2)
          	SBCI R27,HIGH(-@2)
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1RONS
          	MOV  R26,R@0
          	MOV  R27,R@1
          	ADIW R26,@2
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1RONS
          	MOV  R26,R@0
          	MOV  R27,R@1
          	ADIW R26,@2
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1RONS
          	MOV  R26,R@0
          	MOV  R27,R@1
          	ADIW R26,@2
          	RCALL __PUTDP1
          	.ENDM
         
         
          	.MACRO __GETB1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R30,Z
          	.ENDM
         
          	.MACRO __GETW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R31,Z
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __GETD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R1,Z+
          	LD   R22,Z+
          	LD   R23,Z
          	MOVW R30,R0
          	.ENDM
         
          	.MACRO __GETB2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R26,X
          	.ENDM
         
          	.MACRO __GETW2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	.ENDM
         
          	.MACRO __GETD2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R1,X+
          	LD   R24,X+
          	LD   R25,X
          	MOVW R26,R0
          	.ENDM
         
          	.MACRO __GETBRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@1)
          	SBCI R31,HIGH(-@1)
          	LD   R@0,Z
          	.ENDM
         
          	.MACRO __GETWRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	LD   R@0,Z+
          	LD   R@1,Z
          	.ENDM
         
          	.MACRO __LSLW8SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R31,Z
          	CLR  R30
          	.ENDM
         
          	.MACRO __PUTB1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __CLRW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __CLRD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __PUTB2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R26
          	.ENDM
         
          	.MACRO __PUTW2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z+,R26
          	ST   Z,R27
          	.ENDM
         
          	.MACRO __PUTBSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTWSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	ST   Z+,R@0
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTB1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __MULBRR
          	MULS R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __MULBRRU
          	MUL  R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.CSEG
          	.ORG 0
         
          	.INCLUDE "Business Calculator.vec"
         
         ;INTERRUPT VECTORS
000000 c0bd      	RJMP __RESET
000001 cffe      	RJMP 0x00
000002 cffd      	RJMP 0x00
000003 cffc      	RJMP 0x00
000004 cffb      	RJMP 0x00
000005 cffa      	RJMP 0x00
000006 cff9      	RJMP 0x00
000007 cff8      	RJMP 0x00
000008 cff7      	RJMP 0x00
000009 cff6      	RJMP 0x00
00000a cff5      	RJMP 0x00
00000b cff4      	RJMP 0x00
00000c cff3      	RJMP 0x00
00000d cff2      	RJMP 0x00
00000e cff1      	RJMP 0x00
00000f cff0      	RJMP 0x00
000010 cfef      	RJMP 0x00
000011 cfee      	RJMP 0x00
000012 cfed      	RJMP 0x00
000013 cfec      	RJMP 0x00
000014 cfeb      	RJMP 0x00
         
          	.INCLUDE "Business Calculator.inc"
          	.DEF _eepptr=R4
          	.DEF _a=R6
          	.DEF _b=R7
          	.DEF _c=R8
          _3:
          	.DW  _add
000015 00ed
          	.DW  _sub
000016 0126
          	.DW  _mul
000017 013b
          	.DW  _div
000018 0150
          	.DW  0
000019 0000
          _tbl10_G2:
          	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00001a 2710
00001b 03e8
00001c 0064
00001d 000a
          	.DB  0x1,0x0
00001e 0001
          _tbl16_G2:
          	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
00001f 1000
000020 0100
000021 0010
000022 0001
          _0:
          	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x74,0x68
000023 6e45
000024 6574
000025 2072
000026 6874
          	.DB  0x65,0x20,0x31,0x73,0x74,0x20,0x64,0x69
000027 2065
000028 7331
000029 2074
00002a 6964
          	.DB  0x67,0x69,0x74,0x20,0x74,0x6F,0x20,0x41
00002b 6967
00002c 2074
00002d 6f74
00002e 4120
          	.DB  0x44,0x44,0x0,0x25,0x78,0x0,0x45,0x6E
00002f 4444
000030 2500
000031 0078
000032 6e45
          	.DB  0x74,0x65,0x72,0x20,0x74,0x68,0x65,0x20
000033 6574
000034 2072
000035 6874
000036 2065
          	.DB  0x32,0x6E,0x64,0x20,0x64,0x69,0x67,0x69
000037 6e32
000038 2064
000039 6964
00003a 6967
          	.DB  0x74,0x20,0x74,0x6F,0x20,0x41,0x44,0x44
00003b 2074
00003c 6f74
00003d 4120
00003e 4444
          	.DB  0x0,0x41,0x64,0x64,0x65,0x64,0x20,0x52
00003f 4100
000040 6464
000041 6465
000042 5220
          	.DB  0x65,0x73,0x75,0x6C,0x74,0x20,0x69,0x73
000043 7365
000044 6c75
000045 2074
000046 7369
          	.DB  0x3A,0x25,0x64,0x0,0x45,0x6E,0x74,0x65
000047 253a
000048 0064
000049 6e45
00004a 6574
          	.DB  0x72,0x20,0x74,0x77,0x6F,0x20,0x64,0x69
00004b 2072
00004c 7774
00004d 206f
00004e 6964
          	.DB  0x67,0x69,0x74,0x20,0x74,0x6F,0x20,0x53
00004f 6967
000050 2074
000051 6f74
000052 5320
          	.DB  0x55,0x42,0x0,0x25,0x78,0x25,0x78,0x0
000053 4255
000054 2500
000055 2578
000056 0078
          	.DB  0x53,0x75,0x62,0x74,0x72,0x61,0x63,0x74
000057 7553
000058 7462
000059 6172
00005a 7463
          	.DB  0x65,0x64,0x20,0x52,0x65,0x73,0x75,0x6C
00005b 6465
00005c 5220
00005d 7365
00005e 6c75
          	.DB  0x74,0x20,0x69,0x73,0x3A,0x25,0x64,0x0
00005f 2074
000060 7369
000061 253a
000062 0064
          	.DB  0x45,0x6E,0x74,0x65,0x72,0x20,0x74,0x77
000063 6e45
000064 6574
000065 2072
000066 7774
          	.DB  0x6F,0x20,0x64,0x69,0x67,0x69,0x74,0x20
000067 206f
000068 6964
000069 6967
00006a 2074
          	.DB  0x74,0x6F,0x20,0x4D,0x55,0x4C,0x0,0x4D
00006b 6f74
00006c 4d20
00006d 4c55
00006e 4d00
          	.DB  0x75,0x6C,0x74,0x69,0x70,0x6C,0x69,0x65
00006f 6c75
000070 6974
000071 6c70
000072 6569
          	.DB  0x64,0x20,0x52,0x65,0x73,0x75,0x6C,0x74
000073 2064
000074 6552
000075 7573
000076 746c
          	.DB  0x20,0x69,0x73,0x3A,0x25,0x64,0x0,0x45
000077 6920
000078 3a73
000079 6425
00007a 4500
          	.DB  0x6E,0x74,0x65,0x72,0x20,0x74,0x77,0x6F
00007b 746e
00007c 7265
00007d 7420
00007e 6f77
          	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x20,0x74
00007f 6420
000080 6769
000081 7469
000082 7420
          	.DB  0x6F,0x20,0x44,0x49,0x56,0x0,0x44,0x69
000083 206f
000084 4944
000085 0056
000086 6944
          	.DB  0x76,0x69,0x64,0x65,0x64,0x20,0x52,0x65
000087 6976
000088 6564
000089 2064
00008a 6552
          	.DB  0x73,0x75,0x6C,0x74,0x20,0x69,0x73,0x3A
00008b 7573
00008c 746c
00008d 6920
00008e 3a73
          	.DB  0x25,0x64,0x0,0x53,0x65,0x6C,0x65,0x63
00008f 6425
000090 5300
000091 6c65
000092 6365
          	.DB  0x74,0x20,0x61,0x6E,0x79,0x20,0x6F,0x6E
000093 2074
000094 6e61
000095 2079
000096 6e6f
          	.DB  0x65,0x20,0x6F,0x70,0x65,0x72,0x61,0x74
000097 2065
000098 706f
000099 7265
00009a 7461
          	.DB  0x69,0x6F,0x6E,0x20,0x72,0x65,0x70,0x72
00009b 6f69
00009c 206e
00009d 6572
00009e 7270
          	.DB  0x65,0x73,0x65,0x6E,0x74,0x69,0x6E,0x67
00009f 7365
0000a0 6e65
0000a1 6974
0000a2 676e
          	.DB  0x20,0x69,0x74,0x27,0x73,0x20,0x73,0x65
0000a3 6920
0000a4 2774
0000a5 2073
0000a6 6573
          	.DB  0x72,0x69,0x61,0x6C,0x20,0x6E,0x6F,0x3A
0000a7 6972
0000a8 6c61
0000a9 6e20
0000aa 3a6f
          	.DB  0x0,0x28,0x31,0x29,0x41,0x44,0x44,0x28
0000ab 2800
0000ac 2931
0000ad 4441
0000ae 2844
          	.DB  0x32,0x29,0x53,0x55,0x42,0x28,0x33,0x29
0000af 2932
0000b0 5553
0000b1 2842
0000b2 2933
          	.DB  0x4D,0x55,0x4C,0x28,0x34,0x29,0x44,0x49
0000b3 554d
0000b4 284c
0000b5 2934
0000b6 4944
          	.DB  0x56,0x0,0x45,0x6E,0x64,0x0
0000b7 0056
0000b8 6e45
0000b9 0064
         
          __GLOBAL_INI_TBL:
          	.DW  0x0A
0000ba 000a
          	.DW  _funp
0000bb 00e0
          	.DW  _3*2
0000bc 002a
         
          	.DW  0
0000bd 0000
         
          __RESET:
0000be 94f8      	CLI
0000bf 27ee      	CLR  R30
0000c0 bbec      	OUT  EECR,R30
         
         ;INTERRUPT VECTORS ARE PLACED
         ;AT THE START OF FLASH
0000c1 e0f1      	LDI  R31,1
0000c2 bffb      	OUT  GICR,R31
0000c3 bfeb      	OUT  GICR,R30
0000c4 bfe5      	OUT  MCUCR,R30
         
         ;DISABLE WATCHDOG
0000c5 e1f8      	LDI  R31,0x18
0000c6 bdf1      	OUT  WDTCR,R31
0000c7 bde1      	OUT  WDTCR,R30
         
         ;CLEAR R2-R14
0000c8 e08d      	LDI  R24,13
0000c9 e0a2      	LDI  R26,2
0000ca 27bb      	CLR  R27
          __CLEAR_REG:
0000cb 93ed      	ST   X+,R30
0000cc 958a      	DEC  R24
0000cd f7e9      	BRNE __CLEAR_REG
         
         ;CLEAR SRAM
0000ce e080      	LDI  R24,LOW(0x200)
0000cf e092      	LDI  R25,HIGH(0x200)
0000d0 e6a0      	LDI  R26,0x60
          __CLEAR_SRAM:
0000d1 93ed      	ST   X+,R30
0000d2 9701      	SBIW R24,1
0000d3 f7e9      	BRNE __CLEAR_SRAM
         
         ;GLOBAL VARIABLES INITIALIZATION
0000d4 e7e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0000d5 e0f1      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
          __GLOBAL_INI_NEXT:
0000d6 9185      	LPM  R24,Z+
0000d7 9195      	LPM  R25,Z+
0000d8 9700      	SBIW R24,0
0000d9 f061      	BREQ __GLOBAL_INI_END
0000da 91a5      	LPM  R26,Z+
0000db 91b5      	LPM  R27,Z+
0000dc 9005      	LPM  R0,Z+
0000dd 9015      	LPM  R1,Z+
0000de 01bf      	MOVW R22,R30
0000df 01f0      	MOVW R30,R0
          __GLOBAL_INI_LOOP:
0000e0 9005      	LPM  R0,Z+
0000e1 920d      	ST   X+,R0
0000e2 9701      	SBIW R24,1
0000e3 f7e1      	BRNE __GLOBAL_INI_LOOP
0000e4 01fb      	MOVW R30,R22
0000e5 cff0      	RJMP __GLOBAL_INI_NEXT
          __GLOBAL_INI_END:
         
         ;STACK POINTER INITIALIZATION
0000e6 e5ef      	LDI  R30,LOW(0x25F)
0000e7 bfed      	OUT  SPL,R30
0000e8 e0e2      	LDI  R30,HIGH(0x25F)
0000e9 bfee      	OUT  SPH,R30
         
         ;DATA STACK POINTER INITIALIZATION
0000ea eec0      	LDI  R28,LOW(0xE0)
0000eb e0d0      	LDI  R29,HIGH(0xE0)
         
0000ec c07a      	RJMP _main
         
          	.ESEG
          	.ORG 0
         
          	.DSEG
          	.ORG 0xE0
         ;       1 #include <mega8535.h>
         ;       2 
         ;       3 
         ;       4 #include <stdio.h> 
         ;       5  
         ;       6 //flash char fca[]="Scorpion Controls";
         ;       7 
         ;       8 //flash char *fptr; 
         ;       9 eeprom unsigned char *eepptr;
         ;      10 
         ;      11 unsigned char a,b,c;
         ;      12 //pragma w-
         ;      13 
         ;      14 //pragma w+
         ;      15 
         ;      16 void add(void)
         ;      17 {           
         
          	.CSEG
          _add:
         ;      18         printf("Enter the 1st digit to ADD");
0000ed   +  	__POINTW1FN _0,0
0000ef 93fa      	ST   -Y,R31
0000f0 93ea      	ST   -Y,R30
0000f1 e080      	LDI  R24,0
0000f2 d2f2      	RCALL SUBOPT_0x0
         ;      19         scanf("%x",&a);    
0000f3   +  	__POINTW1FN _0,27
0000f5 d2f2      	RCALL SUBOPT_0x1
0000f6 e084      	LDI  R24,4
0000f7 d2f8      	RCALL SUBOPT_0x2
         ;      20         *++eepptr = a;
0000f8 01df      	MOVW R26,R30
0000f9 2de6      	MOV  R30,R6
0000fa d3da      	RCALL __EEPROMWRB
         ;      21         printf("Enter the 2nd digit to ADD");
0000fb   +  	__POINTW1FN _0,30
0000fd 93fa      	ST   -Y,R31
0000fe 93ea      	ST   -Y,R30
0000ff e080      	LDI  R24,0
000100 d2e4      	RCALL SUBOPT_0x0
         ;      22         scanf("%x",&b);
000101   +  	__POINTW1FN _0,27
000103 93fa      	ST   -Y,R31
000104 93ea      	ST   -Y,R30
000105 d2f2      	RCALL SUBOPT_0x3
000106 e084      	LDI  R24,4
000107 d2e8      	RCALL SUBOPT_0x2
         ;      23         *++eepptr = b;
000108 01df      	MOVW R26,R30
000109 2de7      	MOV  R30,R7
00010a d3ca      	RCALL __EEPROMWRB
         ;      24         c=*--eepptr + *++eepptr;                     
00010b   +  	__GETW1R 4,5
00010d 9731      	SBIW R30,1
00010e d2ef      	RCALL SUBOPT_0x4
00010f 93ef      	PUSH R30
000110 d2f2      	RCALL SUBOPT_0x5
000111 d2ec      	RCALL SUBOPT_0x4
000112 91af      	POP  R26
000113 0fea      	ADD  R30,R26
000114 2e8e      	MOV  R8,R30
         ;      25         *++eepptr = c;
000115 d2ed      	RCALL SUBOPT_0x5
000116   +  	__PUTW1R 4,5
000118 01df      	MOVW R26,R30
000119 2de8      	MOV  R30,R8
00011a d3ba      	RCALL __EEPROMWRB
         ;      26         printf("Added Result is:%d",c);
00011b   +  	__POINTW1FN _0,57
00011d d2e9      	RCALL SUBOPT_0x6
00011e e084      	LDI  R24,4
00011f d1b4      	RCALL _printf
000120 9626      	ADIW R28,6
         ;      27         a=b=c=0;
000121 e0e0      	LDI  R30,LOW(0)
000122 2e8e      	MOV  R8,R30
000123 2e7e      	MOV  R7,R30
000124 2e6e      	MOV  R6,R30
         ;      28 }
000125 9508      	RET
         ;      29 void sub(void)
         ;      30 {
          _sub:
         ;      31         printf("Enter two digit to SUB"); 
000126   +  	__POINTW1FN _0,76
000128 93fa      	ST   -Y,R31
000129 93ea      	ST   -Y,R30
00012a e080      	LDI  R24,0
00012b d2b9      	RCALL SUBOPT_0x0
         ;      32         scanf("%x%x",&a,&b);
00012c   +  	__POINTW1FN _0,99
00012e d2b9      	RCALL SUBOPT_0x1
00012f d2c8      	RCALL SUBOPT_0x3
000130 e088      	LDI  R24,8
000131 d2dd      	RCALL SUBOPT_0x7
         ;      33         c=a-b;  
000132 2de6      	MOV  R30,R6
000133 19e7      	SUB  R30,R7
000134 2e8e      	MOV  R8,R30
         ;      34         printf("Subtracted Result is:%d",c);
000135   +  	__POINTW1FN _0,104
000137 d2cf      	RCALL SUBOPT_0x6
000138 e084      	LDI  R24,4
000139 d19a      	RCALL _printf
00013a c02a      	RJMP _0xAE
         ;      35         
         ;      36 }
         ;      37 void mul(void)
         ;      38 {
          _mul:
         ;      39         printf("Enter two digit to MUL");
00013b   +  	__POINTW1FN _0,128
00013d 93fa      	ST   -Y,R31
00013e 93ea      	ST   -Y,R30
00013f e080      	LDI  R24,0
000140 d2a4      	RCALL SUBOPT_0x0
         ;      40         scanf("%x%x",&a,&b);
000141   +  	__POINTW1FN _0,99
000143 d2a4      	RCALL SUBOPT_0x1
000144 d2b3      	RCALL SUBOPT_0x3
000145 e088      	LDI  R24,8
000146 d2c8      	RCALL SUBOPT_0x7
         ;      41         c=a*b;  
000147   +  	__MULBRRU 7,6
000149 2e8e      	MOV  R8,R30
         ;      42         printf("Multiplied Result is:%d",c);
00014a   +  	__POINTW1FN _0,151
00014c d2ba      	RCALL SUBOPT_0x6
00014d e084      	LDI  R24,4
00014e d185      	RCALL _printf
00014f c015      	RJMP _0xAE
         ;      43 }
         ;      44 void div(void)
         ;      45 {
          _div:
         ;      46         printf("Enter two digit to DIV");
000150   +  	__POINTW1FN _0,175
000152 93fa      	ST   -Y,R31
000153 93ea      	ST   -Y,R30
000154 e080      	LDI  R24,0
000155 d28f      	RCALL SUBOPT_0x0
         ;      47         scanf("%x%x",&a,&b);
000156   +  	__POINTW1FN _0,99
000158 d28f      	RCALL SUBOPT_0x1
000159 d29e      	RCALL SUBOPT_0x3
00015a e088      	LDI  R24,8
00015b d2b3      	RCALL SUBOPT_0x7
         ;      48         c=a/b;  
00015c 2de7      	MOV  R30,R7
00015d 2da6      	MOV  R26,R6
00015e d34d      	RCALL __DIVB21U
00015f 2e8e      	MOV  R8,R30
         ;      49         printf("Divided Result is:%d",c);
000160   +  	__POINTW1FN _0,198
000162 d2a4      	RCALL SUBOPT_0x6
000163 e084      	LDI  R24,4
000164 d16f      	RCALL _printf
          _0xAE:
000165 9626      	ADIW R28,6
         ;      50 }
000166 9508      	RET
         ;      51 void wreep(unsigned char);
         ;      52  
         ;      53 
         ;      54 void (*funp[5])(void)= {add,sub,mul,div};
         
          	.DSEG
          _funp:
0000e0      	.BYTE 0xA
         ;      55 
         ;      56 
         ;      57 void main(void)
         ;      58 {               
         
          	.CSEG
          _main:
         ;      59         void (*fp) (void);
         ;      60         unsigned char FunSel;
         ;      61         
         ;      62         UBRRL=0x0C;
000167 9722      	SBIW R28,2
         ;	*fp -> Y+0
         ;	FunSel -> R16
000168 e0ec      	LDI  R30,LOW(12)
000169 b9e9      	OUT  0x9,R30
         ;      63         UBRRH=0x00;
00016a e0e0      	LDI  R30,LOW(0)
00016b bde0      	OUT  0x20,R30
         ;      64         UCSRA=0x02;
00016c e0e2      	LDI  R30,LOW(2)
00016d b9eb      	OUT  0xB,R30
         ;      65         UCSRB=0x18;
00016e e1e8      	LDI  R30,LOW(24)
00016f b9ea      	OUT  0xA,R30
         ;      66         UCSRC=0x86;
000170 e8e6      	LDI  R30,LOW(134)
000171 bde0      	OUT  0x20,R30
         ;      67          
         ;      68         while(1)
          _0x4:
         ;      69         {       
         ;      70                 printf("Select any one operation representing it's serial no:");
000172   +  	__POINTW1FN _0,219
000174 93fa      	ST   -Y,R31
000175 93ea      	ST   -Y,R30
000176 e080      	LDI  R24,0
000177 d26d      	RCALL SUBOPT_0x0
         ;      71                 printf("(1)ADD(2)SUB(3)MUL(4)DIV");
000178   +  	__POINTW1FN _0,273
00017a 93fa      	ST   -Y,R31
00017b 93ea      	ST   -Y,R30
00017c e080      	LDI  R24,0
00017d d267      	RCALL SUBOPT_0x0
         ;      72                 scanf("%x",&FunSel);
00017e   +  	__POINTW1FN _0,27
000180 93fa      	ST   -Y,R31
000181 93ea      	ST   -Y,R30
000182 b7ed      	IN   R30,SPL
000183 b7fe      	IN   R31,SPH
000184 d33d      	RCALL __PUTPARD1L
000185 930f      	PUSH R16
000186 e084      	LDI  R24,4
000187 d255      	RCALL _scanf
000188 9626      	ADIW R28,6
000189 910f      	POP  R16
         ;      73                 wreep(FunSel);
00018a 930a      	ST   -Y,R16
00018b d01b      	RCALL _wreep
         ;      74         
         ;      75                 if((FunSel>0x00) && (FunSel<0x05))
00018c e0e0      	LDI  R30,LOW(0)
00018d 17e0      	CP   R30,R16
00018e f410      	BRSH _0x8
00018f 3005      	CPI  R16,5
000190 f008      	BRLO _0x9
          _0x8:
000191 c00d      	RJMP _0x7
          _0x9:
         ;      76                 {
         ;      77                         FunSel=FunSel-0x01;                         
000192 5001      	SUBI R16,LOW(1)
         ;      78                         fp=funp[FunSel];
000193 2fe0      	MOV  R30,R16
000194 eea0      	LDI  R26,LOW(_funp)
000195 e0b0      	LDI  R27,HIGH(_funp)
000196 e0f0      	LDI  R31,0
000197 0fee      	LSL  R30
000198 1fff      	ROL  R31
000199 0fae      	ADD  R26,R30
00019a 1fbf      	ADC  R27,R31
00019b d31e      	RCALL __GETW1P
00019c 83e8      	ST   Y,R30
00019d 83f9      	STD  Y+1,R31
         ;      79                         (*fp)();   
00019e 9509      	ICALL
         ;      80                 }             
         ;      81                 
         ;      82                 printf("End");
          _0x7:
00019f   +  	__POINTW1FN _0,298
0001a1 93fa      	ST   -Y,R31
0001a2 93ea      	ST   -Y,R30
0001a3 e080      	LDI  R24,0
0001a4 d240      	RCALL SUBOPT_0x0
         ;      83         }
0001a5 cfcc      	RJMP _0x4
         ;      84         
         ;      85 }
          _0xA:
0001a6 cfff      	RJMP _0xA
         ;      86 void wreep(unsigned char data)
         ;      87 {
          _wreep:
         ;      88    *eepptr = data;
0001a7 81e8      	LD   R30,Y
0001a8   +  	__GETW2R 4,5
0001aa d32a      	RCALL __EEPROMWRB
         ;      89 }
0001ab 9621      	ADIW R28,1
0001ac 9508      	RET
         ;      90    
         ;      91 
         
          _getchar:
0001ad 9b5f           sbis usr,rxc
0001ae cffe           rjmp _getchar
0001af b1ec           in   r30,udr
0001b0 9508      	RET
          _putchar:
0001b1 9b5d           sbis usr,udre
0001b2 cffe           rjmp _putchar
0001b3 81e8           ld   r30,y
0001b4 b9ec           out  udr,r30
0001b5 9621      	ADIW R28,1
0001b6 9508      	RET
          __put_G2:
          	put:
0001b7 d25a      	RCALL SUBOPT_0x8
0001b8 9730      	SBIW R30,0
0001b9 f031      	BREQ _0xB
0001ba d257      	RCALL SUBOPT_0x8
0001bb d25a      	RCALL SUBOPT_0x9
0001bc 9731      	SBIW R30,1
0001bd 81aa      	LDD  R26,Y+2
0001be 83a0      	STD  Z+0,R26
0001bf c003      	RJMP _0xC
          _0xB:
0001c0 81ea      	LDD  R30,Y+2
0001c1 93ea      	ST   -Y,R30
0001c2 dfee      	RCALL _putchar
          _0xC:
0001c3 9623      	ADIW R28,3
0001c4 9508      	RET
          __print_G2:
0001c5 9726      	SBIW R28,6
0001c6 d31d      	RCALL __SAVELOCR6
0001c7 e000      	LDI  R16,0
          _0xD:
0001c8 89e8      	LDD  R30,Y+16
0001c9 89f9      	LDD  R31,Y+16+1
0001ca 9631      	ADIW R30,1
0001cb 8be8      	STD  Y+16,R30
0001cc 8bf9      	STD  Y+16+1,R31
0001cd d24c      	RCALL SUBOPT_0xA
0001ce 2f3e      	MOV  R19,R30
0001cf 30e0      	CPI  R30,0
0001d0 f409      	BRNE PC+2
0001d1 c0ff      	RJMP _0xF
0001d2 2fe0      	MOV  R30,R16
0001d3 30e0      	CPI  R30,0
0001d4 f431      	BRNE _0x13
0001d5 3235      	CPI  R19,37
0001d6 f411      	BRNE _0x14
0001d7 e001      	LDI  R16,LOW(1)
0001d8 c001      	RJMP _0x15
          _0x14:
0001d9 d243      	RCALL SUBOPT_0xB
          _0x15:
0001da c0f5      	RJMP _0x12
          _0x13:
0001db 30e1      	CPI  R30,LOW(0x1)
0001dc f4a9      	BRNE _0x16
0001dd 3235      	CPI  R19,37
0001de f419      	BRNE _0x17
0001df d23d      	RCALL SUBOPT_0xB
0001e0 e000      	LDI  R16,LOW(0)
0001e1 c0ee      	RJMP _0x12
          _0x17:
0001e2 e002      	LDI  R16,LOW(2)
0001e3 e050      	LDI  R21,LOW(0)
0001e4 e010      	LDI  R17,LOW(0)
0001e5 323d      	CPI  R19,45
0001e6 f411      	BRNE _0x18
0001e7 e011      	LDI  R17,LOW(1)
0001e8 c0e7      	RJMP _0x12
          _0x18:
0001e9 323b      	CPI  R19,43
0001ea f411      	BRNE _0x19
0001eb e25b      	LDI  R21,LOW(43)
0001ec c0e3      	RJMP _0x12
          _0x19:
0001ed 3230      	CPI  R19,32
0001ee f411      	BRNE _0x1A
0001ef e250      	LDI  R21,LOW(32)
0001f0 c0df      	RJMP _0x12
          _0x1A:
0001f1 c002      	RJMP _0x1B
          _0x16:
0001f2 30e2      	CPI  R30,LOW(0x2)
0001f3 f439      	BRNE _0x1C
          _0x1B:
0001f4 e040      	LDI  R20,LOW(0)
0001f5 e003      	LDI  R16,LOW(3)
0001f6 3330      	CPI  R19,48
0001f7 f411      	BRNE _0x1D
0001f8 6810      	ORI  R17,LOW(128)
0001f9 c0d6      	RJMP _0x12
          _0x1D:
0001fa c003      	RJMP _0x1E
          _0x1C:
0001fb 30e3      	CPI  R30,LOW(0x3)
0001fc f009      	BREQ PC+2
0001fd c0d2      	RJMP _0x12
          _0x1E:
0001fe 3330      	CPI  R19,48
0001ff f010      	BRLO _0x21
000200 333a      	CPI  R19,58
000201 f008      	BRLO _0x22
          _0x21:
000202 c005      	RJMP _0x20
          _0x22:
000203 d21f      	RCALL SUBOPT_0xC
000204 2fe3      	MOV  R30,R19
000205 53e0      	SUBI R30,LOW(48)
000206 0f4e      	ADD  R20,R30
000207 c0c8      	RJMP _0x12
          _0x20:
000208 2fe3      	MOV  R30,R19
000209 36e3      	CPI  R30,LOW(0x63)
00020a f421      	BRNE _0x26
00020b d21d      	RCALL SUBOPT_0xD
00020c 91ec      	LD   R30,X
00020d d222      	RCALL SUBOPT_0xE
00020e c0c0      	RJMP _0x27
          _0x26:
00020f 37e3      	CPI  R30,LOW(0x73)
000210 f429      	BRNE _0x29
000211 d217      	RCALL SUBOPT_0xD
000212 d223      	RCALL SUBOPT_0xF
000213 d273      	RCALL _strlen
000214 2f0e      	MOV  R16,R30
000215 c007      	RJMP _0x2A
          _0x29:
000216 37e0      	CPI  R30,LOW(0x70)
000217 f449      	BRNE _0x2C
000218 d210      	RCALL SUBOPT_0xD
000219 d21c      	RCALL SUBOPT_0xF
00021a d276      	RCALL _strlenf
00021b 2f0e      	MOV  R16,R30
00021c 6018      	ORI  R17,LOW(8)
          _0x2A:
00021d 6012      	ORI  R17,LOW(2)
00021e 771f      	ANDI R17,LOW(127)
00021f e020      	LDI  R18,LOW(0)
000220 c030      	RJMP _0x2D
          _0x2C:
000221 36e4      	CPI  R30,LOW(0x64)
000222 f011      	BREQ _0x30
000223 36e9      	CPI  R30,LOW(0x69)
000224 f411      	BRNE _0x31
          _0x30:
000225 6014      	ORI  R17,LOW(4)
000226 c002      	RJMP _0x32
          _0x31:
000227 37e5      	CPI  R30,LOW(0x75)
000228 f431      	BRNE _0x33
          _0x32:
000229 e3e4      	LDI  R30,LOW(_tbl10_G2*2)
00022a e0f0      	LDI  R31,HIGH(_tbl10_G2*2)
00022b 83ee      	STD  Y+6,R30
00022c 83ff      	STD  Y+6+1,R31
00022d e005      	LDI  R16,LOW(5)
00022e c00c      	RJMP _0x34
          _0x33:
00022f 35e8      	CPI  R30,LOW(0x58)
000230 f411      	BRNE _0x36
000231 6018      	ORI  R17,LOW(8)
000232 c003      	RJMP _0x37
          _0x36:
000233 37e8      	CPI  R30,LOW(0x78)
000234 f009      	BREQ PC+2
000235 c099      	RJMP _0x65
          _0x37:
000236 e3ee      	LDI  R30,LOW(_tbl16_G2*2)
000237 e0f0      	LDI  R31,HIGH(_tbl16_G2*2)
000238 83ee      	STD  Y+6,R30
000239 83ff      	STD  Y+6+1,R31
00023a e004      	LDI  R16,LOW(4)
          _0x34:
00023b ff12      	SBRS R17,2
00023c c012      	RJMP _0x39
00023d d1eb      	RCALL SUBOPT_0xD
00023e d1fd      	RCALL SUBOPT_0x10
00023f 85aa      	LDD  R26,Y+10
000240 85bb      	LDD  R27,Y+10+1
000241 9710      	SBIW R26,0
000242 f434      	BRGE _0x3A
000243 85ea      	LDD  R30,Y+10
000244 85fb      	LDD  R31,Y+10+1
000245 d25a      	RCALL __ANEGW1
000246 87ea      	STD  Y+10,R30
000247 87fb      	STD  Y+10+1,R31
000248 e25d      	LDI  R21,LOW(45)
          _0x3A:
000249 3050      	CPI  R21,0
00024a f011      	BREQ _0x3B
00024b 5f0f      	SUBI R16,-LOW(1)
00024c c001      	RJMP _0x3C
          _0x3B:
00024d 7f1b      	ANDI R17,LOW(251)
          _0x3C:
00024e c002      	RJMP _0x3D
          _0x39:
00024f d1d9      	RCALL SUBOPT_0xD
000250 d1eb      	RCALL SUBOPT_0x10
          _0x3D:
          _0x2D:
000251 fd10      	SBRC R17,0
000252 c010      	RJMP _0x3E
          _0x3F:
000253 1704      	CP   R16,R20
000254 f470      	BRSH _0x41
000255 ff17      	SBRS R17,7
000256 c008      	RJMP _0x42
000257 ff12      	SBRS R17,2
000258 c004      	RJMP _0x43
000259 7f1b      	ANDI R17,LOW(251)
00025a 2f35      	MOV  R19,R21
00025b 5001      	SUBI R16,LOW(1)
00025c c001      	RJMP _0x44
          _0x43:
00025d e330      	LDI  R19,LOW(48)
          _0x44:
00025e c001      	RJMP _0x45
          _0x42:
00025f e230      	LDI  R19,LOW(32)
          _0x45:
000260 d1bc      	RCALL SUBOPT_0xB
000261 5041      	SUBI R20,LOW(1)
000262 cff0      	RJMP _0x3F
          _0x41:
          _0x3E:
000263 2f20      	MOV  R18,R16
000264 ff11      	SBRS R17,1
000265 c018      	RJMP _0x46
          _0x47:
000266 3020      	CPI  R18,0
000267 f0a9      	BREQ _0x49
000268 ff13      	SBRS R17,3
000269 c007      	RJMP _0x4A
00026a 81ee      	LDD  R30,Y+6
00026b 81ff      	LDD  R31,Y+6+1
00026c 9631      	ADIW R30,1
00026d 83ee      	STD  Y+6,R30
00026e 83ff      	STD  Y+6+1,R31
00026f d1aa      	RCALL SUBOPT_0xA
000270 c005      	RJMP _0xAF
          _0x4A:
000271 81ae      	LDD  R26,Y+6
000272 81bf      	LDD  R27,Y+6+1
000273 91ed      	LD   R30,X+
000274 83ae      	STD  Y+6,R26
000275 83bf      	STD  Y+6+1,R27
          _0xAF:
000276 93ea      	ST   -Y,R30
000277 d1c8      	RCALL SUBOPT_0x11
000278 3040      	CPI  R20,0
000279 f009      	BREQ _0x4C
00027a 5041      	SUBI R20,LOW(1)
          _0x4C:
00027b 5021      	SUBI R18,LOW(1)
00027c cfe9      	RJMP _0x47
          _0x49:
00027d c049      	RJMP _0x4D
          _0x46:
          _0x4F:
00027e e330      	LDI  R19,LOW(48)
00027f 81ee      	LDD  R30,Y+6
000280 81ff      	LDD  R31,Y+6+1
000281 9632      	ADIW R30,2
000282 83ee      	STD  Y+6,R30
000283 83ff      	STD  Y+6+1,R31
000284 9732      	SBIW R30,2
000285 d238      	RCALL __GETW1PF
000286 87e8      	STD  Y+8,R30
000287 87f9      	STD  Y+8+1,R31
000288 85aa                                            ldd  r26,y+10  ;R26,R27=n
000289 85bb                                            ldd  r27,y+11
                                            calc_digit:
00028a 17ae                                            cp   r26,r30
00028b 07bf                                            cpc  r27,r31
00028c f020                                            brlo calc_digit_done
00028d 5f3f      	SUBI R19,-LOW(1)
00028e 1bae      	                                  sub  r26,r30
00028f 0bbf      	                                  sbc  r27,r31
000290 f7c9      	                                  brne calc_digit
                                            calc_digit_done:
000291 87aa                                            std  Y+10,r26 ;n=R26,R27
000292 87bb                                            std  y+11,r27
000293 e3e9      	LDI  R30,LOW(57)
000294 17e3      	CP   R30,R19
000295 f428      	BRSH _0x51
000296 ff13      	SBRS R17,3
000297 c002      	RJMP _0x52
000298 5f39      	SUBI R19,-LOW(7)
000299 c001      	RJMP _0x53
          _0x52:
00029a 5d39      	SUBI R19,-LOW(39)
          _0x53:
          _0x51:
00029b fd14      	SBRC R17,4
00029c c01d      	RJMP _0x55
00029d e3e0      	LDI  R30,LOW(48)
00029e 17e3      	CP   R30,R19
00029f f030      	BRLO _0x57
0002a0 85a8      	LDD  R26,Y+8
0002a1 85b9      	LDD  R27,Y+8+1
0002a2 30a1      	CPI  R26,LOW(0x1)
0002a3 e0e0      	LDI  R30,HIGH(0x1)
0002a4 07be      	CPC  R27,R30
0002a5 f411      	BRNE _0x56
          _0x57:
0002a6 6110      	ORI  R17,LOW(16)
0002a7 c00a      	RJMP _0x59
          _0x56:
0002a8 1742      	CP   R20,R18
0002a9 f010      	BRLO _0x5B
0002aa ff10      	SBRS R17,0
0002ab c001      	RJMP _0x5C
          _0x5B:
0002ac c011      	RJMP _0x5A
          _0x5C:
0002ad e230      	LDI  R19,LOW(32)
0002ae ff17      	SBRS R17,7
0002af c00a      	RJMP _0x5D
0002b0 e330      	LDI  R19,LOW(48)
0002b1 6110      	ORI  R17,LOW(16)
          _0x59:
0002b2 ff12      	SBRS R17,2
0002b3 c006      	RJMP _0x5E
0002b4 7f1b      	ANDI R17,LOW(251)
0002b5 935a      	ST   -Y,R21
0002b6 d189      	RCALL SUBOPT_0x11
0002b7 3040      	CPI  R20,0
0002b8 f009      	BREQ _0x5F
0002b9 5041      	SUBI R20,LOW(1)
          _0x5F:
          _0x5E:
          _0x5D:
          _0x55:
0002ba d162      	RCALL SUBOPT_0xB
0002bb 3040      	CPI  R20,0
0002bc f009      	BREQ _0x60
0002bd 5041      	SUBI R20,LOW(1)
          _0x60:
          _0x5A:
0002be 5021      	SUBI R18,LOW(1)
0002bf 85a8      	LDD  R26,Y+8
0002c0 85b9      	LDD  R27,Y+8+1
0002c1 e0e1      	LDI  R30,LOW(1)
0002c2 e0f0      	LDI  R31,HIGH(1)
0002c3 17ea      	CP   R30,R26
0002c4 07fb      	CPC  R31,R27
0002c5 f408      	BRSH _0x50
0002c6 cfb7      	RJMP _0x4F
          _0x50:
          _0x4D:
0002c7 ff10      	SBRS R17,0
0002c8 c006      	RJMP _0x61
          _0x62:
0002c9 3040      	CPI  R20,0
0002ca f021      	BREQ _0x64
0002cb 5041      	SUBI R20,LOW(1)
0002cc e2e0      	LDI  R30,LOW(32)
0002cd d162      	RCALL SUBOPT_0xE
0002ce cffa      	RJMP _0x62
          _0x64:
          _0x61:
          _0x65:
          _0x27:
0002cf e000      	LDI  R16,LOW(0)
          _0x12:
0002d0 cef7      	RJMP _0xD
          _0xF:
0002d1 d219      	RCALL __LOADLOCR6
0002d2 9662      	ADIW R28,18
0002d3 9508      	RET
          _printf:
0002d4 92ff      	PUSH R15
0002d5 2ef8      	MOV  R15,R24
0002d6 d16e      	RCALL SUBOPT_0x12
0002d7 deed      	RCALL __print_G2
0002d8 c108      	RJMP _0xAC
          __get_G2:
0002d9 930a      	ST   -Y,R16
0002da 81ab      	LDD  R26,Y+3
0002db 81bc      	LDD  R27,Y+3+1
0002dc 91ec      	LD   R30,X
0002dd d17d      	RCALL SUBOPT_0x13
0002de f021      	BREQ _0x66
0002df 81ab      	LDD  R26,Y+3
0002e0 81bc      	LDD  R27,Y+3+1
0002e1 d17c      	RCALL SUBOPT_0x14
0002e2 c00c      	RJMP _0x67
          _0x66:
0002e3 d17d      	RCALL SUBOPT_0x15
0002e4 9730      	SBIW R30,0
0002e5 f039      	BREQ _0x68
0002e6 d17a      	RCALL SUBOPT_0x15
0002e7 81e0      	LD   R30,Z
0002e8 d172      	RCALL SUBOPT_0x13
0002e9 f011      	BREQ _0x69
0002ea d176      	RCALL SUBOPT_0x15
0002eb d12a      	RCALL SUBOPT_0x9
          _0x69:
0002ec c002      	RJMP _0x6A
          _0x68:
0002ed debf      	RCALL _getchar
0002ee 2f0e      	MOV  R16,R30
          _0x6A:
          _0x67:
0002ef 2fe0      	MOV  R30,R16
0002f0 8108      	LDD  R16,Y+0
0002f1 9625      	ADIW R28,5
0002f2 9508      	RET
          __scanf_G2:
0002f3 9724      	SBIW R28,4
0002f4 d1ef      	RCALL __SAVELOCR6
0002f5 e0e0      	LDI  R30,LOW(0)
0002f6 87e9      	STD  Y+9,R30
0002f7 2f5e      	MOV  R21,R30
          _0x6B:
0002f8 85ee      	LDD  R30,Y+14
0002f9 85ff      	LDD  R31,Y+14+1
0002fa 9631      	ADIW R30,1
0002fb 87ee      	STD  Y+14,R30
0002fc 87ff      	STD  Y+14+1,R31
0002fd d11c      	RCALL SUBOPT_0xA
0002fe d166      	RCALL SUBOPT_0x16
0002ff f409      	BRNE PC+2
000300 c0d8      	RJMP _0x6D
000301 d166      	RCALL SUBOPT_0x17
000302 f079      	BREQ _0x6E
          _0x6F:
000303 b7ed      	IN   R30,SPL
000304 b7fe      	IN   R31,SPH
000305 93fa      	ST   -Y,R31
000306 93ea      	ST   -Y,R30
000307 935f      	PUSH R21
000308 d163      	RCALL SUBOPT_0x18
000309 915f      	POP  R21
00030a d15a      	RCALL SUBOPT_0x16
00030b f011      	BREQ _0x72
00030c d15b      	RCALL SUBOPT_0x17
00030d f409      	BRNE _0x73
          _0x72:
00030e c001      	RJMP _0x71
          _0x73:
00030f cff3      	RJMP _0x6F
          _0x71:
000310 2f52      	MOV  R21,R18
000311 c0c6      	RJMP _0x74
          _0x6E:
000312 3225      	CPI  R18,37
000313 f009      	BREQ PC+2
000314 c0b4      	RJMP _0x75
000315 e040      	LDI  R20,LOW(0)
          _0x76:
000316 85ee      	LDD  R30,Y+14
000317 85ff      	LDD  R31,Y+14+1
000318 9125      	LPM  R18,Z+
000319 87ee      	STD  Y+14,R30
00031a 87ff      	STD  Y+14+1,R31
00031b 3320      	CPI  R18,48
00031c f018      	BRLO _0x7A
00031d e3e9      	LDI  R30,LOW(57)
00031e 17e2      	CP   R30,R18
00031f f408      	BRSH _0x79
          _0x7A:
000320 c005      	RJMP _0x78
          _0x79:
000321 d101      	RCALL SUBOPT_0xC
000322 2fe2      	MOV  R30,R18
000323 53e0      	SUBI R30,LOW(48)
000324 0f4e      	ADD  R20,R30
000325 cff0      	RJMP _0x76
          _0x78:
000326 3020      	CPI  R18,0
000327 f409      	BRNE _0x7C
000328 c0b0      	RJMP _0x6D
          _0x7C:
          _0x7D:
000329 b7ed      	IN   R30,SPL
00032a b7fe      	IN   R31,SPH
00032b 93fa      	ST   -Y,R31
00032c 93ea      	ST   -Y,R30
00032d 935f      	PUSH R21
00032e d13d      	RCALL SUBOPT_0x18
00032f 915f      	POP  R21
000330 2f3e      	MOV  R19,R30
000331 93ea      	ST   -Y,R30
000332 d14a      	RCALL _isspace
000333 30e0      	CPI  R30,0
000334 f7a1      	BRNE _0x7D
000335 3030      	CPI  R19,0
000336 f409      	BRNE _0x80
000337 c09a      	RJMP _0x81
          _0x80:
000338 2f53      	MOV  R21,R19
000339 3040      	CPI  R20,0
00033a f409      	BRNE _0x82
00033b ef4f      	LDI  R20,LOW(255)
          _0x82:
00033c 2fe2      	MOV  R30,R18
00033d 36e3      	CPI  R30,LOW(0x63)
00033e f461      	BRNE _0x86
00033f d131      	RCALL SUBOPT_0x19
000340 b7ed      	IN   R30,SPL
000341 b7fe      	IN   R31,SPH
000342 93fa      	ST   -Y,R31
000343 93ea      	ST   -Y,R30
000344 935f      	PUSH R21
000345 d126      	RCALL SUBOPT_0x18
000346 915f      	POP  R21
000347   +  	__GETW2R 16,17
000349 93ec      	ST   X,R30
00034a c07a      	RJMP _0x85
          _0x86:
00034b 37e3      	CPI  R30,LOW(0x73)
00034c f4f1      	BRNE _0x8E
00034d d123      	RCALL SUBOPT_0x19
          _0x88:
00034e 2fe4      	MOV  R30,R20
00034f 5041      	SUBI R20,1
000350 30e0      	CPI  R30,0
000351 f0a9      	BREQ _0x8A
000352 b7ed      	IN   R30,SPL
000353 b7fe      	IN   R31,SPH
000354 93fa      	ST   -Y,R31
000355 93ea      	ST   -Y,R30
000356 935f      	PUSH R21
000357 d114      	RCALL SUBOPT_0x18
000358 915f      	POP  R21
000359 d10b      	RCALL SUBOPT_0x16
00035a f011      	BREQ _0x8C
00035b d10c      	RCALL SUBOPT_0x17
00035c f009      	BREQ _0x8B
          _0x8C:
00035d c009      	RJMP _0x8A
          _0x8B:
00035e 931f      	PUSH R17
00035f 930f      	PUSH R16
000360   +  	__ADDWRN 16,17,1
000362 2fe2      	MOV  R30,R18
000363 91af      	POP  R26
000364 91bf      	POP  R27
000365 93ec      	ST   X,R30
000366 cfe7      	RJMP _0x88
          _0x8A:
000367   +  	__GETW2R 16,17
000369 d0f4      	RCALL SUBOPT_0x14
00036a c05a      	RJMP _0x85
          _0x8E:
00036b d10e      	RCALL SUBOPT_0x1A
00036c 2fe2      	MOV  R30,R18
00036d 36e4      	CPI  R30,LOW(0x64)
00036e f011      	BREQ _0x93
00036f 36e9      	CPI  R30,LOW(0x69)
000370 f419      	BRNE _0x94
          _0x93:
000371 e0e0      	LDI  R30,LOW(0)
000372 87e8      	STD  Y+8,R30
000373 c002      	RJMP _0x95
          _0x94:
000374 37e5      	CPI  R30,LOW(0x75)
000375 f411      	BRNE _0x96
          _0x95:
000376 e03a      	LDI  R19,LOW(10)
000377 c009      	RJMP _0x91
          _0x96:
000378 37e8      	CPI  R30,LOW(0x78)
000379 f411      	BRNE _0x97
00037a e130      	LDI  R19,LOW(16)
00037b c005      	RJMP _0x91
          _0x97:
00037c 32e5      	CPI  R30,LOW(0x25)
00037d f409      	BRNE _0x9A
00037e c04a      	RJMP _0x99
          _0x9A:
00037f 85e9      	LDD  R30,Y+9
000380 c059      	RJMP _0xAD
          _0x91:
000381 e0e0      	LDI  R30,0
000382 83ee      	STD  Y+6,R30
000383 83ef      	STD  Y+6+1,R30
          _0x9B:
000384 2fe4      	MOV  R30,R20
000385 5041      	SUBI R20,1
000386 30e0      	CPI  R30,0
000387 f189      	BREQ _0x9D
000388 b7ed      	IN   R30,SPL
000389 b7fe      	IN   R31,SPH
00038a 93fa      	ST   -Y,R31
00038b 93ea      	ST   -Y,R30
00038c 935f      	PUSH R21
00038d d0de      	RCALL SUBOPT_0x18
00038e 915f      	POP  R21
00038f 2f2e      	MOV  R18,R30
000390 2fae      	MOV  R26,R30
000391 e2e0      	LDI  R30,LOW(32)
000392 17ea      	CP   R30,R26
000393 f4b0      	BRSH _0x9F
000394 85e8      	LDD  R30,Y+8
000395 30e0      	CPI  R30,0
000396 f431      	BRNE _0xA0
000397 322d      	CPI  R18,45
000398 f419      	BRNE _0xA1
000399 efef      	LDI  R30,LOW(255)
00039a 87e8      	STD  Y+8,R30
00039b cfe8      	RJMP _0x9B
          _0xA1:
00039c d0dd      	RCALL SUBOPT_0x1A
          _0xA0:
00039d 3320      	CPI  R18,48
00039e f058      	BRLO _0x9F
00039f 3621      	CPI  R18,97
0003a0 f010      	BRLO _0xA4
0003a1 5527      	SUBI R18,LOW(87)
0003a2 c005      	RJMP _0xA5
          _0xA4:
0003a3 3421      	CPI  R18,65
0003a4 f010      	BRLO _0xA6
0003a5 5327      	SUBI R18,LOW(55)
0003a6 c001      	RJMP _0xA7
          _0xA6:
0003a7 5320      	SUBI R18,LOW(48)
          _0xA7:
          _0xA5:
0003a8 1723      	CP   R18,R19
0003a9 f010      	BRLO _0xA8
          _0x9F:
0003aa 2f52      	MOV  R21,R18
0003ab c00d      	RJMP _0x9D
          _0xA8:
0003ac 2fe3      	MOV  R30,R19
0003ad 81ae      	LDD  R26,Y+6
0003ae 81bf      	LDD  R27,Y+6+1
0003af e0f0      	LDI  R31,0
0003b0 d0f3      	RCALL __MULW12U
0003b1 01df      	MOVW R26,R30
0003b2 2fe2      	MOV  R30,R18
0003b3 e0f0      	LDI  R31,0
0003b4 0fea      	ADD  R30,R26
0003b5 1ffb      	ADC  R31,R27
0003b6 83ee      	STD  Y+6,R30
0003b7 83ff      	STD  Y+6+1,R31
0003b8 cfcb      	RJMP _0x9B
          _0x9D:
0003b9 d0b7      	RCALL SUBOPT_0x19
0003ba 85e8      	LDD  R30,Y+8
0003bb 81ae      	LDD  R26,Y+6
0003bc 81bf      	LDD  R27,Y+6+1
0003bd e0f0      	LDI  R31,0
0003be fde7      	SBRC R30,7
0003bf efff      	SER  R31
0003c0 d0e3      	RCALL __MULW12U
0003c1   +  	__GETW2R 16,17
0003c3 93ed      	ST   X+,R30
0003c4 93fc      	ST   X,R31
          _0x85:
0003c5 85e9      	LDD  R30,Y+9
0003c6 5fef      	SUBI R30,-LOW(1)
0003c7 87e9      	STD  Y+9,R30
0003c8 c00f      	RJMP _0xA9
          _0x75:
          _0x99:
0003c9 b7ed      	IN   R30,SPL
0003ca b7fe      	IN   R31,SPH
0003cb 93fa      	ST   -Y,R31
0003cc 93ea      	ST   -Y,R30
0003cd 935f      	PUSH R21
0003ce d09d      	RCALL SUBOPT_0x18
0003cf 915f      	POP  R21
0003d0 17e2      	CP   R30,R18
0003d1 f031      	BREQ _0xAA
          _0x81:
0003d2 85e9      	LDD  R30,Y+9
0003d3 30e0      	CPI  R30,0
0003d4 f411      	BRNE _0xAB
0003d5 efef      	LDI  R30,LOW(255)
0003d6 c003      	RJMP _0xAD
          _0xAB:
0003d7 c001      	RJMP _0x6D
          _0xAA:
          _0xA9:
          _0x74:
0003d8 cf1f      	RJMP _0x6B
          _0x6D:
0003d9 85e9      	LDD  R30,Y+9
          _0xAD:
0003da d110      	RCALL __LOADLOCR6
0003db 9660      	ADIW R28,16
0003dc 9508      	RET
          _scanf:
0003dd 92ff      	PUSH R15
0003de 2ef8      	MOV  R15,R24
0003df d065      	RCALL SUBOPT_0x12
0003e0 df12      	RCALL __scanf_G2
          _0xAC:
0003e1 d10d      	RCALL __LOADLOCR2
0003e2 9624      	ADIW R28,4
0003e3 90ff      	POP  R15
0003e4 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES
          SUBOPT_0x0:
0003e5 deee      	RCALL _printf
0003e6 9622      	ADIW R28,2
0003e7 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES
          SUBOPT_0x1:
0003e8 93fa      	ST   -Y,R31
0003e9 93ea      	ST   -Y,R30
0003ea   +  	__GETD1N 0x6
0003ee d0d5      	RCALL __PUTPARD1
0003ef 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x2:
0003f0 dfec      	RCALL _scanf
0003f1 9626      	ADIW R28,6
0003f2   +  	__GETW1R 4,5
0003f4 9631      	ADIW R30,1
0003f5   +  	__PUTW1R 4,5
0003f7 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES
          SUBOPT_0x3:
0003f8   +  	__GETD1N 0x7
0003fc d0c7      	RCALL __PUTPARD1
0003fd 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x4:
0003fe   +  	__PUTW1R 4,5
000400 01df      	MOVW R26,R30
000401 d0c7      	RCALL __EEPROMRDB
000402 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x5:
000403   +  	__GETW1R 4,5
000405 9631      	ADIW R30,1
000406 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES
          SUBOPT_0x6:
000407 93fa      	ST   -Y,R31
000408 93ea      	ST   -Y,R30
000409 2de8      	MOV  R30,R8
00040a 27ff      	CLR  R31
00040b 2766      	CLR  R22
00040c 2777      	CLR  R23
00040d d0b6      	RCALL __PUTPARD1
00040e 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x7:
00040f dfcd      	RCALL _scanf
000410 962a      	ADIW R28,10
000411 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x8:
000412 81a8      	LD   R26,Y
000413 81b9      	LDD  R27,Y+1
000414 d0a5      	RCALL __GETW1P
000415 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x9:
000416 9631      	ADIW R30,1
000417 93ed      	ST   X+,R30
000418 93fc      	ST   X,R31
000419 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0xA:
00041a 9731      	SBIW R30,1
00041b 91e4      	LPM  R30,Z
00041c 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES
          SUBOPT_0xB:
00041d 933a      	ST   -Y,R19
00041e 85ed      	LDD  R30,Y+13
00041f 85fe      	LDD  R31,Y+13+1
000420 93fa      	ST   -Y,R31
000421 93ea      	ST   -Y,R30
000422 cd94      	RJMP __put_G2
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0xC:
000423 2fa4      	MOV  R26,R20
000424 e0ea      	LDI  R30,LOW(10)
000425 9fea      	MUL  R30,R26
000426 2de0      	MOV  R30,R0
000427 2f4e      	MOV  R20,R30
000428 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES
          SUBOPT_0xD:
000429 85ae      	LDD  R26,Y+14
00042a 85bf      	LDD  R27,Y+14+1
00042b 9714      	SBIW R26,4
00042c 87ae      	STD  Y+14,R26
00042d 87bf      	STD  Y+14+1,R27
00042e 9614      	ADIW R26,4
00042f 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0xE:
000430 93ea      	ST   -Y,R30
000431 85ed      	LDD  R30,Y+13
000432 85fe      	LDD  R31,Y+13+1
000433 93fa      	ST   -Y,R31
000434 93ea      	ST   -Y,R30
000435 cd81      	RJMP __put_G2
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0xF:
000436 d083      	RCALL __GETW1P
000437 83ee      	STD  Y+6,R30
000438 83ff      	STD  Y+6+1,R31
000439 93fa      	ST   -Y,R31
00043a 93ea      	ST   -Y,R30
00043b 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x10:
00043c d07d      	RCALL __GETW1P
00043d 87ea      	STD  Y+10,R30
00043e 87fb      	STD  Y+10+1,R31
00043f 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x11:
000440 85ed      	LDD  R30,Y+13
000441 85fe      	LDD  R31,Y+13+1
000442 93fa      	ST   -Y,R31
000443 93ea      	ST   -Y,R30
000444 cd72      	RJMP __put_G2
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x12:
000445 9722      	SBIW R28,2
000446 d0a1      	RCALL __SAVELOCR2
000447 01de      	MOVW R26,R28
000448 d053      	RCALL __ADDW2R15
000449   +  	__PUTW2R 16,17
00044b e0e0      	LDI  R30,0
00044c 83ea      	STD  Y+2,R30
00044d 83eb      	STD  Y+2+1,R30
00044e 01de      	MOVW R26,R28
00044f 9614      	ADIW R26,4
000450 d04b      	RCALL __ADDW2R15
000451 d068      	RCALL __GETW1P
000452 93fa      	ST   -Y,R31
000453 93ea      	ST   -Y,R30
000454 931a      	ST   -Y,R17
000455 930a      	ST   -Y,R16
000456 01fe      	MOVW R30,R28
000457 9636      	ADIW R30,6
000458 93fa      	ST   -Y,R31
000459 93ea      	ST   -Y,R30
00045a 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x13:
00045b 2f0e      	MOV  R16,R30
00045c 30e0      	CPI  R30,0
00045d 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x14:
00045e e0e0      	LDI  R30,LOW(0)
00045f 93ec      	ST   X,R30
000460 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x15:
000461 81a9      	LDD  R26,Y+1
000462 81ba      	LDD  R27,Y+1+1
000463 d056      	RCALL __GETW1P
000464 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x16:
000465 2f2e      	MOV  R18,R30
000466 30e0      	CPI  R30,0
000467 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x17:
000468 932a      	ST   -Y,R18
000469 d013      	RCALL _isspace
00046a 30e0      	CPI  R30,0
00046b 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES
          SUBOPT_0x18:
00046c 85ec      	LDD  R30,Y+12
00046d 85fd      	LDD  R31,Y+12+1
00046e 93fa      	ST   -Y,R31
00046f 93ea      	ST   -Y,R30
000470 ce68      	RJMP __get_G2
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x19:
000471 85ac      	LDD  R26,Y+12
000472 85bd      	LDD  R27,Y+12+1
000473 9714      	SBIW R26,4
000474 87ac      	STD  Y+12,R26
000475 87bd      	STD  Y+12+1,R27
000476 9614      	ADIW R26,4
000477 910d      	LD   R16,X+
000478 911c      	LD   R17,X
000479 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x1A:
00047a e0e1      	LDI  R30,LOW(1)
00047b 87e8      	STD  Y+8,R30
00047c 9508      	RET
         
          _isspace:
00047d e0e1      	ldi  r30,1
00047e 91f9      	ld   r31,y+
00047f 32f0      	cpi  r31,' '
000480 f029      	breq __isspace1
000481 30f9      	cpi  r31,9
000482 f010      	brlo __isspace0
000483 30fe      	cpi  r31,14
000484 f008      	brlo __isspace1
          __isspace0:
000485 27ee      	clr  r30
          __isspace1:
000486 9508      	ret
         
          _strlen:
000487 91a9      	ld   r26,y+
000488 91b9      	ld   r27,y+
000489 27ee      	clr  r30
00048a 27ff      	clr  r31
          __strlen0:
00048b 916d      	ld   r22,x+
00048c 2366      	tst  r22
00048d f011      	breq __strlen1
00048e 9631      	adiw r30,1
00048f cffb      	rjmp __strlen0
          __strlen1:
000490 9508      	ret
         
          _strlenf:
000491 27aa      	clr  r26
000492 27bb      	clr  r27
000493 91e9      	ld   r30,y+
000494 91f9      	ld   r31,y+
          __strlenf0:
000495 9005      	lpm  r0,z+
000496 2000      	tst  r0
000497 f011      	breq __strlenf1
000498 9611      	adiw r26,1
000499 cffb      	rjmp __strlenf0
          __strlenf1:
00049a 01fd      	movw r30,r26
00049b 9508      	ret
         
          __ADDW2R15:
00049c 2400      	CLR  R0
00049d 0daf      	ADD  R26,R15
00049e 1db0      	ADC  R27,R0
00049f 9508      	RET
         
          __ANEGW1:
0004a0 95e0      	COM  R30
0004a1 95f0      	COM  R31
0004a2 9631      	ADIW R30,1
0004a3 9508      	RET
         
          __MULW12U:
0004a4 9ffa      	MUL  R31,R26
0004a5 2df0      	MOV  R31,R0
0004a6 9feb      	MUL  R30,R27
0004a7 0df0      	ADD  R31,R0
0004a8 9fea      	MUL  R30,R26
0004a9 2de0      	MOV  R30,R0
0004aa 0df1      	ADD  R31,R1
0004ab 9508      	RET
         
          __DIVB21U:
0004ac 2400      	CLR  R0
0004ad e098      	LDI  R25,8
          __DIVB21U1:
0004ae 0faa      	LSL  R26
0004af 1c00      	ROL  R0
0004b0 1a0e      	SUB  R0,R30
0004b1 f410      	BRCC __DIVB21U2
0004b2 0e0e      	ADD  R0,R30
0004b3 c001      	RJMP __DIVB21U3
          __DIVB21U2:
0004b4 60a1      	SBR  R26,1
          __DIVB21U3:
0004b5 959a      	DEC  R25
0004b6 f7b9      	BRNE __DIVB21U1
0004b7 2fea      	MOV  R30,R26
0004b8 2da0      	MOV  R26,R0
0004b9 9508      	RET
         
          __GETW1P:
0004ba 91ed      	LD   R30,X+
0004bb 91fc      	LD   R31,X
0004bc 9711      	SBIW R26,1
0004bd 9508      	RET
         
          __GETW1PF:
0004be 9005      	LPM  R0,Z+
0004bf 91f4      	LPM  R31,Z
0004c0 2de0      	MOV  R30,R0
0004c1 9508      	RET
         
          __PUTPARD1L:
0004c2 e060      	LDI  R22,0
0004c3 e070      	LDI  R23,0
          __PUTPARD1:
0004c4 937a      	ST   -Y,R23
0004c5 936a      	ST   -Y,R22
0004c6 93fa      	ST   -Y,R31
0004c7 93ea      	ST   -Y,R30
0004c8 9508      	RET
         
          __EEPROMRDB:
0004c9 99e1      	SBIC EECR,EEWE
0004ca cffe      	RJMP __EEPROMRDB
0004cb 93ff      	PUSH R31
0004cc b7ff      	IN   R31,SREG
0004cd 94f8      	CLI
0004ce bbae      	OUT  EEARL,R26
0004cf bbbf      	OUT  EEARH,R27
0004d0 9ae0      	SBI  EECR,EERE
0004d1 b3ed      	IN   R30,EEDR
0004d2 bfff      	OUT  SREG,R31
0004d3 91ff      	POP  R31
0004d4 9508      	RET
         
          __EEPROMWRB:
0004d5 99e1      	SBIC EECR,EEWE
0004d6 cffe      	RJMP __EEPROMWRB
0004d7 b79f      	IN   R25,SREG
0004d8 94f8      	CLI
0004d9 bbae      	OUT  EEARL,R26
0004da bbbf      	OUT  EEARH,R27
0004db 9ae0      	SBI  EECR,EERE
0004dc b38d      	IN   R24,EEDR
0004dd 17e8      	CP   R30,R24
0004de f019      	BREQ __EEPROMWRB0
0004df bbed      	OUT  EEDR,R30
0004e0 9ae2      	SBI  EECR,EEMWE
0004e1 9ae1      	SBI  EECR,EEWE
          __EEPROMWRB0:
0004e2 bf9f      	OUT  SREG,R25
0004e3 9508      	RET
         
          __SAVELOCR6:
0004e4 935a      	ST   -Y,R21
          __SAVELOCR5:
0004e5 934a      	ST   -Y,R20
          __SAVELOCR4:
0004e6 933a      	ST   -Y,R19
          __SAVELOCR3:
0004e7 932a      	ST   -Y,R18
          __SAVELOCR2:
0004e8 931a      	ST   -Y,R17
0004e9 930a      	ST   -Y,R16
0004ea 9508      	RET
         
          __LOADLOCR6:
0004eb 815d      	LDD  R21,Y+5
          __LOADLOCR5:
0004ec 814c      	LDD  R20,Y+4
          __LOADLOCR4:
0004ed 813b      	LDD  R19,Y+3
          __LOADLOCR3:
0004ee 812a      	LDD  R18,Y+2
          __LOADLOCR2:
0004ef 8119      	LDD  R17,Y+1
0004f0 8108      	LD   R16,Y
0004f1 9508      	RET
         
         ;END OF CODE MARKER
          __END_OF_CODE:

Assembly complete with no errors.
