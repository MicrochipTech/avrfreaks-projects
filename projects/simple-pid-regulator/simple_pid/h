//Simple PID regulator

/*
* Simple structure based (class-like) fixed-point PID regulator
* all values use fxied point(last 4 bits treated as a fraction (x1/16).
* Therafore all values should be multiplyied by 16 to match format.
* That reduces all int values to 12-bit int +4-bit fraction.
*
*
*
* Author: Krzysztof Pilasiewicz (koriel@o2.pl)
* Version: 1.2 (2.01.08)
*/


//Basic regulator structure:
//stores gain values and integration and differential sums
struct PID{
	int k;
	int pd;
	int pi;

	int sigma;
	int delta;
};



//Structure init
void InitReg(struct PID *s,int k,int pi,int pd);


//Counts netg regulator output based on set value and object output
//IN:		x-set value
//			y-object output value
//OUT:		e-control output
//
//Function shall be used inside timer interrupt.
//		
int RegulatorNextStep(struct PID *s,int x,int y);


//Structure reset (resets values of sigma and delta)
void RegulatorReset(struct PID *s);


