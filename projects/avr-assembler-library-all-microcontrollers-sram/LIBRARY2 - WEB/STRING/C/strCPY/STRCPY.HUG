;<$DS_HEADER>
;+--------------------------------------------------------------------------------+              
;|João D´Artagnan A. Oliveira Programmer and Author; 				  |
;|										  |
;| All rights reserved.								  |
;|										  |
;|   Redistribution and use in source and binary forms, with or without		  |
;|  modification, are permitted provided that the following conditions are met:	  |
;|										  |
;|   * Redistributions of source code must retain the above copyright		  |
;|     notice, this list of conditions and the following disclaimer.		  |
;|										  |
;|   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  |
;|   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    |
;|   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   |
;|   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE     |
;|   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR	  |
;|   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF	  |
;|   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS	  |
;|   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN	  |
;|   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)	  |
;|   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   |
;|   POSSIBILITY OF SUCH DAMAGE.						  |
;|										  |
;|   Brasília, Brazil November 30,2015 	06:28 am				  |
;+--------------------------------------------------------------------------------+
;</$DS_HEADER>
;+--------------------------------------------------------------+---+
;| BY VICTOR HUGO DE OLIVEIRA CAMPOS			|
;| SUPERVISION BY JOÃO DARTAGNAN ANTUNES OLIVEIRA	|
;| DATA:4/12/2005					|
;>------------------------------------------------------<
;| A V R  S T R L E N  C  F U N C T I O N		|
;| V E R S I O N  1.0					|
;+------------------------------------------------------+
;| THIS DRIVE HAS INTEND TO USE WITH MEGA AVRS 		|
;+------------------------------------------------------+
#ifndef	__STRCPY__
	
	#define	__STRCPY__
	;>----------------------<
	;| NEED INCLUDES	|
	;>----------------------<
	;#ifndef	__NEED_INCLUDE__
	;#endif
	
	.message "+---------------------+"
	.message "|                     |"
	.message "| STRCPY C Function	|"
	.message "|                     |"
	.message "+---------------------+"
	;>--------------------------------------------------------------<
	;| OBJECT     : _STRCPY 					|
	;>--------------------------------------------------------------<
	;| DESCRIPTION: This object implements some functions(methods)	|
	;|		do handdle STRCAT C Function			|
	;>--------------------------------------------------------------<
	;>----------------------<
	;| OBJECT DEFINITIONS	|
	;>----------------------<
	;-------------------------< CONSTANT DEFINITONS >------------------------
	;-------------------------< SRAM VARIABLES >-----------------------------
	.DSEG
	.CSEG
	;
	;-------------------------< M A C R O S  >-------------------------------
	;
	;>--------------------------------------------------------------<
	;| OBJECT     : _STRCPY						|
	;>--------------------------------------------------------------<
	;| FUNCTION   : StrCpy Copies string2 to string1.		|
	;>--------------------------------------------------------------<
	;| INPUT      : X as input string 1				|
	;|		Y as input string 2				|
	;| OUTPUT     :	X as new string					|
	;| DESTROYED  :	----						|
	;| TIME	      :	----						|
	;>--------------------------------------------------------------<
	;| OBSERVATION:	String1 = String2 + '\0'			|
	;+--------------------------------------------------------------+-------------------------------------------------------------------------------\
	;|																		|
	_STRCPY:
		
		push 	Temp					;Save Temp
	
	_STRCPY_10:
		ld	Temp,Y+					;Load Y to Temp
		st	X+,Temp					;Add new char to X
		cpi	Temp,0					;End of string2?
		brne	_STRCPY_10				;No, jump
		pop	Temp					;Restore Temp
		ret						;End
	;>--------------------------------------------------------------<
	;| OBJECT     : _STRCPYF					|
	;>--------------------------------------------------------------<
	;| FUNCTION   : StrCpyF Copies string2 to string1.		|
	;>--------------------------------------------------------------<
	;| INPUT      : X as input string 1 from sram			|
	;|		Z as input string 2 from flash			|
	;| OUTPUT     :	X as new string					|
	;| DESTROYED  :	----						|
	;| TIME	      :	----						|
	;>--------------------------------------------------------------<
	;| OBSERVATION:							|
	;+--------------------------------------------------------------+-------------------------------------------------------------------------------\
	;|
	;
	_STRCPYF:
		push	Temp					;Save Temp
	_STRCPYF_10:
		lpm	Temp,Z+					;Load byte from memory
		tst	Temp					;Is end of string?
		breq	_STRCPYF_20				;Yes, Jump
		st	X+,Temp					;No, load byte to sram
		jmp 	_STRCPYF_10				;Load new byte
	_STRCPYF_20:
		st	X,Temp					;Zero end "\0"
		pop	Temp
		ret
#endif
.EXIT


