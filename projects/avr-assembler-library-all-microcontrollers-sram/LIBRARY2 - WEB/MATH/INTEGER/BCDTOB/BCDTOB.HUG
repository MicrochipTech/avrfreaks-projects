;<$DS_HEADER>
;+--------------------------------------------------------------------------------+              
;|João D´Artagnan A. Oliveira Programmer and Author; 				  |
;|										  |
;| All rights reserved.								  |
;|										  |
;|   Redistribution and use in source and binary forms, with or without		  |
;|  modification, are permitted provided that the following conditions are met:	  |
;|										  |
;|   * Redistributions of source code must retain the above copyright		  |
;|     notice, this list of conditions and the following disclaimer.		  |
;|										  |
;|   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  |
;|   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    |
;|   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   |
;|   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE     |
;|   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR	  |
;|   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF	  |
;|   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS	  |
;|   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN	  |
;|   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)	  |
;|   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   |
;|   POSSIBILITY OF SUCH DAMAGE.						  |
;|										  |
;|   Brasília, Brazil November 30,2015 	06:28 am				  |
;+--------------------------------------------------------------------------------+
;</$DS_HEADER>
;+------------------------------------------------------------------------------+
;|										|
;| DATE:24/01/2005 VERSION 1.0							|
;>------------------------------------------------------------------------------<
;| I N T E G E R  R O U T I N E S	     					|
;| S I G N E D  B Y T E  T O  S T R I N G 					|
;+------------------------------------------------------------------------------+
;| THIS DRIVE HAS INTEND TO USE WITH AVRS WITH SRAM				|
;+------------------------------------------------------------------------------+
;+----------------------------------------------------------------------+
;| _BCDTOB								|
;| Convert BCD "Binary Codec Decimal" to Binary			 	|
;|								  	|
;| Input  : Acc BCD						  	|
;| Output : Acc Binary						  	|
;|									|
;| Input format								|
;|									|
;|	|-Bcd digit hi -|- Bcd digit lo |				|
;|	+---+---+---+---+---+---+---+---+				|
;|	| d3| d2| d1| d0| d3| d2| d1| d0|				|
;|	+---+---+---+---+---+---+---+---+				|
;|									|
;|	if bcd digits great than 9 the value is saturated to 9		|
;| Output format							|
;|									|
;|	|      binary number 8 bits     |				|
;|	+---+---+---+---+---+---+---+---+				|
;|	| b7| b6| b5| b4| b3| b2| b1| b0|				|
;|	+---+---+---+---+---+---+---+---+				|
;+----------------------------------------------------------------------+
#ifndef	__INTEGER_BCDTOB__
	#define __INTEGER_BCDTOB__
	.message "[ (MATH) INTEGER BCDTOB ]"
	_BCDTOB:
		push	AccH				;save AccH
		mov	AccH,Acc			;get digit lo
		andi	AccH,0x0f			;check lf bcd in range
		cpi	AccH,10
		brlo	_BCDTOB_10			;yes, branch
		ldi	AccH,9				;else saturate
	_BCDTOB_10:
		swap	Acc				;get digit hi
		andi	Acc,0x0f
		cpi	Acc,10				;check if bcd int range
		brlo	_BCDTOB_20			;yes, branch
		ldi	Acc,9				;else saturate
	_BCDTOB_20:
		push	AccH				;save lo digit
		lsl	Acc				;hi digit * 10
		mov	AccH,Acc
		lsl	Acc
		lsl	Acc
		add	Acc,AccH
		pop	AccH				;restore lo digit
		add	Acc,AccH			;add hi with lo
		pop	AccH				;restore AccH
		ret
	
#endif	
.exit


