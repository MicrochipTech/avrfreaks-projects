;<$DS_HEADER>
;+--------------------------------------------------------------------------------+              
;|João D´Artagnan A. Oliveira Programmer and Author; 				  |
;|										  |
;| All rights reserved.								  |
;|										  |
;|   Redistribution and use in source and binary forms, with or without		  |
;|  modification, are permitted provided that the following conditions are met:	  |
;|										  |
;|   * Redistributions of source code must retain the above copyright		  |
;|     notice, this list of conditions and the following disclaimer.		  |
;|										  |
;|   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"  |
;|   AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE    |
;|   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE   |
;|   ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE     |
;|   LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR	  |
;|   CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF	  |
;|   SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS	  |
;|   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN	  |
;|   CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)	  |
;|   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE   |
;|   POSSIBILITY OF SUCH DAMAGE.						  |
;|										  |
;|   Brasília, Brazil November 30,2015 	06:28 am				  |
;+--------------------------------------------------------------------------------+
;</$DS_HEADER>
;+--------------------------------------------------------------+---+-----------+
;|										|
;| DATE:23/01/2003 VERSION 1.0							|
;>--------------------------------------------------------------+---------------<
;| D O U B L E   F L O A T  P O I N T  R O U T I N E S		|
;| G E N E R A L  A R C  C O - S I N E				|
;+--------------------------------------------------------------+
;| THIS DRIVE HAS INTEND TO USE WITH AVRS WITH SRAM		|
;+--------------------------------------------------------------+
;+----------------------------------------------------------------------+	
;| DOUBLE FLOAT POINT ARC SINE						|
;|									|
;| Input  : Float Acc X							|
;| Output : Float Acc arc sine of X,Acc Exception code			|
;| Destroy: Flags							|
;| Method : Describe below						|
;| 									|
;+----------------------------------------------+-----------------------+
;|						|
;| IMPLEMENTS A GENERAL ARC CO-SINE FUNCTION	|
;| METHOD:					|
;|   Arc co-sine function is performed according|
;|   following equation				|
;|						|
;|	acos(x)=pi/2-asin(x)			|
;|						|
;| OBS: if x>1 or x<-1 then return invalid op	|
;+----------------------------------------------+
#ifndef __MATH_FLOAT_ARC_COSINE__
	#define __MATH_FLOAT_ARC_COSINE__
	.message "[ (MATH) FLOAT ARC COSINE ]"
	;+----------------------+
	;| NECESSARY INCLUDES	|
	;+----------------------+
	#ifndef __MATH_FLOAT_INFINIT__
		.INCLUDE	"MATH\FLOAT_DOUBLE\INFINIT_RESULT\DFINF.hug"
	#endif
	#ifndef __MATH_FLOAT_NORMALIZE__
		.INCLUDE	"MATH\FLOAT_DOUBLE\NORMALIZE\DFNORM.hug"
	#endif
	#ifndef __MATH_FLOAT_ADDSUB__
		.INCLUDE	"MATH\FLOAT_DOUBLE\ADDSUB\DFADDSUB.hug"
	#endif
	#ifndef __MATH_FLOAT_MULDIV__
		.INCLUDE	"MATH\FLOAT_DOUBLE\MULDIV\DFMULDIV.hug"
	#endif
	#ifndef __MATH_FLOAT_UNARY__
		.INCLUDE	"MATH\FLOAT_DOUBLE\UNARY\UNARY.hug"
	#endif
	#ifndef __MATH_FLOAT_LOAD_STORE__
		.INCLUDE	"MATH\FLOAT_DOUBLE\LOAD_STORE\DFLDXSTX.hug"
	#endif
	#ifndef __MATH_FLOAT_COMPARE__
		.INCLUDE	"MATH\FLOAT_DOUBLE\COMPARE\DFCPM.hug"
	#endif
	#ifndef __MATH_FLOAT_SQUARE_ROOT__
		.INCLUDE	"MATH\FLOAT_DOUBLE\SQUARE_ROOT\DFSQRT.hug"
	#endif
	#ifndef __MATH_FLOAT_ARC_TANGENT_SERIE__
		.INCLUDE	"MATH\FLOAT_DOUBLE\SERIES\ATN\SERIE_ATN.hug"
	#endif
	#ifndef __MATH_FLOAT_ARC_TANGENT__
		.INCLUDE	"MATH\FLOAT_DOUBLE\ATAN\ATAN.hug"
	#endif
	#ifndef __MATH_FLOAT_ARC_SINE__
		.INCLUDE	"MATH\FLOAT_DOUBLE\ASINE\ASIN.hug"
	#endif
	_DFACOS:
		call 	_DFASIN				;compute asin arg
		cpi	Acc,_FPOK			;operation ok ?
		breq	_DFACOS00			;yes, branch
		ret					;else return because error
	_DFACOS00:
		call 	_DFACCOP2			;op2=asin(arg)
		call 	_DFLDPI2			;acc=pi/2
		call 	_DFACCOP1			;op1=acc
		call 	_DFSUB				;acc=pi/2-asin(arg)
		ret
#endif
.exit


