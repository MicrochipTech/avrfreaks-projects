FreeRtos port for Atmel xMega CPUs.
by VG.

-------------
Version 1.3
- based on FreeRTOS 7.2.0
- project upgraded to AVR Studio 5.1 
- toolchain flavour: native

-------------
Version 1.2.1
- based on FreeRTOS 7.0.2
- project moved to AVR Studio 5.
- more runtime memory checks
	- to avoid stack overflows (both global stack and task stacks).
	- to ensure that there is enough memory to start the idle task.
	- to ensure that configTOTAL_HEAP_SIZE is not too large.
- the simulated usarts use a datagram with checksum. checked on transmission.
- better clock initialization to overwrite bootloader settings
- disabling of all unused hardware modules.
- disabling of all unused clock sources.
- pull ups enabled on all unused i/o pins.
- software reset in case of unexpected errors.
- uarts disabled in simulation mode to make sure that they don't disturb stability tests.

-------------
Version 1.1.0
13-Feb-2011

- more stress in the demo code to get more testing depth.
- use simple context-switch routines if only level 0 is used, less overhead.
- Context switch doesn't store r2 - r17 anymore (portPRESERVE_R2R17	).
- The med-level and high-level ISRs may call the light weigth api (and make context switch, configMAX_SYSCALL_INTERRUPT_PRIORITY).
- Based on FreeRTOS 6.1.1
- Runs with xMega 32A4 and 128A1 (config24BITADDRESSING).
- Examples showing nesting interrupts (mid-level and high-level).
- Simpler, more elegant context switch macros.
- Demo code demonstrates medium- and low-level interrupts nesting each other

-----------
Version 1.0.0
17-Nov-2010

- only low-level ISRs may initiate a context switch



-----------
