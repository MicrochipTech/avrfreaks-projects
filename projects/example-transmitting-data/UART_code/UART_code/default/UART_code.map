Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                              uart.o (__do_clear_bss)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
                              UART_code.o (itoa)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o) (strrev)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o) (__udivmodhi4)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
LOAD UART_code.o
LOAD uart.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x58a
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000008c       0x7a UART_code.o
                0x00000106                . = ALIGN (0x2)
                0x00000106                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000106        0x0 linker stubs
 *(.trampolines*)
                0x00000106                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000106                __ctors_start = .
 *(.ctors)
                0x00000106                __ctors_end = .
                0x00000106                __dtors_start = .
 *(.dtors)
                0x00000106                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000106        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000106                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000106        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000112       0x1a c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000112                __do_copy_data
 .init4         0x0000012c       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
                0x0000012c                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000013c        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x00000144        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
                0x00000144                __vector_22
                0x00000144                __vector_28
                0x00000144                __vector_1
                0x00000144                __vector_32
                0x00000144                __vector_34
                0x00000144                __vector_24
                0x00000144                __vector_12
                0x00000144                __bad_interrupt
                0x00000144                __vector_6
                0x00000144                __vector_3
                0x00000144                __vector_23
                0x00000144                __vector_25
                0x00000144                __vector_11
                0x00000144                __vector_13
                0x00000144                __vector_17
                0x00000144                __vector_7
                0x00000144                __vector_27
                0x00000144                __vector_5
                0x00000144                __vector_33
                0x00000144                __vector_4
                0x00000144                __vector_9
                0x00000144                __vector_2
                0x00000144                __vector_21
                0x00000144                __vector_15
                0x00000144                __vector_29
                0x00000144                __vector_8
                0x00000144                __vector_26
                0x00000144                __vector_14
                0x00000144                __vector_10
                0x00000144                __vector_16
                0x00000144                __vector_20
 .text          0x00000148       0xb8 UART_code.o
                0x00000148                main
 .text          0x00000200      0x2fc uart.o
                0x00000460                uart1_getc
                0x000004c6                uart1_puts
                0x0000042c                uart1_init
                0x000003d0                __vector_31
                0x000004e0                uart1_puts_p
                0x00000370                __vector_30
                0x0000033a                uart_puts
                0x00000354                uart_puts_p
                0x0000025c                __vector_19
                0x000002ae                uart_init
                0x000002dc                uart_getc
                0x00000316                uart_putc
                0x0000049a                uart1_putc
                0x00000200                __vector_18
 .text          0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text          0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text          0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .text          0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
 .text          0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x000004fc                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x000004fc        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x000004fc       0x42 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
                0x000004fc                itoa
 .text.avr-libc
                0x0000053e       0x20 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
                0x0000053e                strrev
 .text.libgcc   0x0000055e       0x28 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
                0x0000055e                __udivmodhi4
                0x00000586                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000586        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
                0x00000586                exit
                0x00000586                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000586        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x0000058a                _etext = .

.data           0x00800100        0x0 load address 0x0000058a
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x0 UART_code.o
 .data          0x00800100        0x0 uart.o
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
 .data          0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100       0x8a
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51/crtm128.o
 .bss           0x00800100        0x0 UART_code.o
 .bss           0x00800100       0x8a uart.o
 .bss           0x0080018a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_exit.o)
 .bss           0x0080018a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_clear_bss.o)
 .bss           0x0080018a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(itoa.o)
 .bss           0x0080018a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr51\libc.a(strrev.o)
 .bss           0x0080018a        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr51\libgcc.a(_udivmodhi4.o)
 *(.bss*)
 *(COMMON)
                0x0080018a                PROVIDE (__bss_end, .)
                0x0000058a                __data_load_start = LOADADDR (.data)
                0x0000058a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080018a        0x0
                0x0080018a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080018a                PROVIDE (__noinit_end, .)
                0x0080018a                _end = .
                0x0080018a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 UART_code.o
 .debug_aranges
                0x00000020       0x20 uart.o

.debug_pubnames
                0x00000000      0x102
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x1b UART_code.o
 .debug_pubnames
                0x0000001b       0xe7 uart.o

.debug_info     0x00000000      0x68c
 *(.debug_info)
 .debug_info    0x00000000      0x1a2 UART_code.o
 .debug_info    0x000001a2      0x4ea uart.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x1ec
 *(.debug_abbrev)
 .debug_abbrev  0x00000000       0x9f UART_code.o
 .debug_abbrev  0x0000009f      0x14d uart.o

.debug_line     0x00000000      0x4ec
 *(.debug_line)
 .debug_line    0x00000000      0x128 UART_code.o
 .debug_line    0x00000128      0x3c4 uart.o

.debug_frame    0x00000000      0x110
 *(.debug_frame)
 .debug_frame   0x00000000       0x20 UART_code.o
 .debug_frame   0x00000020       0xf0 uart.o

.debug_str      0x00000000      0x261
 *(.debug_str)
 .debug_str     0x00000000       0xae UART_code.o
                                 0xe7 (size before relaxing)
 .debug_str     0x000000ae      0x1b3 uart.o
                                0x27f (size before relaxing)

.debug_loc      0x00000000      0x300
 *(.debug_loc)
 .debug_loc     0x00000000       0x38 UART_code.o
 .debug_loc     0x00000038      0x2c8 uart.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(UART_code.elf elf32-avr)
LOAD linker stubs
