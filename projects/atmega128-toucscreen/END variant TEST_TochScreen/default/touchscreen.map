Archive member included because of file (symbol)

c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodhi4.o)
                              touchscreen.o (__udivmodhi4)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodsi4.o)
                              touchscreen.o (__udivmodsi4)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_exit.o)
                              c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o (exit)
c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_clear_bss.o)
                              touchscreen.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

buff                0x1               touchscreen.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
LOAD touchscreen.o
LOAD UART_routines.o
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51\libc.a
LOAD c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x1186
 *(.vectors)
 .vectors       0x00000000       0x8c c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000008c      0x740 touchscreen.o
                0x0000008c                hello
                0x000000a0                mounting_FAT
                0x000000ae                move_to_DIR_SKINS
                0x000007cc                . = ALIGN (0x2)
                0x000007cc                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x000007cc        0x0 linker stubs
 *(.trampolines*)
                0x000007cc                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x000007cc                __ctors_start = .
 *(.ctors)
                0x000007cc                __ctors_end = .
                0x000007cc                __dtors_start = .
 *(.dtors)
                0x000007cc                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x000007cc        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
                0x000007cc                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x000007cc        0xc c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x000007d8       0x1c c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
                0x000007d8                __do_copy_data
 .init4         0x000007f4       0x10 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_clear_bss.o)
                0x000007f4                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000804        0x8 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
 *(.init9)
 *(.text)
 .text          0x0000080c        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
                0x0000080c                __vector_22
                0x0000080c                __vector_28
                0x0000080c                __vector_1
                0x0000080c                __vector_32
                0x0000080c                __vector_34
                0x0000080c                __vector_24
                0x0000080c                __vector_12
                0x0000080c                __bad_interrupt
                0x0000080c                __vector_6
                0x0000080c                __vector_31
                0x0000080c                __vector_3
                0x0000080c                __vector_23
                0x0000080c                __vector_30
                0x0000080c                __vector_25
                0x0000080c                __vector_11
                0x0000080c                __vector_13
                0x0000080c                __vector_17
                0x0000080c                __vector_19
                0x0000080c                __vector_7
                0x0000080c                __vector_27
                0x0000080c                __vector_5
                0x0000080c                __vector_33
                0x0000080c                __vector_4
                0x0000080c                __vector_9
                0x0000080c                __vector_2
                0x0000080c                __vector_21
                0x0000080c                __vector_15
                0x0000080c                __vector_29
                0x0000080c                __vector_8
                0x0000080c                __vector_26
                0x0000080c                __vector_14
                0x0000080c                __vector_10
                0x0000080c                __vector_16
                0x0000080c                __vector_18
                0x0000080c                __vector_20
 .text          0x00000810      0x898 touchscreen.o
                0x00000c5e                set_Pixel
                0x00000a4c                clrscr
                0x00000fca                bmp_rcv_uart
                0x00000de0                waitms
                0x00000b2e                printDecimal
                0x00000abc                pix_blit
                0x0000099c                putch
                0x00000810                send_byte_
                0x00000ac2                putstr_ram
                0x00000e8e                main
                0x00000dfc                print_hex
                0x00000cc2                drawLine
                0x0000082c                send_data
                0x00000838                send_cmd
                0x00000a9c                lcd_set_brightness_parms
                0x00000844                init_lcd
                0x00000958                window
                0x00000af6                putstr_pgm
                0x00000bd8                test_all_char
 .text          0x000010a8       0x6e UART_routines.o
                0x000010d0                transmitByte
                0x000010a8                uart1_init
                0x000010e2                transmitString_F
                0x000010e0                transmitHex
                0x000010fc                transmitString
                0x000010be                receiveByte
 .text          0x00001116        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodhi4.o)
 .text          0x00001116        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodsi4.o)
 .text          0x00001116        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_exit.o)
 .text          0x00001116        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_clear_bss.o)
                0x00001116                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00001116       0x28 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodhi4.o)
                0x00001116                __udivmodhi4
 .text.libgcc   0x0000113e       0x44 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodsi4.o)
                0x0000113e                __udivmodsi4
 .text.libgcc   0x00001182        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_exit.o)
 .text.libgcc   0x00001182        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_clear_bss.o)
                0x00001182                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00001182        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_exit.o)
                0x00001182                exit
                0x00001182                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00001182        0x4 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_exit.o)
 *(.fini0)
                0x00001186                _etext = .

.data           0x00800100        0x8 load address 0x00001186
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
 .data          0x00800100        0x7 touchscreen.o
                0x00800106                bg
 .data          0x00800107        0x0 UART_routines.o
 .data          0x00800107        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodhi4.o)
 .data          0x00800107        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodsi4.o)
 .data          0x00800107        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_exit.o)
 .data          0x00800107        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800108                . = ALIGN (0x2)
 *fill*         0x00800107        0x1 00
                0x00800108                _edata = .
                0x00800108                PROVIDE (__data_end, .)

.bss            0x00800108        0x2
                0x00800108                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800108        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/../../../../avr/lib/avr51/crtm128.o
 .bss           0x00800108        0x1 touchscreen.o
                0x00800108                fg
 .bss           0x00800109        0x0 UART_routines.o
 .bss           0x00800109        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodhi4.o)
 .bss           0x00800109        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_udivmodsi4.o)
 .bss           0x00800109        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_exit.o)
 .bss           0x00800109        0x0 c:/winavr-20081205/bin/../lib/gcc/avr/4.3.2/avr51\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800109        0x1 touchscreen.o
                0x00800109                buff
                0x0080010a                PROVIDE (__bss_end, .)
                0x00001186                __data_load_start = LOADADDR (.data)
                0x0000118e                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x0080010a        0x0
                0x0080010a                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x0080010a                PROVIDE (__noinit_end, .)
                0x0080010a                _end = .
                0x0080010a                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 touchscreen.o
 .debug_aranges
                0x00000020       0x20 UART_routines.o

.debug_pubnames
                0x00000000      0x1e4
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000      0x16a touchscreen.o
 .debug_pubnames
                0x0000016a       0x7a UART_routines.o

.debug_info     0x00000000      0xfe7
 *(.debug_info)
 .debug_info    0x00000000      0xda9 touchscreen.o
 .debug_info    0x00000da9      0x23e UART_routines.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x44d
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x2d3 touchscreen.o
 .debug_abbrev  0x000002d3      0x17a UART_routines.o

.debug_line     0x00000000      0xa39
 *(.debug_line)
 .debug_line    0x00000000      0x8b9 touchscreen.o
 .debug_line    0x000008b9      0x180 UART_routines.o

.debug_frame    0x00000000      0x1b0
 *(.debug_frame)
 .debug_frame   0x00000000      0x140 touchscreen.o
 .debug_frame   0x00000140       0x70 UART_routines.o

.debug_str      0x00000000      0x2b3
 *(.debug_str)
 .debug_str     0x00000000      0x22e touchscreen.o
                                0x26c (size before relaxing)
 .debug_str     0x0000022e       0x85 UART_routines.o
                                0x14b (size before relaxing)

.debug_loc      0x00000000      0xc81
 *(.debug_loc)
 .debug_loc     0x00000000      0xbed touchscreen.o
 .debug_loc     0x00000bed       0x94 UART_routines.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(touchscreen.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xa8
 .debug_ranges  0x00000000       0x78 touchscreen.o
 .debug_ranges  0x00000078       0x30 UART_routines.o
