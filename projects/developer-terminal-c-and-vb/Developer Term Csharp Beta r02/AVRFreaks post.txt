Next week I will create (buwahhahaaha it's aliiiiive...)[b]the IDEAL[/b]terminal. I'm going to post the C# Express source code when I'm finished. I have taken many of the suggestions given and will incorporate them in the terminal. Other suggestions, I will leave for a later date. I thought I'd give folks one last chance to comment on the specification before I get too committed. 

If anyone wants to participate let me known and we can discuss how to proceed. C# is free and easy (easy being a relative term) and provides a good path to creating your own GUIs for communicating with your microcontroller. I'll soon post a tutorial on creating a simple terminal, and you can get an idea of what I mean by easy from that thread.

[b]‘Ideal’ Terminal Specification:[/b]
-Separate Send and Receive text windows.
---Clear text button.
-Show received bytes as text or hex.
-Save sent text to file.
-Save received text to file.
-Send an ASCII text file.
-Send a hex data file.
-Send text box accepts data dragged and droped or pasted from the clipboard.
-Send Hex byte combo box with 0x00 to 0xFF selections.
-Send text immediately or queued option radio buttons.
-Send with terminal character(s) check box.
---Terminal character(s) read from XML file.
-Count boxes for characters sent and received.
-Select font and backcolor for send text box.
-Select font and backcolor for receive text box.
-COM port set up dialog.
---Support COM ports 0 to 255.
---COM ports available for selection list box.
---Combo boxes with standard selectios fo:
------Baud rate
------Data bits
------Parity
------Stop bits
---Handshaking:
------Hardware: RTS/CTS
------Software: Xon/Xff
------None
---Xon and Xoff character selection combo box.
-Open/Close Port button.
-Port status in form text line.
-Macro feature
---Macros from XML files
------Show macro name in a text box.
------Macro text is sent when macro name is double clicked.
------Macro can send either characters or hex codes.
---Macro from user input to 3 text boxes 
------Input as text or hex.
------Timed auto send with repeat mode for macros.
-Help feature to show how to  use the terminal.
-Virtual LED state indicators for DCD,DSR,CTS, and RI.
-Radio buttons to set state of DTR and RTS.
-Log and timestamp both sent and received data (TODO – detail spec)
-Alarm Mode: (TODO – detail spec)
---On specified time or received string match
------Generate alarm condition.
------Or, send preset text (macro).


[b]Things to think about (when I have time) suggested by AVRFreaks folks:[/b]
-Option to show received bytes as ‘printable’ text and if no displayable character is available:
--- Show the hex value.
--- Or we could allow control codes to either be used as control codes or shown as an indicator for the code such as (lf) for ‘line feed’.
-Checksum feature for hex macros:
---Variable source destination width.
---Positive/Negative/XOR sums.
---Little/big endian.
-CRC (CCITT) calculation:
--- Append to hex strings.
---Show for received strings.
-Monitor input to assure that no characters are dropped.
-For inputing hex characters to send, have an auto complete feature that adds a 0x before two hex characters and a comma or space between them. 
-User programmable function keys.
-Option to use a single window for input and output like a ‘real’ terminal.
---VT100 emulation with full ANSI support.
-“Read a nominated ASCII file and send each line at a nominated time interval.”
-Mode to “automatically toggle one of the handshaking ines to control the data direction pin of a half-duplex RS232<->RS485 tranceiver.”

Smiley
