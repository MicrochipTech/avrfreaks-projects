This code in this directory is intended to run on an 
ATMEL AVRmega8 or 
ATMEL AVRmega16 or 
atmel AVRMega32 and upwards microcontroller circuit cards
The code has various conditional compilation #ifdef compile switches
used to activate compilation of the
various code modules needed by various target applications.
the -DLCD_CODE can be used to switch off compilation of the LCD menu 
interface if required saves about 2500 bytes of code.

The Makefile can be edited to compile any of several targets which i am 
working with there is a makefile "if" based target selection to choose
which target i am working with at the time.

My applications share alot of code and hardware so the basic structure is
very similar. Virtually any application could use a similar code base 
in fact my code originally was derived from another project for a UAV control system.

The routines are very compact and for example the process thermostat-timer 
application will fit  into a Mega8 at only 7820bytes in size, this includes
a friendly scrolling LCD menu interface and a serial port communications interface,
eeprom setting storage and restoration.

The serial port based software support routines included include debugging routines
, 64 base encoding routines , serial port data output and menue system. 
  
Most of the hardware interface routines define the pins they use at the top of the file.

Some software modules and hardware interface routines in these files include
.sharp LCD displays
.infra red remote control receiver
.Quadrature encoders.
.EEPROM file line based editing system for initial variable settings or data logging.
.RC servos.
.Serial console interface via RS232 or RS485 hardware. 
.sharp brand IRDDS distance sensors.
.Pulse width modulation.
.stepper motor pulse generation and control.
.pulse counting and frequency capture.
.ADC setup and input capture code. 
.Remote Pin reading and setting with the bitfield routines.
.Fully software driven Dual H bridge driving routines - this is the most 
complex module and one of my most usefull modules as well. 
.Sensorless feedback system useing ADC feedback to regulate
the Dual H bridge motor speeds.
.A real time second clock

Software structure is based on a main loop which processes the received serial data and 
non time critical data, and refreshes the lcd display and user interface operations.

All time critical or periodic loops run of the various interrupts available on the AVR.

Programs and libraries needed

avr-binutils-2.13.90.030512-1.i386.rpm
avr-gcc-3.2.90.20030512-1.i386.rpm
avr-libc_20030512cvs-1.tar.gz

then to compile

make

To download the code to the AVR

make all

Check the Makefile for additional switches for setting/displaying fuses or 
displaying code information.
