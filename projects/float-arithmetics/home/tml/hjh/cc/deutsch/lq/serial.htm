<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
</head>
<body>
<a href="themen.htm">Themen</a> / <a href="00idx.htm">Index</a><br>
<h2>Die serielle Schnittstelle</h2>
Es gibt in home/cc/lq zwei M&ouml;glichkeiten die serielle
Schnittstelle zu bedienen:<br>
<ul>
  <li><a href="../../../../../cc/lq/serial.cpp">serial.cpp</a> :
Bedient mehrere serielle Schnittstellen. Damit laufen alle meine
Kopplungs-test-Programme und auch die Terminalemulation.</li>
  <li><a href="../../../../../cc/lq/tsser.cpp">tsser.cpp</a> : Ruft,
w&auml;hrend auf ein Zeichen gewartet wird, das Timesharing-Programm
tshar.cpp: tsnext("marke"); auf, um Rechenzeit an endere Prozesse
weiterzugeben. siehe tsser.htm<br>
  </li>
</ul>
<br>
Hier wird serial.cpp beschrieben.<br>
<br>
Serial.cpp kann &uuml;bersetzt werden f&uuml;r MSDOS6.22 (TurboC++) Mit
oder ohne Interruptsteuerung), f&uuml;r OSK (gnu gcc), f&uuml;r Windows
mit Visual Studio Version 5.0, oder f&uuml;r Linux.<br>
<br>
Es werden bis zu MAX_SERINTERFACE Schnittstellen bedient. Deren
Bezeichnungen sind eingetragen in char *sername[MAX_INTERFACENO] ,
f&uuml;r Windows siehe <a
 href="../../../../../cc/lq/serial.cpp#MDOS40:sername">(*)</a> f&uuml;r
Linux siehe <a href="../../../../../cc/lq/serial.cpp#LINUX:sername">(*)</a>,
f&uuml;r OSK siehe <a
 href="../../../../../cc/lq/serial.cpp#OSK:sername">(*)</a><br>
<br>
Jedes Betriebssystem ben&ouml;tigt unterschiedlichen Code zur Bedienung
der seriellen Schnittstellen. Das ist &uuml;berall ber&uuml;cksichtigt
durch :<br>
#ifdef LINUX,&nbsp; - F&uuml;r Linux-Rechner<br>
#ifdef OSK, - F&uuml;r OSK (OS-9) VME-Rechner<br>
#ifdef DOSCLASSIC - f&uuml;r DOS-Programme unter Borlands TurboC++<br>
#ifdef BIOS_SERVICE - f&uuml;r DOS-Programme<br>
#if defined( MDOS40 ) || defined( MSVC40 ) - F&uuml;r Windowsprogramme<br>
<br>
Programme nutzen eine oder mehrere serielle Schnittstellen. Die
Bezeichnungen sind voreingestellt. Um ein Programm einmal mit "/t11"
und ein andermal mit "/t13" benutzen zu k&ouml;nnen, wird die in uchar
ser_if_no[0] einmal eine 1, das andere mal eine 3 eingetragen.
Aufrufparameter werden duchr serargs.cpp interpretiert, serargs.cpp
tr&auml;gt auch die gew&uuml;nschte Schnittstellennummer nach
ser_if_no[0] ein.<br>
<br>
Manche Programme ben&ouml;tigen zwei Schnittstellen, z.B: die
Leitungsw&auml;chter in home/cc/util: <a
 href="../../../../../cc/util/lwunspec.cpp">lwunspec.cpp</a> (mit <a
 href="../../../../../cc/util/lwbasis.cpp">lwbasis.cpp</a>) oder
lwak.cpp (mit lwbasis.cpp) oder lwasap3.cpp (mit lwbasis.cpp) oder
lwrail.cpp (mit lwbasis.cpp) oder lwhaust.cpp (mit lwbasis.cpp) oder
lwvedi.cpp (mit lwbasis.cpp)<br>
<br>
Die Benutzung von serial.cpp wir demonstriert im Programm <a
 href="../../../../../cc/qq/qqserial.cpp">qqserial.cpp</a><br>
Unter anderem verwenden die flgenden Programme serial.cpp:<br>
util/hetrm.cpp <br>
<h3><a name="serargs"></a>Argumente f&uuml;r die
Schnittstellenparametrierung</h3>
-i=0 -i=1 : Ist die Standa<br>
<table style="text-align: left;" border="1" cellpadding="2"
 cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;">-i=0 -i=1</td>
      <td style="vertical-align: top;">Die Standardanwahl f&uuml;r die
erste und zweite Schnittstelle.<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">-i=3 -i=2<br>
      </td>
      <td style="vertical-align: top;">Stattdessen wird die vierte und
die dritte Schnittstelle benutzt.<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">-i=0=/t15<br>
      </td>
      <td style="vertical-align: top;">Als Schnittstelle wird die
Schnittstelle benutzt, die im Betriebssystem den Namen "/t15" hat.<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">-b=19200<br>
      </td>
      <td style="vertical-align: top;">Baudrate, nicht jedes
Betriebssystem kann jede Baudrate. Die Vorbelegung ist 9600<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">-d=5<br>
      </td>
      <td style="vertical-align: top;">Anwahl der Datenbits, 5,6,7 oder
8 ist m&ouml;glich. Die Vorbelegung ist 8<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">-s=0<br>
      </td>
      <td style="vertical-align: top;">oder -s=1: vorwahl von
zus&auml;tzlichen Stoppbits. Damit wird nach jedem Zeichen etwas
l&auml;nger gewartet.<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">-h=n<br>
      </td>
      <td style="vertical-align: top;">Vorwahl des
Schnittstellenprotokolls (Handshake)<br>
-h=n : kein Schnittstellenprotokoll<br>
-h=x : Xon / Xoff - Protokoll (Control-Q / Control-S)<br>
-h=h : Hardware-Handshake durch die Modemsteuerleitungen<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">-p=n<br>
      </td>
      <td style="vertical-align: top;">Vorwahl des Parit&auml;tsbits:<br>
-p=n : Keine Parit&auml;t - Das Parit&auml;tsbit wird weggelassen.<br>
-p=e : gerabe Parit&auml;t <br>
-p=o : ungerade Parit&auml;t<br>
      </td>
    </tr>
  </tbody>
</table>
<br>
<h3><a name="sieheauch"></a>Siehe auch</h3>
<a href="../../../pc/rs232.htm">../../../pc/rs232.htm</a> - &Uuml;ber
serielle Schnittstellen und deren Belegung<br>
<a href="../util/hetrm.htm">../util/hetrm.htm</a> - Die
Terminalemulation<br>
<br>
</body>
</html>
