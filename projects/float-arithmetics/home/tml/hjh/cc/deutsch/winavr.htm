<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
</head>
<body>
<a href="topics.htm">Topics</a> / <a href="00idx.htm">Index</a> / <a
 href="../english/winavr.htm">englisch</a><br>
<h2>WINAVR</h2>
<h3><a name="content"></a> Content (automatic) </h3>
<ul>
  <li><a href="#content">#content</a> : Content (automatic) </li>
  <li><a href="#warning">#warning</a> : Warnung </li>
  <li><a href="#projects">#projects</a> : Meine Programme </li>
  <li><a href="#download">#download</a> : Herunterladen vom Internet
und Installieren </li>
  <li><a href="#usage">#usage</a> : Benutzung </li>
  <li><a href="#avr-gcc">#avr-gcc</a> : The Compiler switches </li>
  <li><a href="#predefined">#predefined</a> : Vordefinierte
Preprozessor-Variable </li>
  <li><a href="#avr-ar">#avr-ar</a> : avr-ar : Die Libraries bearbeiten
  </li>
  <li><a href="#avr-ar_t">#avr-ar_t</a> : Anzeigen von Libraries mit t </li>
  <li><a href="#avr-ar_x">#avr-ar_x</a> : Herausziehen eines einzelnen
Object-Filesaus einer Library mit x: </li>
  <li><a href="#avr-objdump">#avr-objdump</a> : Anzeigen von
definierten und verlangenSymbolen </li>
  <li><a href="#simulation">#simulation</a> : Simulation </li>
  <li><a href="#sim_gui">#sim_gui</a> : Simulation mit
Benutzerf&uuml;hrung </li>
  <li><a href="#lib-avr_von_www">#lib-avr_von_www</a> : Austauschen der
Library gegen eineneuere Version (vonhttp://savannah.nongnu.org </li>
  <li><a href="#sieheauch">#sieheauch</a> : Siehe auch </li>
  <li><a href="#www">#www</a> : WWW </li>
</ul>
<h3><a name="warning"></a>Warnung</h3>
AVRStudio Version 4.12 Service Pack 4 Build 498 neigt h&auml;ufig zu
Abst&uuml;rzen. Deswegen alle Minute das Projekt sichern.<br>
<h3><a name="projects"></a>Meine Programme</h3>
Ich habe meine WINAVR - Programme in meiner C++-Sammlung C:\home\cc\...<br>
<h3><a name="download"></a>Herunterladen vom Internet und Installieren<br>
</h3>
Herunterladen von <a href="http://winavr.sourceforge.net">http://winavr.sourceforge.net</a><br>
Alle Vorschl&auml;ge annehmen.<br>
Die Hilfe wird nach c:\WinAVR/WinAVR-user-manual.html&nbsp;
installiert&nbsp; <a href="../../../../WinAVR/WinAVR-user-manual.html">(*)</a><br>
Im der Pfad-Angabe PATH muss auch <span style="font-weight: bold;">C:\WinAVR\bin;C:\WinAVR\utils\bin;</span>
sein [Start] [Einstellungen] [Systemsteuerung] [System] [Tab:Erweitert]
[Umgebungsvariablen]
<h3><a name="usage"></a>Benutzung</h3>
[Start] [Programs] [WinAvr] [Programmers Notepad (WinAvr)]<br>
Durch Make [] [] werden die folgenden Dateien aus name.cpp erzeugt<br>
Hinweis: Make aus dem PN nur aufrufen, wenn eine Datai aus dem
Verzeichnis offen ist, wo auch die Datei makefile drin ist. Also
w&auml;hren das PN-Fenster "makefile" offen ist.<br>
<br>
<table style="text-align: left;" border="1" cellpadding="2"
 cellspacing="2">
  <tbody>
    <tr>
      <td style="vertical-align: top;">name.bin<br>
      </td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name.elf<br>
      </td>
      <td style="vertical-align: top;">Wird mit AVR Insight benutzt<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name.hex<br>
      </td>
      <td style="vertical-align: top;">Wird mit Ponyprog zum Ger&auml;t
geschickt.<br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name.lst<br>
      </td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name.map<br>
      </td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name.o<br>
      </td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name.srec<br>
      </td>
      <td style="vertical-align: top;">Motorola S-Records <br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name_eeprom.bin<br>
      </td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name_eeprom.hex</td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
    <tr>
      <td style="vertical-align: top;">name_eeprom.srec</td>
      <td style="vertical-align: top;"><br>
      </td>
    </tr>
  </tbody>
</table>
<br>
Um eines meiner Programme zu &uuml;bersetzen, f&uuml;r die es schon ein
.pnproj - Datei gibt:<br>
Starte Programmers Notepad<br>
&Ouml;ffne ein Projekt, z.B.&nbsp; /home/cc/qq/avr/qqmain/qqmain.pnproj<br>
<br>
Wenn ein anderes CPP-Hauptprogramm f&uuml;r einen tmel AVR-Prozessor
&uuml;bersetzt werden soll, dann:<br>
Erzeuge ein Unterverzeichnis z.B: /home/cc/????/avr/??????<br>
Kopiere da ein schon existierendes Makefile hinein. z.B: von
/home/cc/qq/avr/qqmain/makefile<br>
<h3><a name="avr-gcc"></a>The Compiler switches</h3>
<code>D:\WinAVR\bin&gt;avr-gcc --help<br>
Usage: avr-gcc [options] file...<br>
Options:<br>
&nbsp; -pass-exit-codes&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Exit with highest error code from a phase<br>
&nbsp;
--help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Display this information<br>
&nbsp;
--target-help&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Display target specific command line options<br>
&nbsp; (Use '-v --help' to display command line options of
sub-processes)<br>
&nbsp;
-dumpspecs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Display all of the built in spec strings<br>
&nbsp;
-dumpversion&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Display the version of the compiler<br>
&nbsp;
-dumpmachine&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Display the compiler's target processor<br>
&nbsp; -print-search-dirs&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Display
the directories in the compiler's search path<br>
<br>
&nbsp; -print-libgcc-file-name&nbsp; Display the name of the compiler's
companion library<br>
&nbsp; -print-file-name=&lt;lib&gt;&nbsp;&nbsp; Display the full path
to library &lt;lib&gt;<br>
&nbsp; -print-prog-name=&lt;prog&gt;&nbsp; Display the full path to
compiler component &lt;prog&gt;<br>
&nbsp; -print-multi-directory&nbsp;&nbsp; Display the root directory
for versions of libgcc<br>
&nbsp; -print-multi-lib&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Display the mapping between command line options and<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
multiple library search directories<br>
&nbsp; -print-multi-os-directory Display the relative path to OS
libraries<br>
&nbsp;
-Wa,&lt;options&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Pass comma-separated &lt;options&gt; on to the assembler<br>
&nbsp;
-Wp,&lt;options&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Pass comma-separated &lt;options&gt; on to the preprocessor<br>
<br>
&nbsp;
-Wl,&lt;options&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Pass comma-separated &lt;options&gt; on to the linker<br>
&nbsp; -Xassembler
&lt;arg&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Pass &lt;arg&gt;
on to the assembler<br>
&nbsp; -Xpreprocessor &lt;arg&gt;&nbsp;&nbsp;&nbsp;&nbsp; Pass
&lt;arg&gt; on to the preprocessor<br>
&nbsp; -Xlinker
&lt;arg&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Pass &lt;arg&gt; on to the linker<br>
&nbsp;
-save-temps&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Do not delete intermediate files<br>
&nbsp;
-pipe&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Use pipes rather than intermediate files<br>
&nbsp;
-time&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Time the execution of each subprocess<br>
&nbsp;
-specs=&lt;file&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Override built-in specs with the contents of &lt;file&gt;<br>
&nbsp;
-std=&lt;standard&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Assume that the input sources are for &lt;standard&gt;<br>
&nbsp; -B
&lt;directory&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Add &lt;directory&gt; to the compiler's search paths<br>
&nbsp; -b
&lt;machine&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Run gcc for target &lt;machine&gt;, if installed<br>
&nbsp; -V
&lt;version&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Run gcc version number &lt;version&gt;, if installed<br>
&nbsp;
-v&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Display the programs invoked by the compiler<br>
&nbsp;
-###&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Like -v but options quoted and commands not executed<br>
&nbsp;
-E&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Preprocess only; do not compile, assemble or link<br>
&nbsp;
-S&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Compile only; do not assemble or link<br>
&nbsp;
-c&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Compile and assemble, but do not link<br>
&nbsp; -o
&lt;file&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Place the output into &lt;file&gt;<br>
&nbsp; -x
&lt;language&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Specify the language of the following input files<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
Permissible languages include: c c++ assembler none<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
'none' means revert to the default behavior of<br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
guessing the language based on the file's extension<br>
<br>
Options starting with -g, -f, -m, -O, -W, or --param are automatically<br>
&nbsp;passed on to the various sub-processes invoked by avr-gcc.&nbsp;
In order to pass<br>
&nbsp;other options on to these processes the -W&lt;letter&gt; options
must be used.<br>
<br>
For bug reporting instructions, please see:<br>
&lt;URL:http://gcc.gnu.org/bugs.html&gt;.<br>
<br>
D:\WinAVR\bin&gt;</code><br>
See also : <a href="../cc/english/oskgcc.htm">../cc/english/oskgcc.htm</a>&nbsp;
/ <br>
<h3><a name="predefined"></a>Vordefinierte Preprozessor-Variable</h3>
__GNUC__ 3<br>
__VERSION__<br>
<br>
Ich definiere noch "AVR" in der Datei makefile<br>
<br>
Ausw&auml;hlen eines Zielprozessors:<br>
Die Auswahl des Zielprozessors und der Taktrate erfolgt in der Datei
"makefile"<br>
Die m&ouml;glichen Prozessoren und deren Namen sind aufgelistet in <br>
C:\WinAVR\avr\include\avr\io.h<br>
z.B.: #elif
defined(__AVR_ATmega8535__)<br>
<br>
<h3><a name="avr-ar"></a>avr-ar : Die Libraries bearbeiten</h3>
<h4><a name="avr-ar_t"></a>Anzeigen von Libraries mit t</h4>
Beispiel:<br>
<br>
<code>D:\HOME\CC\LQ\AVR&gt;dir<br>
...<br>
2005-06-28&nbsp;
07:48p&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
12,116 liblq.a<br>
...<br>
D:\HOME\CC\LQ\AVR&gt;avr-ar t liblq.a<br>
vt.o<br>
<br>
D:\HOME\CC\LQ\AVR&gt;<span style="font-weight: bold;">avr-ar tv liblq.a</span><br>
rw-rw-rw- 0/0&nbsp; 11340 Jun 28 19:43 2005 vt.o<br>
<br>
D:\HOME\CC\LQ\AVR&gt;</code><br>
Damit ist angezeigt, dass das Modul (Datei) vt.o in der Library ist.<br>
<h4><a name="avr-ar_x"></a>Herausziehen eines einzelnen Object-Files
aus einer Library mit x:</h4>
Das Herausziehen geht mit avr-ar x library.a file.o<br>
Beispiel :<br>
<code>avr-ar x liblq.a vt.o</code><br>
<h3><a name="avr-objdump"></a>Anzeigen von definierten und verlangen
Symbolen</h3>
<code>D:\HOME\CC\LQ\AVR&gt;avr-objdump -t liblq.a<br>
In archive liblq.a:<br>
<br>
vt.o:&nbsp;&nbsp;&nbsp;&nbsp; file format elf32-avr<br>
<br>
SYMBOL TABLE:<br>
00000000 l&nbsp;&nbsp;&nbsp; df *ABS*&nbsp; 00000000 vt.cpp<br>
00000000 l&nbsp;&nbsp;&nbsp; d&nbsp; .text&nbsp; 00000000<br>
00000000 l&nbsp;&nbsp;&nbsp; d&nbsp; .data&nbsp; 00000000<br>
00000000 l&nbsp;&nbsp;&nbsp; d&nbsp; .bss&nbsp;&nbsp; 00000000<br>
0000003f l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *ABS*&nbsp; 00000000
__SREG__<br>
0000003e l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *ABS*&nbsp; 00000000
__SP_H__<br>
0000003d l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *ABS*&nbsp; 00000000
__SP_L__<br>
00000000 l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *ABS*&nbsp; 00000000
__tmp_reg__<br>
00000001 l&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *ABS*&nbsp; 00000000
__zero_reg__<br>
00000005 l&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 00000004 attriblist<br>
000000b2 l&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000002
sOperatingsys<br>
00000030 l&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 000000a2
_ZZ5vtkeyvE7pattern<br>
000000d2 l&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 00000002
FSYSTEMCASESENSITIVE<br>
000000d4 l&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 00000002
EPOCHTOTXT_BUFFER_SIZE<br>
000000d6 l&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 00000004
DAYCOUNT_1970_1_1<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 __do_copy_data<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 __do_clear_bss<br>
00000000 g&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 00000002 vt_xmax<br>
00000002 g&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 00000002 vt_ymax<br>
00000000 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000001
vt_uses_screen<br>
00000001 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000050 screen<br>
00000051 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000050
act_screen<br>
000000a1 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000002
vt_curr_line<br>
000000a3 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000002
vt_curr_col<br>
000000a5 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000002
act_vt_curr_line<br>
000000a7 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000002
act_vt_curr_col<br>
00000004 g&nbsp;&nbsp;&nbsp;&nbsp; O .data&nbsp; 00000001
vt_current_attribute<br>
000000a9 g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000002
vt_scrol_ymin<br>
000000ab g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000002
vt_scrol_ymax<br>
00000000 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000004a _Z8vtcolorshh<br>
0000004a g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000040 _Z6vtattrh<br>
0000008a g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 000000bc _Z5vtclsv<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 strcmp<br>
00000edc g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000013a _Z8xxvtopenv<br>
00000146 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000010 _Z8vtcurdisv<br>
00000b4a g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000344 _Z9vtrefreshv<br>
00000156 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000050
_Z10vtsetscrolhh<br>
000001a6 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000023a _Z6vtochac<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 __mulhi3<br>
00000890 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000020a _Z4vtnlv<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 __iob<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 fputc<br>
000003e0 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000068 _Z6vtputsPKc<br>
00000448 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 000000ae _Z8vtdeleolv<br>
000004f6 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000074 _Z8vtdelbolv<br>
0000056a g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000178 _Z7vtcurdnv<br>
000006e2 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 000001ae _Z7vtcurupv<br>
00000a9a g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000006e _Z8vtcurposjj<br>
00000b08 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000042
_Z9vtgcurposPhS_<br>
000000ad g&nbsp;&nbsp;&nbsp;&nbsp; O .bss&nbsp;&nbsp; 00000005
vt_raw_sequence<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 printf<br>
00000e8e g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000002c _Z7vtclosev<br>
00000eba g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000010
_Z14vtclose_forcedv<br>
00000eca g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000012 _Z6vtopenv<br>
00001016 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000000e _Z7vtiskeyv<br>
00001024 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 0000000e
_Z11vtiskeyfastv<br>
00001032 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000034
_Z13getrawkeycodev<br>
00001066 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 000001d2 _Z5vtkeyv<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 _Z7getmsecv<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 _Z8diffmsecm<br>
00000000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; *UND*&nbsp;
00000000 _Z6iswordPKcS0_<br>
00001238 g&nbsp;&nbsp;&nbsp;&nbsp; F .text&nbsp; 00000098
_Z10xxvtcurposii<br>
<br>
D:\HOME\CC\LQ\AVR&gt;</code><br>
<h3><a name="simulation"></a>Simulation</h3>
<br>
Siehe <a href="../../../../WinAVR/doc/simulavr-0.1.2.1/html/index.html">../../../../WinAVR/doc/simulavr-0.1.2.1/html/index.html</a><br>
Dort sind gute und verst&auml;ndliche Beispiele.<br>
<br>
<h3><a name="sim_gui"></a>Simulation mit Benutzerf&uuml;hrung</h3>
In die erste DOS-BOX eingeben: <br>
<code>C:\HOME\CC\QQ\AVR\QQMAIN&gt;simulavr -d at90s8515 -g<br>
<br>
Simulating a at90s8515 device.<br>
<br>
MESSAGE: file ../../simulavr-0.1.2.1/src/decoder.c: line 3872:
generating opcode<br>
&nbsp;lookup_table<br>
MESSAGE: file ../../simulavr-0.1.2.1/src/main.c: line 413: Simulating
clock freq<br>
uency of 8000000 Hz<br>
Waiting on port 1212 for gdb client to connect...<br>
Connection opened by host 127.0.0.1, port 1358.<br>
Waiting on port 1212 for gdb client to connect...<br>
<br>
</code><br>
In eine zweite DOS-BOX eingeben: <span style="font-weight: bold;">avr-insight</span><br>
Dadurch wird ein Fenster ge&ouml;ffnet.<br>
<ul>
  <li>[Run] [Connect to target] Target: [GDB Server/TCP]&nbsp;
Hostname: [localhost] Port: [1212]. Muss dann anzeigen: "Successfully
connected"</li>
  <li>Lade die Datei "qqmain.elf"</li>
</ul>
<h3><a name="lib-avr_von_www"></a>Austauschen der Library gegen eine
neuere Version (von
http://savannah.nongnu.org)</h3>
Sichern von C:\WinAVR<br>
Herunterladen nach ~/www/download.savannah.gnu.org/avr-libc<br>
Auspacken der Library mit Linux (der tar in WinAVR kennt gz2 nicht) und
kopieren nach C:\WinAVR\avr-libc-1.4.5<br>
<br>
<span style="text-decoration: line-through;">In Windows :</span><br
 style="text-decoration: line-through;">
<span style="text-decoration: line-through;">c:</span><br
 style="text-decoration: line-through;">
<span style="text-decoration: line-through;">cd C:\WinAVR\avr-libc-1.4.5</span><br
 style="text-decoration: line-through;">
<span style="text-decoration: line-through;">sh</span><br
 style="text-decoration: line-through;">
<span style="text-decoration: line-through;">./configure
--build=`./config.guess` --host=avrc</span><br>
- <span style="font-weight: bold;">geht nicht</span>, vermutlich
fehlen mir hier viele tools (sollte vielleicht cygwin herunterladen und
installieren)<br>
<h3><a name="sieheauch"></a>Siehe auch</h3>
<ul>
  <li><a href="avrlin.htm">avrlin.htm</a> - ATMEL programmieren mit
Linux</li>
  <li><a href="avrstud.htm">avrstud.htm</a> - ATMEL programmieren in
C++ mit
AVR Studio mit Plugin AVRGCC</li>
  <li><a href="../../atmel/lib/float.htm">../../atmel/lib/float.htm</a>
-
Floating
point numbers (after IEEE)</li>
  <li><a href="avrlin.htm">avrlin.htm</a> - Komilieren in einem
Linux-System.</li>
  <li><a href="../winlin/winavr/00idx.htm">../winlin/winavr/00idx.htm</a>
- Die mitgelieferten utilities (shell, tar, cp ...)<br>
  </li>
  <li><a
 href="file:///C:%5CWinAVR%5Cdoc%5Cavr-libc%5Cavr-libc-user-manual-1.4.3.pdf">C:\WinAVR\doc\avr-libc\avr-libc-user-manual-1.4.3.pdf</a>
- Die
mitgelieferte Dokumentation</li>
  <li><a href="../../atmel/wikiwww.htm">../../atmel/wikiwww.htm</a> -
Link
collection AVR / ATMEL wikis<br>
  </li>
  <li><a href="../../atmel/www.htm">../../atmel/www.htm</a> - Link
collection
AVR / Atmel propritary pages<br>
  </li>
</ul>
<br>
<h3><a name="www"></a>WWW</h3>
<ul>
  <li><a href="https://savannah.nongnu.org">https://savannah.nongnu.org</a>
- Fehlermeldungen</li>
  <li><a href="https://savannah.nongnu.org/bugs/?group=avr-lib">https://savannah.nongnu.org/bugs/?group=avr-lib</a>c
- Bugs-Report </li>
  <li><a href="http://download.savannah.gnu.org/releases/avr-libc/">http://download.savannah.gnu.org/releases/avr-libc/</a>
- Download
new
library</li>
</ul>
</body>
</html>
