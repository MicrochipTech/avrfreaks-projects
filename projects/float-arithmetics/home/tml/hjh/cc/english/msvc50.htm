<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
</head>
<body>
<a href="topics.htm"> Topics</a> / <a href="00idx.htm"> Index</a>
<h2>The Compiler MS Visual C++ Version 5</h2>
<h3><a name=content></a> Content (automatic) </h3>
<ul>
<li><a href=#content>#content</a> :  Content (automatic) 
<li><a href=#installation>#installation</a> :  Installation
<li><a href=#new>#new</a> :  Creating a new workspace for a new main program
<li><a href=#includes>#includes</a> :  Include directories
<li><a href=#daoinst>#daoinst</a> :  Installation of DAO
<li><a href=#linker>#linker</a> : The linker error Symbol __endthreadex und __beginthreadex not resolved
<li><a href=#linker2>#linker2</a> :  The linker finds the symbols new and delete twice
<li><a href=#linker2>#linker2</a> : See also
<li><a href=#www>#www</a> : www
</ul>
<a name="installation"></a>
<h3> Installation</h3>
When installint the Version 5 compiler, then confirm all predefined
settings.
<br>
After installation add the include
direcory C:\HOME\CC\INCLUDE, where are <a href="../../person.htm">my</a>
header files.
<br>
Before linking internet applicatons, which use the socket library
wsock32.lib,
execute C:\HOME\CC\MDOS50.BAT. By this
drive K: will be substituted as K: =&gt; C:\PROGRA~1\DEVSTU~1
<a name="new"></a>
<h3> Creating a new workspace for a new main program</h3>
Main programs are usually in
C:\HOME\CC\UTIL or
C:\HOME\CC\HTMUTIL or
C:\HOME\CC\QQ
<br>
For programs which do<b> not use graphics</b> use the Menu [Datei]
[Neu] [Projekte]
<ul>
  <li> Select [Win32 Console Appplication] </li>
  <li> Select as "Pfad" C:\HOME\CC\UTIL\MDOS50 </li>
  <li> Enter as "Projektname" the name of the main programs file. e.g.
HEME </li>
  <li> Click Button [OK]</li>
</ul>
<br>
For programs which<b> do use graphics</b> use the Menu [Datei] [Neu]
[Projekte]
<ul>
  <li> Select [Win32 Appplication] </li>
  <li> Select as "Pfad" C:\HOME\CC\UTIL\MSVC50 </li>
  <li> Enter as "Projektname" the name of the main programs file. e.g.
GRA2 </li>
  <li> Click Button [OK]</li>
</ul>
This will create a subdirectory C:\HOME\CC\UTIL\MDOS50\HEME resp.
C:\HOME\CC\UTIL\MSVC50\GRA2 and in it the workspace file
and the subdirectories DEBUG and RELEASE.
<br>
Then add to this empty project [Projekt] [Dem Projekt
hinzuf&uuml;gen...]
the file heme.cpp
<br>
Then build the project. You will get a lot of undefined references
(externals)
<br>
Find the source file in C:\HOME\CC\LQ\*.cpp which satisfies the
references. The menu [Bearbeiten] [Suche in Dateien...] may help you
with this.
<br>
Before you run the program, select a working dorectory in [Projekt]
[Einstellungen...]
<a name="includes"></a>
<h3> Include directories</h3>
<pre>C:\Programme\DevStudio\VC\INCLUDE<br>C:\Programme\DevStudio\VC\MFC\include<br>C:\Programme\DevStudio\VC\ATL\include<br>c:\msdev\include<br>c:\msdev\mfc\include<br>C:\Programme\DevStudio\SharedIDE\bin\%include%<br>C:\HOME\CC\INCLUDE<br></pre>
required standard libraries are (from K:\VC\LIB)
<pre>wsock32.lib<br>libc.lib oldnames.lib kernel32.lib<br></pre>
and for mfc application koppsend :
<pre>copy kernel32.lib ..\lib<br>copy user32.lib  ..\lib<br>copy gdi32.lib  ..\lib<br>copy winspool.lib  ..\lib<br>copy comdlg32.lib  ..\lib<br>copy advapi32.lib  ..\lib<br>copy shell32.lib  ..\lib<br>copy ole32.lib  ..\lib<br>copy oleaut32.lib  ..\lib<br>copy uuid.lib  ..\lib<br>copy odbc32.lib  ..\lib<br>copy odbccp32.lib  ..\lib<br>copy wsock32.lib ..\lib<br><br>copy libc.lib  ..\lib<br>copy libcmt.lib  ..\lib<br><br>copy libcd.lib ..\lib<br>copy comctl32.lib ..\lib<br>copy OLDNAMES.lib ..\lib<br>copy WININET.LIB ..\lib<br>copy libcpmt.lib ..\lib<br><br></pre>
In [Projekt] [Einstellungen] [Linker] are :
<br>
kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib
advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib
odbccp32.lib wsock32.lib libcpmt.lib oldnames.lib comctl32.lib
wininet.lib libcd.lib
<p><a name="daoinst"></a></p>
<h3> Installation of DAO</h3>
<ul>
  <li> Execute CDROM:\daosdk\disk1\setup.exe </li>
  <li> Move files from
    <pre>c:<br>cd \Programme\devstudio\daosdk<br>copy include\*.h ..\vc\include<br>copy lib\*.lib ..\vc\lib<br></pre>
  </li>
</ul>
Requires for Samples\DAOREAD as well the installation of an ISAM
drivers as
<a name="linker"></a>
<h3>The linker error Symbol __endthreadex und __beginthreadex not
resolved</h3>
If this occurs then :
<ul>
  <li>show the work space. </li>
  <li>remove one of the source files </li>
  <li>undo this by Control Z </li>
  <li>Then press F7 - and be happy :-)) </li>
  <li> or define the two routines :
    <pre>extern "C" {<br>_CRTIMP unsigned long __cdecl _beginthreadex(void *p1, unsigned a,<br> unsigned (__stdcall *) (void *pj), void *p2, unsigned b, unsigned *pc)<br> {<br> return 0 ;<br> }<br><br>_CRTIMP void __cdecl _endthreadex(unsigned a)<br> {<br> return ;<br> }<br>  } ;<br></pre>
  </li>
</ul>
<a name="linker2"></a>
<h3> The linker finds the symbols new and delete twice</h3>
<pre>nafxcwd.lib(afxmem.obj) : error LNK2005: "void * __cdecl operator new(unsigned int)" (??2@YAPAXI@Z) bereits in LIBCD.lib(new.obj) definiert<br><br>nafxcwd.lib(afxmem.obj) : error LNK2005: "void __cdecl operator delete(void *)" (??3@YAXPAX@Z) bereits in LIBCD.lib(dbgdel.obj) definiert<br></pre>
<br>
Action: define an additional library in [Project] [Settings] [Linker]
[Object-/Library modules] : nafxcwd.lib
<br>
_MT,_AFX_NO_DEBUG_CRT<br>
<br>
<h3>See also</h3>
<br>
<h3><a name="www"></a>www</h3>
<a
 href="http://hubbard.engr.scu.edu/embedded/avr/msvc_make/msvc_make.html">
http://hubbard.engr.scu.edu/embedded/avr/msvc_make/msvc_make.html</a> -
Configuring Microsoft Visual C++ for use with an external compiler
</body>
</html>
