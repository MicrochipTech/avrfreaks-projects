Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
                              uart.o (__divmodhi4)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o (exit)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
                              main.o (__do_global_ctors)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_udivmodhi4.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o) (__udivmodhi4)
/usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_tablejump.o)
                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o) (__tablejump__)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
LOAD main.o
LOAD uart.o
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/libm.a
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x288
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
 .ctors         0x00000054        0x2 main.o
                0x00000056                __ctors_end = .
                0x00000056                __dtors_start = .
 *(.dtors)
                0x00000056                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000056        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
                0x00000056                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000056        0xc /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000062       0x16 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                0x00000062                __do_copy_data
 .init4         0x00000078       0x10 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                0x00000078                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 .init6         0x00000088       0x16 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
                0x00000088                __do_global_ctors
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000009e        0x8 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x000000a6        0x4 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
                0x000000a6                __vector_1
                0x000000a6                __vector_12
                0x000000a6                __bad_interrupt
                0x000000a6                __vector_6
                0x000000a6                __vector_3
                0x000000a6                __vector_11
                0x000000a6                __vector_13
                0x000000a6                __vector_17
                0x000000a6                __vector_19
                0x000000a6                __vector_7
                0x000000a6                __vector_5
                0x000000a6                __vector_4
                0x000000a6                __vector_9
                0x000000a6                __vector_2
                0x000000a6                __vector_15
                0x000000a6                __vector_8
                0x000000a6                __vector_14
                0x000000a6                __vector_10
                0x000000a6                __vector_16
                0x000000a6                __vector_18
                0x000000a6                __vector_20
 .text          0x000000aa       0x7e main.o
                0x000000cc                main
 .text          0x00000128      0x104 uart.o
                0x00000140                UART::put(char*)
                0x0000021a                UART::send(unsigned char)
                0x00000128                UART::UART()
                0x00000134                UART::UART()
                0x00000154                UART::put(int, unsigned char)
                0x00000222                UART::get()
 .text          0x0000022c        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
 .text          0x0000022c        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text          0x0000022c        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text          0x0000022c        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 .text          0x0000022c        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
 .text          0x0000022c        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000022c        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_tablejump.o)
                0x0000022c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000022c       0x26 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
                0x0000022c                __divmodhi4
                0x0000022c                _div
 .text.libgcc   0x00000252        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .text.libgcc   0x00000252        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000252        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000252        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
 .text.libgcc   0x00000252       0x28 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_udivmodhi4.o)
                0x00000252                __udivmodhi4
 .text.libgcc   0x0000027a        0xc /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_tablejump.o)
                0x0000027e                __tablejump__
                0x0000027a                __tablejump2__
                0x00000286                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000286        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                0x00000286                exit
                0x00000286                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000286        0x2 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 *(.fini0)
                0x00000288                _etext = .

.data           0x00800060       0x12 load address 0x00000288
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 main.o
 .data          0x00800060       0x11 uart.o
 .data          0x00800071        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
 .data          0x00800071        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .data          0x00800071        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .data          0x00800071        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 .data          0x00800071        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
 .data          0x00800071        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800071        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_tablejump.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800072                . = ALIGN (0x2)
 *fill*         0x00800071        0x1 00
                0x00800072                _edata = .
                0x00800072                PROVIDE (__data_end, .)

.bss            0x00800072        0x1 load address 0x0000029a
                0x00800072                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800072        0x0 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800072        0x1 main.o
                0x00800072                uart
 .bss           0x00800073        0x0 uart.o
 .bss           0x00800073        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
 .bss           0x00800073        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
 .bss           0x00800073        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
 .bss           0x00800073        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
 .bss           0x00800073        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
 .bss           0x00800073        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x00800073        0x0 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_tablejump.o)
 *(.bss*)
 *(COMMON)
                0x00800073                PROVIDE (__bss_end, .)
                0x00000288                __data_load_start = LOADADDR (.data)
                0x0000029a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800073        0x0
                0x00800073                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800073                PROVIDE (__noinit_end, .)
                0x00800073                _end = .
                0x00800073                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xe40
 *(.stab)
 .stab          0x00000000      0x378 /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
 .stab          0x00000378      0x4e0 main.o
                                0x4ec (size before relaxing)
 .stab          0x00000858      0x5e8 uart.o
                                0x5f4 (size before relaxing)

.stabstr        0x00000000      0xa4b
 *(.stabstr)
 .stabstr       0x00000000      0xa4b /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
UART::UART()                                      uart.o
UART::UART()                                      uart.o
                                                  main.o
UART::get()                                       uart.o
                                                  main.o
UART::put(char*)                                  uart.o
UART::put(int, unsigned char)                     uart.o
UART::send(unsigned char)                         uart.o
                                                  main.o
__bad_interrupt                                   /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__bss_end                                         /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
__ctors_end                                       /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
__ctors_start                                     /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
__data_end                                        /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
__divmodhi4                                       /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
                                                  uart.o
__do_clear_bss                                    /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_clear_bss.o)
                                                  uart.o
                                                  main.o
__do_copy_data                                    /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_copy_data.o)
                                                  uart.o
                                                  main.o
__do_global_ctors                                 /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
                                                  main.o
__heap_end                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__init                                            /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__stack                                           /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
                                                  main.o
__tablejump2__                                    /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_tablejump.o)
__tablejump__                                     /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_tablejump.o)
                                                  /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_ctors.o)
__udivmodhi4                                      /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_udivmodhi4.o)
                                                  /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
__vector_1                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_10                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_11                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_12                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_13                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_14                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_15                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_16                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_17                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_18                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_19                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_2                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_20                                       /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_3                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_4                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_5                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_6                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_7                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_8                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_9                                        /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vector_default                                  /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
__vectors                                         /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
_div                                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_divmodhi4.o)
_exit                                             /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
exit                                              /usr/lib/gcc/avr/4.2.2/avr5/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
main                                              main.o
                                                  /usr/lib/gcc/avr/4.2.2/../../../../avr/lib/avr5/crtm32.o
uart                                              main.o
