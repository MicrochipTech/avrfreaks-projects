; Led blinking program with delay changing
;

; Init
assign _t0 1 ; LED state
assign _t1 0 ; Delay duration
assign _t2 0 ; Increasing / decreasing information

label 0
	cmpjump _t2 1 1 0 ; If decreasing goto label 1 (decreasing function)
	
	incr _t1 ; increasing :: increase delay duration
	
	cmp _t1 85 _t3
	cmpjump _t3 0 2 0 ; If delay duration < 85 goto label 2 (led blinking)
	
	inv _t2 ; else set to decreasing
	jump 2 0 ; and jump to label 2 (led blinking)
	
	label 1 ; Label 1 (decreasing function)
		decr _t1 ; Decreases delay duration
		cmp _t1 0 _t3
		cmpjump _t3 0 2 0 ; If delay duration > 0 goto label 2 (led blinking)
		inv _t2 ; else set to increasing
		; and
		
	label 2 ; Blink led
		sint 1 ; Select user function number 1 (set LED)
		int _t0 ; Turn on/off (in base of t0) the LED
		inv _t0 ; Invert led state
		sint 0 ; Select user function number 0 (delay)
		int _t1 ; Delay of t1
	
	jump 0 0 ; Finally repeat all

exit ; Exit (never reached but mandatory)
