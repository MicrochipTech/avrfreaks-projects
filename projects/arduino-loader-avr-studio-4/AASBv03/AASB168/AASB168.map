
Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

Address of section .data set to 0x800100
Address of section .text set to 0x3800
LOAD bootloader.o

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00003800      0x582
 *(.vectors)
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00003800                . = ALIGN (0x2)
                0x00003800                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00003800        0x0 linker stubs
 *(.trampolines*)
                0x00003800                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00003800                __ctors_start = .
 *(.ctors)
                0x00003800                __ctors_end = .
                0x00003800                __dtors_start = .
 *(.dtors)
                0x00003800                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00003800       0x10 bootloader.o
                0x00003800                __jumpMain
 *(.init9)
 *(.text)
 .text          0x00003810      0x572 bootloader.o
                0x00003810                main
                0x00003d82                . = ALIGN (0x2)
 *(.text.*)
                0x00003d82                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x00003d82                _etext = .

.data           0x00800100        0x0 load address 0x00003d82
                0x00800100                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800100        0x0 bootloader.o
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800100                . = ALIGN (0x2)
                0x00800100                _edata = .
                0x00800100                PROVIDE (__data_end, .)

.bss            0x00800100        0x0
                0x00800100                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800100        0x0 bootloader.o
 *(.bss*)
 *(COMMON)
                0x00800100                PROVIDE (__bss_end, .)
                0x00003d82                __data_load_start = LOADADDR (.data)
                0x00003d82                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800100        0x0
                0x00800100                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800100                PROVIDE (__noinit_end, .)
                0x00800100                _end = .
                0x00800100                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0x28
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x28 bootloader.o

.debug_pubnames
                0x00000000       0x2a
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0x2a bootloader.o

.debug_info     0x00000000      0x42d
 *(.debug_info)
 .debug_info    0x00000000      0x42d bootloader.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x166
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x166 bootloader.o

.debug_line     0x00000000      0x671
 *(.debug_line)
 .debug_line    0x00000000      0x671 bootloader.o

.debug_frame    0x00000000       0x30
 *(.debug_frame)
 .debug_frame   0x00000000       0x30 bootloader.o

.debug_str      0x00000000      0x177
 *(.debug_str)
 .debug_str     0x00000000      0x177 bootloader.o
                                0x1b8 (size before relaxing)

.debug_loc      0x00000000      0x888
 *(.debug_loc)
 .debug_loc     0x00000000      0x888 bootloader.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(AASB168.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x00000000       0xb0
 .debug_ranges  0x00000000       0xb0 bootloader.o
