device {
	name = "ATtiny828"
	prog_size = 0x2000
	eeprom_size = 0x0100
	ram_size = 0x0200
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin, Power-on Reset, Brown-out Reset and Watchdog Reset
	INT0 = 0x01             ; External Interrupt Request 0
	INT1 = 0x02             ; External Interrupt Request 1
	PCINT0 = 0x03           ; Pin Change Interrupt Request 0
	PCINT1 = 0x04           ; Pin Change Interrupt Request 1
	PCINT2 = 0x05           ; Pin Change Interrupt Request 2
	PCINT3 = 0x06           ; Pin Change Interrupt Request 3
	WDT = 0x07              ; Watchdog Time-out Interrupt
	TIMER1_CAPT = 0x08      ; Timer/Counter1 Capture Event
	TIMER1_COMPA = 0x09     ; Timer/Counter1 Compare Match A
	TIMER1_COMPB = 0x0a     ; Timer/Counter1 Compare Match B
	TIMER1_OVF = 0x0b       ; Timer/Counter1 Overflow
	TIMER0_COMPA = 0x0c     ; Timer/Counter0 Compare Match A
	TIMER0_COMPB = 0x0d     ; Timer/Counter0 Compare Match B
	TIMER0_OVF = 0x0e       ; Timer/Counter0 Overflow
	SPI_STC = 0x0f          ; SPI Serial Transfer Complete
	USART_START = 0x10      ; USART, Start
	USART_RX = 0x11         ; USART Rx Complete
	USART_UDRE = 0x12       ; USART, Data Register Empty
	USART_TX = 0x13         ; USART Tx Complete
	ADC = 0x14              ; ADC Conversion Complete
	EE_READY = 0x15         ; EEPROM Ready
	ANALOG_COMP = 0x16      ; Analog Comparator
	TWI_SLAVE = 0x17        ; Two-wire Serial Interface
	SPM_Ready = 0x18        ; Store Program Memory Read
	QTRIP = 0x19            ; Touch Sensing
}

registers {
	PINA(0x00)              ; Port A Input Pins
	DDRA(0x01)              ; Data Direction Register, Port A
	PORTA(0x02)             ; Port A Data Register
	PUEA(0x03)              ; Pull-up Enable Control Register
	PINB(0x04)              ; Port B Input Pins
	DDRB(0x05)              ; Data Direction Register, Port B
	PORTB(0x06)             ; Port B Data Register
	PUEB(0x07)              ; Pull-up Enable Control Register
	PINC(0x08)              ; Port C Input Pins
	DDRC(0x09)              ; Data Direction Register, Port C
	PORTC(0x0a)             ; Port C Data Register
	PUEC(0x0b)              ; Pull-up Enable Control Register
	PIND(0x0c)              ; Port D Input Pins
	DDRD(0x0d)              ; Data Direction Register, Port D
	PORTD(0x0e)             ; Port D Data Register
	PUED(0x0f)              ; Pull-up Enable Control Register
	PHDE(0x14) {            ; Port High Drive Enable Register
		PHDEC = 2               ; Port C High Drive Enable
	}
	TIFR0(0x15) {           ; Timer/Counter0 Interrupt Flag register
		TOV0 = 0                ; Timer/Counter0 Overflow Flag
		OCF0A = 1               ; Timer/Counter0 Output Compare Flag 0A
		OCF0B = 2               ; Timer/Counter0 Output Compare Flag 0B
	}
	TIFR1(0x16) {           ; Timer/Counter Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		OCF1A = 1               ; Output Compare Flag 1A
		OCF1B = 2               ; Output Compare Flag 1B
		ICF1 = 5                ; Input Capture Flag 1
	}
	PCIFR(0x1b) {           ; Pin Change Interrupt Flag Register
		PCIF0 = 0               ; Pin Change Interrupt Flags bit 0
		PCIF1 = 1               ; Pin Change Interrupt Flags bit 1
		PCIF2 = 2               ; Pin Change Interrupt Flags bit 2
		PCIF3 = 3               ; Pin Change Interrupt Flags bit 3
	}
	EIFR(0x1c) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
	}
	EIMSK(0x1d) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request Enables bit 0
		INT1 = 1                ; External Interrupt Request Enables bit 1
	}
	GPIOR0(0x1e)            ; General Purpose I/O Register 0
	EECR(0x1f) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEPE = 1                ; EEPROM Write Enable
		EEMPE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEProm Ready Interrupt Enable
		EEPM0 = 4               ; EEPROM Programming Mode Bits bit 0
		EEPM1 = 5               ; EEPROM Programming Mode Bits bit 1
	}
	EEDR(0x20)              ; EEPROM Data Register
	EEAR(0x21)              ; EEPROM Read/Write Access
	GTCCR(0x23) {           ; General Timer/Counter Control Register
		PSRSYNC = 0             ; Prescaler Reset Timer/Counter1 and Timer/Counter0
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	TCCR0A(0x24) {          ; Timer/Counter  Control Register A
		WGM00 = 0               ; Waveform Generation Mode bit 0
		WGM01 = 1               ; Waveform Generation Mode bit 1
		COM0B0 = 4              ; Compare Output Mode, Fast PWm bit 0
		COM0B1 = 5              ; Compare Output Mode, Fast PWm bit 1
		COM0A0 = 6              ; Compare Output Mode, Phase Correct PWM Mode bit 0
		COM0A1 = 7              ; Compare Output Mode, Phase Correct PWM Mode bit 1
	}
	TCCR0B(0x25) {          ; Timer/Counter Control Register B
		CS00 = 0                ; Clock Select bit 0
		CS01 = 1                ; Clock Select bit 1
		CS02 = 2                ; Clock Select bit 2
		WGM02 = 3               ; 
		FOC0B = 6               ; Force Output Compare B
		FOC0A = 7               ; Force Output Compare A
	}
	TCNT0(0x26)             ; Timer/Counter0
	OCR0A(0x27)             ; Timer/Counter0 Output Compare Register
	OCR0B(0x28)             ; Timer/Counter0 Output Compare Register
	GPIOR1(0x2a)            ; General Purpose I/O Register 1
	GPIOR2(0x2b)            ; General Purpose I/O Register 2
	SPCR(0x2c) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x2d) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x2e)              ; SPI Data Register
	ACSRB(0x2f) {           ; Analog Comparator Control And Status Register B
		ACPMUX0 = 0             ; Analog Comparator Positive Input Multiplexer Bits 1:0 bit 0
		ACPMUX1 = 1             ; Analog Comparator Positive Input Multiplexer Bits 1:0 bit 1
		ACNMUX0 = 2             ; Analog Comparator Negative Input Multiplexer bit 0
		ACNMUX1 = 3             ; Analog Comparator Negative Input Multiplexer bit 1
		HLEV = 6                ; Hysteresis Level
		HSEL = 7                ; Hysteresis Select
	}
	ACSRA(0x30) {           ; Analog Comparator Control And Status Register A
		ACIS0 = 0               ; Analog Comparator Interrupt Mode Select bits bit 0
		ACIS1 = 1               ; Analog Comparator Interrupt Mode Select bits bit 1
		ACIC = 2                ; Analog Comparator Input Capture Enable
		ACIE = 3                ; Analog Comparator Interrupt Enable
		ACI = 4                 ; Analog Comparator Interrupt Flag
		ACO = 5                 ; Analog Compare Output
		ACPMUX2 = 6             ; Analog Comparator Positive Input Multiplexer Bit 2
		ACD = 7                 ; Analog Comparator Disable
	}
	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select Bits bit 0
		SM1 = 2                 ; Sleep Mode Select Bits bit 1
	}
	MCUSR(0x34) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		IVSEL = 1               ; Interrupt Vector Select
	}
	CCP(0x36)               ; Configuration Change Protection
	SPMCSR(0x37) {          ; Store Program Memory Control and Status Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		RWFLB = 3               ; Read/Write Fuse and Lock Bits
		RWWSRE = 4              ; Read-While-Write section read enable
		RSIG = 5                ; Read Device Signature Imprint Table
		RWWSB = 6               ; Read-While-Write Section Busy
		SPMIE = 7               ; SPM Interrupt Enable
	}
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	WDTCSR(0x60) {          ; Watchdog Timer Control and Status Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timer Interrupt Enable
		WDIF = 7                ; Watchdog Timer Interrupt Flag
	}
	CLKPR(0x61) {           ; Clock Prescale Register
		CLKPS0 = 0              ; Clock Prescaler Select Bits bit 0
		CLKPS1 = 1              ; Clock Prescaler Select Bits bit 1
		CLKPS2 = 2              ; Clock Prescaler Select Bits bit 2
		CLKPS3 = 3              ; Clock Prescaler Select Bits bit 3
	}
	PRR(0x64) {             ; Power Reduction Register
		PRADC = 0               ; Power Reduction ADC
		PRUSART0 = 1            ; Power Reduction USART 0
		PRSPI = 2               ; Power Reduction SPI
		PRTIM1 = 3              ; Power Reduction Timer/Counter1
		PRTIM0 = 5              ; Power Reduction Timer/Counter0
		PRTWI = 7               ; Power Reduction TWI
	}
	OSCCAL0(0x66)           ; Oscillator Calibration Register 8MHz
	OSCCAL1(0x67)           ; Oscillator Calibration Register 32kHz
	PCICR(0x68) {           ; Pin Change Interrupt Control Register
		PCIE0 = 0               ; Pin Change Interrupt Enables bit 0
		PCIE1 = 1               ; Pin Change Interrupt Enables bit 1
		PCIE2 = 2               ; Pin Change Interrupt Enables bit 2
		PCIE3 = 3               ; Pin Change Interrupt Enables bit 3
	}
	EICRA(0x69) {           ; External Interrupt Control Register
		ISC00 = 0               ; External Interrupt Sense Control 0 Bits bit 0
		ISC01 = 1               ; External Interrupt Sense Control 0 Bits bit 1
		ISC10 = 2               ; External Interrupt Sense Control 1 Bits bit 0
		ISC11 = 3               ; External Interrupt Sense Control 1 Bits bit 1
	}
	PCMSK0(0x6b) {          ; Pin Change Mask Register 0
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	PCMSK1(0x6c) {          ; Pin Change Mask Register 1
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	PCMSK2(0x6d) {          ; Pin Change Mask Register 2
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	TIMSK0(0x6e) {          ; Timer/Counter0 Interrupt Mask Register
		TOIE0 = 0               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0A = 1              ; Timer/Counter0 Output Compare Match A Interrupt Enable
		OCIE0B = 2              ; Timer/Counter0 Output Compare Match B Interrupt Enable
	}
	TIMSK1(0x6f) {          ; Timer/Counter Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		OCIE1A = 1              ; Timer/Counter1 Output CompareA Match Interrupt Enable
		OCIE1B = 2              ; Timer/Counter1 Output CompareB Match Interrupt Enable
		ICIE1 = 5               ; Timer/Counter1 Input Capture Interrupt Enable
	}
	PCMSK3(0x73) {          ; Pin Change Mask Register 3
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
	}
	ADC(0x78, 0x79)         ; ADC Data Register  Bytes
	ADCSRA(0x7a) {          ; The ADC Control and Status register
		ADPS0 = 0               ; ADC Prescaler Select Bits bit 0
		ADPS1 = 1               ; ADC Prescaler Select Bits bit 1
		ADPS2 = 2               ; ADC Prescaler Select Bits bit 2
		ADIE = 3                ; ADC Interrupt Enable
		ADIF = 4                ; ADC Interrupt Flag
		ADATE = 5               ; ADC Auto Trigger Enable
		ADSC = 6                ; ADC Start Conversion
		ADEN = 7                ; ADC Enable
	}
	ADCSRB(0x7b) {          ; ADC Control and Status Register B
		ADTS0 = 0               ; ADC Auto Trigger Sources bit 0
		ADTS1 = 1               ; ADC Auto Trigger Sources bit 1
		ADTS2 = 2               ; ADC Auto Trigger Sources bit 2
		ADLAR = 3               ; 
	}
	ADMUXA(0x7c) {          ; The ADC multiplexer Selection Register A
		MUX0 = 0                ; Analog Channel Selection Bits 4:0 bit 0
		MUX1 = 1                ; Analog Channel Selection Bits 4:0 bit 1
		MUX2 = 2                ; Analog Channel Selection Bits 4:0 bit 2
		MUX3 = 3                ; Analog Channel Selection Bits 4:0 bit 3
		MUX4 = 4                ; Analog Channel Selection Bits 4:0 bit 4
	}
	ADMUXB(0x7d) {          ; The ADC multiplexer Selection Register B
		MUX5 = 0                ; Analog Channel Selection Bit 5
		REFS = 5                ; Reference Selection Bit
	}
	DIDR0(0x7e) {           ; Digital Input Disable Register 0
		ADC0D = 0               ; ADC0 Digital input Disable
		ADC1D = 1               ; ADC1 Digital input Disable
		ADC2D = 2               ; ADC2 Digital input Disable
		ADC3D = 3               ; ADC3 Digital input Disable
		ADC4D = 4               ; ADC4 Digital input Disable
		ADC5D = 5               ; ADC5 Digital input Disable
		ADC6D = 6               ; ADC6 Digital input Disable
		ADC7D = 7               ; ADC7 Digital input Disable
	}
	DIDR1(0x7f) {           ; Digital Input Disable Register 1
		ADC8D = 0               ; ADC8 Digital input Disable
		ADC9D = 1               ; ADC9 Digital input Disable
		ADC10D = 2              ; ADC10 Digital input Disable
		ADC11D = 3              ; ADC11 Digital input Disable
		ADC12D = 4              ; ADC12 Digital input Disable
		ADC13D = 5              ; ADC13 Digital input Disable
		ADC14D = 6              ; ADC14 Digital input Disable
		ADC15D = 7              ; ADC15 Digital input Disable
	}
	TCCR1A(0x80) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Waveform Generation Mode bit 0
		WGM11 = 1               ; Waveform Generation Mode bit 1
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR1B(0x81) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Prescaler source of Timer/Counter 1 bit 0
		CS11 = 1                ; Prescaler source of Timer/Counter 1 bit 1
		CS12 = 2                ; Prescaler source of Timer/Counter 1 bit 2
		WGM10 = 3               ; Waveform Generation Mode bit 0
		WGM11 = 4               ; Waveform Generation Mode bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1C(0x82) {          ; Timer/Counter1 Control Register C
		FOC1B = 6               ; 
		FOC1A = 7               ; 
	}
	TCNT1(0x84, 0x85)       ; Timer/Counter1  Bytes
	ICR1(0x86, 0x87)        ; Timer/Counter1 Input Capture Register  Bytes
	OCR1A(0x88, 0x89)       ; Timer/Counter1 Output Compare Register  Bytes
	OCR1B(0x8a, 0x8b)       ; Timer/Counter1 Output Compare Register  Bytes
	TWSCRA(0xb8) {          ; TWI Slave Control Register A
		TWSME = 0               ; TWI Smart Mode Enable
		TWPME = 1               ; TWI Promiscuous Mode Enable
		TWSIE = 2               ; TWI Stop Interrupt Enable
		TWEN = 3                ; Two-Wire Interface Enable
		TWASIE = 4              ; TWI Address/Stop Interrupt Enable
		TWDIE = 5               ; TWI Data Interrupt Enable
		TWSHE = 7               ; TWI SDA Hold Time Enable
	}
	TWSCRB(0xb9) {          ; TWI Slave Control Register B
		TWCMD0 = 0              ; 
		TWCMD1 = 1              ; 
		TWAA = 2                ; TWI Acknowledge Action
		TWHNM = 3               ; TWI High Noise Mode
	}
	TWSSRA(0xba) {          ; TWI Slave Status Register A
		TWAS = 0                ; TWI Address or Stop
		TWDIR = 1               ; TWI Read/Write Direction
		TWBE = 2                ; TWI Bus Error
		TWC = 3                 ; TWI Collision
		TWRA = 4                ; TWI Receive Acknowledge
		TWCH = 5                ; TWI Clock Hold
		TWASIF = 6              ; TWI Address/Stop Interrupt Flag
		TWDIF = 7               ; TWI Data Interrupt Flag.
	}
	TWSAM(0xbb) {           ; TWI Slave Address Mask Register
		TWAE = 0                ; TWI Address Enable
		TWSAM0 = 1              ; TWI Address Mask Bits bit 0
		TWSAM1 = 2              ; TWI Address Mask Bits bit 1
		TWSAM2 = 3              ; TWI Address Mask Bits bit 2
		TWSAM3 = 4              ; TWI Address Mask Bits bit 3
		TWSAM4 = 5              ; TWI Address Mask Bits bit 4
		TWSAM5 = 6              ; TWI Address Mask Bits bit 5
		TWSAM6 = 7              ; TWI Address Mask Bits bit 6
	}
	TWSA(0xbc)              ; TWI Slave Address Register
	TWSD(0xbd) {            ; TWI Slave Data Register
		TWSD0 = 0               ; TWI slave data bit bit 0
		TWSD1 = 1               ; TWI slave data bit bit 1
		TWSD2 = 2               ; TWI slave data bit bit 2
		TWSD3 = 3               ; TWI slave data bit bit 3
		TWSD4 = 4               ; TWI slave data bit bit 4
		TWSD5 = 5               ; TWI slave data bit bit 5
		TWSD6 = 6               ; TWI slave data bit bit 6
		TWSD7 = 7               ; TWI slave data bit bit 7
	}
	UCSRA(0xc0) {           ; USART Control and Status Register A
		MPCM = 0                ; Multi-processor Communication Mode
		U2X = 1                 ; Double the USART transmission speed
		UPE = 2                 ; Parity Error
		DOR = 3                 ; Data overRun
		FE = 4                  ; Framing Error
		UDRE = 5                ; USART Data Register Empty
		TXC = 6                 ; USART Transmitt Complete
		RXC = 7                 ; USART Receive Complete
	}
	UCSRB(0xc1) {           ; USART Control and Status Register B
		TXB8 = 0                ; Transmit Data Bit 8
		RXB8 = 1                ; Receive Data Bit 8
		UCSZ2 = 2               ; Character Size
		TXEN = 3                ; Transmitter Enable
		RXEN = 4                ; Receiver Enable
		UDRIE = 5               ; USART Data register Empty Interrupt Enable
		TXCIE = 6               ; TX Complete Interrupt Enable
		RXCIE = 7               ; RX Complete Interrupt Enable
	}
	UCSRC(0xc2) {           ; USART Control and Status Register C
		UCPOL = 0               ; Clock Polarity
		UCSZ0 = 1               ; Character Size bit 0
		UCSZ1 = 2               ; Character Size bit 1
		USBS = 3                ; Stop Bit Select
		UPM0 = 4                ; Parity Mode Bits bit 0
		UPM1 = 5                ; Parity Mode Bits bit 1
		UMSEL0 = 6              ; USART Mode Select bit 0
		UMSEL1 = 7              ; USART Mode Select bit 1
	}
	UCSRD(0xc3) {           ; USART Control and Status Register D
		SFDE = 5                ; USART RX Start Frame Detection Enable
		RXS = 6                 ; USART RX Start Flag
		RXSIE = 7               ; USART RX Start Interrupt Enable
	}
	UBRR(0xc4, 0xc5)        ; USART Baud Rate Register  Bytes
	UDR(0xc6)               ; USART I/O Data Register
	DIDR2(0xde) {           ; Digital Input Disable Register 2
		ADC16D = 0              ; ADC16 Digital input Disable
		ADC17D = 1              ; ADC17 Digital input Disable
		ADC18D = 2              ; ADC18 Digital input Disable
		ADC19D = 3              ; ADC19 Digital input Disable
		ADC20D = 4              ; ADC20 Digital input Disable
		ADC21D = 5              ; ADC21 Digital input Disable
		ADC22D = 6              ; ADC22 Digital input Disable
		ADC23D = 7              ; ADC23 Digital input Disable
	}
	DIDR3(0xdf) {           ; Digital Input Disable Register 2
		ADC24D = 0              ; ADC24 Digital input Disable
		ADC25D = 1              ; ADC25 Digital input Disable
		ADC26D = 2              ; ADC26 Digital input Disable
		ADC27D = 3              ; ADC27 Digital input Disable
	}
	TOCPMCOE(0xe2) {        ; Timer Output Compare Pin Mux Channel Output Enable
		TOCC0OE = 0             ; Timer Output Compare Channel 0 Output Enable
		TOCC1OE = 1             ; Timer Output Compare Channel 1 Output Enable
		TOCC2OE = 2             ; Timer Output Compare Channel 2 Output Enable
		TOCC3OE = 3             ; Timer Output Compare Channel 3 Output Enable
		TOCC4OE = 4             ; Timer Output Compare Channel 4 Output Enable
		TOCC5OE = 5             ; Timer Output Compare Channel 5 Output Enable
		TOCC6OE = 6             ; Timer Output Compare Channel 6 Output Enable
		TOCC7OE = 7             ; Timer Output Compare Channel 7 Output Enable
	}
	TOCPMSA0(0xe8) {        ; Timer Output Compare Pin Mux Selection 0
		TOCC0S0 = 0             ; Timer Output Compare Channel 0 Selection Bits bit 0
		TOCC0S1 = 1             ; Timer Output Compare Channel 0 Selection Bits bit 1
		TOCC1S0 = 2             ; Timer Output Compare Channel 1 Selection Bits bit 0
		TOCC1S1 = 3             ; Timer Output Compare Channel 1 Selection Bits bit 1
		TOCC2S0 = 4             ; Timer Output Compare Channel 2 Selection Bits bit 0
		TOCC2S1 = 5             ; Timer Output Compare Channel 2 Selection Bits bit 1
		TOCC3S0 = 6             ; Timer Output Compare Channel 3 Selection Bits bit 0
		TOCC3S1 = 7             ; Timer Output Compare Channel 3 Selection Bits bit 1
	}
	TOCPMSA1(0xe9) {        ; Timer Output Compare Pin Mux Selection 1
		TOCC4S0 = 0             ; Timer Output Compare Channel 4 Selection Bits bit 0
		TOCC4S1 = 1             ; Timer Output Compare Channel 4 Selection Bits bit 1
		TOCC5S0 = 2             ; Timer Output Compare Channel 5 Selection Bits bit 0
		TOCC5S1 = 3             ; Timer Output Compare Channel 5 Selection Bits bit 1
		TOCC6S0 = 4             ; Timer Output Compare Channel 6 Selection Bits bit 0
		TOCC6S1 = 5             ; Timer Output Compare Channel 6 Selection Bits bit 1
		TOCC7S0 = 6             ; Timer Output Compare Channel 7 Selection Bits bit 0
		TOCC7S1 = 7             ; Timer Output Compare Channel 7 Selection Bits bit 1
	}
	OSCTCAL0A(0xf0)         ; Oscillator Temperature Calibration Register A
	OSCTCAL0B(0xf1)         ; Oscillator Temperature Calibration Register B
}

