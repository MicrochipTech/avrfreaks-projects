device {
	name = "ATtiny87"
	prog_size = 0x2000
	eeprom_size = 0x0200
	ram_size = 0x0200
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Reset, Power-on Reset and Watchdog Reset
	INT0 = 0x01             ; External Interrupt Request 0
	INT1 = 0x02             ; External Interrupt Request 1
	PCINT0 = 0x03           ; Pin Change Interrupt Request 0
	PCINT1 = 0x04           ; Pin Change Interrupt Request 1
	WDT = 0x05              ; Watchdog Time-Out Interrupt
	TIMER1_CAPT = 0x06      ; Timer/Counter1 Capture Event
	TIMER1_COMPA = 0x07     ; Timer/Counter1 Compare Match 1A
	TIMER1_COMPB = 0x08     ; Timer/Counter1 Compare Match 1B
	TIMER1_OVF = 0x09       ; Timer/Counter1 Overflow
	TIMER0_COMPA = 0x0a     ; Timer/Counter0 Compare Match 0A
	TIMER0_OVF = 0x0b       ; Timer/Counter0 Overflow
	LIN_TC = 0x0c           ; LIN Transfer Complete
	LIN_ERR = 0x0d          ; LIN Error
	SPI_STC = 0x0e          ; SPI Serial Transfer Complete
	ADC = 0x0f              ; ADC Conversion Complete
	EE_RDY = 0x10           ; EEPROM Ready
	ANA_COMP = 0x11         ; Analog Comparator
	USI_START = 0x12        ; USI Start Condition Detection
	USI_OVF = 0x13          ; USI Counter Overflow
}

registers {
	PINA(0x00)              ; Port A Input Pins
	DDRA(0x01)              ; Port A Data Direction Register
	PORTA(0x02)             ; Port A Data Register
	PINB(0x03)              ; Port B Input Pins
	DDRB(0x04)              ; Port B Data Direction Register
	PORTB(0x05)             ; Port B Data Register
	PORTCR(0x12) {          ; Port Control Register
		PUDA = 0                ; 
		PUDB = 1                ; 
		BBMA = 4                ; 
		BBMB = 5                ; 
	}
	TIFR0(0x15) {           ; Timer/Counter0 Interrupt Flag Register
		TOV0 = 0                ; Timer/Counter0 Overflow Flag
		OCF0A = 1               ; Output Compare Flag 0A
	}
	TIFR1(0x16) {           ; Timer/Counter1 Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		OCF1A = 1               ; Timer/Counter1 Output Compare A Match Flag
		OCF1B = 2               ; Timer/Counter1 Output Compare B Match Flag
		ICF1 = 5                ; Timer/Counter1 Input Capture Flag
	}
	PCIFR(0x1b) {           ; Pin Change Interrupt Flag Register
		PCIF0 = 0               ; Pin Change Interrupt Flags bit 0
		PCIF1 = 1               ; Pin Change Interrupt Flags bit 1
	}
	EIFR(0x1c) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
	}
	EIMSK(0x1d) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request 1 Enable bit 0
		INT1 = 1                ; External Interrupt Request 1 Enable bit 1
	}
	GPIOR0(0x1e)            ; General purpose register 0
	EECR(0x1f) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEPE = 1                ; EEPROM Write Enable
		EEMPE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEPROM Ready Interrupt Enable
		EEPM0 = 4               ; EEPROM Programming Mode Bits bit 0
		EEPM1 = 5               ; EEPROM Programming Mode Bits bit 1
	}
	EEDR(0x20)              ; EEPROM Data Register
	EEAR(0x21, 0x22)        ; EEPROM Address Register  Bytes
	GTCCR(0x23) {           ; General Timer Counter Control register
		PSR1 = 0                ; Prescaler Reset Synchronous 16-bit Timer/Counter1
		PSR0 = 1                ; Prescaler Reset Asynchronous 8-bit Timer/Counter0
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	TCCR0A(0x25) {          ; Timer/Counter0 Control Register A
		WGM00 = 0               ; Waveform Genration Mode bits bit 0
		WGM01 = 1               ; Waveform Genration Mode bits bit 1
		COM0A0 = 6              ; Compare Output Mode bits bit 0
		COM0A1 = 7              ; Compare Output Mode bits bit 1
	}
	TCCR0B(0x26) {          ; Timer/Counter0 Control Register B
		CS00 = 0                ; Clock Select bits bit 0
		CS01 = 1                ; Clock Select bits bit 1
		CS02 = 2                ; Clock Select bits bit 2
		FOC0A = 7               ; Force Output Compare A
	}
	TCNT0(0x27)             ; Timer/Counter0
	OCR0A(0x28)             ; Timer/Counter0 Output Compare Register A
	GPIOR1(0x2a)            ; General Purpose register 1
	GPIOR2(0x2b)            ; General Purpose IO register 2
	SPCR(0x2c) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x2d) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x2e)              ; SPI Data Register
	ACSR(0x30) {            ; Analog Comparator Control And Status Register
		ACIS0 = 0               ; Analog Comparator Interrupt Mode Select bits bit 0
		ACIS1 = 1               ; Analog Comparator Interrupt Mode Select bits bit 1
		ACIC = 2                ; Analog Comparator Input Capture Enable
		ACIE = 3                ; Analog Comparator Interrupt Enable
		ACI = 4                 ; Analog Comparator Interrupt Flag
		ACO = 5                 ; Analog Compare Output
		ACIRS = 6               ; Analog Comparator Internal Reference Select
		ACD = 7                 ; Analog Comparator Disable
	}
	DWDR(0x31)              ; DebugWire data register
	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select Bits bit 0
		SM1 = 2                 ; Sleep Mode Select Bits bit 1
	}
	MCUSR(0x34) {           ; MCU Status register
		PORF = 0                ; Power-On Reset Flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		PUD = 4                 ; Pull-up Disable
		BODSE = 5               ; BOD Sleep Enable
		BODS = 6                ; BOD Sleep
	}
	SPMCSR(0x37) {          ; Store Program Memory Control Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		RFLB = 3                ; Read Fuse and Lock Bits
		CTPB = 4                ; Clear Temporary Page Buffer
		SIGRD = 5               ; Signature Row Read
		RWWSB = 6               ; Read While Write Section Busy
	}
	SP(0x3d, 0x3e)          ; Stack Pointer  Bytes
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	WDTCR(0x60) {           ; Watchdog Timer Control Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timeout Interrupt Enable
		WDIF = 7                ; Watchdog Timeout Interrupt Flag
	}
	CLKPR(0x61) {           ; Clock Prescale Register
		CLKPS0 = 0              ; Clock Prescaler Select Bits bit 0
		CLKPS1 = 1              ; Clock Prescaler Select Bits bit 1
		CLKPS2 = 2              ; Clock Prescaler Select Bits bit 2
		CLKPS3 = 3              ; Clock Prescaler Select Bits bit 3
		CLKPCE = 7              ; Clock Prescaler Change Enable
	}
	CLKCSR(0x62) {          ; Clock Control & Status Register
		CLKC0 = 0               ; Clock Control bits bit 0
		CLKC1 = 1               ; Clock Control bits bit 1
		CLKC2 = 2               ; Clock Control bits bit 2
		CLKC3 = 3               ; Clock Control bits bit 3
		CLKRDY = 4              ; Clock Ready Flag
		CLKCCE = 7              ; Clock Control Change Enable
	}
	CLKSELR(0x63) {         ; Clock Selection Register
		CSEL0 = 0               ; Clock Source Select bit 3 - CKSEL3 fuse substitution bit 0
		CSEL1 = 1               ; Clock Source Select bit 3 - CKSEL3 fuse substitution bit 1
		CSEL2 = 2               ; Clock Source Select bit 3 - CKSEL3 fuse substitution bit 2
		CSEL3 = 3               ; Clock Source Select bit 3 - CKSEL3 fuse substitution bit 3
		CSUT0 = 4               ; Clock Start-up Time bit 1 - SUT1 fuse substitution bit 0
		CSUT1 = 5               ; Clock Start-up Time bit 1 - SUT1 fuse substitution bit 1
		COUT = 6                ; Clock Out - CKOUT fuse substitution
	}
	PRR(0x64) {             ; Power Reduction Register
		PRADC = 0               ; Power Reduction ADC
		PRUSI = 1               ; Power Reduction USI
		PRTIM0 = 2              ; Power Reduction Timer/Counter0
		PRTIM1 = 3              ; Power Reduction Timer/Counter1
		PRSPI = 4               ; Power Reduction SPI
		PRLIN = 5               ; Power Reduction LINUART
	}
	OSCCAL(0x66) {          ; Oscillator Calibration Register
		OSCCAL0 = 0             ; Oscillator Calibration  bit 0
		OSCCAL1 = 1             ; Oscillator Calibration  bit 1
		OSCCAL2 = 2             ; Oscillator Calibration  bit 2
		OSCCAL3 = 3             ; Oscillator Calibration  bit 3
		OSCCAL4 = 4             ; Oscillator Calibration  bit 4
		OSCCAL5 = 5             ; Oscillator Calibration  bit 5
		OSCCAL6 = 6             ; Oscillator Calibration  bit 6
		OSCCAL7 = 7             ; Oscillator Calibration  bit 7
	}
	PCICR(0x68) {           ; Pin Change Interrupt Control Register
		PCIE0 = 0               ; Pin Change Interrupt Enable  on any PCINT14..8 pin bit 0
		PCIE1 = 1               ; Pin Change Interrupt Enable  on any PCINT14..8 pin bit 1
	}
	EICRA(0x69) {           ; External Interrupt Control Register
		ISC00 = 0               ; External Interrupt Sense Control 0 Bits bit 0
		ISC01 = 1               ; External Interrupt Sense Control 0 Bits bit 1
		ISC10 = 2               ; External Interrupt Sense Control 1 Bits bit 0
		ISC11 = 3               ; External Interrupt Sense Control 1 Bits bit 1
	}
	PCMSK0(0x6b) {          ; Pin Change Mask Register 0
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	PCMSK1(0x6c) {          ; Pin Change Mask Register 1
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	TIMSK0(0x6e) {          ; Timer/Counter0 Interrupt Mask register
		TOIE0 = 0               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0A = 1              ; Timer/Counter0 Output Compare Match A Interrupt Enable
	}
	TIMSK1(0x6f) {          ; Timer/Counter1 Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		OCIE1A = 1              ; Timer/Counter1 Output Compare A Match Interrupt Enable
		OCIE1B = 2              ; Timer/Counter1 Output Compare B Match Interrupt Enable
		ICIE1 = 5               ; Timer/Counter1 Input Capture Interrupt Enable
	}
	AMISCR(0x77) {          ; Analog Miscellaneous Control Register (Shared with CURRENT_SOURCE IO_MODULE)
		ISRCEN = 0              ; Current Source Enable
		XREFEN = 1              ; Internal Voltage Reference Output Enable
		AREFEN = 2              ; External Voltage Reference Input Enable
	}
	ADC(0x78, 0x79)         ; ADC Data Register  Bytes
	ADCSRA(0x7a) {          ; The ADC Control and Status register A
		ADPS0 = 0               ; ADC  Prescaler Select Bits bit 0
		ADPS1 = 1               ; ADC  Prescaler Select Bits bit 1
		ADPS2 = 2               ; ADC  Prescaler Select Bits bit 2
		ADIE = 3                ; ADC Interrupt Enable
		ADIF = 4                ; ADC Interrupt Flag
		ADATE = 5               ; ADC  Auto Trigger Enable
		ADSC = 6                ; ADC Start Conversion
		ADEN = 7                ; ADC Enable
	}
	ADCSRB(0x7b) {          ; The ADC Control and Status register B (Shared with ANALOG_COMPARATOR IO_MODULE)
		ADTS0 = 0               ; ADC Auto Trigger Source bits bit 0
		ADTS1 = 1               ; ADC Auto Trigger Source bits bit 1
		ADTS2 = 2               ; ADC Auto Trigger Source bits bit 2
		ACIR0 = 4               ; Analog Comparator Internal Voltage Reference Select Bits bit 0
		ACIR1 = 5               ; Analog Comparator Internal Voltage Reference Select Bits bit 1
		ACME = 6                ; Analog Comparator Multiplexer Enable
		BIN = 7                 ; Bipolar Input Mode
	}
	ADMUX(0x7c) {           ; The ADC multiplexer Selection Register
		MUX0 = 0                ; Analog Channel and Gain Selection Bits bit 0
		MUX1 = 1                ; Analog Channel and Gain Selection Bits bit 1
		MUX2 = 2                ; Analog Channel and Gain Selection Bits bit 2
		MUX3 = 3                ; Analog Channel and Gain Selection Bits bit 3
		MUX4 = 4                ; Analog Channel and Gain Selection Bits bit 4
		ADLAR = 5               ; Left Adjust Result
		REFS0 = 6               ; Reference Selection Bits bit 0
		REFS1 = 7               ; Reference Selection Bits bit 1
	}
	DIDR0(0x7e) {           ; Digital Input Disable Register 0
		ADC0D = 0               ; 
		ADC1D = 1               ; 
		ADC2D = 2               ; 
		ADC3D = 3               ; 
		ADC4D = 4               ; 
		ADC5D = 5               ; 
		ADC6D = 6               ; 
		ADC7D = 7               ; 
	}
	DIDR1(0x7f) {           ; Digital Input Disable Register 1
		ADC8D = 4               ; 
		ADC9D = 5               ; 
		ADC10D = 6              ; 
	}
	TCCR1A(0x80) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Pulse Width Modulator Select Bits bit 0
		WGM11 = 1               ; Pulse Width Modulator Select Bits bit 1
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR1B(0x81) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Timer/Counter1 Clock Select bits bit 0
		CS11 = 1                ; Timer/Counter1 Clock Select bits bit 1
		CS12 = 2                ; Timer/Counter1 Clock Select bits bit 2
		WGM10 = 3               ; Waveform Generation Mode Bits bit 0
		WGM11 = 4               ; Waveform Generation Mode Bits bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1C(0x82) {          ; Timer/Counter1 Control Register C
		FOC1B = 6               ; Timer/Counter1 Force Output Compare for Channel B
		FOC1A = 7               ; Timer/Counter1 Force Output Compare for Channel A
	}
	TCCR1D(0x83) {          ; Timer/Counter1 Control Register D
		OC1AU = 0               ; Timer/Counter1 Output Compare U-pin Enable for Channel A
		OC1AV = 1               ; Timer/Counter1 Output Compare V-pin Enable for Channel A
		OC1AW = 2               ; Timer/Counter1 Output Compare W-pin Enable for Channel A
		OC1AX = 3               ; Timer/Counter1 Output Compare X-pin Enable for Channel A
		OC1BU = 4               ; Timer/Counter1 Output Compare U-pin Enable for Channel B
		OC1BV = 5               ; Timer/Counter1 Output Compare V-pin Enable for Channel B
		OC1BW = 6               ; Timer/Counter1 Output Compare W-pin Enable for Channel B
		OC1BX = 7               ; Timer/Counter1 Output Compare X-pin Enable for Channel B
	}
	TCNT1(0x84, 0x85)       ; Timer/Counter1  Bytes
	ICR1(0x86, 0x87)        ; Timer/Counter1 Input Capture Register  Bytes
	OCR1A(0x88, 0x89)       ; Timer/Counter1 Output Compare Register A  Bytes
	OCR1B(0x8a, 0x8b)       ; Timer/Counter1 Output Compare Register B  Bytes
	ASSR(0xb6) {            ; Asynchronous Status Register
		TCR0BUB = 0             ; Timer/Counter0 Control Register B Update Busy
		TCR0AUB = 1             ; Timer/Counter0 Control Register A Update Busy
		OCR0AUB = 3             ; Output Compare Register 0A  Update Busy
		TCN0UB = 4              ; Timer/Counter0 Update Busy
		AS0 = 5                 ; Asynchronous Timer/Counter0
		EXCLK = 6               ; Enable External Clock Input
	}
	USICR(0xb8) {           ; USI Control Register
		USITC = 0               ; Toggle Clock Port Pin
		USICLK = 1              ; Clock Strobe
		USICS0 = 2              ; USI Clock Source Select Bits bit 0
		USICS1 = 3              ; USI Clock Source Select Bits bit 1
		USIWM0 = 4              ; USI Wire Mode Bits bit 0
		USIWM1 = 5              ; USI Wire Mode Bits bit 1
		USIOIE = 6              ; Counter Overflow Interrupt Enable
		USISIE = 7              ; Start Condition Interrupt Enable
	}
	USISR(0xb9) {           ; USI Status Register
		USICNT0 = 0             ; USI Counter Value Bits bit 0
		USICNT1 = 1             ; USI Counter Value Bits bit 1
		USICNT2 = 2             ; USI Counter Value Bits bit 2
		USICNT3 = 3             ; USI Counter Value Bits bit 3
		USIDC = 4               ; Data Output Collision
		USIPF = 5               ; Stop Condition Flag
		USIOIF = 6              ; Counter Overflow Interrupt Flag
		USISIF = 7              ; Start Condition Interrupt Flag
	}
	USIDR(0xba)             ; USI Data Register
	USIBR(0xbb)             ; USI Buffer Register
	USIPP(0xbc)             ; USI Pin Position
	LINCR(0xc8) {           ; LIN Control Register
		LCMD0 = 0               ; LIN Command and Mode bits bit 0
		LCMD1 = 1               ; LIN Command and Mode bits bit 1
		LCMD2 = 2               ; LIN Command and Mode bits bit 2
		LENA = 3                ; LIN or UART Enable
		LCONF0 = 4              ; LIN Configuration bits bit 0
		LCONF1 = 5              ; LIN Configuration bits bit 1
		LIN13 = 6               ; LIN Standard
		LSWRES = 7              ; Software Reset
	}
	LINSIR(0xc9) {          ; LIN Status and Interrupt Register
		LRXOK = 0               ; Receive Performed Interrupt
		LTXOK = 1               ; Transmit Performed Interrupt
		LIDOK = 2               ; Identifier Interrupt
		LERR = 3                ; Error Interrupt
		LBUSY = 4               ; Busy Signal
		LIDST0 = 5              ; Identifier Status bits bit 0
		LIDST1 = 6              ; Identifier Status bits bit 1
		LIDST2 = 7              ; Identifier Status bits bit 2
	}
	LINENIR(0xca) {         ; LIN Enable Interrupt Register
		LENRXOK = 0             ; Enable Receive Performed Interrupt
		LENTXOK = 1             ; Enable Transmit Performed Interrupt
		LENIDOK = 2             ; Enable Identifier Interrupt
		LENERR = 3              ; Enable Error Interrupt
	}
	LINERR(0xcb) {          ; LIN Error Register
		LBERR = 0               ; Bit Error Flag
		LCERR = 1               ; Checksum Error Flag
		LPERR = 2               ; Parity Error Flag
		LSERR = 3               ; Synchronization Error Flag
		LFERR = 4               ; Framing Error Flag
		LOVERR = 5              ; Overrun Error Flag
		LTOERR = 6              ; Frame Time Out Error Flag
		LABORT = 7              ; Abort Flag
	}
	LINBTR(0xcc) {          ; LIN Bit Timing Register
		LBT0 = 0                ; LIN Bit Timing bits bit 0
		LBT1 = 1                ; LIN Bit Timing bits bit 1
		LBT2 = 2                ; LIN Bit Timing bits bit 2
		LBT3 = 3                ; LIN Bit Timing bits bit 3
		LBT4 = 4                ; LIN Bit Timing bits bit 4
		LBT5 = 5                ; LIN Bit Timing bits bit 5
		LDISR = 7               ; Disable Bit Timing Resynchronization
	}
	LINBRRL(0xcd) {         ; LIN Baud Rate Low Register
		LDIV0 = 0               ; 
		LDIV1 = 1               ; 
		LDIV2 = 2               ; 
		LDIV3 = 3               ; 
		LDIV4 = 4               ; 
		LDIV5 = 5               ; 
		LDIV6 = 6               ; 
		LDIV7 = 7               ; 
	}
	LINBRRH(0xce) {         ; LIN Baud Rate High Register
		LDIV0 = 0               ; 
		LDIV1 = 1               ; 
		LDIV2 = 2               ; 
		LDIV3 = 3               ; 
	}
	LINDLR(0xcf) {          ; LIN Data Length Register
		LRXDL0 = 0              ; LIN Receive Data Length bits bit 0
		LRXDL1 = 1              ; LIN Receive Data Length bits bit 1
		LRXDL2 = 2              ; LIN Receive Data Length bits bit 2
		LRXDL3 = 3              ; LIN Receive Data Length bits bit 3
		LTXDL0 = 4              ; LIN Transmit Data Length bits bit 0
		LTXDL1 = 5              ; LIN Transmit Data Length bits bit 1
		LTXDL2 = 6              ; LIN Transmit Data Length bits bit 2
		LTXDL3 = 7              ; LIN Transmit Data Length bits bit 3
	}
	LINIDR(0xd0) {          ; LIN Identifier Register
		LID0 = 0                ; Identifier bit 5 or Data Length bits bit 0
		LID1 = 1                ; Identifier bit 5 or Data Length bits bit 1
		LID2 = 2                ; Identifier bit 5 or Data Length bits bit 2
		LID3 = 3                ; Identifier bit 5 or Data Length bits bit 3
		LID4 = 4                ; Identifier bit 5 or Data Length bits bit 4
		LID5 = 5                ; Identifier bit 5 or Data Length bits bit 5
		LP0 = 6                 ; Parity bits bit 0
		LP1 = 7                 ; Parity bits bit 1
	}
	LINSEL(0xd1) {          ; LIN Data Buffer Selection Register
		LINDX0 = 0              ; FIFO LIN Data Buffer Index bits bit 0
		LINDX1 = 1              ; FIFO LIN Data Buffer Index bits bit 1
		LINDX2 = 2              ; FIFO LIN Data Buffer Index bits bit 2
		LAINC = 3               ; Auto Increment of Data Buffer Index (Active Low)
	}
	LINDAT(0xd2) {          ; LIN Data Register
		LDATA0 = 0              ; 
		LDATA1 = 1              ; 
		LDATA2 = 2              ; 
		LDATA3 = 3              ; 
		LDATA4 = 4              ; 
		LDATA5 = 5              ; 
		LDATA6 = 6              ; 
		LDATA7 = 7              ; 
	}
}

