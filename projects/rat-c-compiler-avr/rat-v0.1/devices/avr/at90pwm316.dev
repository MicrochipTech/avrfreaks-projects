device {
	name = "AT90PWM316"
	prog_size = 0x4000
	eeprom_size = 0x0200
	ram_size = 0x0400
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin, Power-on Reset, Brown-out Reset, Watchdog Reset and JTAG AVR Reset
	PSC2_CAPT = 0x01        ; PSC2 Capture Event
	PSC2_EC = 0x02          ; PSC2 End Cycle
	PSC1_CAPT = 0x03        ; PSC1 Capture Event
	PSC1_EC = 0x04          ; PSC1 End Cycle
	PSC0_CAPT = 0x05        ; PSC0 Capture Event
	PSC0_EC = 0x06          ; PSC0 End Cycle
	ANALOG_COMP_0 = 0x07    ; Analog Comparator 0
	ANALOG_COMP_1 = 0x08    ; Analog Comparator 1
	ANALOG_COMP_2 = 0x09    ; Analog Comparator 2
	INT0 = 0x0a             ; External Interrupt Request 0
	TIMER1_CAPT = 0x0b      ; Timer/Counter1 Capture Event
	TIMER1_COMPA = 0x0c     ; Timer/Counter1 Compare Match A
	TIMER1_COMPB = 0x0d     ; Timer/Counter Compare Match B
	RESERVED15 = 0x0e       ; 
	TIMER1_OVF = 0x0f       ; Timer/Counter1 Overflow
	TIMER0_COMP_A = 0x10    ; Timer/Counter0 Compare Match A
	TIMER0_OVF = 0x11       ; Timer/Counter0 Overflow
	ADC = 0x12              ; ADC Conversion Complete
	INT1 = 0x13             ; External Interrupt Request 1
	SPI_STC = 0x14          ; SPI Serial Transfer Complete
	USART_RX = 0x15         ; USART, Rx Complete
	USART_UDRE = 0x16       ; USART Data Register Empty
	USART_TX = 0x17         ; USART, Tx Complete
	INT2 = 0x18             ; External Interrupt Request 2
	WDT = 0x19              ; Watchdog Timeout Interrupt
	EE_READY = 0x1a         ; EEPROM Ready
	TIMER0_COMPB = 0x1b     ; Timer Counter 0 Compare Match B
	INT3 = 0x1c             ; External Interrupt Request 3
	RESERVED30 = 0x1d       ; 
	RESERVED31 = 0x1e       ; 
	SPM_READY = 0x1f        ; Store Program Memory Read
}

registers {
	PINB(0x03)              ; Port B Input Pins
	DDRB(0x04)              ; Port B Data Direction Register
	PORTB(0x05)             ; Port B Data Register
	PINC(0x06)              ; Port C Input Pins
	DDRC(0x07)              ; Port C Data Direction Register
	PORTC(0x08)             ; Port C Data Register
	PIND(0x09)              ; Port D Input Pins
	DDRD(0x0a)              ; Port D Data Direction Register
	PORTD(0x0b)             ; Port D Data Register
	PINE(0x0c)              ; Port E Input Pins
	DDRE(0x0d)              ; Port E Data Direction Register
	PORTE(0x0e)             ; Port E Data Register
	TIFR0(0x15) {           ; Timer/Counter0 Interrupt Flag register
		TOV0 = 0                ; Timer/Counter0 Overflow Flag
		OCF0A = 1               ; Timer/Counter0 Output Compare Flag 0A
		OCF0B = 2               ; Timer/Counter0 Output Compare Flag 0B
	}
	TIFR1(0x16) {           ; Timer/Counter Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		OCF1A = 1               ; Output Compare Flag 1A
		OCF1B = 2               ; Output Compare Flag 1B
		ICF1 = 5                ; Input Capture Flag 1
	}
	GPIOR1(0x19) {          ; General Purpose IO Register 1
		GPIOR0 = 0              ; General Purpose IO Register 1 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 1 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 1 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 1 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 1 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 1 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 1 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 1 bis bit 7
	}
	GPIOR2(0x1a) {          ; General Purpose IO Register 2
		GPIOR0 = 0              ; General Purpose IO Register 2 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 2 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 2 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 2 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 2 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 2 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 2 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 2 bis bit 7
	}
	GPIOR3(0x1b) {          ; General Purpose IO Register 3
		GPIOR0 = 0              ; General Purpose IO Register 3 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 3 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 3 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 3 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 3 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 3 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 3 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 3 bis bit 7
	}
	EIFR(0x1c) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
		INTF2 = 2               ; External Interrupt Flags bit 2
		INTF3 = 3               ; External Interrupt Flags bit 3
	}
	EIMSK(0x1d) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request 3 Enable bit 0
		INT1 = 1                ; External Interrupt Request 3 Enable bit 1
		INT2 = 2                ; External Interrupt Request 3 Enable bit 2
		INT3 = 3                ; External Interrupt Request 3 Enable bit 3
	}
	GPIOR0(0x1e) {          ; General Purpose IO Register 0
		GPIOR00 = 0             ; General Purpose IO Register 0 bit 0
		GPIOR01 = 1             ; General Purpose IO Register 0 bit 1
		GPIOR02 = 2             ; General Purpose IO Register 0 bit 2
		GPIOR03 = 3             ; General Purpose IO Register 0 bit 3
		GPIOR04 = 4             ; General Purpose IO Register 0 bit 4
		GPIOR05 = 5             ; General Purpose IO Register 0 bit 5
		GPIOR06 = 6             ; General Purpose IO Register 0 bit 6
		GPIOR07 = 7             ; General Purpose IO Register 0 bit 7
	}
	EECR(0x1f) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEWE = 1                ; EEPROM Write Enable
		EEMWE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEPROM Ready Interrupt Enable
	}
	EEDR(0x20) {            ; EEPROM Data Register
		EEDR0 = 0               ; EEPROM Data Bits bit 0
		EEDR1 = 1               ; EEPROM Data Bits bit 1
		EEDR2 = 2               ; EEPROM Data Bits bit 2
		EEDR3 = 3               ; EEPROM Data Bits bit 3
		EEDR4 = 4               ; EEPROM Data Bits bit 4
		EEDR5 = 5               ; EEPROM Data Bits bit 5
		EEDR6 = 6               ; EEPROM Data Bits bit 6
		EEDR7 = 7               ; EEPROM Data Bits bit 7
	}
	EEAR(0x21, 0x22) {      ; EEPROM Read/Write Access Bytes
		EEAR0 = 0               ; EEPROM Address bytes bit 0
		EEAR1 = 1               ; EEPROM Address bytes bit 1
		EEAR2 = 2               ; EEPROM Address bytes bit 2
		EEAR3 = 3               ; EEPROM Address bytes bit 3
		EEAR4 = 4               ; EEPROM Address bytes bit 4
		EEAR5 = 5               ; EEPROM Address bytes bit 5
		EEAR6 = 6               ; EEPROM Address bytes bit 6
		EEAR7 = 7               ; EEPROM Address bytes bit 7
		EEAR8 = 8               ; EEPROM Address bytes bit 8
		EEAR9 = 9               ; EEPROM Address bytes bit 9
		EEAR10 = 10             ; EEPROM Address bytes bit 10
		EEAR11 = 11             ; EEPROM Address bytes bit 11
	}
	GTCCR(0x23) {           ; General Timer/Counter Control Register
		PSR10 = 0               ; Prescaler Reset Timer/Counter1 and Timer/Counter0
		PSRSYNC = 0             ; Prescaler Reset Timer/Counter1 and Timer/Counter0
		ICPSEL1 = 6             ; Timer1 Input Capture Selection Bit
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	TCCR0A(0x24) {          ; Timer/Counter  Control Register A
		WGM00 = 0               ; Waveform Generation Mode bit 0
		WGM01 = 1               ; Waveform Generation Mode bit 1
		COM0B0 = 4              ; Compare Output Mode, Fast PWm bit 0
		COM0B1 = 5              ; Compare Output Mode, Fast PWm bit 1
		COM0A0 = 6              ; Compare Output Mode, Phase Correct PWM Mode bit 0
		COM0A1 = 7              ; Compare Output Mode, Phase Correct PWM Mode bit 1
	}
	TCCR0B(0x25) {          ; Timer/Counter Control Register B
		CS00 = 0                ; Clock Select bit 0
		CS01 = 1                ; Clock Select bit 1
		CS02 = 2                ; Clock Select bit 2
		WGM02 = 3               ; 
		FOC0B = 6               ; Force Output Compare B
		FOC0A = 7               ; Force Output Compare A
	}
	TCNT0(0x26) {           ; Timer/Counter0
		TCNT00 = 0              ; Timer Counter 0 value bit 0
		TCNT01 = 1              ; Timer Counter 0 value bit 1
		TCNT02 = 2              ; Timer Counter 0 value bit 2
		TCNT03 = 3              ; Timer Counter 0 value bit 3
		TCNT04 = 4              ; Timer Counter 0 value bit 4
		TCNT05 = 5              ; Timer Counter 0 value bit 5
		TCNT06 = 6              ; Timer Counter 0 value bit 6
		TCNT07 = 7              ; Timer Counter 0 value bit 7
	}
	OCR0A(0x27) {           ; Timer/Counter0 Output Compare Register
		OCR0A0 = 0              ; Output Compare A value bit 0
		OCR0A1 = 1              ; Output Compare A value bit 1
		OCR0A2 = 2              ; Output Compare A value bit 2
		OCR0A3 = 3              ; Output Compare A value bit 3
		OCR0A4 = 4              ; Output Compare A value bit 4
		OCR0A5 = 5              ; Output Compare A value bit 5
		OCR0A6 = 6              ; Output Compare A value bit 6
		OCR0A7 = 7              ; Output Compare A value bit 7
	}
	OCR0B(0x28) {           ; Timer/Counter0 Output Compare Register
		OCR0B0 = 0              ; Output Compare B value bit 0
		OCR0B1 = 1              ; Output Compare B value bit 1
		OCR0B2 = 2              ; Output Compare B value bit 2
		OCR0B3 = 3              ; Output Compare B value bit 3
		OCR0B4 = 4              ; Output Compare B value bit 4
		OCR0B5 = 5              ; Output Compare B value bit 5
		OCR0B6 = 6              ; Output Compare B value bit 6
		OCR0B7 = 7              ; Output Compare B value bit 7
	}
	PLLCSR(0x29) {          ; PLL Control And Status Register
		PLOCK = 0               ; PLL Lock Detector
		PLLE = 1                ; PLL Enable
		PLLF = 2                ; PLL Factor
	}
	SPCR(0x2c) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x2d) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x2e) {            ; SPI Data Register
		SPD0 = 0                ; SPI Data bit 0
		SPD1 = 1                ; SPI Data bit 1
		SPD2 = 2                ; SPI Data bit 2
		SPD3 = 3                ; SPI Data bit 3
		SPD4 = 4                ; SPI Data bit 4
		SPD5 = 5                ; SPI Data bit 5
		SPD6 = 6                ; SPI Data bit 6
		SPD7 = 7                ; SPI Data bit 7
	}
	ACSR(0x30) {            ; Analog Comparator Status Register
		AC0O = 0                ; Analog Comparator 0 Output Bit
		AC1O = 1                ; Analog Comparator 1 Output Bit
		AC2O = 2                ; Analog Comparator 2 Output Bit
		AC0IF = 4               ; Analog Comparator 0 Interrupt Flag Bit
		AC1IF = 5               ; Analog Comparator 1  Interrupt Flag Bit
		AC2IF = 6               ; Analog Comparator 2 Interrupt Flag Bit
		ACCKDIV = 7             ; Analog Comparator Clock Divider
	}
	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select bits bit 0
		SM1 = 2                 ; Sleep Mode Select bits bit 1
		SM2 = 3                 ; Sleep Mode Select bits bit 2
	}
	MCUSR(0x34) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		IVCE = 0                ; Interrupt Vector Change Enable
		IVSEL = 1               ; Interrupt Vector Select
		PUD = 4                 ; Pull-up disable
		SPIPS = 7               ; SPI Pin Select
	}
	SPMCSR(0x37) {          ; Store Program Memory Control Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		BLBSET = 3              ; Boot Lock Bit Set
		RWWSRE = 4              ; Read While Write section read enable
		RWWSB = 6               ; Read While Write Section Busy
		SPMIE = 7               ; SPM Interrupt Enable
	}
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	WDTCSR(0x60) {          ; Watchdog Timer Control Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timeout Interrupt Enable
		WDIF = 7                ; Watchdog Timeout Interrupt Flag
	}
	CLKPR(0x61) {           ; 
		CLKPS0 = 0              ; 
		CLKPS1 = 1              ; 
		CLKPS2 = 2              ; 
		CLKPS3 = 3              ; 
		CLKPCE = 7              ; 
	}
	PRR(0x64) {             ; Power Reduction Register
		PRADC = 0               ; Power Reduction ADC
		PRUSART0 = 1            ; Power Reduction USART
		PRSPI = 2               ; Power Reduction Serial Peripheral Interface
		PRTIM0 = 3              ; Power Reduction Timer/Counter0
		PRTIM1 = 4              ; Power Reduction Timer/Counter1
		PRPSC0 = 5              ; Power Reduction PSC0
		PRPSC1 = 6              ; Power Reduction PSC1
		PRPSC2 = 7              ; Power Reduction PSC2
	}
	OSCCAL(0x66) {          ; Oscillator Calibration Value
		OSCCAL0 = 0             ; Oscillator Calibration  bit 0
		OSCCAL1 = 1             ; Oscillator Calibration  bit 1
		OSCCAL2 = 2             ; Oscillator Calibration  bit 2
		OSCCAL3 = 3             ; Oscillator Calibration  bit 3
		OSCCAL4 = 4             ; Oscillator Calibration  bit 4
		OSCCAL5 = 5             ; Oscillator Calibration  bit 5
		OSCCAL6 = 6             ; Oscillator Calibration  bit 6
		OSCCAL7 = 7             ; Oscillator Calibration  bit 7
	}
	EICRA(0x69) {           ; External Interrupt Control Register A
		ISC00 = 0               ; External Interrupt Sense Control Bit bit 0
		ISC01 = 1               ; External Interrupt Sense Control Bit bit 1
		ISC10 = 2               ; External Interrupt Sense Control Bit bit 0
		ISC11 = 3               ; External Interrupt Sense Control Bit bit 1
		ISC20 = 4               ; External Interrupt Sense Control Bit bit 0
		ISC21 = 5               ; External Interrupt Sense Control Bit bit 1
		ISC30 = 6               ; External Interrupt Sense Control Bit bit 0
		ISC31 = 7               ; External Interrupt Sense Control Bit bit 1
	}
	TIMSK0(0x6e) {          ; Timer/Counter0 Interrupt Mask Register
		TOIE0 = 0               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0A = 1              ; Timer/Counter0 Output Compare Match A Interrupt Enable
		OCIE0B = 2              ; Timer/Counter0 Output Compare Match B Interrupt Enable
	}
	TIMSK1(0x6f) {          ; Timer/Counter Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		OCIE1A = 1              ; Timer/Counter1 Output CompareA Match Interrupt Enable
		OCIE1B = 2              ; Timer/Counter1 Output CompareB Match Interrupt Enable
		ICIE1 = 5               ; Timer/Counter1 Input Capture Interrupt Enable
	}
	AMP0CSR(0x76) {         ; 
		AMP0TS0 = 0             ; 
		AMP0TS1 = 1             ; 
		AMP0G0 = 4              ; 
		AMP0G1 = 5              ; 
		AMP0IS = 6              ; 
		AMP0EN = 7              ; 
	}
	AMP1CSR(0x77) {         ; 
		AMP1TS0 = 0             ; 
		AMP1TS1 = 1             ; 
		AMP1G0 = 4              ; 
		AMP1G1 = 5              ; 
		AMP1IS = 6              ; 
		AMP1EN = 7              ; 
	}
	ADC(0x78, 0x79)         ; ADC Data Register  Bytes
	ADCSRA(0x7a) {          ; The ADC Control and Status register
		ADPS0 = 0               ; ADC  Prescaler Select Bits bit 0
		ADPS1 = 1               ; ADC  Prescaler Select Bits bit 1
		ADPS2 = 2               ; ADC  Prescaler Select Bits bit 2
		ADIE = 3                ; ADC Interrupt Enable
		ADIF = 4                ; ADC Interrupt Flag
		ADATE = 5               ; ADC Auto Trigger Enable
		ADSC = 6                ; ADC Start Conversion
		ADEN = 7                ; ADC Enable
	}
	ADCSRB(0x7b) {          ; ADC Control and Status Register B
		ADTS0 = 0               ; ADC Auto Trigger Source Selection 0
		ADTS1 = 1               ; ADC Auto Trigger Source Selection 1
		ADTS2 = 2               ; ADC Auto Trigger Source Selection 2
		ADTS3 = 3               ; ADC Auto Trigger Source Selection 3
		ADHSM = 7               ; ADC High Speed Mode
	}
	ADMUX(0x7c) {           ; The ADC multiplexer Selection Register
		MUX0 = 0                ; Analog Channel and Gain Selection Bits bit 0
		MUX1 = 1                ; Analog Channel and Gain Selection Bits bit 1
		MUX2 = 2                ; Analog Channel and Gain Selection Bits bit 2
		MUX3 = 3                ; Analog Channel and Gain Selection Bits bit 3
		ADLAR = 5               ; Left Adjust Result
		REFS0 = 6               ; Reference Selection Bits bit 0
		REFS1 = 7               ; Reference Selection Bits bit 1
	}
	DIDR0(0x7e) {           ; Digital Input Disable Register 0
		ADC0D = 0               ; 
		ADC1D = 1               ; 
		ADC2D = 2               ; 
		ADC3D = 3               ; 
		ADC4D = 4               ; 
		ADC5D = 5               ; 
		ADC6D = 6               ; 
		ADC7D = 7               ; 
	}
	DIDR1(0x7f) {           ; Digital Input Disable Register 1
		ADC8D = 0               ; 
		ADC9D = 1               ; 
		ADC10D = 2              ; 
		AMP0ND = 3              ; 
		AMP0PD = 4              ; 
		ACMP0D = 5              ; 
	}
	TCCR1A(0x80) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Waveform Generation Mode bit 0
		WGM11 = 1               ; Waveform Generation Mode bit 1
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR1B(0x81) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Prescaler source of Timer/Counter 1 bit 0
		CS11 = 1                ; Prescaler source of Timer/Counter 1 bit 1
		CS12 = 2                ; Prescaler source of Timer/Counter 1 bit 2
		WGM10 = 3               ; Waveform Generation Mode bit 0
		WGM11 = 4               ; Waveform Generation Mode bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1C(0x82) {          ; Timer/Counter1 Control Register C
		FOC1B = 6               ; 
		FOC1A = 7               ; 
	}
	TCNT1(0x84, 0x85) {     ; Timer/Counter1 Bytes
		TCNT10 = 0              ; Timer/Counter1 bit 0
		TCNT11 = 1              ; Timer/Counter1 bit 1
		TCNT12 = 2              ; Timer/Counter1 bit 2
		TCNT13 = 3              ; Timer/Counter1 bit 3
		TCNT14 = 4              ; Timer/Counter1 bit 4
		TCNT15 = 5              ; Timer/Counter1 bit 5
		TCNT16 = 6              ; Timer/Counter1 bit 6
		TCNT17 = 7              ; Timer/Counter1 bit 7
		TCNT18 = 8              ; Timer/Counter1 bit 8
		TCNT19 = 9              ; Timer/Counter1 bit 9
		TCNT110 = 10            ; Timer/Counter1 bit 10
		TCNT111 = 11            ; Timer/Counter1 bit 11
		TCNT112 = 12            ; Timer/Counter1 bit 12
		TCNT113 = 13            ; Timer/Counter1 bit 13
		TCNT114 = 14            ; Timer/Counter1 bit 14
		TCNT115 = 15            ; Timer/Counter1 bit 15
	}
	ICR1(0x86, 0x87)        ; Timer/Counter1 Input Capture Register  Bytes
	OCR1A(0x88, 0x89) {     ; Timer/Counter1 Output Compare Register Bytes
		OCR1A0 = 0              ; Timer/Counter1 Output Compare A Register bit 0
		OCR1A1 = 1              ; Timer/Counter1 Output Compare A Register bit 1
		OCR1A2 = 2              ; Timer/Counter1 Output Compare A Register bit 2
		OCR1A3 = 3              ; Timer/Counter1 Output Compare A Register bit 3
		OCR1A4 = 4              ; Timer/Counter1 Output Compare A Register bit 4
		OCR1A5 = 5              ; Timer/Counter1 Output Compare A Register bit 5
		OCR1A6 = 6              ; Timer/Counter1 Output Compare A Register bit 6
		OCR1A7 = 7              ; Timer/Counter1 Output Compare A Register bit 7
		OCR1A8 = 8              ; Timer/Counter1 Output Compare A Register bit 8
		OCR1A9 = 9              ; Timer/Counter1 Output Compare A Register bit 9
		OCR1A10 = 10            ; Timer/Counter1 Output Compare A Register bit 10
		OCR1A11 = 11            ; Timer/Counter1 Output Compare A Register bit 11
		OCR1A12 = 12            ; Timer/Counter1 Output Compare A Register bit 12
		OCR1A13 = 13            ; Timer/Counter1 Output Compare A Register bit 13
		OCR1A14 = 14            ; Timer/Counter1 Output Compare A Register bit 14
		OCR1A15 = 15            ; Timer/Counter1 Output Compare A Register bit 15
	}
	OCR1B(0x8a, 0x8b) {     ; Timer/Counter1 Output Compare Register Bytes
		OCR1B0 = 0              ; Timer/Counter1 Output Compare B Register bit 0
		OCR1B1 = 1              ; Timer/Counter1 Output Compare B Register bit 1
		OCR1B2 = 2              ; Timer/Counter1 Output Compare B Register bit 2
		OCR1B3 = 3              ; Timer/Counter1 Output Compare B Register bit 3
		OCR1B4 = 4              ; Timer/Counter1 Output Compare B Register bit 4
		OCR1B5 = 5              ; Timer/Counter1 Output Compare B Register bit 5
		OCR1B6 = 6              ; Timer/Counter1 Output Compare B Register bit 6
		OCR1B7 = 7              ; Timer/Counter1 Output Compare B Register bit 7
		OCR1B8 = 8              ; Timer/Counter1 Output Compare B Register bit 8
		OCR1B9 = 9              ; Timer/Counter1 Output Compare B Register bit 9
		OCR1B10 = 10            ; Timer/Counter1 Output Compare B Register bit 10
		OCR1B11 = 11            ; Timer/Counter1 Output Compare B Register bit 11
		OCR1B12 = 12            ; Timer/Counter1 Output Compare B Register bit 12
		OCR1B13 = 13            ; Timer/Counter1 Output Compare B Register bit 13
		OCR1B14 = 14            ; Timer/Counter1 Output Compare B Register bit 14
		OCR1B15 = 15            ; Timer/Counter1 Output Compare B Register bit 15
	}
	PIFR0(0xa0) {           ; PSC0 Interrupt Flag Register
		PEOP0 = 0               ; End of PSC0 Interrupt
		PRN00 = 1               ; Ramp Number bit 0
		PRN01 = 2               ; Ramp Number bit 1
		PEV0A = 3               ; External Event A Interrupt
		PEV0B = 4               ; External Event B Interrupt
		PSEI0 = 5               ; PSC 0 Synchro Error Interrupt
		POAC0A = 6              ; PSC 0 Output A Activity
		POAC0B = 7              ; PSC 0 Output A Activity
	}
	PIM0(0xa1) {            ; PSC0 Interrupt Mask Register
		PEOPE0 = 0              ; End of Cycle Interrupt Enable
		PEVE0A = 3              ; External Event A Interrupt Enable
		PEVE0B = 4              ; External Event B Interrupt Enable
		PSEIE0 = 5              ; PSC 0 Synchro Error Interrupt Enable
	}
	PIFR1(0xa2) {           ; PSC1 Interrupt Flag Register
		PEOP1 = 0               ; End of PSC1 Interrupt
		PRN10 = 1               ; Ramp Number bit 0
		PRN11 = 2               ; Ramp Number bit 1
		PEV1A = 3               ; External Event A Interrupt
		PEV1B = 4               ; External Event B Interrupt
		PSEI1 = 5               ; PSC 1 Synchro Error Interrupt
		POAC1A = 6              ; PSC 1 Output A Activity
		POAC1B = 7              ; PSC 1 Output B Activity
	}
	PIM1(0xa3) {            ; PSC1 Interrupt Mask Register
		PEOPE1 = 0              ; End of Cycle Interrupt Enable
		PEVE1A = 3              ; External Event A Interrupt Enable
		PEVE1B = 4              ; External Event B Interrupt Enable
		PSEIE1 = 5              ; PSC 1 Synchro Error Interrupt Enable
	}
	PIFR2(0xa4) {           ; PSC2 Interrupt Flag Register
		PEOP2 = 0               ; End of PSC2 Interrupt
		PRN20 = 1               ; Ramp Number bit 0
		PRN21 = 2               ; Ramp Number bit 1
		PEV2A = 3               ; External Event A Interrupt
		PEV2B = 4               ; External Event B Interrupt
		PSEI2 = 5               ; PSC 2 Synchro Error Interrupt
		POAC2A = 6              ; PSC 2 Output A Activity
		POAC2B = 7              ; PSC 2 Output A Activity
	}
	PIM2(0xa5) {            ; PSC2 Interrupt Mask Register
		PEOPE2 = 0              ; End of Cycle Interrupt Enable
		PEVE2A = 3              ; External Event A Interrupt Enable
		PEVE2B = 4              ; External Event B Interrupt Enable
		PSEIE2 = 5              ; PSC 2 Synchro Error Interrupt Enable
	}
	DACON(0xaa) {           ; DAC Control Register
		DAEN = 0                ; DAC Enable Bit
		DAOE = 1                ; DAC Output Enable
		DALA = 2                ; DAC Left Adjust
		DATS0 = 4               ; DAC Trigger Selection Bits bit 0
		DATS1 = 5               ; DAC Trigger Selection Bits bit 1
		DATS2 = 6               ; DAC Trigger Selection Bits bit 2
		DAATE = 7               ; DAC Auto Trigger Enable Bit
	}
	DAC(0xab, 0xac) {       ; DAC Data Register Bytes
		DAC0 = 0                ; DAC Data Register Bits bit 0
		DAC1 = 1                ; DAC Data Register Bits bit 1
		DAC2 = 2                ; DAC Data Register Bits bit 2
		DAC3 = 3                ; DAC Data Register Bits bit 3
		DAC4 = 4                ; DAC Data Register Bits bit 4
		DAC5 = 5                ; DAC Data Register Bits bit 5
		DAC6 = 6                ; DAC Data Register Bits bit 6
		DAC7 = 7                ; DAC Data Register Bits bit 7
		DAC8 = 8                ; DAC Data Register Bits bit 8
		DAC9 = 9                ; DAC Data Register Bits bit 9
		DAC10 = 10              ; DAC Data Register Bits bit 10
		DAC11 = 11              ; DAC Data Register Bits bit 11
		DAC12 = 12              ; DAC Data Register Bits bit 12
		DAC13 = 13              ; DAC Data Register Bits bit 13
		DAC14 = 14              ; DAC Data Register Bits bit 14
		DAC15 = 15              ; DAC Data Register Bits bit 15
	}
	AC0CON(0xad) {          ; Analog Comparator 0 Control Register
		AC0M0 = 0               ; Analog Comparator 0 Multiplexer Register bit 0
		AC0M1 = 1               ; Analog Comparator 0 Multiplexer Register bit 1
		AC0M2 = 2               ; Analog Comparator 0 Multiplexer Register bit 2
		AC0IS0 = 4              ; Analog Comparator 0  Interrupt Select Bit bit 0
		AC0IS1 = 5              ; Analog Comparator 0  Interrupt Select Bit bit 1
		AC0IE = 6               ; Analog Comparator 0 Interrupt Enable Bit
		AC0EN = 7               ; Analog Comparator 0 Enable Bit
	}
	AC1CON(0xae) {          ; Analog Comparator 1 Control Register
		AC1M0 = 0               ; Analog Comparator 1 Multiplexer Register bit 0
		AC1M1 = 1               ; Analog Comparator 1 Multiplexer Register bit 1
		AC1M2 = 2               ; Analog Comparator 1 Multiplexer Register bit 2
		AC1ICE = 3              ; Analog Comparator 1 Interrupt Capture Enable Bit
		AC1IS0 = 4              ; Analog Comparator 1  Interrupt Select Bit bit 0
		AC1IS1 = 5              ; Analog Comparator 1  Interrupt Select Bit bit 1
		AC1IE = 6               ; Analog Comparator 1 Interrupt Enable Bit
		AC1EN = 7               ; Analog Comparator 1 Enable Bit
	}
	AC2CON(0xaf) {          ; Analog Comparator 2 Control Register
		AC2M0 = 0               ; Analog Comparator 2 Multiplexer Register bit 0
		AC2M1 = 1               ; Analog Comparator 2 Multiplexer Register bit 1
		AC2M2 = 2               ; Analog Comparator 2 Multiplexer Register bit 2
		AC2IS0 = 4              ; Analog Comparator 2  Interrupt Select Bit bit 0
		AC2IS1 = 5              ; Analog Comparator 2  Interrupt Select Bit bit 1
		AC2IE = 6               ; Analog Comparator 2 Interrupt Enable Bit
		AC2EN = 7               ; Analog Comparator 2 Enable Bit
	}
	UCSRA(0xc0) {           ; USART Control and Status register A
		MPCM = 0                ; Multi-processor Communication Mode
		U2X = 1                 ; Double USART Transmission Bit
		UPE = 2                 ; USART Parity Error
		DOR = 3                 ; Data Overrun
		FE = 4                  ; Framing Error
		UDRE = 5                ; USART Data Register Empty
		TXC = 6                 ; USART Transmitt Complete
		RXC = 7                 ; USART Receive Complete
	}
	UCSRB(0xc1) {           ; USART Control an Status register B
		TXB8 = 0                ; Transmit Data Bit 8
		RXB8 = 1                ; Receive Data Bit 8
		UCSZ2 = 2               ; Character Size
		TXEN = 3                ; Transmitter Enable
		RXEN = 4                ; Receiver Enable
		UDRIE = 5               ; USART Data Register Empty Interrupt Enable
		TXCIE = 6               ; TX Complete Interrupt Enable
		RXCIE = 7               ; RX Complete Interrupt Enable
	}
	UCSRC(0xc2) {           ; USART Control an Status register C
		UCPOL = 0               ; Clock Polarity
		UCSZ0 = 1               ; Character Size Bits bit 0
		UCSZ1 = 2               ; Character Size Bits bit 1
		USBS = 3                ; Stop Bit Select
		UPM0 = 4                ; Parity Mode Bits bit 0
		UPM1 = 5                ; Parity Mode Bits bit 1
		UMSEL0 = 6              ; USART Mode Select
	}
	UBRRL(0xc4) {           ; USART Baud Rate Register Low Byte
		UBRR0 = 0               ; USART Baud Rate Register bits bit 0
		UBRR1 = 1               ; USART Baud Rate Register bits bit 1
		UBRR2 = 2               ; USART Baud Rate Register bits bit 2
		UBRR3 = 3               ; USART Baud Rate Register bits bit 3
		UBRR4 = 4               ; USART Baud Rate Register bits bit 4
		UBRR5 = 5               ; USART Baud Rate Register bits bit 5
		UBRR6 = 6               ; USART Baud Rate Register bits bit 6
		UBRR7 = 7               ; USART Baud Rate Register bits bit 7
	}
	UBRRH(0xc5) {           ; USART Baud Rate Register High Byte
		UBRR0 = 0               ; USART Baud Rate Register Bits bit 0
		UBRR1 = 1               ; USART Baud Rate Register Bits bit 1
		UBRR2 = 2               ; USART Baud Rate Register Bits bit 2
		UBRR3 = 3               ; USART Baud Rate Register Bits bit 3
	}
	UDR(0xc6)               ; USART I/O Data Register
	EUCSRA(0xc8) {          ; EUSART Control and Status Register A
		URxS0 = 0               ; EUSART Control and Status Register A Bits bit 0
		URxS1 = 1               ; EUSART Control and Status Register A Bits bit 1
		URxS2 = 2               ; EUSART Control and Status Register A Bits bit 2
		URxS3 = 3               ; EUSART Control and Status Register A Bits bit 3
		UTxS0 = 4               ; EUSART Control and Status Register A Bits bit 0
		UTxS1 = 5               ; EUSART Control and Status Register A Bits bit 1
		UTxS2 = 6               ; EUSART Control and Status Register A Bits bit 2
		UTxS3 = 7               ; EUSART Control and Status Register A Bits bit 3
	}
	EUCSRB(0xc9) {          ; EUSART Control Register B
		BODR = 0                ; Order Bit
		EMCH = 1                ; Manchester Mode Bit
		EUSBS = 3               ; EUSBS Enable Bit
		EUSART = 4              ; EUSART Enable Bit
	}
	EUCSRC(0xca) {          ; EUSART Status Register C
		STP0 = 0                ; Stop Bits bit 0
		STP1 = 1                ; Stop Bits bit 1
		F1617 = 2               ; F1617 Bit
		FEM = 3                 ; Frame Error Manchester Bit
	}
	MUBRRL(0xcc) {          ; Manchester Receiver Baud Rate Register Low Byte
		MUBRR0 = 0              ; Manchester Receiver Baud Rate Register Bits bit 0
		MUBRR1 = 1              ; Manchester Receiver Baud Rate Register Bits bit 1
		MUBRR2 = 2              ; Manchester Receiver Baud Rate Register Bits bit 2
		MUBRR3 = 3              ; Manchester Receiver Baud Rate Register Bits bit 3
		MUBRR4 = 4              ; Manchester Receiver Baud Rate Register Bits bit 4
		MUBRR5 = 5              ; Manchester Receiver Baud Rate Register Bits bit 5
		MUBRR6 = 6              ; Manchester Receiver Baud Rate Register Bits bit 6
		MUBRR7 = 7              ; Manchester Receiver Baud Rate Register Bits bit 7
	}
	MUBRRH(0xcd) {          ; Manchester Receiver Baud Rate Register High Byte
		MUBRR0 = 0              ; Manchester Receiver Baud Rate Register Bits bit 0
		MUBRR1 = 1              ; Manchester Receiver Baud Rate Register Bits bit 1
		MUBRR2 = 2              ; Manchester Receiver Baud Rate Register Bits bit 2
		MUBRR3 = 3              ; Manchester Receiver Baud Rate Register Bits bit 3
		MUBRR4 = 4              ; Manchester Receiver Baud Rate Register Bits bit 4
		MUBRR5 = 5              ; Manchester Receiver Baud Rate Register Bits bit 5
		MUBRR6 = 6              ; Manchester Receiver Baud Rate Register Bits bit 6
		MUBRR7 = 7              ; Manchester Receiver Baud Rate Register Bits bit 7
	}
	EUDR(0xce)              ; EUSART I/O Data Register
	PSOC0(0xd0) {           ; PSC0 Synchro and Output Configuration
		POEN0A = 0              ; PSCOUT00 Output Enable
		POEN0B = 2              ; PSCOUT01 Output Enable
		PSYNC00 = 4             ; Synchronization Out for ADC Selection bit 0
		PSYNC01 = 5             ; Synchronization Out for ADC Selection bit 1
	}
	OCR0SA(0xd2, 0xd3)      ; Output Compare SA Register 
	OCR0RA(0xd4, 0xd5)      ; Output Compare RA Register 
	OCR0SB(0xd6, 0xd7)      ; Output Compare SB Register 
	OCR0RB(0xd8, 0xd9)      ; Output Compare RB Register 
	PCNF0(0xda) {           ; PSC 0 Configuration Register
		PCLKSEL0 = 1            ; PSC 0 Input Clock Select
		POP0 = 2                ; PSC 0 Output Polarity
		PMODE00 = 3             ; PSC 0 Mode bit 0
		PMODE01 = 4             ; PSC 0 Mode bit 1
		PLOCK0 = 5              ; PSC 0 Lock
		PALOCK0 = 6             ; PSC 0 Autolock
		PFIFTY0 = 7             ; PSC 0 Fifty
	}
	PCTL0(0xdb) {           ; PSC 0 Control Register
		PRUN0 = 0               ; PSC 0 Run
		PCCYC0 = 1              ; PSC0 Complete Cycle
		PARUN0 = 2              ; PSC0 Auto Run
		PAOC0A = 3              ; PSC 0 Asynchronous Output Control A
		PAOC0B = 4              ; PSC 0 Asynchronous Output Control B
		PBFM0 = 5               ; PSC 0 Balance Flank Width Modulation
		PPRE00 = 6              ; PSC 0 Prescaler Selects bit 0
		PPRE01 = 7              ; PSC 0 Prescaler Selects bit 1
	}
	PFRC0A(0xdc) {          ; PSC 0 Input A Control
		PRFM0A0 = 0             ; PSC 0 Retrigger and Fault Mode for Part A bit 0
		PRFM0A1 = 1             ; PSC 0 Retrigger and Fault Mode for Part A bit 1
		PRFM0A2 = 2             ; PSC 0 Retrigger and Fault Mode for Part A bit 2
		PRFM0A3 = 3             ; PSC 0 Retrigger and Fault Mode for Part A bit 3
		PFLTE0A = 4             ; PSC 0 Filter Enable on Input Part A
		PELEV0A = 5             ; PSC 0 Edge Level Selector on Input Part A
		PISEL0A = 6             ; PSC 0 Input Select for Part A
		PCAE0A = 7              ; PSC 0 Capture Enable Input Part A
	}
	PFRC0B(0xdd) {          ; PSC 0 Input B Control
		PRFM0B0 = 0             ; PSC 0 Retrigger and Fault Mode for Part B bit 0
		PRFM0B1 = 1             ; PSC 0 Retrigger and Fault Mode for Part B bit 1
		PRFM0B2 = 2             ; PSC 0 Retrigger and Fault Mode for Part B bit 2
		PRFM0B3 = 3             ; PSC 0 Retrigger and Fault Mode for Part B bit 3
		PFLTE0B = 4             ; PSC 0 Filter Enable on Input Part B
		PELEV0B = 5             ; PSC 0 Edge Level Selector on Input Part B
		PISEL0B = 6             ; PSC 0 Input Select for Part B
		PCAE0B = 7              ; PSC 0 Capture Enable Input Part B
	}
	PICR0(0xde, 0xdf) {     ; PSC 0 Input Capture Register 
		PICR00 = 0              ; PSC 0 Input Capture Bytes bit 0
		PICR01 = 1              ; PSC 0 Input Capture Bytes bit 1
		PICR02 = 2              ; PSC 0 Input Capture Bytes bit 2
		PICR03 = 3              ; PSC 0 Input Capture Bytes bit 3
		PICR04 = 4              ; PSC 0 Input Capture Bytes bit 4
		PICR05 = 5              ; PSC 0 Input Capture Bytes bit 5
		PICR06 = 6              ; PSC 0 Input Capture Bytes bit 6
		PICR07 = 7              ; PSC 0 Input Capture Bytes bit 7
		PICR08 = 8              ; PSC 0 Input Capture Bytes bit 8
		PICR09 = 9              ; PSC 0 Input Capture Bytes bit 9
		PICR010 = 10            ; PSC 0 Input Capture Bytes bit 10
		PICR011 = 11            ; PSC 0 Input Capture Bytes bit 11
		PCST0 = 15              ; PSC 0 Input Capture Software Trig
	}
	PSOC1(0xe0) {           ; PSC1 Synchro and Output Configuration
		POEN1A = 0              ; PSCOUT10 Output Enable
		POEN1B = 2              ; PSCOUT11 Output Enable
		PSYNC1_0 = 4            ; Synchronization Out for ADC Selection bit 0
		PSYNC1_1 = 5            ; Synchronization Out for ADC Selection bit 1
	}
	OCR1SA(0xe2, 0xe3)      ; Output Compare SA Register 
	OCR1RA(0xe4, 0xe5)      ; Output Compare RA Register 
	OCR1SB(0xe6, 0xe7)      ; Output Compare SB Register 
	OCR1RB(0xe8, 0xe9)      ; Output Compare RB Register 
	PCNF1(0xea) {           ; PSC 1 Configuration Register
		PCLKSEL1 = 1            ; PSC 1 Input Clock Select
		POP1 = 2                ; PSC 1 Output Polarity
		PMODE10 = 3             ; PSC 1 Mode bit 0
		PMODE11 = 4             ; PSC 1 Mode bit 1
		PLOCK1 = 5              ; PSC 1 Lock
		PALOCK1 = 6             ; PSC 1 Autolock
		PFIFTY1 = 7             ; PSC 1 Fifty
	}
	PCTL1(0xeb) {           ; PSC 1 Control Register
		PRUN1 = 0               ; PSC 1 Run
		PCCYC1 = 1              ; PSC1 Complete Cycle
		PARUN1 = 2              ; PSC1 Auto Run
		PAOC1A = 3              ; PSC 1 Asynchronous Output Control A
		PAOC1B = 4              ; PSC 1 Asynchronous Output Control B
		PBFM1 = 5               ; Balance Flank Width Modulation
		PPRE10 = 6              ; PSC 1 Prescaler Selects bit 0
		PPRE11 = 7              ; PSC 1 Prescaler Selects bit 1
	}
	PFRC1A(0xec) {          ; PSC 1 Input B Control
		PRFM1A0 = 0             ; PSC 1 Retrigger and Fault Mode for Part A bit 0
		PRFM1A1 = 1             ; PSC 1 Retrigger and Fault Mode for Part A bit 1
		PRFM1A2 = 2             ; PSC 1 Retrigger and Fault Mode for Part A bit 2
		PRFM1A3 = 3             ; PSC 1 Retrigger and Fault Mode for Part A bit 3
		PFLTE1A = 4             ; PSC 1 Filter Enable on Input Part A
		PELEV1A = 5             ; PSC 1 Edge Level Selector on Input Part A
		PISEL1A = 6             ; PSC 1 Input Select for Part A
		PCAE1A = 7              ; PSC 1 Capture Enable Input Part A
	}
	PFRC1B(0xed) {          ; PSC 1 Input B Control
		PRFM1B0 = 0             ; PSC 1 Retrigger and Fault Mode for Part B bit 0
		PRFM1B1 = 1             ; PSC 1 Retrigger and Fault Mode for Part B bit 1
		PRFM1B2 = 2             ; PSC 1 Retrigger and Fault Mode for Part B bit 2
		PRFM1B3 = 3             ; PSC 1 Retrigger and Fault Mode for Part B bit 3
		PFLTE1B = 4             ; PSC 1 Filter Enable on Input Part B
		PELEV1B = 5             ; PSC 1 Edge Level Selector on Input Part B
		PISEL1B = 6             ; PSC 1 Input Select for Part B
		PCAE1B = 7              ; PSC 1 Capture Enable Input Part B
	}
	PICR1(0xee, 0xef) {     ; PSC 1 Input Capture Register 
		PICR10 = 0              ; PSC 1 Input Capture Bytes bit 0
		PICR11 = 1              ; PSC 1 Input Capture Bytes bit 1
		PICR12 = 2              ; PSC 1 Input Capture Bytes bit 2
		PICR13 = 3              ; PSC 1 Input Capture Bytes bit 3
		PICR14 = 4              ; PSC 1 Input Capture Bytes bit 4
		PICR15 = 5              ; PSC 1 Input Capture Bytes bit 5
		PICR16 = 6              ; PSC 1 Input Capture Bytes bit 6
		PICR17 = 7              ; PSC 1 Input Capture Bytes bit 7
		PICR18 = 8              ; PSC 1 Input Capture Bytes bit 8
		PICR19 = 9              ; PSC 1 Input Capture Bytes bit 9
		PICR110 = 10            ; PSC 1 Input Capture Bytes bit 10
		PICR111 = 11            ; PSC 1 Input Capture Bytes bit 11
		PCST1 = 15              ; PSC 1 Input Capture Software Trig
	}
	PSOC2(0xf0) {           ; PSC2 Synchro and Output Configuration
		POEN2A = 0              ; PSCOUT20 Output Enable
		POEN2C = 1              ; PSCOUT22 Output Enable
		POEN2B = 2              ; PSCOUT21 Output Enable
		POEN2D = 3              ; PSCOUT23 Output Enable
		PSYNC2_0 = 4            ; Synchronization Out for ADC Selection bit 0
		PSYNC2_1 = 5            ; Synchronization Out for ADC Selection bit 1
		POS20 = 6               ; PSC 2 Output 23 Select bit 0
		POS21 = 7               ; PSC 2 Output 23 Select bit 1
	}
	POM2(0xf1) {            ; PSC 2 Output Matrix
		POMV2A0 = 0             ; Output Matrix Output A Ramps bit 0
		POMV2A1 = 1             ; Output Matrix Output A Ramps bit 1
		POMV2A2 = 2             ; Output Matrix Output A Ramps bit 2
		POMV2A3 = 3             ; Output Matrix Output A Ramps bit 3
		POMV2B0 = 4             ; Output Matrix Output B Ramps bit 0
		POMV2B1 = 5             ; Output Matrix Output B Ramps bit 1
		POMV2B2 = 6             ; Output Matrix Output B Ramps bit 2
		POMV2B3 = 7             ; Output Matrix Output B Ramps bit 3
	}
	OCR2SA(0xf2, 0xf3)      ; Output Compare SA Register 
	OCR2RA(0xf4, 0xf5)      ; Output Compare RA Register 
	OCR2SB(0xf6, 0xf7)      ; Output Compare SB Register 
	OCR2RB(0xf8, 0xf9)      ; Output Compare RB Register 
	PCNF2(0xfa) {           ; PSC 2 Configuration Register
		POME2 = 0               ; PSC 2 Output Matrix Enable
		PCLKSEL2 = 1            ; PSC 2 Input Clock Select
		POP2 = 2                ; PSC 2 Output Polarity
		PMODE20 = 3             ; PSC 2 Mode bit 0
		PMODE21 = 4             ; PSC 2 Mode bit 1
		PLOCK2 = 5              ; PSC 2 Lock
		PALOCK2 = 6             ; PSC 2 Autolock
		PFIFTY2 = 7             ; PSC 2 Fifty
	}
	PCTL2(0xfb) {           ; PSC 2 Control Register
		PRUN2 = 0               ; PSC 2 Run
		PCCYC2 = 1              ; PSC2 Complete Cycle
		PARUN2 = 2              ; PSC2 Auto Run
		PAOC2A = 3              ; PSC 2 Asynchronous Output Control A
		PAOC2B = 4              ; PSC 2 Asynchronous Output Control B
		PBFM2 = 5               ; Balance Flank Width Modulation
		PPRE20 = 6              ; PSC 2 Prescaler Selects bit 0
		PPRE21 = 7              ; PSC 2 Prescaler Selects bit 1
	}
	PFRC2A(0xfc) {          ; PSC 2 Input B Control
		PRFM2A0 = 0             ; PSC 2 Retrigger and Fault Mode for Part A bit 0
		PRFM2A1 = 1             ; PSC 2 Retrigger and Fault Mode for Part A bit 1
		PRFM2A2 = 2             ; PSC 2 Retrigger and Fault Mode for Part A bit 2
		PRFM2A3 = 3             ; PSC 2 Retrigger and Fault Mode for Part A bit 3
		PFLTE2A = 4             ; PSC 2 Filter Enable on Input Part A
		PELEV2A = 5             ; PSC 2 Edge Level Selector on Input Part A
		PISEL2A = 6             ; PSC 2 Input Select for Part A
		PCAE2A = 7              ; PSC 2 Capture Enable Input Part A
	}
	PFRC2B(0xfd) {          ; PSC 2 Input B Control
		PRFM2B0 = 0             ; PSC 2 Retrigger and Fault Mode for Part B bit 0
		PRFM2B1 = 1             ; PSC 2 Retrigger and Fault Mode for Part B bit 1
		PRFM2B2 = 2             ; PSC 2 Retrigger and Fault Mode for Part B bit 2
		PRFM2B3 = 3             ; PSC 2 Retrigger and Fault Mode for Part B bit 3
		PFLTE2B = 4             ; PSC 2 Filter Enable on Input Part B
		PELEV2B = 5             ; PSC 2 Edge Level Selector on Input Part B
		PISEL2B = 6             ; PSC 2 Input Select for Part B
		PCAE2B = 7              ; PSC 2 Capture Enable Input Part B
	}
	PICR2(0xfe, 0xff) {     ; PSC 2 Input Capture Register 
		PICR20 = 0              ; PSC 2 Input Capture Bytes bit 0
		PICR21 = 1              ; PSC 2 Input Capture Bytes bit 1
		PICR22 = 2              ; PSC 2 Input Capture Bytes bit 2
		PICR23 = 3              ; PSC 2 Input Capture Bytes bit 3
		PICR24 = 4              ; PSC 2 Input Capture Bytes bit 4
		PICR25 = 5              ; PSC 2 Input Capture Bytes bit 5
		PICR26 = 6              ; PSC 2 Input Capture Bytes bit 6
		PICR27 = 7              ; PSC 2 Input Capture Bytes bit 7
		PICR28 = 8              ; PSC 2 Input Capture Bytes bit 8
		PICR29 = 9              ; PSC 2 Input Capture Bytes bit 9
		PICR210 = 10            ; PSC 2 Input Capture Bytes bit 10
		PICR211 = 11            ; PSC 2 Input Capture Bytes bit 11
		PCST2 = 15              ; PSC 2 Input Capture Software Trig
	}
}

