device {
	name = "ATtiny1634"
	prog_size = 0x4000
	eeprom_size = 0x0100
	ram_size = 0x0400
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin, Power-on Reset, Brown-out Reset and Watchdog Reset
	INT0 = 0x01             ; External Interrupt Request 0
	PCINT0 = 0x02           ; Pin Change Interrupt Request 0
	PCINT1 = 0x03           ; Pin Change Interrupt Request 1
	PCINT2 = 0x04           ; Pin Change Interrupt Request 2
	WDT = 0x05              ; Watchdog Time-out Interrupt
	TIMER1_CAPT = 0x06      ; Timer/Counter1 Capture Event
	TIM1_CAPT = 0x06        ; Timer/Counter1 Capture Event
	TIMER1_COMPA = 0x07     ; Timer/Counter1 Compare Match A
	TIM1_COMPA = 0x07       ; Timer/Counter1 Compare Match A
	TIMER1_COMPB = 0x08     ; Timer/Counter1 Compare Match B
	TIM1_COMPB = 0x08       ; Timer/Counter1 Compare Match B
	TIMER1_OVF = 0x09       ; Timer/Counter1 Overflow
	TIM1_OVF = 0x09         ; Timer/Counter1 Overflow
	TIMER0_COMPA = 0x0a     ; TimerCounter0 Compare Match A
	TIM0_COMPA = 0x0a       ; TimerCounter0 Compare Match A
	TIMER0_COMPB = 0x0b     ; TimerCounter0 Compare Match B
	TIM0_COMPB = 0x0b       ; TimerCounter0 Compare Match B
	TIMER0_OVF = 0x0c       ; Timer/Couner0 Overflow
	TIM0_OVF = 0x0c         ; Timer/Couner0 Overflow
	ANA_COMP = 0x0d         ; Analog Comparator
	ADC = 0x0e              ; ADC Conversion Complete
	ADC_READY = 0x0e        ; ADC Conversion Complete
	USART0_START = 0x0f     ; USART0, Start
	USART0_RXS = 0x0f       ; USART0, Start
	USART0_RX = 0x10        ; USART0, Rx Complete
	USART0_RXC = 0x10       ; USART0, Rx Complete
	USART0_UDRE = 0x11      ; USART0 Data Register Empty
	USART0_DRE = 0x11       ; USART0 Data Register Empty
	USART0_TX = 0x12        ; USART0, Tx Complete
	USART0_TXC = 0x12       ; USART0, Tx Complete
	USART1_START = 0x13     ; USART1, Start
	USART1_RXS = 0x13       ; USART1, Start
	USART1_RX = 0x14        ; USART1, Rx Complete
	USART1_RXC = 0x14       ; USART1, Rx Complete
	USART1_UDRE = 0x15      ; USART1 Data Register Empty
	USART1_DRE = 0x15       ; USART1 Data Register Empty
	USART1_TX = 0x16        ; USART1, Tx Complete
	USART1_TXC = 0x16       ; USART1, Tx Complete
	USI_START = 0x17        ; USI Start Condition
	USI_STR = 0x17          ; USI Start Condition
	USI_OVERFLOW = 0x18     ; USI Overflow
	USI_OVF = 0x18          ; USI Overflow
	TWI_SLAVE = 0x19        ; Two-wire Serial Interface
	TWI = 0x19              ; Two-wire Serial Interface
	EE_RDY = 0x1a           ; EEPROM Ready
	QTRIP = 0x1b            ; Touch Sensing
}

registers {
	ADC(0x00, 0x01)         ; ADC Data Register  Bytes
	ADCSRB(0x02) {          ; ADC Control and Status Register B
		ADTS0 = 0               ; ADC Auto Trigger Sources bit 0
		ADTS1 = 1               ; ADC Auto Trigger Sources bit 1
		ADTS2 = 2               ; ADC Auto Trigger Sources bit 2
		ADLAR = 3               ; 
		VDPD = 6                ; 
		VDEN = 7                ; 
	}
	ADCSRA(0x03) {          ; The ADC Control and Status register
		ADPS0 = 0               ; ADC Prescaler Select Bits bit 0
		ADPS1 = 1               ; ADC Prescaler Select Bits bit 1
		ADPS2 = 2               ; ADC Prescaler Select Bits bit 2
		ADIE = 3                ; ADC Interrupt Enable
		ADIF = 4                ; ADC Interrupt Flag
		ADATE = 5               ; ADC Auto Trigger Enable
		ADSC = 6                ; ADC Start Conversion
		ADEN = 7                ; ADC Enable
	}
	ADMUX(0x04) {           ; The ADC multiplexer Selection Register
		MUX0 = 0                ; Analog Channel and Gain Selection Bits bit 0
		MUX1 = 1                ; Analog Channel and Gain Selection Bits bit 1
		MUX2 = 2                ; Analog Channel and Gain Selection Bits bit 2
		MUX3 = 3                ; Analog Channel and Gain Selection Bits bit 3
		ADC0EN = 4              ; 
		REFEN = 5               ; 
		REFS0 = 6               ; Reference Selection Bit bit 0
		REFS1 = 7               ; Reference Selection Bit bit 1
	}
	ACSRB(0x05) {           ; Analog Comparator Control And Status Register B
		ACIRS0 = 0              ; 
		ACIRS1 = 1              ; 
		ACME = 2                ; Analog Comparator Multiplexer Enable
		ACCE = 3                ; 
		ACLP = 5                ; 
		HLEV = 6                ; Hysteresis Level
		HSEL = 7                ; Hysteresis Select
	}
	ACSRA(0x06) {           ; Analog Comparator Control And Status Register A
		ACIS0 = 0               ; Analog Comparator Interrupt Mode Select bits bit 0
		ACIS1 = 1               ; Analog Comparator Interrupt Mode Select bits bit 1
		ACIC = 2                ; Analog Comparator Input Capture Enable
		ACIE = 3                ; Analog Comparator Interrupt Enable
		ACI = 4                 ; Analog Comparator Interrupt Flag
		ACO = 5                 ; Analog Compare Output
		ACBG = 6                ; Analog Comparator Bandgap Select
		ACD = 7                 ; Analog Comparator Disable
	}
	PINC(0x07)              ; Port C Input Pins
	DDRC(0x08)              ; Data Direction Register, Port C
	PORTC(0x09)             ; Port C Data Register
	PUEC(0x0a) {            ; Pull-up Enable Control Register
		PUEC0 = 0               ; Pull-up Enable Control bit bit 0
		PUEC1 = 1               ; Pull-up Enable Control bit bit 1
		PUEC2 = 2               ; Pull-up Enable Control bit bit 2
		PUEC3 = 3               ; Pull-up Enable Control bit bit 3
		PUEC4 = 4               ; Pull-up Enable Control bit bit 4
		PUEC5 = 5               ; Pull-up Enable Control bit bit 5
	}
	PINB(0x0b)              ; Port B Data register
	DDRB(0x0c)              ; Data Direction Register, Port B
	PORTB(0x0d)             ; Input Pins, Port B
	PUEB(0x0e) {            ; Pull-up Enable Control Register
		PUEB0 = 0               ; Pull-up Enable Control bit bit 0
		PUEB1 = 1               ; Pull-up Enable Control bit bit 1
		PUEB2 = 2               ; Pull-up Enable Control bit bit 2
		PUEB3 = 3               ; Pull-up Enable Control bit bit 3
	}
	PINA(0x0f)              ; Port A Input Pins
	DDRA(0x10)              ; Data Direction Register, Port A
	PORTA(0x11)             ; Port A Data Register
	PUEA(0x12) {            ; Pull-up Enable Control Register
		PUEA0 = 0               ; Pull-up Enable Control bit bit 0
		PUEA1 = 1               ; Pull-up Enable Control bit bit 1
		PUEA2 = 2               ; Pull-up Enable Control bit bit 2
		PUEA3 = 3               ; Pull-up Enable Control bit bit 3
		PUEA4 = 4               ; Pull-up Enable Control bit bit 4
		PUEA5 = 5               ; Pull-up Enable Control bit bit 5
		PUEA6 = 6               ; Pull-up Enable Control bit bit 6
		PUEA7 = 7               ; Pull-up Enable Control bit bit 7
	}
	PORTCR(0x13) {          ; Port Control Register
		BBMA = 0                ; Break-Before-Make Mode Enable
		BBMB = 1                ; Break-Before-Make Mode Enable
		BBMC = 2                ; Break-Before-Make Mode Enable
	}
	GPIOR0(0x14)            ; General Purpose I/O Register 0
	GPIOR1(0x15)            ; General Purpose I/O Register 1
	GPIOR2(0x16)            ; General Purpose I/O Register 2
	OCR0B(0x17)             ; Timer/Counter0 Output Compare Register
	OCR0A(0x18)             ; Timer/Counter0 Output Compare Register
	TCNT0(0x19)             ; Timer/Counter0
	TCCR0B(0x1a) {          ; Timer/Counter Control Register B
		CS00 = 0                ; Clock Select bit 0
		CS01 = 1                ; Clock Select bit 1
		CS02 = 2                ; Clock Select bit 2
		WGM02 = 3               ; 
		FOC0B = 6               ; Force Output Compare B
		FOC0A = 7               ; Force Output Compare B
	}
	TCCR0A(0x1b) {          ; Timer/Counter  Control Register A
		WGM00 = 0               ; Waveform Generation Mode bit 0
		WGM01 = 1               ; Waveform Generation Mode bit 1
		COM0B0 = 4              ; Compare Match Output B Mode bit 0
		COM0B1 = 5              ; Compare Match Output B Mode bit 1
		COM0A0 = 6              ; Compare Match Output A Mode bit 0
		COM0A1 = 7              ; Compare Match Output A Mode bit 1
	}
	EECR(0x1c) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEPE = 1                ; EEPROM Write Enable
		EEMPE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEProm Ready Interrupt Enable
		EEPM0 = 4               ; EEPROM Programming Mode Bits bit 0
		EEPM1 = 5               ; EEPROM Programming Mode Bits bit 1
	}
	EEDR(0x1d)              ; EEPROM Data Register
	EEAR(0x1e, 0x1f)        ; EEPROM Read/Write Access
	UDR0(0x20)              ; USART I/O Data Register
	UBRR0(0x21, 0x22)       ; USART Baud Rate Register  Bytes
	UCSR0D(0x23) {          ; USART Control and Status Register D
		SFDE0 = 5               ; USART RX Start Frame Detection Enable
		RXS0 = 6                ; USART RX Start Flag
		RXSIE0 = 7              ; USART RX Start Interrupt Enable
	}
	UCSR0C(0x24) {          ; USART Control and Status Register C
		UCPOL0 = 0              ; Clock Polarity
		UCSZ00 = 1              ; Character Size bit 0
		UCSZ01 = 2              ; Character Size bit 1
		USBS0 = 3               ; Stop Bit Select
		UPM00 = 4               ; Parity Mode Bits bit 0
		UPM01 = 5               ; Parity Mode Bits bit 1
		UMSEL00 = 6             ; USART Mode Select bit 0
		UMSEL01 = 7             ; USART Mode Select bit 1
	}
	UCSR0B(0x25) {          ; USART Control and Status Register B
		TXB80 = 0               ; Transmit Data Bit 8
		RXB80 = 1               ; Receive Data Bit 8
		UCSZ02 = 2              ; Character Size
		TXEN0 = 3               ; Transmitter Enable
		RXEN0 = 4               ; Receiver Enable
		UDRIE0 = 5              ; USART Data register Empty Interrupt Enable
		TXCIE0 = 6              ; TX Complete Interrupt Enable
		RXCIE0 = 7              ; RX Complete Interrupt Enable
	}
	UCSR0A(0x26) {          ; USART Control and Status Register A
		MPCM0 = 0               ; Multi-processor Communication Mode
		U2X0 = 1                ; Double the USART transmission speed
		UPE0 = 2                ; Parity Error
		DOR0 = 3                ; Data overRun
		FE0 = 4                 ; Framing Error
		UDRE0 = 5               ; USART Data Register Empty
		TXC0 = 6                ; USART Transmitt Complete
		RXC0 = 7                ; USART Receive Complete
	}
	PCMSK0(0x27) {          ; Pin Change Mask Register 0
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	PCMSK1(0x28) {          ; Pin Change Mask Register 1
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
	}
	PCMSK2(0x29) {          ; Pin Change Mask Register 2
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
	}
	USICR(0x2a) {           ; USI Control Register
		USITC = 0               ; Toggle Clock Port Pin
		USICLK = 1              ; Clock Strobe
		USICS0 = 2              ; USI Clock Source Select Bits bit 0
		USICS1 = 3              ; USI Clock Source Select Bits bit 1
		USIWM0 = 4              ; USI Wire Mode Bits bit 0
		USIWM1 = 5              ; USI Wire Mode Bits bit 1
		USIOIE = 6              ; Counter Overflow Interrupt Enable
		USISIE = 7              ; Start Condition Interrupt Enable
	}
	USISR(0x2b) {           ; USI Status Register
		USICNT0 = 0             ; USI Counter Value Bits bit 0
		USICNT1 = 1             ; USI Counter Value Bits bit 1
		USICNT2 = 2             ; USI Counter Value Bits bit 2
		USICNT3 = 3             ; USI Counter Value Bits bit 3
		USIDC = 4               ; Data Output Collision
		USIPF = 5               ; Stop Condition Flag
		USIOIF = 6              ; Counter Overflow Interrupt Flag
		USISIF = 7              ; Start Condition Interrupt Flag
	}
	USIDR(0x2c)             ; USI Data Register
	USIBR(0x2d)             ; USI Buffer Register
	CCP(0x2f)               ; Configuration Change Protection
	WDTCSR(0x30) {          ; Watchdog Timer Control and Status Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timer Interrupt Enable
		WDIF = 7                ; Watchdog Timer Interrupt Flag
	}
	CLKSR(0x32) {           ; Clock Setting Register
		CKSEL0 = 0              ; Clock Select Bits bit 0
		CKSEL1 = 1              ; Clock Select Bits bit 1
		CKSEL2 = 2              ; Clock Select Bits bit 2
		CKSEL3 = 3              ; Clock Select Bits bit 3
		SUT = 4                 ; Start-up Time
		CKOUT_IO = 5            ; Clock Output (active low)
		CSTR = 6                ; Clock Switch Trigger
		OSCRDY = 7              ; Oscillator Ready
	}
	CLKPR(0x33) {           ; Clock Prescale Register
		CLKPS0 = 0              ; Clock Prescaler Select Bits bit 0
		CLKPS1 = 1              ; Clock Prescaler Select Bits bit 1
		CLKPS2 = 2              ; Clock Prescaler Select Bits bit 2
		CLKPS3 = 3              ; Clock Prescaler Select Bits bit 3
	}
	PRR(0x34) {             ; Power Reduction Register
		PRADC = 0               ; Power Reduction ADC
		PRUSART0 = 1            ; Power Reduction USART0
		PRUSART1 = 2            ; Power Reduction USART1
		PRUSI = 3               ; Power Reduction USI
		PRTIM0 = 4              ; Power Reduction Timer/Counter0
		PRTIM1 = 5              ; Power Reduction Timer/Counter1
		PRTWI = 6               ; Power Reduction TWI
	}
	MCUSR(0x35) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
	}
	MCUCR(0x36) {           ; MCU Control Register
		ISC00 = 0               ; Interrupt Sense Control 0 bits bit 0
		ISC01 = 1               ; Interrupt Sense Control 0 bits bit 1
		SE = 4                  ; Sleep Enable
		SM0 = 5                 ; Sleep Mode Select Bits bit 0
		SM1 = 6                 ; Sleep Mode Select Bits bit 1
	}
	SPMCSR(0x37) {          ; Store Program Memory Control and Status Register
		SPMEN = 0               ; Store program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		RFLB = 3                ; Read Fuse and Lock Bits
		CTPB = 4                ; Clear Temporary Page Buffer
		RSIG = 5                ; Read Device Signature Imprint Table
	}
	TIFR(0x39) {            ; Timer/Counter Interrupt Flag register
		OCF0A = 0               ; Timer/Counter0 Output Compare Flag 0A
		TOV0 = 1                ; Timer/Counter0 Overflow Flag
		OCF0B = 2               ; Timer/Counter0 Output Compare Flag 0B
		ICF1 = 3                ; Input Capture Flag 1
		OCF1B = 5               ; Output Compare Flag 1B
		OCF1A = 6               ; Output Compare Flag 1A
		TOV1 = 7                ; Timer/Counter1 Overflow Flag
	}
	TIMSK(0x3a) {           ; Timer/Counter Interrupt Mask Register
		OCIE0A = 0              ; Timer/Counter0 Output Compare Match A Interrupt Enable
		TOIE0 = 1               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0B = 2              ; Timer/Counter0 Output Compare Match B Interrupt Enable
		ICIE1 = 3               ; Timer/Counter1 Input Capture Interrupt Enable
		OCIE1B = 5              ; Timer/Counter1 Output CompareB Match Interrupt Enable
		OCIE1A = 6              ; Timer/Counter1 Output CompareA Match Interrupt Enable
		TOIE1 = 7               ; Timer/Counter1 Overflow Interrupt Enable
	}
	GIFR(0x3b) {            ; General Interrupt Flag Register
		PCIF0 = 3               ; Pin Change Interrupt Flags bit 0
		PCIF1 = 4               ; Pin Change Interrupt Flags bit 1
		PCIF2 = 5               ; Pin Change Interrupt Flags bit 2
		INTF0 = 6               ; External Interrupt Flag 0
	}
	GIMSK(0x3c) {           ; General Interrupt Mask Register
		PCIE0 = 3               ; Pin Change Interrupt Enables bit 0
		PCIE1 = 4               ; Pin Change Interrupt Enables bit 1
		PCIE2 = 5               ; Pin Change Interrupt Enables bit 2
		INT0 = 6                ; External Interrupt Request 0 Enable
	}
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	DIDR0(0x60) {           ; Digital Input Disable Register 0
		AREFD = 0               ; AREF Digital input Disable
		AIN0D = 1               ; AIN0 Digital input Disable
		AIN1D = 2               ; AIN1 Digital input Disable
		ADC0D = 3               ; ADC0 Digital Input Disable
		ADC1D = 4               ; ADC1 Digital input Disable
		ADC2D = 5               ; ADC2 Digital input Disable
		ADC3D = 6               ; ADC3 Digital input Disable
		ADC4D = 7               ; ADC4 Digital input Disable
	}
	DIDR1(0x61) {           ; Digital Input Disable Register 1
		ADC5D = 0               ; ADC5 Digital input Disable
		ADC6D = 1               ; ADC6 Digital input Disable
		ADC7D = 2               ; ADC7 Digital input Disable
		ADC8D = 3               ; ADC8 Digital Input Disable
	}
	DIDR2(0x62) {           ; Digital Input Disable Register 2
		ADC9D = 0               ; ADC9 Digital input Disable
		ADC10D = 1              ; ADC10 Digital input Disable
		ADC11D = 2              ; ADC11 Digital input Disable
	}
	OSCCAL0(0x63)           ; Oscillator Calibration Value
	OSCTCAL0A(0x64)         ; 
	OSCTCAL0B(0x65)         ; 
	OSCCAL1(0x66)           ; 
	GTCCR(0x67) {           ; General Timer/Counter Control Register
		PSR10 = 0               ; Prescaler Reset Timer/Counter1 and Timer/Counter0
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	ICR1(0x68, 0x69)        ; Timer/Counter1 Input Capture Register  Bytes
	OCR1B(0x6a, 0x6b)       ; Timer/Counter1 Output Compare Register  Bytes
	OCR1A(0x6c, 0x6d)       ; Timer/Counter1 Output Compare Register  Bytes
	TCNT1(0x6e, 0x6f)       ; Timer/Counter1  Bytes
	TCCR1C(0x70) {          ; Timer/Counter1 Control Register C
		FOC1B = 6               ; Force Output Compare for Channel B
		FOC1A = 7               ; Force Output Compare for Channel A
	}
	TCCR1B(0x71) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Clock Select1 bits bit 0
		CS11 = 1                ; Clock Select1 bits bit 1
		CS12 = 2                ; Clock Select1 bits bit 2
		WGM10 = 3               ; Waveform Generation Mode Bits bit 0
		WGM11 = 4               ; Waveform Generation Mode Bits bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1A(0x72) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Pulse Width Modulator Select Bits bit 0
		WGM11 = 1               ; Pulse Width Modulator Select Bits bit 1
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	UDR1(0x73)              ; USART I/O Data Register
	UBRR1(0x74, 0x75)       ; USART Baud Rate Register  Bytes
	UCSR1D(0x76) {          ; USART Control and Status Register D
		SFDE1 = 5               ; USART RX Start Frame Detection Enable
		RXS1 = 6                ; USART RX Start Flag
		RXSIE1 = 7              ; USART RX Start Interrupt Enable
	}
	UCSR1C(0x77) {          ; USART Control and Status Register C
		UCPOL1 = 0              ; Clock Polarity
		UCSZ10 = 1              ; Character Size bit 0
		UCSZ11 = 2              ; Character Size bit 1
		USBS1 = 3               ; Stop Bit Select
		UPM10 = 4               ; Parity Mode Bits bit 0
		UPM11 = 5               ; Parity Mode Bits bit 1
		UMSEL10 = 6             ; USART Mode Select bit 0
		UMSEL11 = 7             ; USART Mode Select bit 1
	}
	UCSR1B(0x78) {          ; USART Control and Status Register B
		TXB81 = 0               ; Transmit Data Bit 8
		RXB81 = 1               ; Receive Data Bit 8
		UCSZ12 = 2              ; Character Size
		TXEN1 = 3               ; Transmitter Enable
		RXEN1 = 4               ; Receiver Enable
		UDRIE1 = 5              ; USART Data register Empty Interrupt Enable
		TXCIE1 = 6              ; TX Complete Interrupt Enable
		RXCIE1 = 7              ; RX Complete Interrupt Enable
	}
	UCSR1A(0x79) {          ; USART Control and Status Register A
		MPCM1 = 0               ; Multi-processor Communication Mode
		U2X1 = 1                ; Double the USART transmission speed
		UPE1 = 2                ; Parity Error
		DOR1 = 3                ; Data overRun
		FE1 = 4                 ; Framing Error
		UDRE1 = 5               ; USART Data Register Empty
		TXC1 = 6                ; USART Transmitt Complete
		RXC1 = 7                ; USART Receive Complete
	}
	TWSD(0x7a) {            ; TWI Slave Data Register
		TWSD0 = 0               ; TWI slave data bit bit 0
		TWSD1 = 1               ; TWI slave data bit bit 1
		TWSD2 = 2               ; TWI slave data bit bit 2
		TWSD3 = 3               ; TWI slave data bit bit 3
		TWSD4 = 4               ; TWI slave data bit bit 4
		TWSD5 = 5               ; TWI slave data bit bit 5
		TWSD6 = 6               ; TWI slave data bit bit 6
		TWSD7 = 7               ; TWI slave data bit bit 7
	}
	TWSAM(0x7b)             ; TWI Slave Address Mask Register
	TWSA(0x7c) {            ; TWI Slave Address Register
		TWSA0 = 0               ; TWI slave address bit bit 0
		TWSA1 = 1               ; TWI slave address bit bit 1
		TWSA2 = 2               ; TWI slave address bit bit 2
		TWSA3 = 3               ; TWI slave address bit bit 3
		TWSA4 = 4               ; TWI slave address bit bit 4
		TWSA5 = 5               ; TWI slave address bit bit 5
		TWSA6 = 6               ; TWI slave address bit bit 6
		TWSA7 = 7               ; TWI slave address bit bit 7
	}
	TWSSRA(0x7d) {          ; TWI Slave Status Register A
		TWAS = 0                ; TWI Address or Stop
		TWDIR = 1               ; TWI Read/Write Direction
		TWBE = 2                ; TWI Bus Error
		TWC = 3                 ; TWI Collision
		TWRA = 4                ; TWI Receive Acknowledge
		TWCH = 5                ; TWI Clock Hold
		TWASIF = 6              ; TWI Address/Stop Interrupt Flag
		TWDIF = 7               ; TWI Data Interrupt Flag
	}
	TWSCRB(0x7e) {          ; TWI Slave Control Register B
		TWCMD0 = 0              ; 
		TWCMD1 = 1              ; 
		TWAA = 2                ; TWI Acknowledge Action
	}
	TWSCRA(0x7f) {          ; TWI Slave Control Register A
		TWSME = 0               ; TWI Smart Mode Enable
		TWPME = 1               ; TWI Promiscuous Mode Enable
		TWSIE = 2               ; TWI Stop Interrupt Enable
		TWEN = 3                ; Two-Wire Interface Enable
		TWASIE = 4              ; TWI Address/Stop Interrupt Enable
		TWDIE = 5               ; TWI Data Interrupt Enable
		TWSHE = 7               ; TWI SDA Hold Time Enable
	}
}

