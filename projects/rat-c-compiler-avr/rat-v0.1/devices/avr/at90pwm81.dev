device {
	name = "AT90PWM81"
	prog_size = 0x2000
	eeprom_size = 0x0200
	ram_size = 0x0100
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin, Power-on Reset, Brown-out Reset, Watchdog Reset and JTAG AVR Reset
	PSC2_CAPT = 0x01        ; PSC2 Capture Event
	PSC2_EC = 0x02          ; PSC2 End Cycle
	PSC2_EEC = 0x03         ; PSC2 End Of Enhanced Cycle
	PSC0_CAPT = 0x04        ; PSC0 Capture Event
	PSC0_EC = 0x05          ; PSC0 End Cycle
	PSC0_EEC = 0x06         ; PSC0 End Of Enhanced Cycle
	ANALOG_COMP_1 = 0x07    ; Analog Comparator 1
	ANALOG_COMP_2 = 0x08    ; Analog Comparator 2
	ANALOG_COMP_3 = 0x09    ; Analog Comparator 3
	INT0 = 0x0a             ; External Interrupt Request 0
	TIMER1_CAPT = 0x0b      ; Timer/Counter1 Capture Event
	TIMER1_OVF = 0x0c       ; Timer/Counter1 Overflow
	ADC = 0x0d              ; ADC Conversion Complete
	INT1 = 0x0e             ; External Interrupt Request 1
	SPI_STC = 0x0f          ; SPI Serial Transfer Complet
	INT2 = 0x10             ; External Interrupt Request 2
	WDT = 0x11              ; Watchdog Timeout Interrupt
	EE_READY = 0x12         ; EEPROM Ready
	SPM_READY = 0x13        ; Store Program Memory Read
}

registers {
	ACSR(0x00) {            ; Analog Comparator Status Register
		AC1O = 1                ; Analog Comparator 1 Output Bit
		AC2O = 2                ; Analog Comparator 2 Output Bit
		AC3O = 3                ; Analog Comparator 3 Output Bit
		AC1IF = 5               ; Analog Comparator 1  Interrupt Flag Bit
		AC2IF = 6               ; Analog Comparator 2 Interrupt Flag Bit
		AC3IF = 7               ; Analog Comparator 3 Interrupt Flag Bit
	}
	TIMSK1(0x01) {          ; Timer/Counter Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		ICIE1 = 5               ; Timer/Counter1 Input Capture Interrupt Enable
	}
	TIFR1(0x02) {           ; Timer/Counter Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		ICF1 = 5                ; Input Capture Flag 1
	}
	PINB(0x03)              ; Port B Input Pins
	DDRB(0x04)              ; Port B Data Direction Register
	PORTB(0x05)             ; Port B Data Register
	ADCSRA(0x06) {          ; The ADC Control and Status register
		ADPS0 = 0               ; ADC Prescaler Select Bits bit 0
		ADPS1 = 1               ; ADC Prescaler Select Bits bit 1
		ADPS2 = 2               ; ADC Prescaler Select Bits bit 2
		ADIE = 3                ; ADC Interrupt Enable
		ADIF = 4                ; ADC Interrupt Flag
		ADATE = 5               ; ADC Auto Trigger Enable
		ADSC = 6                ; ADC Start Conversion
		ADEN = 7                ; ADC Enable
	}
	ADCSRB(0x07) {          ; ADC Control and Status Register B
		ADTS0 = 0               ; ADC Auto Trigger Sources bit 0
		ADTS1 = 1               ; ADC Auto Trigger Sources bit 1
		ADTS2 = 2               ; ADC Auto Trigger Sources bit 2
		ADTS3 = 3               ; ADC Auto Trigger Sources bit 3
		ADSSEN = 4              ; ADC Single Shot Enable on PSC's Synchronisation Signals
		ADNCDIS = 6             ; ADC Noise Canceller Disable
		ADHSM = 7               ; ADC High Speed Mode
	}
	ADMUX(0x08) {           ; The ADC multiplexer Selection Register
		MUX0 = 0                ; Analog Channel and Gain Selection Bits bit 0
		MUX1 = 1                ; Analog Channel and Gain Selection Bits bit 1
		MUX2 = 2                ; Analog Channel and Gain Selection Bits bit 2
		MUX3 = 3                ; Analog Channel and Gain Selection Bits bit 3
		ADLAR = 5               ; Left Adjust Result
		REFS0 = 6               ; Reference Selection Bits bit 0
		REFS1 = 7               ; Reference Selection Bits bit 1
	}
	PIND(0x09)              ; Port D Input Pins
	DDRD(0x0a)              ; Port D Data Direction Register
	PORTD(0x0b)             ; Port D Data Register
	PINE(0x0c)              ; Port E Input Pins
	DDRE(0x0d)              ; Port E Data Direction Register
	PORTE(0x0e)             ; Port E Data Register
	PIM0(0x0f) {            ; PSC0 Interrupt Mask Register
		PEOPE0 = 0              ; End of Cycle Interrupt Enable
		PEOEPE0 = 1             ; End of Enhanced Cycle Enable
		PEVE0A = 3              ; External Event A Interrupt Enable
		PEVE0B = 4              ; External Event B Interrupt Enable
	}
	PIFR0(0x10) {           ; PSC0 Interrupt Flag Register
		PEOP0 = 0               ; End of PSC0 Interrupt
		PRN00 = 1               ; Ramp Number bit 0
		PRN01 = 2               ; Ramp Number bit 1
		PEV0A = 3               ; External Event A Interrupt
		PEV0B = 4               ; External Event B Interrupt
		POAC0A = 6              ; PSC 0 Output A Activity
		POAC0B = 7              ; PSC 0 Output A Activity
	}
	PCNF0(0x11) {           ; PSC 0 Configuration Register
		PCLKSEL0 = 1            ; PSC 0 Input Clock Select
		POP0 = 2                ; PSC 0 Output Polarity
		PMODE00 = 3             ; PSC 0 Mode bit 0
		PMODE01 = 4             ; PSC 0 Mode bit 1
		PLOCK0 = 5              ; PSC 0 Lock
		PALOCK0 = 6             ; PSC 0 Autolock
		PFIFTY0 = 7             ; PSC 0 Fifty
	}
	PCTL0(0x12) {           ; PSC 0 Control Register
		PRUN0 = 0               ; PSC 0 Run
		PCCYC0 = 1              ; PSC0 Complete Cycle
		PBFM00 = 2              ; PSC 0 Balance Flank Width Modulation bit 0
		PAOC0A = 3              ; PSC 0 Asynchronous Output Control A
		PAOC0B = 4              ; PSC 0 Asynchronous Output Control B
		PBFM01 = 5              ; PSC 0 Balance Flank Width Modulation bit 1
		PPRE00 = 6              ; PSC 0 Prescaler Selects bit 0
		PPRE01 = 7              ; PSC 0 Prescaler Selects bit 1
	}
	PIM2(0x13) {            ; PSC2 Interrupt Mask Register
		PEOPE2 = 0              ; End of Cycle Interrupt Enable
		PEOEPE2 = 1             ; End of Enhanced Cycle Interrupt Enable
		PEVE2A = 3              ; External Event A Interrupt Enable
		PEVE2B = 4              ; External Event B Interrupt Enable
		PSEIE2 = 5              ; PSC 2 Synchro Error Interrupt Enable
	}
	PIFR2(0x14) {           ; PSC2 Interrupt Flag Register
		PEOP2 = 0               ; End of PSC2 Interrupt
		PRN20 = 1               ; Ramp Number bit 0
		PRN21 = 2               ; Ramp Number bit 1
		PEV2A = 3               ; External Event A Interrupt
		PEV2B = 4               ; External Event B Interrupt
		PSEI2 = 5               ; PSC 2 Synchro Error Interrupt
		POAC2A = 6              ; PSC 2 Output A Activity
		POAC2B = 7              ; PSC 2 Output A Activity
	}
	PCNF2(0x15) {           ; PSC 2 Configuration Register
		POME2 = 0               ; PSC 2 Output Matrix Enable
		PCLKSEL2 = 1            ; PSC 2 Input Clock Select
		POP2 = 2                ; PSC 2 Output Polarity
		PMODE20 = 3             ; PSC 2 Mode bit 0
		PMODE21 = 4             ; PSC 2 Mode bit 1
		PLOCK2 = 5              ; PSC 2 Lock
		PALOCK2 = 6             ; PSC 2 Autolock
		PFIFTY2 = 7             ; PSC 2 Fifty
	}
	PCTL2(0x16) {           ; PSC 2 Control Register
		PRUN2 = 0               ; PSC 2 Run
		PCCYC2 = 1              ; PSC2 Complete Cycle
		PARUN2 = 2              ; PSC2 Auto Run
		PAOC2A = 3              ; PSC 2 Asynchronous Output Control A
		PAOC2B = 4              ; PSC 2 Asynchronous Output Control B
		PBFM2 = 5               ; Balance Flank Width Modulation
		PPRE20 = 6              ; PSC 2 Prescaler Selects bit 0
		PPRE21 = 7              ; PSC 2 Prescaler Selects bit 1
	}
	SPCR(0x17) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x18) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	GPIOR0(0x19) {          ; General Purpose IO Register 0
		GPIOR00 = 0             ; General Purpose IO Register 0 bit 0
		GPIOR01 = 1             ; General Purpose IO Register 0 bit 1
		GPIOR02 = 2             ; General Purpose IO Register 0 bit 2
		GPIOR03 = 3             ; General Purpose IO Register 0 bit 3
		GPIOR04 = 4             ; General Purpose IO Register 0 bit 4
		GPIOR05 = 5             ; General Purpose IO Register 0 bit 5
		GPIOR06 = 6             ; General Purpose IO Register 0 bit 6
		GPIOR07 = 7             ; General Purpose IO Register 0 bit 7
	}
	GPIOR1(0x1a) {          ; General Purpose IO Register 1
		GPIOR0 = 0              ; General Purpose IO Register 1 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 1 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 1 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 1 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 1 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 1 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 1 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 1 bis bit 7
	}
	GPIOR2(0x1b) {          ; General Purpose IO Register 2
		GPIOR0 = 0              ; General Purpose IO Register 2 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 2 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 2 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 2 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 2 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 2 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 2 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 2 bis bit 7
	}
	EECR(0x1c) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEWE = 1                ; EEPROM Write Enable
		EEMWE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEPROM Ready Interrupt Enable
		EEPM0 = 4               ; EEPROM Programming Mode bit 0
		EEPM1 = 5               ; EEPROM Programming Mode bit 1
		EEPAGE = 6              ; EEPROM Page Access
		NVMBSY = 7              ; None Volatile Busy Memory Busy
	}
	EEDR(0x1d) {            ; EEPROM Data Register
		EEDR0 = 0               ; EEPROM Data bits bit 0
		EEDR1 = 1               ; EEPROM Data bits bit 1
		EEDR2 = 2               ; EEPROM Data bits bit 2
		EEDR3 = 3               ; EEPROM Data bits bit 3
		EEDR4 = 4               ; EEPROM Data bits bit 4
		EEDR5 = 5               ; EEPROM Data bits bit 5
		EEDR6 = 6               ; EEPROM Data bits bit 6
		EEDR7 = 7               ; EEPROM Data bits bit 7
	}
	EEAR(0x1e, 0x1f) {      ; EEPROM Read/Write Access Bytes
		EEAR0 = 0               ; EEPROM Address bytes bit 0
		EEAR1 = 1               ; EEPROM Address bytes bit 1
		EEAR2 = 2               ; EEPROM Address bytes bit 2
		EEAR3 = 3               ; EEPROM Address bytes bit 3
		EEAR4 = 4               ; EEPROM Address bytes bit 4
		EEAR5 = 5               ; EEPROM Address bytes bit 5
		EEAR6 = 6               ; EEPROM Address bytes bit 6
		EEAR7 = 7               ; EEPROM Address bytes bit 7
		EEAR8 = 8               ; EEPROM Address bytes bit 8
	}
	EIFR(0x20) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
		INTF2 = 2               ; External Interrupt Flags bit 2
	}
	EIMSK(0x21) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request 2 Enable bit 0
		INT1 = 1                ; External Interrupt Request 2 Enable bit 1
		INT2 = 2                ; External Interrupt Request 2 Enable bit 2
	}
	OCR0SB(0x22, 0x23) {    ; Output Compare SB Register 
		OCR0SB0 = 0             ; Output Compare 0 SB bit 0
		OCR0SB1 = 1             ; Output Compare 0 SB bit 1
		OCR0SB2 = 2             ; Output Compare 0 SB bit 2
		OCR0SB3 = 3             ; Output Compare 0 SB bit 3
		OCR0SB4 = 4             ; Output Compare 0 SB bit 4
		OCR0SB5 = 5             ; Output Compare 0 SB bit 5
		OCR0SB6 = 6             ; Output Compare 0 SB bit 6
		OCR0SB7 = 7             ; Output Compare 0 SB bit 7
		OCR0SB8 = 8             ; Output Compare 0 SB bit 8
		OCR0SB9 = 9             ; Output Compare 0 SB bit 9
		OCR0SB10 = 10           ; Output Compare 0 SB bit 10
		OCR0SB11 = 11           ; Output Compare 0 SB bit 11
	}
	OCR0RB(0x24, 0x25) {    ; Output Compare RB Register 
		OCR0RB0 = 0             ; Output Compare 0 RB bit 0
		OCR0RB1 = 1             ; Output Compare 0 RB bit 1
		OCR0RB2 = 2             ; Output Compare 0 RB bit 2
		OCR0RB3 = 3             ; Output Compare 0 RB bit 3
		OCR0RB4 = 4             ; Output Compare 0 RB bit 4
		OCR0RB5 = 5             ; Output Compare 0 RB bit 5
		OCR0RB6 = 6             ; Output Compare 0 RB bit 6
		OCR0RB7 = 7             ; Output Compare 0 RB bit 7
		OCR0RB8 = 8             ; Output Compare 0 RB bit 8
		OCR0RB9 = 9             ; Output Compare 0 RB bit 9
		OCR0RB10 = 10           ; Output Compare 0 RB bit 10
		OCR0RB11 = 11           ; Output Compare 0 RB bit 11
		OCR0RB12 = 12           ; Output Compare 0 RB bit 12
		OCR0RB13 = 13           ; Output Compare 0 RB bit 13
		OCR0RB14 = 14           ; Output Compare 0 RB bit 14
		OCR0RB15 = 15           ; Output Compare 0 RB bit 15
	}
	OCR2SB(0x26, 0x27) {    ; Output Compare SB Register 
		OCR2SB0 = 0             ; Output Compare 2 SB bit 0
		OCR2SB1 = 1             ; Output Compare 2 SB bit 1
		OCR2SB2 = 2             ; Output Compare 2 SB bit 2
		OCR2SB3 = 3             ; Output Compare 2 SB bit 3
		OCR2SB4 = 4             ; Output Compare 2 SB bit 4
		OCR2SB5 = 5             ; Output Compare 2 SB bit 5
		OCR2SB6 = 6             ; Output Compare 2 SB bit 6
		OCR2SB7 = 7             ; Output Compare 2 SB bit 7
		OCR2SB8 = 8             ; Output Compare 2 SB bit 8
		OCR2SB9 = 9             ; Output Compare 2 SB bit 9
		OCR2SB10 = 10           ; Output Compare 2 SB bit 10
		OCR2SB11 = 11           ; Output Compare 2 SB bit 11
	}
	OCR2RB(0x28, 0x29) {    ; Output Compare RB Register 
		OCR2RB0 = 0             ; Output Compare 2 RB bit 0
		OCR2RB1 = 1             ; Output Compare 2 RB bit 1
		OCR2RB2 = 2             ; Output Compare 2 RB bit 2
		OCR2RB3 = 3             ; Output Compare 2 RB bit 3
		OCR2RB4 = 4             ; Output Compare 2 RB bit 4
		OCR2RB5 = 5             ; Output Compare 2 RB bit 5
		OCR2RB6 = 6             ; Output Compare 2 RB bit 6
		OCR2RB7 = 7             ; Output Compare 2 RB bit 7
		OCR2RB8 = 8             ; Output Compare 2 RB bit 8
		OCR2RB9 = 9             ; Output Compare 2 RB bit 9
		OCR2RB10 = 10           ; Output Compare 2 RB bit 10
		OCR2RB11 = 11           ; Output Compare 2 RB bit 11
		OCR2RB12 = 12           ; Output Compare 2 RB bit 12
		OCR2RB13 = 13           ; Output Compare 2 RB bit 13
		OCR2RB14 = 14           ; Output Compare 2 RB bit 14
		OCR2RB15 = 15           ; Output Compare 2 RB bit 15
	}
	OCR0RA(0x2a, 0x2b) {    ; Output Compare RA Register 
		OCR0RA0 = 0             ; Output Compare 0 RA bit 0
		OCR0RA1 = 1             ; Output Compare 0 RA bit 1
		OCR0RA2 = 2             ; Output Compare 0 RA bit 2
		OCR0RA3 = 3             ; Output Compare 0 RA bit 3
		OCR0RA4 = 4             ; Output Compare 0 RA bit 4
		OCR0RA5 = 5             ; Output Compare 0 RA bit 5
		OCR0RA6 = 6             ; Output Compare 0 RA bit 6
		OCR0RA7 = 7             ; Output Compare 0 RA bit 7
		OCR0RA8 = 8             ; Output Compare 0 RA bit 8
		OCR0RA9 = 9             ; Output Compare 0 RA bit 9
		OCR0RA10 = 10           ; Output Compare 0 RA bit 10
		OCR0RA11 = 11           ; Output Compare 0 RA bit 11
	}
	ADC(0x2c, 0x2d) {       ; ADC Data Register Bytes
		ADC0 = 0                ; ADC Data Register bit 0
		ADC1 = 1                ; ADC Data Register bit 1
		ADC2 = 2                ; ADC Data Register bit 2
		ADC3 = 3                ; ADC Data Register bit 3
		ADC4 = 4                ; ADC Data Register bit 4
		ADC5 = 5                ; ADC Data Register bit 5
		ADC6 = 6                ; ADC Data Register bit 6
		ADC7 = 7                ; ADC Data Register bit 7
		ADC8 = 8                ; ADC Data Register bit 8
		ADC9 = 9                ; ADC Data Register bit 9
		ADC10 = 10              ; ADC Data Register bit 10
		ADC11 = 11              ; ADC Data Register bit 11
		ADC12 = 12              ; ADC Data Register bit 12
		ADC13 = 13              ; ADC Data Register bit 13
		ADC14 = 14              ; ADC Data Register bit 14
		ADC15 = 15              ; ADC Data Register bit 15
	}
	OCR2RA(0x2e, 0x2f) {    ; Output Compare RA Register 
		OCR2RA0 = 0             ; Output Compare 2 RA bit 0
		OCR2RA1 = 1             ; Output Compare 2 RA bit 1
		OCR2RA2 = 2             ; Output Compare 2 RA bit 2
		OCR2RA3 = 3             ; Output Compare 2 RA bit 3
		OCR2RA4 = 4             ; Output Compare 2 RA bit 4
		OCR2RA5 = 5             ; Output Compare 2 RA bit 5
		OCR2RA6 = 6             ; Output Compare 2 RA bit 6
		OCR2RA7 = 7             ; Output Compare 2 RA bit 7
		OCR2RA8 = 8             ; Output Compare 2 RA bit 8
		OCR2RA9 = 9             ; Output Compare 2 RA bit 9
		OCR2RA10 = 10           ; Output Compare 2 RA bit 10
		OCR2RA11 = 11           ; Output Compare 2 RA bit 11
	}
	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select bits bit 0
		SM1 = 2                 ; Sleep Mode Select bits bit 1
		SM2 = 3                 ; Sleep Mode Select bits bit 2
	}
	MCUSR(0x34) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		IVCE = 0                ; Interrupt Vector Change Enable
		IVSEL = 1               ; Interrupt Vector Select
		CKRC81 = 2              ; Frequency Selection of the Calibrated RC Oscillator
		RSTDIS = 3              ; Reset Pin Disable
		PUD = 4                 ; Pull-up disable
	}
	SPDR(0x36) {            ; SPI Data Register
		SPD0 = 0                ; SPI Data bits bit 0
		SPD1 = 1                ; SPI Data bits bit 1
		SPD2 = 2                ; SPI Data bits bit 2
		SPD3 = 3                ; SPI Data bits bit 3
		SPD4 = 4                ; SPI Data bits bit 4
		SPD5 = 5                ; SPI Data bits bit 5
		SPD6 = 6                ; SPI Data bits bit 6
		SPD7 = 7                ; SPI Data bits bit 7
	}
	SPMCSR(0x37) {          ; Store Program Memory Control Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		BLBSET = 3              ; Boot Lock Bit Set
		RWWSRE = 4              ; Read While Write section read enable
		SIGRD = 5               ; Signature Row Read
		RWWSB = 6               ; Read While Write Section Busy
		SPMIE = 7               ; SPM Interrupt Enable
	}
	DAC(0x38, 0x39) {       ; DAC Data Register
		DACH0 = 0               ; DAC Data Register Bits bit 0
		DACH1 = 1               ; DAC Data Register Bits bit 1
		DACH2 = 2               ; DAC Data Register Bits bit 2
		DACH3 = 3               ; DAC Data Register Bits bit 3
		DACH4 = 4               ; DAC Data Register Bits bit 4
		DACH5 = 5               ; DAC Data Register Bits bit 5
		DACH6 = 6               ; DAC Data Register Bits bit 6
		DACH7 = 7               ; DAC Data Register Bits bit 7
		DACH8 = 8               ; DAC Data Register Bits bit 8
		DACH9 = 9               ; DAC Data Register Bits bit 9
	}
	TCNT1(0x3a, 0x3b) {     ; Timer/Counter1 Bytes
		TCNT10 = 0              ; Timer/Counter 1 bits bit 0
		TCNT11 = 1              ; Timer/Counter 1 bits bit 1
		TCNT12 = 2              ; Timer/Counter 1 bits bit 2
		TCNT13 = 3              ; Timer/Counter 1 bits bit 3
		TCNT14 = 4              ; Timer/Counter 1 bits bit 4
		TCNT15 = 5              ; Timer/Counter 1 bits bit 5
		TCNT16 = 6              ; Timer/Counter 1 bits bit 6
		TCNT17 = 7              ; Timer/Counter 1 bits bit 7
		TCNT18 = 8              ; Timer/Counter 1 bits bit 8
		TCNT19 = 9              ; Timer/Counter 1 bits bit 9
		TCNT110 = 10            ; Timer/Counter 1 bits bit 10
		TCNT111 = 11            ; Timer/Counter 1 bits bit 11
		TCNT112 = 12            ; Timer/Counter 1 bits bit 12
		TCNT113 = 13            ; Timer/Counter 1 bits bit 13
		TCNT114 = 14            ; Timer/Counter 1 bits bit 14
		TCNT115 = 15            ; Timer/Counter 1 bits bit 15
	}
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	OCR0SA(0x60, 0x61) {    ; Output Compare SA Register 
		OCR0SA0 = 0             ; Output Compare 0 SA bit 0
		OCR0SA1 = 1             ; Output Compare 0 SA bit 1
		OCR0SA2 = 2             ; Output Compare 0 SA bit 2
		OCR0SA3 = 3             ; Output Compare 0 SA bit 3
		OCR0SA4 = 4             ; Output Compare 0 SA bit 4
		OCR0SA5 = 5             ; Output Compare 0 SA bit 5
		OCR0SA6 = 6             ; Output Compare 0 SA bit 6
		OCR0SA7 = 7             ; Output Compare 0 SA bit 7
		OCR0SA8 = 8             ; Output Compare 0 SA bit 8
		OCR0SA9 = 9             ; Output Compare 0 SA bit 9
		OCR0SA10 = 10           ; Output Compare 0 SA bit 10
		OCR0SA11 = 11           ; Output Compare 0 SA bit 11
	}
	PFRC0A(0x62) {          ; PSC 0 Input A Control
		PRFM0A0 = 0             ; PSC 0 Retrigger and Fault Mode for Part A bit 0
		PRFM0A1 = 1             ; PSC 0 Retrigger and Fault Mode for Part A bit 1
		PRFM0A2 = 2             ; PSC 0 Retrigger and Fault Mode for Part A bit 2
		PRFM0A3 = 3             ; PSC 0 Retrigger and Fault Mode for Part A bit 3
		PFLTE0A = 4             ; PSC 0 Filter Enable on Input Part A
		PELEV0A = 5             ; PSC 0 Edge Level Selector on Input Part A
		PISEL0A = 6             ; PSC 0 Input Select for Part A
		PCAE0A = 7              ; PSC 0 Capture Enable Input Part A
	}
	PFRC0B(0x63) {          ; PSC 0 Input B Control
		PRFM0B0 = 0             ; PSC 0 Retrigger and Fault Mode for Part B bit 0
		PRFM0B1 = 1             ; PSC 0 Retrigger and Fault Mode for Part B bit 1
		PRFM0B2 = 2             ; PSC 0 Retrigger and Fault Mode for Part B bit 2
		PRFM0B3 = 3             ; PSC 0 Retrigger and Fault Mode for Part B bit 3
		PFLTE0B = 4             ; PSC 0 Filter Enable on Input Part B
		PELEV0B = 5             ; PSC 0 Edge Level Selector on Input Part B
		PISEL0B = 6             ; PSC 0 Input Select for Part B
		PCAE0B = 7              ; PSC 0 Capture Enable Input Part B
	}
	OCR2SA(0x64, 0x65) {    ; Output Compare SA Register 
		OCR2SA0 = 0             ; Output Compare 2 SA bit 0
		OCR2SA1 = 1             ; Output Compare 2 SA bit 1
		OCR2SA2 = 2             ; Output Compare 2 SA bit 2
		OCR2SA3 = 3             ; Output Compare 2 SA bit 3
		OCR2SA4 = 4             ; Output Compare 2 SA bit 4
		OCR2SA5 = 5             ; Output Compare 2 SA bit 5
		OCR2SA6 = 6             ; Output Compare 2 SA bit 6
		OCR2SA7 = 7             ; Output Compare 2 SA bit 7
		OCR2SA8 = 8             ; Output Compare 2 SA bit 8
		OCR2SA9 = 9             ; Output Compare 2 SA bit 9
		OCR2SA10 = 10           ; Output Compare 2 SA bit 10
		OCR2SA11 = 11           ; Output Compare 2 SA bit 11
	}
	PFRC2A(0x66) {          ; PSC 2 Input B Control
		PRFM2A0 = 0             ; PSC 2 Retrigger and Fault Mode for Part A bit 0
		PRFM2A1 = 1             ; PSC 2 Retrigger and Fault Mode for Part A bit 1
		PRFM2A2 = 2             ; PSC 2 Retrigger and Fault Mode for Part A bit 2
		PRFM2A3 = 3             ; PSC 2 Retrigger and Fault Mode for Part A bit 3
		PFLTE2A = 4             ; PSC 2 Filter Enable on Input Part A
		PELEV2A = 5             ; PSC 2 Edge Level Selector on Input Part A
		PISEL2A = 6             ; PSC 2 Input Select for Part A
		PCAE2A = 7              ; PSC 2 Capture Enable Input Part A
	}
	PFRC2B(0x67) {          ; PSC 2 Input B Control
		PRFM2B0 = 0             ; PSC 2 Retrigger and Fault Mode for Part B bit 0
		PRFM2B1 = 1             ; PSC 2 Retrigger and Fault Mode for Part B bit 1
		PRFM2B2 = 2             ; PSC 2 Retrigger and Fault Mode for Part B bit 2
		PRFM2B3 = 3             ; PSC 2 Retrigger and Fault Mode for Part B bit 3
		PFLTE2B = 4             ; PSC 2 Filter Enable on Input Part B
		PELEV2B = 5             ; PSC 2 Edge Level Selector on Input Part B
		PISEL2B = 6             ; PSC 2 Input Select for Part B
		PCAE2B = 7              ; PSC 2 Capture Enable Input Part B
	}
	PICR0(0x68, 0x69) {     ; PSC 0 Input Capture Register 
		PICR00 = 0              ; PSC 0 Input Capture Bytes bit 0
		PICR01 = 1              ; PSC 0 Input Capture Bytes bit 1
		PICR02 = 2              ; PSC 0 Input Capture Bytes bit 2
		PICR03 = 3              ; PSC 0 Input Capture Bytes bit 3
		PICR04 = 4              ; PSC 0 Input Capture Bytes bit 4
		PICR05 = 5              ; PSC 0 Input Capture Bytes bit 5
		PICR06 = 6              ; PSC 0 Input Capture Bytes bit 6
		PICR07 = 7              ; PSC 0 Input Capture Bytes bit 7
		PICR08 = 8              ; PSC 0 Input Capture Bytes bit 8
		PICR09 = 9              ; PSC 0 Input Capture Bytes bit 9
		PICR010 = 10            ; PSC 0 Input Capture Bytes bit 10
		PICR011 = 11            ; PSC 0 Input Capture Bytes bit 11
		PCST0 = 15              ; PSC 0 Capture Software Trigger Bit
	}
	PSOC0(0x6a) {           ; PSC0 Synchro and Output Configuration
		POEN0A = 0              ; PSCOUT00 Output Enable
		POEN0B = 2              ; PSCOUT01 Output Enable
		PSYNC00 = 4             ; Synchronisation out for ADC selection bit 0
		PSYNC01 = 5             ; Synchronisation out for ADC selection bit 1
		PISEL0B1 = 6            ; PSC Input Select
		PISEL0A1 = 7            ; PSC Input Select
	}
	PICR2(0x6c, 0x6d) {     ; PSC 2 Input Capture Register
		PICR20 = 0              ; PSC 2 Input Capture Bytes bit 0
		PICR21 = 1              ; PSC 2 Input Capture Bytes bit 1
		PICR22 = 2              ; PSC 2 Input Capture Bytes bit 2
		PICR23 = 3              ; PSC 2 Input Capture Bytes bit 3
		PICR24 = 4              ; PSC 2 Input Capture Bytes bit 4
		PICR25 = 5              ; PSC 2 Input Capture Bytes bit 5
		PICR26 = 6              ; PSC 2 Input Capture Bytes bit 6
		PICR27 = 7              ; PSC 2 Input Capture Bytes bit 7
		PICR28 = 8              ; PSC 2 Input Capture Bytes bit 8
		PICR29 = 9              ; PSC 2 Input Capture Bytes bit 9
		PICR210 = 10            ; PSC 2 Input Capture Bytes bit 10
		PICR211 = 11            ; PSC 2 Input Capture Bytes bit 11
		PCST2 = 15              ; PSC 2 Capture Software Trigger Bit
	}
	PSOC2(0x6e) {           ; PSC2 Synchro and Output Configuration
		POEN2A = 0              ; PSCOUT20 Output Enable
		POEN2C = 1              ; PSCOUT22 Output Enable
		POEN2B = 2              ; PSCOUT21 Output Enable
		POEN2D = 3              ; PSCOUT23 Output Enable
		PSYNC20 = 4             ; Synchronization Out for ADC Selection bit 0
		PSYNC21 = 5             ; Synchronization Out for ADC Selection bit 1
		POS20 = 6               ; PSC 2 Output 23 Select bit 0
		POS21 = 7               ; PSC 2 Output 23 Select bit 1
	}
	POM2(0x6f) {            ; PSC 2 Output Matrix
		POMV2A0 = 0             ; Output Matrix Output A Ramps bit 0
		POMV2A1 = 1             ; Output Matrix Output A Ramps bit 1
		POMV2A2 = 2             ; Output Matrix Output A Ramps bit 2
		POMV2A3 = 3             ; Output Matrix Output A Ramps bit 3
		POMV2B0 = 4             ; Output Matrix Output B Ramps bit 0
		POMV2B1 = 5             ; Output Matrix Output B Ramps bit 1
		POMV2B2 = 6             ; Output Matrix Output B Ramps bit 2
		POMV2B3 = 7             ; Output Matrix Output B Ramps bit 3
	}
	PCNFE2(0x70) {          ; PSC 2 Enhanced Configuration Register
		PISEL2B1 = 0            ; 
		PISEL2A1 = 1            ; 
		PELEV2B1 = 2            ; 
		PELEV2A1 = 3            ; 
		PBFM21 = 4              ; 
		PASDLK20 = 5            ; 
		PASDLK21 = 6            ; 
		PASDLK22 = 7            ; 
	}
	PASDLY2(0x71) {         ; Analog Synchronization Delay Register
		PASDLY20 = 0            ; Analog Synchronization Delay bits bit 0
		PASDLY21 = 1            ; Analog Synchronization Delay bits bit 1
		PASDLY22 = 2            ; Analog Synchronization Delay bits bit 2
		PASDLY23 = 3            ; Analog Synchronization Delay bits bit 3
		PASDLY24 = 4            ; Analog Synchronization Delay bits bit 4
		PASDLY25 = 5            ; Analog Synchronization Delay bits bit 5
		PASDLY26 = 6            ; Analog Synchronization Delay bits bit 6
		PASDLY27 = 7            ; Analog Synchronization Delay bits bit 7
	}
	DACON(0x76) {           ; DAC Control Register
		DAEN = 0                ; DAC Enable Bit
		DALA = 2                ; DAC Left Adjust
		DATS0 = 4               ; DAC Trigger Selection Bits bit 0
		DATS1 = 5               ; DAC Trigger Selection Bits bit 1
		DATS2 = 6               ; DAC Trigger Selection Bits bit 2
		DAATE = 7               ; DAC Auto Trigger Enable Bit
	}
	DIDR0(0x77) {           ; Digital Input Disable Register 0
		ADC0D = 0               ; ADC0 Digital input Disable
		ADC1D = 1               ; ADC1 Digital input Disable
		ADC2D = 2               ; ADC2 Digital input Disable
		ADC3D = 3               ; ADC3 Digital input Disable
		ADC4D = 4               ; ADC4 Digital input Disable
		ADC5D = 5               ; ADC5 Digital input Disable
		ADC7D = 6               ; ADC7 Digital input Disable
		ADC8D = 7               ; ADC8 Digital input Disable
	}
	DIDR1(0x78) {           ; Digital Input Disable Register 1
		ADC9D = 0               ; ADC9 Digital input Disable
		ADC10D = 1              ; ADC10 Digital input Disable
		AMP0PD = 2              ; 
		ACMP1MD = 3             ; 
	}
	AMP0CSR(0x79) {         ; 
		AMP0TS0 = 0             ; 
		AMP0TS1 = 1             ; 
		AMP0GS = 3              ; 
		AMP0G0 = 4              ; 
		AMP0G1 = 5              ; 
		AMP0IS = 6              ; 
		AMP0EN = 7              ; 
	}
	AC1ECON(0x7a) {         ; 
		AC1H0 = 0               ; Analog Comparator Hysteresis Select bit 0
		AC1H1 = 1               ; Analog Comparator Hysteresis Select bit 1
		AC1H2 = 2               ; Analog Comparator Hysteresis Select bit 2
		AC1ICE = 3              ; Analog Comparator Interrupt Capture Enable
		AC1OE = 4               ; Analog Comparator Ouput Enable
		AC1OI = 5               ; Analog Comparator Ouput Invert
	}
	AC2ECON(0x7b) {         ; 
		AC2H0 = 0               ; Analog Comparator Hysteresis Select bit 0
		AC2H1 = 1               ; Analog Comparator Hysteresis Select bit 1
		AC2H2 = 2               ; Analog Comparator Hysteresis Select bit 2
		AC2OE = 4               ; Analog Comparator Ouput Enable
		AC2OI = 5               ; Analog Comparator Ouput Invert
	}
	AC3ECON(0x7c) {         ; 
		AC3H0 = 0               ; Analog Comparator Hysteresis Select bit 0
		AC3H1 = 1               ; Analog Comparator Hysteresis Select bit 1
		AC3H2 = 2               ; Analog Comparator Hysteresis Select bit 2
		AC3OE = 4               ; Analog Comparator Ouput Enable
		AC3OI = 5               ; Analog Comparator Ouput Invert
	}
	AC1CON(0x7d) {          ; Analog Comparator 1 Control Register
		AC1M0 = 0               ; Analog Comparator 1 Multiplexer Register bit 0
		AC1M1 = 1               ; Analog Comparator 1 Multiplexer Register bit 1
		AC1M2 = 2               ; Analog Comparator 1 Multiplexer Register bit 2
		AC1IS0 = 4              ; Analog Comparator 1  Interrupt Select Bit bit 0
		AC1IS1 = 5              ; Analog Comparator 1  Interrupt Select Bit bit 1
		AC1IE = 6               ; Analog Comparator 1 Interrupt Enable Bit
		AC1EN = 7               ; Analog Comparator 1 Enable Bit
	}
	AC2CON(0x7e) {          ; Analog Comparator 2 Control Register
		AC2M0 = 0               ; Analog Comparator 2 Multiplexer Register bit 0
		AC2M1 = 1               ; Analog Comparator 2 Multiplexer Register bit 1
		AC2M2 = 2               ; Analog Comparator 2 Multiplexer Register bit 2
		AC2IS0 = 4              ; Analog Comparator 2  Interrupt Select Bit bit 0
		AC2IS1 = 5              ; Analog Comparator 2  Interrupt Select Bit bit 1
		AC2IE = 6               ; Analog Comparator 2 Interrupt Enable Bit
		AC2EN = 7               ; Analog Comparator 2 Enable Bit
	}
	AC3CON(0x7f) {          ; Analog Comparator3 Control Register
		AC3M0 = 0               ; Analog Comparator 3 Multiplexer Register bit 0
		AC3M1 = 1               ; Analog Comparator 3 Multiplexer Register bit 1
		AC3M2 = 2               ; Analog Comparator 3 Multiplexer Register bit 2
		AC3OEA = 3              ; Analog Comparator 3 Alternate Output Enable
		AC3IS0 = 4              ; Analog Comparator 3  Interrupt Select Bit bit 0
		AC3IS1 = 5              ; Analog Comparator 3  Interrupt Select Bit bit 1
		AC3IE = 6               ; Analog Comparator 3 Interrupt Enable Bit
		AC3EN = 7               ; Analog Comparator3 Enable Bit
	}
	BGCRR(0x80) {           ; BandGap Resistor Calibration Register
		BGCR0 = 0               ; 
		BGCR1 = 1               ; 
		BGCR2 = 2               ; 
		BGCR3 = 3               ; 
	}
	BGCCR(0x81) {           ; BandGap Current Calibration Register
		BGCC0 = 0               ; 
		BGCC1 = 1               ; 
		BGCC2 = 2               ; 
		BGCC3 = 3               ; 
	}
	WDTCSR(0x82) {          ; Watchdog Timer Control Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timeout Interrupt Enable
		WDIF = 7                ; Watchdog Timeout Interrupt Flag
	}
	CLKPR(0x83) {           ; 
		CLKPS0 = 0              ; 
		CLKPS1 = 1              ; 
		CLKPS2 = 2              ; 
		CLKPS3 = 3              ; 
		CLKPCE = 7              ; 
	}
	CLKCSR(0x84) {          ; 
		CLKC0 = 0               ; Clock Control bit 0
		CLKC1 = 1               ; Clock Control bit 1
		CLKC2 = 2               ; Clock Control bit 2
		CLKC3 = 3               ; Clock Control bit 3
		CLKRDY = 4              ; Clock Ready Flag
		CLKCCE = 7              ; Clock Control Change Enable
	}
	CLKSELR(0x85) {         ; 
		CKSEL0 = 0              ; Clock Source Select bit 0
		CKSEL1 = 1              ; Clock Source Select bit 1
		CKSEL2 = 2              ; Clock Source Select bit 2
		CKSEL3 = 3              ; Clock Source Select bit 3
		CSUT0 = 4               ; Clock Start up Time bit 0
		CSUT1 = 5               ; Clock Start up Time bit 1
		COUT = 6                ; Clock OUT
	}
	PRR(0x86) {             ; Power Reduction Register
		PRADC = 0               ; Power Reduction ADC
		PRSPI = 2               ; Power Reduction Serial Peripheral Interface
		PRTIM1 = 4              ; Power Reduction Timer/Counter1
		PRPSCR = 5              ; Power Reduction PSC0
		PRPSC2 = 7              ; Power Reduction PSC2
	}
	PLLCSR(0x87) {          ; PLL Control And Status Register
		PLOCK = 0               ; PLL Lock Detector
		PLLE = 1                ; PLL Enable
		PLLF0 = 2               ; 
		PLLF1 = 3               ; 
		PLLF2 = 4               ; 
		PLLF3 = 5               ; 
	}
	OSCCAL(0x88) {          ; Oscillator Calibration Value
		OSCCAL0 = 0             ; Oscillator Calibration  bit 0
		OSCCAL1 = 1             ; Oscillator Calibration  bit 1
		OSCCAL2 = 2             ; Oscillator Calibration  bit 2
		OSCCAL3 = 3             ; Oscillator Calibration  bit 3
		OSCCAL4 = 4             ; Oscillator Calibration  bit 4
		OSCCAL5 = 5             ; Oscillator Calibration  bit 5
		OSCCAL6 = 6             ; Oscillator Calibration  bit 6
		OSCCAL7 = 7             ; Oscillator Calibration  bit 7
	}
	EICRA(0x89) {           ; External Interrupt Control Register A
		ISC00 = 0               ; External Interrupt Sense Control Bit bit 0
		ISC01 = 1               ; External Interrupt Sense Control Bit bit 1
		ISC10 = 2               ; External Interrupt Sense Control Bit bit 0
		ISC11 = 3               ; External Interrupt Sense Control Bit bit 1
		ISC20 = 4               ; External Interrupt Sense Control Bit bit 0
		ISC21 = 5               ; External Interrupt Sense Control Bit bit 1
	}
	TCCR1B(0x8a) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Prescaler source of Timer/Counter 1 bit 0
		CS11 = 1                ; Prescaler source of Timer/Counter 1 bit 1
		CS12 = 2                ; Prescaler source of Timer/Counter 1 bit 2
		WGM13 = 4               ; Waveform Generation Mode
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	ICR1(0x8c, 0x8d) {      ; Timer/Counter1 Input Capture Register Bytes
		ICR10 = 0               ; Timer/Counter1 Input Capture bits bit 0
		ICR11 = 1               ; Timer/Counter1 Input Capture bits bit 1
		ICR12 = 2               ; Timer/Counter1 Input Capture bits bit 2
		ICR13 = 3               ; Timer/Counter1 Input Capture bits bit 3
		ICR14 = 4               ; Timer/Counter1 Input Capture bits bit 4
		ICR15 = 5               ; Timer/Counter1 Input Capture bits bit 5
		ICR16 = 6               ; Timer/Counter1 Input Capture bits bit 6
		ICR17 = 7               ; Timer/Counter1 Input Capture bits bit 7
		ICR18 = 8               ; Timer/Counter1 Input Capture bits bit 8
		ICR19 = 9               ; Timer/Counter1 Input Capture bits bit 9
		ICR110 = 10             ; Timer/Counter1 Input Capture bits bit 10
		ICR111 = 11             ; Timer/Counter1 Input Capture bits bit 11
		ICR112 = 12             ; Timer/Counter1 Input Capture bits bit 12
		ICR113 = 13             ; Timer/Counter1 Input Capture bits bit 13
		ICR114 = 14             ; Timer/Counter1 Input Capture bits bit 14
		ICR115 = 15             ; Timer/Counter1 Input Capture bits bit 15
	}
}

