device {
	name = "ATmega8515"
	prog_size = 0x2000
	eeprom_size = 0x0200
	ram_size = 0x0200
	ram_start = 0x0060
}

interrupts {
	RESET = 0x00            ; External Reset, Power-on Reset and Watchdog Reset
	INT0 = 0x01             ; External Interrupt Request 0
	INT1 = 0x02             ; External Interrupt Request 1
	TIMER1_CAPT = 0x03      ; Timer/Counter1 Capture Event
	TIMER1_COMPA = 0x04     ; Timer/Counter1 Compare Match A
	TIMER1_COMPB = 0x05     ; Timer/Counter1 Compare MatchB
	TIMER1_OVF = 0x06       ; Timer/Counter1 Overflow
	TIMER0_OVF = 0x07       ; Timer/Counter0 Overflow
	SPI_STC = 0x08          ; Serial Transfer Complete
	USART_RX = 0x09         ; USART, Rx Complete
	USART_UDRE = 0x0a       ; USART Data Register Empty
	USART_TX = 0x0b         ; USART, Tx Complete
	ANA_COMP = 0x0c         ; Analog Comparator
	INT2 = 0x0d             ; External Interrupt Request 2
	TIMER0_COMP = 0x0e      ; Timer 0 Compare Match
	EE_RDY = 0x0f           ; EEPROM Ready
	SPM_RDY = 0x10          ; Store Program Memory Ready
}

registers {
	OSCCAL(0x04) {          ; Oscillator Calibration Value
		OSCCAL0 = 0             ; Oscillator Calibration  bit 0
		OSCCAL1 = 1             ; Oscillator Calibration  bit 1
		OSCCAL2 = 2             ; Oscillator Calibration  bit 2
		OSCCAL3 = 3             ; Oscillator Calibration  bit 3
		OSCCAL4 = 4             ; Oscillator Calibration  bit 4
		OSCCAL5 = 5             ; Oscillator Calibration  bit 5
		OSCCAL6 = 6             ; Oscillator Calibration  bit 6
		OSCCAL7 = 7             ; Oscillator Calibration  bit 7
	}
	PINE(0x05)              ; Port E Input Pins
	DDRE(0x06)              ; Port E Data Direction Register
	PORTE(0x07)             ; Port E Data Register
	ACSR(0x08) {            ; Analog Comparator Control And Status Register
		ACIS0 = 0               ; Analog Comparator Interrupt Mode Select bits bit 0
		ACIS1 = 1               ; Analog Comparator Interrupt Mode Select bits bit 1
		ACIC = 2                ; Analog Comparator Input Capture Enable
		ACIE = 3                ; Analog Comparator Interrupt Enable
		ACI = 4                 ; Analog Comparator Interrupt Flag
		ACO = 5                 ; Analog Compare Output
		ACBG = 6                ; Analog Comparator Bandgap Select
		ACD = 7                 ; Analog Comparator Disable
	}
	UBRRL(0x09)             ; USART Baud Rate Register Low Byte
	UCSRB(0x0a) {           ; USART Control and Status Register B
		TXB8 = 0                ; Transmit Data Bit 8
		RXB8 = 1                ; Receive Data Bit 8
		UCSZ2 = 2               ; Character Size Bit 2
		TXEN = 3                ; Transmitter Enable
		RXEN = 4                ; Receiver Enable
		UDRIE = 5               ; USART Data register Empty Interrupt Enable
		TXCIE = 6               ; TX Complete Interrupt Enable
		RXCIE = 7               ; RX Complete Interrupt Enable
	}
	UCSRA(0x0b) {           ; USART Control and Status Register A
		MPCM = 0                ; Multi-processor Communication Mode
		U2X = 1                 ; Double the USART transmission speed
		UPE = 2                 ; Parity Error
		DOR = 3                 ; Data overRun
		FE = 4                  ; Framing Error
		UDRE = 5                ; USART Data Register Empty
		TXC = 6                 ; USART Transmitt Complete
		RXC = 7                 ; USART Receive Complete
	}
	UDR(0x0c)               ; USART I/O Data Register
	SPCR(0x0d) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x0e) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x0f)              ; SPI Data Register
	PIND(0x10)              ; Port D Input Pins
	DDRD(0x11)              ; Port D Data Direction Register
	PORTD(0x12)             ; Port D Data Register
	PINC(0x13)              ; Port C Input Pins
	DDRC(0x14)              ; Port C Data Direction Register
	PORTC(0x15)             ; Port C Data Register
	PINB(0x16)              ; Port B Input Pins
	DDRB(0x17)              ; Port B Data Direction Register
	PORTB(0x18)             ; Port B Data Register
	PINA(0x19)              ; Port A Input Pins
	DDRA(0x1a)              ; Port A Data Direction Register
	PORTA(0x1b)             ; Port A Data Register
	EECR(0x1c) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEWE = 1                ; EEPROM Write Enable
		EEMWE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEPROM Ready Interrupt Enable
	}
	EEDR(0x1d)              ; EEPROM Data Register
	EEAR(0x1e, 0x1f)        ; EEPROM Address Register  Bytes
	UCSRC(0x20) {           ; USART Control and Status Register C
		UCPOL = 0               ; Clock Polarity
		UCSZ0 = 1               ; Character Size Bits bit 0
		UCSZ1 = 2               ; Character Size Bits bit 1
		USBS = 3                ; Stop Bit Select
		UPM0 = 4                ; Parity Mode Bits bit 0
		UPM1 = 5                ; Parity Mode Bits bit 1
		UMSEL = 6               ; USART Mode Select
		URSEL = 7               ; Register Select
	}
	UBRRH(0x20) {           ; USART Baud Rate Register High Byte
		UBRR0 = 0               ; USART Baud Rate Register bits bit 0
		UBRR1 = 1               ; USART Baud Rate Register bits bit 1
		UBRR10 = 2              ; USART Baud Rate Register bit 11 bit 0
		UBRR11 = 3              ; USART Baud Rate Register bit 11 bit 1
		URSEL = 7               ; Register Select
	}
	WDTCR(0x21) {           ; Watchdog Timer Control Register
		WDP0 = 0                ; Watch Dog Timer Prescaler bits bit 0
		WDP1 = 1                ; Watch Dog Timer Prescaler bits bit 1
		WDP2 = 2                ; Watch Dog Timer Prescaler bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
	}
	ICR1(0x24, 0x25)        ; Timer/Counter1 Input Capture Register  Bytes
	OCR1B(0x28, 0x29)       ; Timer/Counter1 Output Compare Register B  Bytes
	OCR1A(0x2a, 0x2b)       ; Timer/Counter1 Output Compare Register A  Bytes
	TCNT1(0x2c, 0x2d)       ; Timer/Counter1  Bytes
	TCCR1B(0x2e) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Clock Select1 bits bit 0
		CS11 = 1                ; Clock Select1 bits bit 1
		CS12 = 2                ; Clock Select1 bits bit 2
		WGM10 = 3               ; Pulse Width Modulator Select Bits bit 0
		WGM11 = 4               ; Pulse Width Modulator Select Bits bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1A(0x2f) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Pulse Width Modulator Select Bits bit 0
		WGM11 = 1               ; Pulse Width Modulator Select Bits bit 1
		FOC1B = 2               ; Force Output Compare for Channel B
		FOC1A = 3               ; Force Output Compare for Channel A
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	SFIOR(0x30) {           ; Special Function IO Register
		PSR10 = 0               ; Prescaler Reset Timer / Counter 1 and Timer / Counter 0
		PUD = 2                 ; Pull-up Disable
		XMM0 = 3                ; External Memory High Mask Bits bit 0
		XMM1 = 4                ; External Memory High Mask Bits bit 1
		XMM2 = 5                ; External Memory High Mask Bits bit 2
		XMBK = 6                ; External Memory Bus Keeper Enable
	}
	OCR0(0x31)              ; Timer/Counter 0 Output Compare Register
	TCNT0(0x32)             ; Timer/Counter 0 Register
	TCCR0(0x33) {           ; Timer/Counter 0 Control Register
		CS00 = 0                ; Clock Selects bit 0
		CS01 = 1                ; Clock Selects bit 1
		CS02 = 2                ; Clock Selects bit 2
		WGM01 = 3               ; Waveform Generation Mode 1
		COM00 = 4               ; Compare Match Output Modes bit 0
		COM01 = 5               ; Compare Match Output Modes bit 1
		WGM00 = 6               ; Waveform Generation Mode 0
		FOC0 = 7                ; Force Output Compare
	}
	MCUCSR(0x34) {          ; MCU Control And Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
		SM2 = 5                 ; Sleep Mode Select Bit 2
	}
	MCUCR(0x35) {           ; MCU Control Register
		ISC00 = 0               ; Interrupt Sense Control 0 Bits bit 0
		ISC01 = 1               ; Interrupt Sense Control 0 Bits bit 1
		ISC10 = 2               ; Interrupt Sense Control 1 Bits bit 0
		ISC11 = 3               ; Interrupt Sense Control 1 Bits bit 1
		SM1 = 4                 ; Sleep Mode Select Bit 1
		SE = 5                  ; Sleep Enable
		SRW10 = 6               ; Wait State Select Bits for Upper Sector, bit 0
		SRE = 7                 ; External SRAM/XMEM Enable
	}
	EMCUCR(0x36) {          ; Extended MCU Control Register
		ISC2 = 0                ; Interrupt Sense Control 2
		SRW11 = 1               ; Wait State Select Bits for Upper Sector, bit 1
		SRW00 = 2               ; Wait State Select Bits for Lower Sector, bits bit 0
		SRW01 = 3               ; Wait State Select Bits for Lower Sector, bits bit 1
		SRL0 = 4                ; Wait State Selector Limit bits bit 0
		SRL1 = 5                ; Wait State Selector Limit bits bit 1
		SRL2 = 6                ; Wait State Selector Limit bits bit 2
		SM0 = 7                 ; Sleep Mode Select Bit 0
	}
	SPMCR(0x37) {           ; Store Program Memory Control Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		BLBSET = 3              ; Boot Lock Bit Set
		RWWSRE = 4              ; Read-While-Write Section Read Enable
		RWWSB = 6               ; Read-While-Write Section Busy
		SPMIE = 7               ; SPM Interrupt Enable
	}
	TIFR(0x38) {            ; Timer/Counter Interrupt Flag register
		OCF0 = 0                ; Output Compare Flag 0
		TOV0 = 1                ; Timer/Counter0 Overflow Flag
		ICF1 = 3                ; Input Capture Flag 1
		OCF1B = 5               ; Output Compare Flag 1B
		OCF1A = 6               ; Output Compare Flag 1A
		TOV1 = 7                ; Timer/Counter1 Overflow Flag
	}
	TIMSK(0x39) {           ; Timer/Counter Interrupt Mask Register
		OCIE0 = 0               ; Timer/Counter0 Output Compare Match Interrupt register
		TOIE0 = 1               ; Timer/Counter0 Overflow Interrupt Enable
		TICIE1 = 3              ; Timer/Counter1 Input Capture Interrupt Enable
		OCIE1B = 5              ; Timer/Counter1 Output CompareB Match Interrupt Enable
		OCIE1A = 6              ; Timer/Counter1 Output CompareA Match Interrupt Enable
		TOIE1 = 7               ; Timer/Counter1 Overflow Interrupt Enable
	}
	GIFR(0x3a) {            ; General Interrupt Flag Register
		INTF2 = 5               ; External Interrupt Flag 2
		INTF0 = 6               ; External Interrupt Flags bit 0
		INTF1 = 7               ; External Interrupt Flags bit 1
	}
	GICR(0x3b) {            ; General Interrupt Control Register
		IVCE = 0                ; Interrupt Vector Change Enable
		IVSEL = 1               ; Interrupt Vector Select
		INT2 = 5                ; External Interrupt Request 2 Enable
		INT0 = 6                ; External Interrupt Request 0 Enable
		INT1 = 7                ; External Interrupt Request 1 Enable
	}
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
}

