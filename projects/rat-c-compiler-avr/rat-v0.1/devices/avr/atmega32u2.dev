device {
	name = "ATmega32U2"
	prog_size = 0x8000
	eeprom_size = 0x0400
	ram_size = 0x0400
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin,Power-on Reset,Brown-out Reset,Watchdog Reset,and JTAG AVR Reset. See Datasheet.     
	INT0 = 0x01             ; External Interrupt Request 0
	INT1 = 0x02             ; External Interrupt Request 1
	INT2 = 0x03             ; External Interrupt Request 2
	INT3 = 0x04             ; External Interrupt Request 3
	INT4 = 0x05             ; External Interrupt Request 4
	INT5 = 0x06             ; External Interrupt Request 5
	INT6 = 0x07             ; External Interrupt Request 6
	INT7 = 0x08             ; External Interrupt Request 7
	PCINT0 = 0x09           ; Pin Change Interrupt Request 0
	PCINT1 = 0x0a           ; Pin Change Interrupt Request 1
	USB_GEN = 0x0b          ; USB General Interrupt Request
	USB_COM = 0x0c          ; USB Endpoint/Pipe Interrupt Communication Request
	WDT = 0x0d              ; Watchdog Time-out Interrupt
	TIMER1_CAPT = 0x0e      ; Timer/Counter2 Capture Event
	TIMER1_COMPA = 0x0f     ; Timer/Counter2 Compare Match B
	TIMER1_COMPB = 0x10     ; Timer/Counter2 Compare Match B
	TIMER1_COMPC = 0x11     ; Timer/Counter2 Compare Match C
	TIMER1_OVF = 0x12       ; Timer/Counter1 Overflow
	TIMER0_COMPA = 0x13     ; Timer/Counter0 Compare Match A
	TIMER0_COMPB = 0x14     ; Timer/Counter0 Compare Match B
	TIMER0_OVF = 0x15       ; Timer/Counter0 Overflow
	SPI_STC = 0x16          ; SPI Serial Transfer Complete
	USART1_RX = 0x17        ; USART1, Rx Complete
	USART1_UDRE = 0x18      ; USART1 Data register Empty
	USART1_TX = 0x19        ; USART1, Tx Complete
	ANALOG_COMP = 0x1a      ; Analog Comparator
	EE_READY = 0x1b         ; EEPROM Ready
	SPM_READY = 0x1c        ; Store Program Memory Read
}

registers {
	PINB(0x03)              ; Port B Input Pins
	DDRB(0x04)              ; Port B Data Direction Register
	PORTB(0x05)             ; Port B Data Register
	PINC(0x06) {            ; Port C Input Pins
		PINC0 = 0               ; Port C Input Pins bits bit 0
		PINC1 = 1               ; Port C Input Pins bits bit 1
		PINC2 = 2               ; Port C Input Pins bits bit 2
		PINC0 = 4               ; Port C Input Pins bits bit 0
		PINC1 = 5               ; Port C Input Pins bits bit 1
		PINC2 = 6               ; Port C Input Pins bits bit 2
		PINC3 = 7               ; Port C Input Pins bits bit 3
	}
	DDRC(0x07) {            ; Port C Data Direction Register
		DDC0 = 0                ; Port C Data Direction Register bits bit 0
		DDC1 = 1                ; Port C Data Direction Register bits bit 1
		DDC2 = 2                ; Port C Data Direction Register bits bit 2
		DDC0 = 4                ; Port C Data Direction Register bits bit 0
		DDC1 = 5                ; Port C Data Direction Register bits bit 1
		DDC2 = 6                ; Port C Data Direction Register bits bit 2
		DDC3 = 7                ; Port C Data Direction Register bits bit 3
	}
	PORTC(0x08) {           ; Port C Data Register
		PORTC0 = 0              ; Port C Data Register bits bit 0
		PORTC1 = 1              ; Port C Data Register bits bit 1
		PORTC2 = 2              ; Port C Data Register bits bit 2
		PORTC0 = 4              ; Port C Data Register bits bit 0
		PORTC1 = 5              ; Port C Data Register bits bit 1
		PORTC2 = 6              ; Port C Data Register bits bit 2
		PORTC3 = 7              ; Port C Data Register bits bit 3
	}
	PIND(0x09)              ; Port D Input Pins
	DDRD(0x0a)              ; Port D Data Direction Register
	PORTD(0x0b)             ; Port D Data Register
	TIFR0(0x15) {           ; Timer/Counter0 Interrupt Flag register
		TOV0 = 0                ; Timer/Counter0 Overflow Flag
		OCF0A = 1               ; Timer/Counter0 Output Compare Flag 0A
		OCF0B = 2               ; Timer/Counter0 Output Compare Flag 0B
	}
	TIFR1(0x16) {           ; Timer/Counter1 Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		OCF1A = 1               ; Output Compare Flag 1A
		OCF1B = 2               ; Output Compare Flag 1B
		OCF1C = 3               ; Output Compare Flag 1C
		ICF1 = 5                ; Input Capture Flag 1
	}
	PCIFR(0x1b) {           ; Pin Change Interrupt Flag Register
		PCIF0 = 0               ; Pin Change Interrupt Flags bit 0
		PCIF1 = 1               ; Pin Change Interrupt Flags bit 1
	}
	EIFR(0x1c) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
		INTF2 = 2               ; External Interrupt Flags bit 2
		INTF3 = 3               ; External Interrupt Flags bit 3
		INTF4 = 4               ; External Interrupt Flags bit 4
		INTF5 = 5               ; External Interrupt Flags bit 5
		INTF6 = 6               ; External Interrupt Flags bit 6
		INTF7 = 7               ; External Interrupt Flags bit 7
	}
	EIMSK(0x1d) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request 7 Enable bit 0
		INT1 = 1                ; External Interrupt Request 7 Enable bit 1
		INT2 = 2                ; External Interrupt Request 7 Enable bit 2
		INT3 = 3                ; External Interrupt Request 7 Enable bit 3
		INT4 = 4                ; External Interrupt Request 7 Enable bit 4
		INT5 = 5                ; External Interrupt Request 7 Enable bit 5
		INT6 = 6                ; External Interrupt Request 7 Enable bit 6
		INT7 = 7                ; External Interrupt Request 7 Enable bit 7
	}
	GPIOR0(0x1e) {          ; General Purpose IO Register 0
		GPIOR00 = 0             ; General Purpose IO Register 0 bit 0
		GPIOR01 = 1             ; General Purpose IO Register 0 bit 1
		GPIOR02 = 2             ; General Purpose IO Register 0 bit 2
		GPIOR03 = 3             ; General Purpose IO Register 0 bit 3
		GPIOR04 = 4             ; General Purpose IO Register 0 bit 4
		GPIOR05 = 5             ; General Purpose IO Register 0 bit 5
		GPIOR06 = 6             ; General Purpose IO Register 0 bit 6
		GPIOR07 = 7             ; General Purpose IO Register 0 bit 7
	}
	EECR(0x1f) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEPE = 1                ; EEPROM Write Enable
		EEMPE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEPROM Ready Interrupt Enable
		EEPM0 = 4               ; EEPROM Programming Mode Bits bit 0
		EEPM1 = 5               ; EEPROM Programming Mode Bits bit 1
	}
	EEDR(0x20)              ; EEPROM Data Register
	EEAR(0x21, 0x22)        ; EEPROM Address Register Low Bytes
	GTCCR(0x23) {           ; General Timer/Counter Control Register
		PSRSYNC = 0             ; Prescaler Reset Timer/Counter1 and Timer/Counter0
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	TCCR0A(0x24) {          ; Timer/Counter  Control Register A
		WGM00 = 0               ; Waveform Generation Mode bit 0
		WGM01 = 1               ; Waveform Generation Mode bit 1
		COM0B0 = 4              ; Compare Output Mode, Fast PWm bit 0
		COM0B1 = 5              ; Compare Output Mode, Fast PWm bit 1
		COM0A0 = 6              ; Compare Output Mode, Phase Correct PWM Mode bit 0
		COM0A1 = 7              ; Compare Output Mode, Phase Correct PWM Mode bit 1
	}
	TCCR0B(0x25) {          ; Timer/Counter Control Register B
		CS00 = 0                ; Clock Select bit 0
		CS01 = 1                ; Clock Select bit 1
		CS02 = 2                ; Clock Select bit 2
		WGM02 = 3               ; 
		FOC0B = 6               ; Force Output Compare B
		FOC0A = 7               ; Force Output Compare A
	}
	TCNT0(0x26)             ; Timer/Counter0
	OCR0A(0x27)             ; Timer/Counter0 Output Compare Register
	OCR0B(0x28)             ; Timer/Counter0 Output Compare Register
	PLLCSR(0x29) {          ; PLL Status and Control register
		PLOCK = 0               ; PLL Lock Status Bit
		PLLE = 1                ; PLL Enable Bit
		PLLP0 = 2               ; PLL prescaler Bits bit 0
		PLLP1 = 3               ; PLL prescaler Bits bit 1
		PLLP2 = 4               ; PLL prescaler Bits bit 2
	}
	GPIOR1(0x2a) {          ; General Purpose IO Register 1
		GPIOR0 = 0              ; General Purpose IO Register 1 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 1 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 1 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 1 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 1 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 1 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 1 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 1 bis bit 7
	}
	GPIOR2(0x2b) {          ; General Purpose IO Register 2
		GPIOR0 = 0              ; General Purpose IO Register 2 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 2 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 2 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 2 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 2 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 2 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 2 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 2 bis bit 7
	}
	SPCR(0x2c) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x2d) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x2e)              ; SPI Data Register
	ACSR(0x30) {            ; Analog Comparator Control And Status Register
		ACIS0 = 0               ; Analog Comparator Interrupt Mode Select bits bit 0
		ACIS1 = 1               ; Analog Comparator Interrupt Mode Select bits bit 1
		ACIC = 2                ; Analog Comparator Input Capture Enable
		ACIE = 3                ; Analog Comparator Interrupt Enable
		ACI = 4                 ; Analog Comparator Interrupt Flag
		ACO = 5                 ; Analog Compare Output
		ACBG = 6                ; Analog Comparator Bandgap Select
		ACD = 7                 ; Analog Comparator Disable
	}
	DWDR(0x31)              ; debugWire communication register
	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select bits bit 0
		SM1 = 2                 ; Sleep Mode Select bits bit 1
		SM2 = 3                 ; Sleep Mode Select bits bit 2
	}
	MCUSR(0x34) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
		USBRF = 5               ; USB reset flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		IVCE = 0                ; Interrupt Vector Change Enable
		IVSEL = 1               ; Interrupt Vector Select
		PUD = 4                 ; Pull-up disable
	}
	SPMCSR(0x37) {          ; Store Program Memory Control Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		BLBSET = 3              ; Boot Lock Bit Set
		RWWSRE = 4              ; Read While Write section read enable
		SIGRD = 5               ; Signature Row Read
		RWWSB = 6               ; Read While Write Section Busy
		SPMIE = 7               ; SPM Interrupt Enable
	}
	EIND(0x3c)              ; Extended Indirect Register
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	WDTCSR(0x60) {          ; Watchdog Timer Control Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timeout Interrupt Enable
		WDIF = 7                ; Watchdog Timeout Interrupt Flag
	}
	CLKPR(0x61) {           ; 
		CLKPS0 = 0              ; 
		CLKPS1 = 1              ; 
		CLKPS2 = 2              ; 
		CLKPS3 = 3              ; 
		CLKPCE = 7              ; 
	}
	WDTCKD(0x62) {          ; Watchdog Timer Clock Divider
		WCLKD0 = 0              ; Watchdog Timer Clock Dividers bit 0
		WCLKD1 = 1              ; Watchdog Timer Clock Dividers bit 1
		WDEWIE = 2              ; Watchdog Early Warning Interrupt Enable
		WDEWIF = 3              ; Watchdog Early Warning Interrupt Flag
	}
	REGCR(0x63) {           ; Regulator Control Register
		REGDIS = 0              ; Regulator Disable
	}
	PRR0(0x64) {            ; Power Reduction Register0
		PRSPI = 2               ; Power Reduction Serial Peripheral Interface
		PRTIM1 = 3              ; Power Reduction Timer/Counter1
		PRTIM0 = 5              ; Power Reduction Timer/Counter0
	}
	PRR1(0x65) {            ; Power Reduction Register1
		PRUSART1 = 0            ; Power Reduction USART1
		PRUSB = 7               ; Power Reduction USB
	}
	OSCCAL(0x66) {          ; Oscillator Calibration Value
		OSCCAL0 = 0             ; Oscillator Calibration  bit 0
		OSCCAL1 = 1             ; Oscillator Calibration  bit 1
		OSCCAL2 = 2             ; Oscillator Calibration  bit 2
		OSCCAL3 = 3             ; Oscillator Calibration  bit 3
		OSCCAL4 = 4             ; Oscillator Calibration  bit 4
		OSCCAL5 = 5             ; Oscillator Calibration  bit 5
		OSCCAL6 = 6             ; Oscillator Calibration  bit 6
		OSCCAL7 = 7             ; Oscillator Calibration  bit 7
	}
	PCICR(0x68) {           ; Pin Change Interrupt Control Register
		PCIE0 = 0               ; Pin Change Interrupt Enables bit 0
		PCIE1 = 1               ; Pin Change Interrupt Enables bit 1
	}
	EICRA(0x69) {           ; External Interrupt Control Register A
		ISC00 = 0               ; External Interrupt Sense Control Bit bit 0
		ISC01 = 1               ; External Interrupt Sense Control Bit bit 1
		ISC10 = 2               ; External Interrupt Sense Control Bit bit 0
		ISC11 = 3               ; External Interrupt Sense Control Bit bit 1
		ISC20 = 4               ; External Interrupt Sense Control Bit bit 0
		ISC21 = 5               ; External Interrupt Sense Control Bit bit 1
		ISC30 = 6               ; External Interrupt Sense Control Bit bit 0
		ISC31 = 7               ; External Interrupt Sense Control Bit bit 1
	}
	EICRB(0x6a) {           ; External Interrupt Control Register B
		ISC40 = 0               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC41 = 1               ; External Interrupt 7-4 Sense Control Bit bit 1
		ISC50 = 2               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC51 = 3               ; External Interrupt 7-4 Sense Control Bit bit 1
		ISC60 = 4               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC61 = 5               ; External Interrupt 7-4 Sense Control Bit bit 1
		ISC70 = 6               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC71 = 7               ; External Interrupt 7-4 Sense Control Bit bit 1
	}
	PCMSK0(0x6b) {          ; Pin Change Mask Register 0
		PCINT0 = 0              ; Pin Change Enable Masks bit 0
		PCINT1 = 1              ; Pin Change Enable Masks bit 1
		PCINT2 = 2              ; Pin Change Enable Masks bit 2
		PCINT3 = 3              ; Pin Change Enable Masks bit 3
		PCINT4 = 4              ; Pin Change Enable Masks bit 4
		PCINT5 = 5              ; Pin Change Enable Masks bit 5
		PCINT6 = 6              ; Pin Change Enable Masks bit 6
		PCINT7 = 7              ; Pin Change Enable Masks bit 7
	}
	PCMSK1(0x6c) {          ; Pin Change Mask Register 1
		PCINT0 = 0              ; 
		PCINT1 = 1              ; 
		PCINT2 = 2              ; 
		PCINT3 = 3              ; 
		PCINT4 = 4              ; 
	}
	TIMSK0(0x6e) {          ; Timer/Counter0 Interrupt Mask Register
		TOIE0 = 0               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0A = 1              ; Timer/Counter0 Output Compare Match A Interrupt Enable
		OCIE0B = 2              ; Timer/Counter0 Output Compare Match B Interrupt Enable
	}
	TIMSK1(0x6f) {          ; Timer/Counter1 Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		OCIE1A = 1              ; Timer/Counter1 Output Compare A Match Interrupt Enable
		OCIE1B = 2              ; Timer/Counter1 Output Compare B Match Interrupt Enable
		OCIE1C = 3              ; Timer/Counter1 Output Compare C Match Interrupt Enable
		ICIE1 = 5               ; Timer/Counter1 Input Capture Interrupt Enable
	}
	ACMUX(0x7d) {           ; Analog Comparator Input Multiplexer
		CMUX0 = 0               ; Analog Comparator Selection Bits bit 0
		CMUX1 = 1               ; Analog Comparator Selection Bits bit 1
		CMUX2 = 2               ; Analog Comparator Selection Bits bit 2
	}
	DIDR1(0x7f) {           ; 
		AIN0D = 0               ; AIN0 Digital Input Disable
		AIN1D = 1               ; AIN1 Digital Input Disable
		AIN2D = 2               ; AIN2 Digital Input Disable
		AIN3D = 3               ; AIN3 Digital Input Disable
		AIN4D = 4               ; AIN4 Digital Input Disable
		AIN5D = 5               ; AIN5 Digital Input Disable
		AIN6D = 6               ; AIN6 Digital Input Disable
		AIN7D = 7               ; AIN7 Digital Input Disable
	}
	TCCR1A(0x80) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Waveform Generation Mode bit 0
		WGM11 = 1               ; Waveform Generation Mode bit 1
		COM1C0 = 2              ; Compare Output Mode 1C, bits bit 0
		COM1C1 = 3              ; Compare Output Mode 1C, bits bit 1
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR1B(0x81) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Prescaler source of Timer/Counter 1 bit 0
		CS11 = 1                ; Prescaler source of Timer/Counter 1 bit 1
		CS12 = 2                ; Prescaler source of Timer/Counter 1 bit 2
		WGM10 = 3               ; Waveform Generation Mode bit 0
		WGM11 = 4               ; Waveform Generation Mode bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1C(0x82) {          ; Timer/Counter 1 Control Register C
		FOC1C = 5               ; Force Output Compare 1C
		FOC1B = 6               ; Force Output Compare 1B
		FOC1A = 7               ; Force Output Compare 1A
	}
	TCNT1(0x84, 0x85)       ; Timer/Counter1  Bytes
	ICR1(0x86, 0x87)        ; Timer/Counter1 Input Capture Register  Bytes
	OCR1A(0x88, 0x89)       ; Timer/Counter1 Output Compare Register A  Bytes
	OCR1B(0x8a, 0x8b)       ; Timer/Counter1 Output Compare Register B  Bytes
	OCR1C(0x8c, 0x8d)       ; Timer/Counter1 Output Compare Register C  Bytes
	UCSR1A(0xc8) {          ; USART Control and Status Register A
		MPCM1 = 0               ; Multi-processor Communication Mode
		U2X1 = 1                ; Double the USART transmission speed
		UPE1 = 2                ; Parity Error
		DOR1 = 3                ; Data overRun
		FE1 = 4                 ; Framing Error
		UDRE1 = 5               ; USART Data Register Empty
		TXC1 = 6                ; USART Transmitt Complete
		RXC1 = 7                ; USART Receive Complete
	}
	UCSR1B(0xc9) {          ; USART Control and Status Register B
		TXB81 = 0               ; Transmit Data Bit 8
		RXB81 = 1               ; Receive Data Bit 8
		UCSZ12 = 2              ; Character Size
		TXEN1 = 3               ; Transmitter Enable
		RXEN1 = 4               ; Receiver Enable
		UDRIE1 = 5              ; USART Data register Empty Interrupt Enable
		TXCIE1 = 6              ; TX Complete Interrupt Enable
		RXCIE1 = 7              ; RX Complete Interrupt Enable
	}
	UCSR1C(0xca) {          ; USART Control and Status Register C
		UCPOL1 = 0              ; Clock Polarity
		UCSZ10 = 1              ; Character Size bit 0
		UCSZ11 = 2              ; Character Size bit 1
		USBS1 = 3               ; Stop Bit Select
		UPM10 = 4               ; Parity Mode Bits bit 0
		UPM11 = 5               ; Parity Mode Bits bit 1
		UMSEL10 = 6             ; USART Mode Select bit 0
		UMSEL11 = 7             ; USART Mode Select bit 1
	}
	UCSR1D(0xcb) {          ; USART Control and Status Register D
		RTSEN = 0               ; RTS Enable
		CTSEN = 1               ; CTS Enable
	}
	UBRR1(0xcc, 0xcd)       ; USART Baud Rate Register  Bytes
	UDR1(0xce)              ; USART I/O Data Register
	CLKSEL0(0xd0) {         ; 
		CLKS = 0                ; 
		EXTE = 2                ; 
		RCE = 3                 ; 
		EXSUT0 = 4              ; 
		EXSUT1 = 5              ; 
		RCSUT0 = 6              ; 
		RCSUT1 = 7              ; 
	}
	CLKSEL1(0xd1) {         ; 
		EXCKSEL0 = 0            ; 
		EXCKSEL1 = 1            ; 
		EXCKSEL2 = 2            ; 
		EXCKSEL3 = 3            ; 
		RCCKSEL0 = 4            ; 
		RCCKSEL1 = 5            ; 
		RCCKSEL2 = 6            ; 
		RCCKSEL3 = 7            ; 
	}
	CLKSTA(0xd2) {          ; 
		EXTON = 0               ; 
		RCON = 1                ; 
	}
	USBCON(0xd8) {          ; USB General Control Register
		FRZCLK = 5              ; Freeze USB Clock Bit
		USBE = 7                ; USB macro Enable Bit
	}
	UDCON(0xe0) {           ; USB Device Control Registers
		DETACH = 0              ; Detach Bit
		RMWKUP = 1              ; Remote Wake-up Bit
		RSTCPU = 2              ; USB Reset CPU Bit
	}
	UDINT(0xe1) {           ; USB Device Interrupt Register
		SUSPI = 0               ; Suspend Interrupt Flag
		SOFI = 2                ; Start Of Frame Interrupt Flag
		EORSTI = 3              ; End Of Reset Interrupt Flag
		WAKEUPI = 4             ; Wake-up CPU Interrupt Flag
		EORSMI = 5              ; End Of Resume Interrupt Flag
		UPRSMI = 6              ; Upstream Resume Interrupt Flag
	}
	UDIEN(0xe2) {           ; USB Device Interrupt Enable Register
		SUSPE = 0               ; Suspend Interrupt Enable Bit
		SOFE = 2                ; Start Of Frame Interrupt Enable Bit
		EORSTE = 3              ; End Of Reset Interrupt Enable Bit
		WAKEUPE = 4             ; Wake-up CPU Interrupt Enable Bit
		EORSME = 5              ; End Of Resume Interrupt Enable Bit
		UPRSME = 6              ; Upstream Resume Interrupt Enable Bit
	}
	UDADDR(0xe3) {          ; USB Device Address Register
		UADD0 = 0               ; USB Address Bits bit 0
		UADD1 = 1               ; USB Address Bits bit 1
		UADD2 = 2               ; USB Address Bits bit 2
		UADD3 = 3               ; USB Address Bits bit 3
		UADD4 = 4               ; USB Address Bits bit 4
		UADD5 = 5               ; USB Address Bits bit 5
		UADD6 = 6               ; USB Address Bits bit 6
		ADDEN = 7               ; Address Enable Bit
	}
	UDFNUM(0xe4, 0xe5) {    ; USB Device Frame Number High Register
		FNUM0 = 0               ; Frame Number Upper Flag bit 0
		FNUM1 = 1               ; Frame Number Upper Flag bit 1
		FNUM2 = 2               ; Frame Number Upper Flag bit 2
		FNUM3 = 3               ; Frame Number Upper Flag bit 3
		FNUM4 = 4               ; Frame Number Upper Flag bit 4
		FNUM5 = 5               ; Frame Number Upper Flag bit 5
		FNUM6 = 6               ; Frame Number Upper Flag bit 6
		FNUM7 = 7               ; Frame Number Upper Flag bit 7
		FNUM8 = 8               ; Frame Number Upper Flag bit 8
		FNUM9 = 9               ; Frame Number Upper Flag bit 9
		FNUM10 = 10             ; Frame Number Upper Flag bit 10
	}
	UDMFN(0xe6) {           ; USB Device Micro Frame Number
		FNCERR = 4              ; Frame Number CRC Error Flag
	}
	UEINTX(0xe8) {          ; USB Endpoint Interrupt Register
		TXINI = 0               ; Transmitter Ready Interrupt Flag
		STALLEDI = 1            ; STALLEDI Interrupt Flag
		RXOUTI = 2              ; Received OUT Data Interrupt Flag
		RXSTPI = 3              ; Received SETUP Interrupt Flag
		NAKOUTI = 4             ; NAK OUT Received Interrupt Flag
		RWAL = 5                ; Read/Write Allowed Flag
		NAKINI = 6              ; NAK IN Received Interrupt Flag
		FIFOCON = 7             ; FIFO Control Bit
	}
	UENUM(0xe9) {           ; USB Endpoint Number
		EPNUM0 = 0              ; Endpoint Number bits bit 0
		EPNUM1 = 1              ; Endpoint Number bits bit 1
		EPNUM2 = 2              ; Endpoint Number bits bit 2
	}
	UERST(0xea) {           ; USB Endpoint Reset Register
		EPRST0 = 0              ; Endpoint FIFO Reset Bits bit 0
		EPRST1 = 1              ; Endpoint FIFO Reset Bits bit 1
		EPRST2 = 2              ; Endpoint FIFO Reset Bits bit 2
		EPRST3 = 3              ; Endpoint FIFO Reset Bits bit 3
		EPRST4 = 4              ; Endpoint FIFO Reset Bits bit 4
	}
	UECONX(0xeb) {          ; USB Endpoint Control Register
		EPEN = 0                ; Endpoint Enable Bit
		RSTDT = 3               ; Reset Data Toggle Bit
		STALLRQC = 4            ; STALL Request Clear Handshake Bit
		STALLRQ = 5             ; STALL Request Handshake Bit
	}
	UECFG0X(0xec) {         ; USB Endpoint Configuration 0 Register
		EPDIR = 0               ; Endpoint Direction Bit
		EPTYPE0 = 6             ; Endpoint Type Bits bit 0
		EPTYPE1 = 7             ; Endpoint Type Bits bit 1
	}
	UECFG1X(0xed) {         ; USB Endpoint Configuration 1 Register
		ALLOC = 1               ; Endpoint Allocation Bit
		EPBK0 = 2               ; Endpoint Bank Bits bit 0
		EPBK1 = 3               ; Endpoint Bank Bits bit 1
		EPSIZE0 = 4             ; Endpoint Size Bits bit 0
		EPSIZE1 = 5             ; Endpoint Size Bits bit 1
		EPSIZE2 = 6             ; Endpoint Size Bits bit 2
	}
	UESTA0X(0xee) {         ; USB Endpoint Status 0 Register
		NBUSYBK0 = 0            ; Busy Bank Flag bit 0
		NBUSYBK1 = 1            ; Busy Bank Flag bit 1
		DTSEQ0 = 2              ; Data Toggle Sequencing Flag bit 0
		DTSEQ1 = 3              ; Data Toggle Sequencing Flag bit 1
		UNDERFI = 5             ; Underflow Error Interrupt Flag
		OVERFI = 6              ; Overflow Error Interrupt Flag
		CFGOK = 7               ; Configuration Status Flag
	}
	UESTA1X(0xef) {         ; USB Endpoint Status 1 Register
		CURRBK0 = 0             ; Current Bank bit 0
		CURRBK1 = 1             ; Current Bank bit 1
		CTRLDIR = 2             ; Control Direction
	}
	UEIENX(0xf0) {          ; USB Endpoint Interrupt Enable Register
		TXINE = 0               ; Transmitter Ready Interrupt Enable Flag
		STALLEDE = 1            ; Stalled Interrupt Enable Flag
		RXOUTE = 2              ; Received OUT Data Interrupt Enable Flag
		RXSTPE = 3              ; Received SETUP Interrupt Enable Flag
		NAKOUTE = 4             ; NAK OUT Interrupt Enable Bit
		NAKINE = 6              ; NAK IN Interrupt Enable Bit
		FLERRE = 7              ; Flow Error Interrupt Enable Flag
	}
	UEDATX(0xf1) {          ; USB Data Endpoint
		DAT0 = 0                ; Data bits bit 0
		DAT1 = 1                ; Data bits bit 1
		DAT2 = 2                ; Data bits bit 2
		DAT3 = 3                ; Data bits bit 3
		DAT4 = 4                ; Data bits bit 4
		DAT5 = 5                ; Data bits bit 5
		DAT6 = 6                ; Data bits bit 6
		DAT7 = 7                ; Data bits bit 7
	}
	UEBCLX(0xf2) {          ; USB Endpoint Byte Count Register
		BYCT0 = 0               ; Byte Count bits bit 0
		BYCT1 = 1               ; Byte Count bits bit 1
		BYCT2 = 2               ; Byte Count bits bit 2
		BYCT3 = 3               ; Byte Count bits bit 3
		BYCT4 = 4               ; Byte Count bits bit 4
		BYCT5 = 5               ; Byte Count bits bit 5
		BYCT6 = 6               ; Byte Count bits bit 6
		BYCT7 = 7               ; Byte Count bits bit 7
	}
	UEINT(0xf4) {           ; USB Endpoint Number Interrupt Register
		EPINT0 = 0              ; Byte Count bits bit 0
		EPINT1 = 1              ; Byte Count bits bit 1
		EPINT2 = 2              ; Byte Count bits bit 2
		EPINT3 = 3              ; Byte Count bits bit 3
		EPINT4 = 4              ; Byte Count bits bit 4
	}
	UPOE(0xfb) {            ; USB Software Output Enable register
		DMI = 0                 ; D- Input value
		DPI = 1                 ; D+ Input value
		UPDRV0 = 4              ; USB direct drive values bit 0
		UPDRV1 = 5              ; USB direct drive values bit 1
		UPWE0 = 6               ; USB Buffers Direct Drive enable configuration bit 0
		UPWE1 = 7               ; USB Buffers Direct Drive enable configuration bit 1
	}
}

