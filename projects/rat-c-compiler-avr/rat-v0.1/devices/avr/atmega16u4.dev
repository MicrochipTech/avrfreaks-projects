device {
	name = "ATmega16U4"
	prog_size = 0x4000
	eeprom_size = 0x0200
	ram_size = 0x0500
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin,Power-on Reset,Brown-out Reset,Watchdog Reset,and JTAG AVR Reset. See Datasheet.     
	INT0 = 0x01             ; External Interrupt Request 0
	INT1 = 0x02             ; External Interrupt Request 1
	INT2 = 0x03             ; External Interrupt Request 2
	INT3 = 0x04             ; External Interrupt Request 3
	Reserved1 = 0x05        ; Reserved1
	Reserved2 = 0x06        ; Reserved2
	INT6 = 0x07             ; External Interrupt Request 6
	Reserved3 = 0x08        ; Reserved3
	PCINT0 = 0x09           ; Pin Change Interrupt Request 0
	USB_GEN = 0x0a          ; USB General Interrupt Request
	USB_COM = 0x0b          ; USB Endpoint/Pipe Interrupt Communication Request
	WDT = 0x0c              ; Watchdog Time-out Interrupt
	Reserved4 = 0x0d        ; Reserved4
	Reserved5 = 0x0e        ; Reserved5
	Reserved6 = 0x0f        ; Reserved6
	TIMER1_CAPT = 0x10      ; Timer/Counter1 Capture Event
	TIMER1_COMPA = 0x11     ; Timer/Counter1 Compare Match A
	TIMER1_COMPB = 0x12     ; Timer/Counter1 Compare Match B
	TIMER1_COMPC = 0x13     ; Timer/Counter1 Compare Match C
	TIMER1_OVF = 0x14       ; Timer/Counter1 Overflow
	TIMER0_COMPA = 0x15     ; Timer/Counter0 Compare Match A
	TIMER0_COMPB = 0x16     ; Timer/Counter0 Compare Match B
	TIMER0_OVF = 0x17       ; Timer/Counter0 Overflow
	SPI_STC = 0x18          ; SPI Serial Transfer Complete
	USART1_RX = 0x19        ; USART1, Rx Complete
	USART1_UDRE = 0x1a      ; USART1 Data register Empty
	USART1_TX = 0x1b        ; USART1, Tx Complete
	ANALOG_COMP = 0x1c      ; Analog Comparator
	ADC = 0x1d              ; ADC Conversion Complete
	EE_READY = 0x1e         ; EEPROM Ready
	TIMER3_CAPT = 0x1f      ; Timer/Counter3 Capture Event
	TIMER3_COMPA = 0x20     ; Timer/Counter3 Compare Match A
	TIMER3_COMPB = 0x21     ; Timer/Counter3 Compare Match B
	TIMER3_COMPC = 0x22     ; Timer/Counter3 Compare Match C
	TIMER3_OVF = 0x23       ; Timer/Counter3 Overflow
	TWI = 0x24              ; 2-wire Serial Interface        
	SPM_READY = 0x25        ; Store Program Memory Read
	TIMER4_COMPA = 0x26     ; Timer/Counter4 Compare Match A
	TIMER4_COMPB = 0x27     ; Timer/Counter4 Compare Match B
	TIMER4_COMPD = 0x28     ; Timer/Counter4 Compare Match D
	TIMER4_OVF = 0x29       ; Timer/Counter4 Overflow
	TIMER4_FPF = 0x2a       ; Timer/Counter4 Fault Protection Interrupt
}

registers {
	PINB(0x03)              ; Port B Input Pins
	DDRB(0x04)              ; Port B Data Direction Register
	PORTB(0x05)             ; Port B Data Register
	PINC(0x06)              ; Port C Input Pins
	DDRC(0x07)              ; Port C Data Direction Register
	PORTC(0x08)             ; Port C Data Register
	PIND(0x09)              ; Port D Input Pins
	DDRD(0x0a)              ; Port D Data Direction Register
	PORTD(0x0b)             ; Port D Data Register
	PINE(0x0c)              ; Input Pins, Port E
	DDRE(0x0d)              ; Data Direction Register, Port E
	PORTE(0x0e)             ; Data Register, Port E
	PINF(0x0f)              ; Input Pins, Port F
	DDRF(0x10)              ; Data Direction Register, Port F
	PORTF(0x11)             ; Data Register, Port F
	TIFR0(0x15) {           ; Timer/Counter0 Interrupt Flag register
		TOV0 = 0                ; Timer/Counter0 Overflow Flag
		OCF0A = 1               ; Timer/Counter0 Output Compare Flag 0A
		OCF0B = 2               ; Timer/Counter0 Output Compare Flag 0B
	}
	TIFR1(0x16) {           ; Timer/Counter1 Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		OCF1A = 1               ; Output Compare Flag 1A
		OCF1B = 2               ; Output Compare Flag 1B
		OCF1C = 3               ; Output Compare Flag 1C
		ICF1 = 5                ; Input Capture Flag 1
	}
	TIFR3(0x18) {           ; Timer/Counter3 Interrupt Flag register
		TOV3 = 0                ; Timer/Counter3 Overflow Flag
		OCF3A = 1               ; Output Compare Flag 3A
		OCF3B = 2               ; Output Compare Flag 3B
		OCF3C = 3               ; Output Compare Flag 3C
		ICF3 = 5                ; Input Capture Flag 3
	}
	TIFR4(0x19) {           ; Timer/Counter4 Interrupt Flag register
		TOV4 = 2                ; Timer/Counter4 Overflow Flag
		OCF4B = 5               ; Output Compare Flag 4B
		OCF4A = 6               ; Output Compare Flag 4A
		OCF4D = 7               ; Output Compare Flag 4D
	}
	PCIFR(0x1b) {           ; Pin Change Interrupt Flag Register
		PCIF0 = 0               ; Pin Change Interrupt Flag 0
	}
	EIFR(0x1c) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
		INTF2 = 2               ; External Interrupt Flags bit 2
		INTF3 = 3               ; External Interrupt Flags bit 3
		INTF4 = 4               ; External Interrupt Flags bit 4
		INTF5 = 5               ; External Interrupt Flags bit 5
		INTF6 = 6               ; External Interrupt Flags bit 6
		INTF7 = 7               ; External Interrupt Flags bit 7
	}
	EIMSK(0x1d) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request 7 Enable bit 0
		INT1 = 1                ; External Interrupt Request 7 Enable bit 1
		INT2 = 2                ; External Interrupt Request 7 Enable bit 2
		INT3 = 3                ; External Interrupt Request 7 Enable bit 3
		INT4 = 4                ; External Interrupt Request 7 Enable bit 4
		INT5 = 5                ; External Interrupt Request 7 Enable bit 5
		INT6 = 6                ; External Interrupt Request 7 Enable bit 6
		INT7 = 7                ; External Interrupt Request 7 Enable bit 7
	}
	GPIOR0(0x1e) {          ; General Purpose IO Register 0
		GPIOR00 = 0             ; General Purpose IO Register 0 bit 0
		GPIOR01 = 1             ; General Purpose IO Register 0 bit 1
		GPIOR02 = 2             ; General Purpose IO Register 0 bit 2
		GPIOR03 = 3             ; General Purpose IO Register 0 bit 3
		GPIOR04 = 4             ; General Purpose IO Register 0 bit 4
		GPIOR05 = 5             ; General Purpose IO Register 0 bit 5
		GPIOR06 = 6             ; General Purpose IO Register 0 bit 6
		GPIOR07 = 7             ; General Purpose IO Register 0 bit 7
	}
	EECR(0x1f) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEPE = 1                ; EEPROM Write Enable
		EEMPE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEPROM Ready Interrupt Enable
		EEPM0 = 4               ; EEPROM Programming Mode Bits bit 0
		EEPM1 = 5               ; EEPROM Programming Mode Bits bit 1
	}
	EEDR(0x20) {            ; EEPROM Data Register
		EEDR0 = 0               ; EEPROM Data Bits bit 0
		EEDR1 = 1               ; EEPROM Data Bits bit 1
		EEDR2 = 2               ; EEPROM Data Bits bit 2
		EEDR3 = 3               ; EEPROM Data Bits bit 3
		EEDR4 = 4               ; EEPROM Data Bits bit 4
		EEDR5 = 5               ; EEPROM Data Bits bit 5
		EEDR6 = 6               ; EEPROM Data Bits bit 6
		EEDR7 = 7               ; EEPROM Data Bits bit 7
	}
	EEAR(0x21, 0x22) {      ; EEPROM Address Register Low Bytes
		EEAR0 = 0               ; EEPROM Address Bits bit 0
		EEAR1 = 1               ; EEPROM Address Bits bit 1
		EEAR2 = 2               ; EEPROM Address Bits bit 2
		EEAR3 = 3               ; EEPROM Address Bits bit 3
		EEAR4 = 4               ; EEPROM Address Bits bit 4
		EEAR5 = 5               ; EEPROM Address Bits bit 5
		EEAR6 = 6               ; EEPROM Address Bits bit 6
		EEAR7 = 7               ; EEPROM Address Bits bit 7
		EEAR8 = 8               ; EEPROM Address Bits bit 8
		EEAR9 = 9               ; EEPROM Address Bits bit 9
		EEAR10 = 10             ; EEPROM Address Bits bit 10
		EEAR11 = 11             ; EEPROM Address Bits bit 11
	}
	GTCCR(0x23) {           ; General Timer/Counter Control Register
		PSRSYNC = 0             ; Prescaler Reset Timer/Counter1 and Timer/Counter0
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	TCCR0A(0x24) {          ; Timer/Counter  Control Register A
		WGM00 = 0               ; Waveform Generation Mode bit 0
		WGM01 = 1               ; Waveform Generation Mode bit 1
		COM0B0 = 4              ; Compare Output Mode, Fast PWm bit 0
		COM0B1 = 5              ; Compare Output Mode, Fast PWm bit 1
		COM0A0 = 6              ; Compare Output Mode, Phase Correct PWM Mode bit 0
		COM0A1 = 7              ; Compare Output Mode, Phase Correct PWM Mode bit 1
	}
	TCCR0B(0x25) {          ; Timer/Counter Control Register B
		CS00 = 0                ; Clock Select bit 0
		CS01 = 1                ; Clock Select bit 1
		CS02 = 2                ; Clock Select bit 2
		WGM02 = 3               ; 
		FOC0B = 6               ; Force Output Compare B
		FOC0A = 7               ; Force Output Compare A
	}
	TCNT0(0x26) {           ; Timer/Counter0
		TCNT00 = 0              ; Timer/Counter0 bits bit 0
		TCNT01 = 1              ; Timer/Counter0 bits bit 1
		TCNT02 = 2              ; Timer/Counter0 bits bit 2
		TCNT03 = 3              ; Timer/Counter0 bits bit 3
		TCNT04 = 4              ; Timer/Counter0 bits bit 4
		TCNT05 = 5              ; Timer/Counter0 bits bit 5
		TCNT06 = 6              ; Timer/Counter0 bits bit 6
		TCNT07 = 7              ; Timer/Counter0 bits bit 7
	}
	OCR0A(0x27) {           ; Timer/Counter0 Output Compare Register
		OCR0A0 = 0              ; Timer/Counter0 Output Compare A bits bit 0
		OCR0A1 = 1              ; Timer/Counter0 Output Compare A bits bit 1
		OCR0A2 = 2              ; Timer/Counter0 Output Compare A bits bit 2
		OCR0A3 = 3              ; Timer/Counter0 Output Compare A bits bit 3
		OCR0A4 = 4              ; Timer/Counter0 Output Compare A bits bit 4
		OCR0A5 = 5              ; Timer/Counter0 Output Compare A bits bit 5
		OCR0A6 = 6              ; Timer/Counter0 Output Compare A bits bit 6
		OCR0A7 = 7              ; Timer/Counter0 Output Compare A bits bit 7
	}
	OCR0B(0x28) {           ; Timer/Counter0 Output Compare Register
		OCR0B0 = 0              ; Timer/Counter0 Output Compare B bits bit 0
		OCR0B1 = 1              ; Timer/Counter0 Output Compare B bits bit 1
		OCR0B2 = 2              ; Timer/Counter0 Output Compare B bits bit 2
		OCR0B3 = 3              ; Timer/Counter0 Output Compare B bits bit 3
		OCR0B4 = 4              ; Timer/Counter0 Output Compare B bits bit 4
		OCR0B5 = 5              ; Timer/Counter0 Output Compare B bits bit 5
		OCR0B6 = 6              ; Timer/Counter0 Output Compare B bits bit 6
		OCR0B7 = 7              ; Timer/Counter0 Output Compare B bits bit 7
	}
	PLLCSR(0x29) {          ; PLL Status and Control register
		PLOCK = 0               ; PLL Lock Status Bit
		PLLE = 1                ; PLL Enable Bit
		PINDIV = 4              ; PLL prescaler Bit 2
	}
	GPIOR1(0x2a) {          ; General Purpose IO Register 1
		GPIOR0 = 0              ; General Purpose IO Register 1 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 1 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 1 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 1 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 1 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 1 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 1 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 1 bis bit 7
	}
	GPIOR2(0x2b) {          ; General Purpose IO Register 2
		GPIOR0 = 0              ; General Purpose IO Register 2 bis bit 0
		GPIOR1 = 1              ; General Purpose IO Register 2 bis bit 1
		GPIOR2 = 2              ; General Purpose IO Register 2 bis bit 2
		GPIOR3 = 3              ; General Purpose IO Register 2 bis bit 3
		GPIOR4 = 4              ; General Purpose IO Register 2 bis bit 4
		GPIOR5 = 5              ; General Purpose IO Register 2 bis bit 5
		GPIOR6 = 6              ; General Purpose IO Register 2 bis bit 6
		GPIOR7 = 7              ; General Purpose IO Register 2 bis bit 7
	}
	SPCR(0x2c) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x2d) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x2e) {            ; SPI Data Register
		SPDR0 = 0               ; SPI Data bits bit 0
		SPDR1 = 1               ; SPI Data bits bit 1
		SPDR2 = 2               ; SPI Data bits bit 2
		SPDR3 = 3               ; SPI Data bits bit 3
		SPDR4 = 4               ; SPI Data bits bit 4
		SPDR5 = 5               ; SPI Data bits bit 5
		SPDR6 = 6               ; SPI Data bits bit 6
		SPDR7 = 7               ; SPI Data bits bit 7
	}
	ACSR(0x30) {            ; Analog Comparator Control And Status Register
		ACIS0 = 0               ; Analog Comparator Interrupt Mode Select bits bit 0
		ACIS1 = 1               ; Analog Comparator Interrupt Mode Select bits bit 1
		ACIC = 2                ; Analog Comparator Input Capture Enable
		ACIE = 3                ; Analog Comparator Interrupt Enable
		ACI = 4                 ; Analog Comparator Interrupt Flag
		ACO = 5                 ; Analog Compare Output
		ACBG = 6                ; Analog Comparator Bandgap Select
		ACD = 7                 ; Analog Comparator Disable
	}
	OCDR(0x31)              ; On-Chip Debug Related Register in I/O Memory
	PLLFRQ(0x32) {          ; PLL Frequency Control Register
		PDIV0 = 0               ; 
		PDIV1 = 1               ; 
		PDIV2 = 2               ; 
		PDIV3 = 3               ; 
		PLLTM0 = 4              ; 
		PLLTM1 = 5              ; 
		PLLUSB = 6              ; 
		PINMUX = 7              ; 
	}
	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select bits bit 0
		SM1 = 2                 ; Sleep Mode Select bits bit 1
		SM2 = 3                 ; Sleep Mode Select bits bit 2
	}
	MCUSR(0x34) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BORF = 2                ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
		JTRF = 4                ; JTAG Reset Flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		IVCE = 0                ; Interrupt Vector Change Enable
		IVSEL = 1               ; Interrupt Vector Select
		PUD = 4                 ; Pull-up disable
		JTD = 7                 ; JTAG Interface Disable
	}
	SPMCSR(0x37) {          ; Store Program Memory Control Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		BLBSET = 3              ; Boot Lock Bit Set
		RWWSRE = 4              ; Read While Write section read enable
		SIGRD = 5               ; Signature Row Read
		RWWSB = 6               ; Read While Write Section Busy
		SPMIE = 7               ; SPM Interrupt Enable
	}
	RAMPZ(0x3b) {           ; Extended Z-pointer Register for ELPM/SPM
		RAMPZ0 = 0              ; Extended Z-Pointer Value bit 0
		RAMPZ1 = 1              ; Extended Z-Pointer Value bit 1
	}
	EIND(0x3c)              ; Extended Indirect Register
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	WDTCSR(0x60) {          ; Watchdog Timer Control Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timeout Interrupt Enable
		WDIF = 7                ; Watchdog Timeout Interrupt Flag
	}
	CLKPR(0x61) {           ; 
		CLKPS0 = 0              ; 
		CLKPS1 = 1              ; 
		CLKPS2 = 2              ; 
		CLKPS3 = 3              ; 
		CLKPCE = 7              ; 
	}
	PRR0(0x64) {            ; Power Reduction Register0
		PRADC = 0               ; Power Reduction ADC
		PRUSART0 = 1            ; Power Reduction USART
		PRSPI = 2               ; Power Reduction Serial Peripheral Interface
		PRTIM1 = 3              ; Power Reduction Timer/Counter1
		PRTIM0 = 5              ; Power Reduction Timer/Counter0
		PRTIM2 = 6              ; Power Reduction Timer/Counter2
		PRTWI = 7               ; Power Reduction TWI
	}
	PRR1(0x65) {            ; Power Reduction Register1
		PRUSART1 = 0            ; Power Reduction USART1
		PRTIM3 = 3              ; Power Reduction Timer/Counter3
		PRUSB = 7               ; Power Reduction USB
	}
	OSCCAL(0x66) {          ; Oscillator Calibration Value
		OSCCAL0 = 0             ; Oscillator Calibration  bit 0
		OSCCAL1 = 1             ; Oscillator Calibration  bit 1
		OSCCAL2 = 2             ; Oscillator Calibration  bit 2
		OSCCAL3 = 3             ; Oscillator Calibration  bit 3
		OSCCAL4 = 4             ; Oscillator Calibration  bit 4
		OSCCAL5 = 5             ; Oscillator Calibration  bit 5
		OSCCAL6 = 6             ; Oscillator Calibration  bit 6
		OSCCAL7 = 7             ; Oscillator Calibration  bit 7
	}
	RCCTRL(0x67) {          ; Oscillator Control Register
		RCFREQ = 0              ; 
	}
	PCICR(0x68) {           ; Pin Change Interrupt Control Register
		PCIE0 = 0               ; Pin Change Interrupt Enable 0
	}
	EICRA(0x69) {           ; External Interrupt Control Register A
		ISC00 = 0               ; External Interrupt Sense Control Bit bit 0
		ISC01 = 1               ; External Interrupt Sense Control Bit bit 1
		ISC10 = 2               ; External Interrupt Sense Control Bit bit 0
		ISC11 = 3               ; External Interrupt Sense Control Bit bit 1
		ISC20 = 4               ; External Interrupt Sense Control Bit bit 0
		ISC21 = 5               ; External Interrupt Sense Control Bit bit 1
		ISC30 = 6               ; External Interrupt Sense Control Bit bit 0
		ISC31 = 7               ; External Interrupt Sense Control Bit bit 1
	}
	EICRB(0x6a) {           ; External Interrupt Control Register B
		ISC40 = 0               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC41 = 1               ; External Interrupt 7-4 Sense Control Bit bit 1
		ISC50 = 2               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC51 = 3               ; External Interrupt 7-4 Sense Control Bit bit 1
		ISC60 = 4               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC61 = 5               ; External Interrupt 7-4 Sense Control Bit bit 1
		ISC70 = 6               ; External Interrupt 7-4 Sense Control Bit bit 0
		ISC71 = 7               ; External Interrupt 7-4 Sense Control Bit bit 1
	}
	PCMSK0(0x6b) {          ; Pin Change Mask Register 0
		PCINT0 = 0              ; Pin Change Mask 0 bit 0
		PCINT1 = 1              ; Pin Change Mask 0 bit 1
		PCINT2 = 2              ; Pin Change Mask 0 bit 2
		PCINT3 = 3              ; Pin Change Mask 0 bit 3
		PCINT4 = 4              ; Pin Change Mask 0 bit 4
		PCINT5 = 5              ; Pin Change Mask 0 bit 5
		PCINT6 = 6              ; Pin Change Mask 0 bit 6
		PCINT7 = 7              ; Pin Change Mask 0 bit 7
	}
	TIMSK0(0x6e) {          ; Timer/Counter0 Interrupt Mask Register
		TOIE0 = 0               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0A = 1              ; Timer/Counter0 Output Compare Match A Interrupt Enable
		OCIE0B = 2              ; Timer/Counter0 Output Compare Match B Interrupt Enable
	}
	TIMSK1(0x6f) {          ; Timer/Counter1 Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		OCIE1A = 1              ; Timer/Counter1 Output Compare A Match Interrupt Enable
		OCIE1B = 2              ; Timer/Counter1 Output Compare B Match Interrupt Enable
		OCIE1C = 3              ; Timer/Counter1 Output Compare C Match Interrupt Enable
		ICIE1 = 5               ; Timer/Counter1 Input Capture Interrupt Enable
	}
	TIMSK3(0x71) {          ; Timer/Counter3 Interrupt Mask Register
		TOIE3 = 0               ; Timer/Counter3 Overflow Interrupt Enable
		OCIE3A = 1              ; Timer/Counter3 Output Compare A Match Interrupt Enable
		OCIE3B = 2              ; Timer/Counter3 Output Compare B Match Interrupt Enable
		OCIE3C = 3              ; Timer/Counter3 Output Compare C Match Interrupt Enable
		ICIE3 = 5               ; Timer/Counter3 Input Capture Interrupt Enable
	}
	TIMSK4(0x72) {          ; Timer/Counter4 Interrupt Mask Register
		TOIE4 = 2               ; Timer/Counter4 Overflow Interrupt Enable
		OCIE4B = 5              ; Timer/Counter4 Output Compare B Match Interrupt Enable
		OCIE4A = 6              ; Timer/Counter4 Output Compare A Match Interrupt Enable
		OCIE4D = 7              ; Timer/Counter4 Output Compare D Match Interrupt Enable
	}
	ADC(0x78, 0x79) {       ; ADC Data Register  Bytes
		ADC0 = 0                ; ADC Data Bits bit 0
		ADC1 = 1                ; ADC Data Bits bit 1
		ADC2 = 2                ; ADC Data Bits bit 2
		ADC3 = 3                ; ADC Data Bits bit 3
		ADC4 = 4                ; ADC Data Bits bit 4
		ADC5 = 5                ; ADC Data Bits bit 5
		ADC6 = 6                ; ADC Data Bits bit 6
		ADC7 = 7                ; ADC Data Bits bit 7
		ADC8 = 8                ; ADC Data Bits bit 8
		ADC9 = 9                ; ADC Data Bits bit 9
	}
	ADCSRA(0x7a) {          ; The ADC Control and Status register
		ADPS0 = 0               ; ADC  Prescaler Select Bits bit 0
		ADPS1 = 1               ; ADC  Prescaler Select Bits bit 1
		ADPS2 = 2               ; ADC  Prescaler Select Bits bit 2
		ADIE = 3                ; ADC Interrupt Enable
		ADIF = 4                ; ADC Interrupt Flag
		ADATE = 5               ; ADC Auto Trigger Enable
		ADSC = 6                ; ADC Start Conversion
		ADEN = 7                ; ADC Enable
	}
	ADCSRB(0x7b) {          ; ADC Control and Status Register B
		ADTS0 = 0               ; ADC Auto Trigger Sources bit 0
		ADTS1 = 1               ; ADC Auto Trigger Sources bit 1
		ADTS2 = 2               ; ADC Auto Trigger Sources bit 2
		ADTS3 = 3               ; ADC Auto Trigger Sources bit 3
		MUX5 = 5                ; Analog Channel and Gain Selection Bits
		ACME = 6                ; Analog Comparator Multiplexer Enable
		ADHSM = 7               ; ADC High Speed Mode
	}
	ADMUX(0x7c) {           ; The ADC multiplexer Selection Register
		MUX0 = 0                ; Analog Channel and Gain Selection Bits bit 0
		MUX1 = 1                ; Analog Channel and Gain Selection Bits bit 1
		MUX2 = 2                ; Analog Channel and Gain Selection Bits bit 2
		MUX3 = 3                ; Analog Channel and Gain Selection Bits bit 3
		MUX4 = 4                ; Analog Channel and Gain Selection Bits bit 4
		ADLAR = 5               ; Left Adjust Result
		REFS0 = 6               ; Reference Selection Bits bit 0
		REFS1 = 7               ; Reference Selection Bits bit 1
	}
	DIDR2(0x7d) {           ; Digital Input Disable Register 1
		ADC8D = 0               ; ADC8 Digital input Disable
		ADC9D = 1               ; ADC9 Digital input Disable
		ADC10D = 2              ; ADC10 Digital input Disable
		ADC11D = 3              ; ADC11 Digital input Disable
		ADC12D = 4              ; ADC12 Digital input Disable
		ADC13D = 5              ; ADC13 Digital input Disable
	}
	DIDR0(0x7e) {           ; Digital Input Disable Register 1
		ADC0D = 0               ; ADC0 Digital input Disable
		ADC1D = 1               ; ADC1 Digital input Disable
		ADC2D = 2               ; ADC2 Digital input Disable
		ADC3D = 3               ; ADC3 Digital input Disable
		ADC4D = 4               ; ADC4 Digital input Disable
		ADC5D = 5               ; ADC5 Digital input Disable
		ADC6D = 6               ; ADC6 Digital input Disable
		ADC7D = 7               ; ADC7 Digital input Disable
	}
	DIDR1(0x7f) {           ; 
		AIN0D = 0               ; AIN0 Digital Input Disable
		AIN1D = 1               ; AIN1 Digital Input Disable
	}
	TCCR1A(0x80) {          ; Timer/Counter1 Control Register A
		WGM10 = 0               ; Waveform Generation Mode bit 0
		WGM11 = 1               ; Waveform Generation Mode bit 1
		COM1C0 = 2              ; Compare Output Mode 1C, bits bit 0
		COM1C1 = 3              ; Compare Output Mode 1C, bits bit 1
		COM1B0 = 4              ; Compare Output Mode 1B, bits bit 0
		COM1B1 = 5              ; Compare Output Mode 1B, bits bit 1
		COM1A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM1A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR1B(0x81) {          ; Timer/Counter1 Control Register B
		CS10 = 0                ; Prescaler source of Timer/Counter 1 bit 0
		CS11 = 1                ; Prescaler source of Timer/Counter 1 bit 1
		CS12 = 2                ; Prescaler source of Timer/Counter 1 bit 2
		WGM10 = 3               ; Waveform Generation Mode bit 0
		WGM11 = 4               ; Waveform Generation Mode bit 1
		ICES1 = 6               ; Input Capture 1 Edge Select
		ICNC1 = 7               ; Input Capture 1 Noise Canceler
	}
	TCCR1C(0x82) {          ; Timer/Counter 1 Control Register C
		FOC1C = 5               ; Force Output Compare 1C
		FOC1B = 6               ; Force Output Compare 1B
		FOC1A = 7               ; Force Output Compare 1A
	}
	TCNT1(0x84, 0x85) {     ; Timer/Counter1 Bytes
		TCNT10 = 0              ; Timer/Counter1 bits bit 0
		TCNT11 = 1              ; Timer/Counter1 bits bit 1
		TCNT12 = 2              ; Timer/Counter1 bits bit 2
		TCNT13 = 3              ; Timer/Counter1 bits bit 3
		TCNT14 = 4              ; Timer/Counter1 bits bit 4
		TCNT15 = 5              ; Timer/Counter1 bits bit 5
		TCNT16 = 6              ; Timer/Counter1 bits bit 6
		TCNT17 = 7              ; Timer/Counter1 bits bit 7
		TCNT18 = 8              ; Timer/Counter1 bits bit 8
		TCNT19 = 9              ; Timer/Counter1 bits bit 9
		TCNT110 = 10            ; Timer/Counter1 bits bit 10
		TCNT111 = 11            ; Timer/Counter1 bits bit 11
		TCNT112 = 12            ; Timer/Counter1 bits bit 12
		TCNT113 = 13            ; Timer/Counter1 bits bit 13
		TCNT114 = 14            ; Timer/Counter1 bits bit 14
		TCNT115 = 15            ; Timer/Counter1 bits bit 15
	}
	ICR1(0x86, 0x87) {      ; Timer/Counter1 Input Capture Register Bytes
		ICR10 = 0               ; Timer/Counter1 Input Capture bits bit 0
		ICR11 = 1               ; Timer/Counter1 Input Capture bits bit 1
		ICR12 = 2               ; Timer/Counter1 Input Capture bits bit 2
		ICR13 = 3               ; Timer/Counter1 Input Capture bits bit 3
		ICR14 = 4               ; Timer/Counter1 Input Capture bits bit 4
		ICR15 = 5               ; Timer/Counter1 Input Capture bits bit 5
		ICR16 = 6               ; Timer/Counter1 Input Capture bits bit 6
		ICR17 = 7               ; Timer/Counter1 Input Capture bits bit 7
		ICR18 = 8               ; Timer/Counter1 Input Capture bits bit 8
		ICR19 = 9               ; Timer/Counter1 Input Capture bits bit 9
		ICR110 = 10             ; Timer/Counter1 Input Capture bits bit 10
		ICR111 = 11             ; Timer/Counter1 Input Capture bits bit 11
		ICR112 = 12             ; Timer/Counter1 Input Capture bits bit 12
		ICR113 = 13             ; Timer/Counter1 Input Capture bits bit 13
		ICR114 = 14             ; Timer/Counter1 Input Capture bits bit 14
		ICR115 = 15             ; Timer/Counter1 Input Capture bits bit 15
	}
	OCR1A(0x88, 0x89) {     ; Timer/Counter1 Output Compare Register A Bytes
		OCR1A0 = 0              ; Timer/Counter1 Output Compare A bits bit 0
		OCR1A1 = 1              ; Timer/Counter1 Output Compare A bits bit 1
		OCR1A2 = 2              ; Timer/Counter1 Output Compare A bits bit 2
		OCR1A3 = 3              ; Timer/Counter1 Output Compare A bits bit 3
		OCR1A4 = 4              ; Timer/Counter1 Output Compare A bits bit 4
		OCR1A5 = 5              ; Timer/Counter1 Output Compare A bits bit 5
		OCR1A6 = 6              ; Timer/Counter1 Output Compare A bits bit 6
		OCR1A7 = 7              ; Timer/Counter1 Output Compare A bits bit 7
		OCR1A8 = 8              ; Timer/Counter1 Output Compare A bits bit 8
		OCR1A9 = 9              ; Timer/Counter1 Output Compare A bits bit 9
		OCR1A10 = 10            ; Timer/Counter1 Output Compare A bits bit 10
		OCR1A11 = 11            ; Timer/Counter1 Output Compare A bits bit 11
		OCR1A12 = 12            ; Timer/Counter1 Output Compare A bits bit 12
		OCR1A13 = 13            ; Timer/Counter1 Output Compare A bits bit 13
		OCR1A14 = 14            ; Timer/Counter1 Output Compare A bits bit 14
		OCR1A15 = 15            ; Timer/Counter1 Output Compare A bits bit 15
	}
	OCR1B(0x8a, 0x8b) {     ; Timer/Counter1 Output Compare Register B Bytes
		OCR1B0 = 0              ; Timer/Counter1 Output Compare B bits bit 0
		OCR1B1 = 1              ; Timer/Counter1 Output Compare B bits bit 1
		OCR1B2 = 2              ; Timer/Counter1 Output Compare B bits bit 2
		OCR1B3 = 3              ; Timer/Counter1 Output Compare B bits bit 3
		OCR1B4 = 4              ; Timer/Counter1 Output Compare B bits bit 4
		OCR1B5 = 5              ; Timer/Counter1 Output Compare B bits bit 5
		OCR1B6 = 6              ; Timer/Counter1 Output Compare B bits bit 6
		OCR1B7 = 7              ; Timer/Counter1 Output Compare B bits bit 7
		OCR1B8 = 8              ; Timer/Counter1 Output Compare B bits bit 8
		OCR1B9 = 9              ; Timer/Counter1 Output Compare B bits bit 9
		OCR1B10 = 10            ; Timer/Counter1 Output Compare B bits bit 10
		OCR1B11 = 11            ; Timer/Counter1 Output Compare B bits bit 11
		OCR1B12 = 12            ; Timer/Counter1 Output Compare B bits bit 12
		OCR1B13 = 13            ; Timer/Counter1 Output Compare B bits bit 13
		OCR1B14 = 14            ; Timer/Counter1 Output Compare B bits bit 14
		OCR1B15 = 15            ; Timer/Counter1 Output Compare B bits bit 15
	}
	OCR1C(0x8c, 0x8d) {     ; Timer/Counter1 Output Compare Register C Bytes
		OCR1C0 = 0              ; Timer/Counter1 Output Compare C bits bit 0
		OCR1C1 = 1              ; Timer/Counter1 Output Compare C bits bit 1
		OCR1C2 = 2              ; Timer/Counter1 Output Compare C bits bit 2
		OCR1C3 = 3              ; Timer/Counter1 Output Compare C bits bit 3
		OCR1C4 = 4              ; Timer/Counter1 Output Compare C bits bit 4
		OCR1C5 = 5              ; Timer/Counter1 Output Compare C bits bit 5
		OCR1C6 = 6              ; Timer/Counter1 Output Compare C bits bit 6
		OCR1C7 = 7              ; Timer/Counter1 Output Compare C bits bit 7
		OCR1C8 = 8              ; Timer/Counter1 Output Compare C bits bit 8
		OCR1C9 = 9              ; Timer/Counter1 Output Compare C bits bit 9
		OCR1C10 = 10            ; Timer/Counter1 Output Compare C bits bit 10
		OCR1C11 = 11            ; Timer/Counter1 Output Compare C bits bit 11
		OCR1C12 = 12            ; Timer/Counter1 Output Compare C bits bit 12
		OCR1C13 = 13            ; Timer/Counter1 Output Compare C bits bit 13
		OCR1C14 = 14            ; Timer/Counter1 Output Compare C bits bit 14
		OCR1C15 = 15            ; Timer/Counter1 Output Compare C bits bit 15
	}
	TCCR3A(0x90) {          ; Timer/Counter3 Control Register A
		WGM30 = 0               ; Waveform Generation Mode bit 0
		WGM31 = 1               ; Waveform Generation Mode bit 1
		COM3C0 = 2              ; Compare Output Mode 3C, bits bit 0
		COM3C1 = 3              ; Compare Output Mode 3C, bits bit 1
		COM3B0 = 4              ; Compare Output Mode 3B, bits bit 0
		COM3B1 = 5              ; Compare Output Mode 3B, bits bit 1
		COM3A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM3A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR3B(0x91) {          ; Timer/Counter3 Control Register B
		CS30 = 0                ; Prescaler source of Timer/Counter 3 bit 0
		CS31 = 1                ; Prescaler source of Timer/Counter 3 bit 1
		CS32 = 2                ; Prescaler source of Timer/Counter 3 bit 2
		WGM30 = 3               ; Waveform Generation Mode bit 0
		WGM31 = 4               ; Waveform Generation Mode bit 1
		ICES3 = 6               ; Input Capture 3 Edge Select
		ICNC3 = 7               ; Input Capture 3 Noise Canceler
	}
	TCCR3C(0x92) {          ; Timer/Counter 3 Control Register C
		FOC3C = 5               ; Force Output Compare 3C
		FOC3B = 6               ; Force Output Compare 3B
		FOC3A = 7               ; Force Output Compare 3A
	}
	TCNT3(0x94, 0x95) {     ; Timer/Counter3 Bytes
		TCNT30 = 0              ; Timer/Counter3 bits bit 0
		TCNT31 = 1              ; Timer/Counter3 bits bit 1
		TCNT32 = 2              ; Timer/Counter3 bits bit 2
		TCNT33 = 3              ; Timer/Counter3 bits bit 3
		TCNT34 = 4              ; Timer/Counter3 bits bit 4
		TCNT35 = 5              ; Timer/Counter3 bits bit 5
		TCNT36 = 6              ; Timer/Counter3 bits bit 6
		TCNT37 = 7              ; Timer/Counter3 bits bit 7
		TCNT38 = 8              ; Timer/Counter3 bits bit 8
		TCNT39 = 9              ; Timer/Counter3 bits bit 9
		TCNT310 = 10            ; Timer/Counter3 bits bit 10
		TCNT311 = 11            ; Timer/Counter3 bits bit 11
		TCNT312 = 12            ; Timer/Counter3 bits bit 12
		TCNT313 = 13            ; Timer/Counter3 bits bit 13
		TCNT314 = 14            ; Timer/Counter3 bits bit 14
		TCNT315 = 15            ; Timer/Counter3 bits bit 15
	}
	ICR3(0x96, 0x97) {      ; Timer/Counter3 Input Capture Register  Bytes
		ICR30 = 0               ; Timer/Counter3 Input Capture bits bit 0
		ICR31 = 1               ; Timer/Counter3 Input Capture bits bit 1
		ICR32 = 2               ; Timer/Counter3 Input Capture bits bit 2
		ICR33 = 3               ; Timer/Counter3 Input Capture bits bit 3
		ICR34 = 4               ; Timer/Counter3 Input Capture bits bit 4
		ICR35 = 5               ; Timer/Counter3 Input Capture bits bit 5
		ICR36 = 6               ; Timer/Counter3 Input Capture bits bit 6
		ICR37 = 7               ; Timer/Counter3 Input Capture bits bit 7
		ICR38 = 8               ; Timer/Counter3 Input Capture bits bit 8
		ICR39 = 9               ; Timer/Counter3 Input Capture bits bit 9
		ICR310 = 10             ; Timer/Counter3 Input Capture bits bit 10
		ICR311 = 11             ; Timer/Counter3 Input Capture bits bit 11
		ICR312 = 12             ; Timer/Counter3 Input Capture bits bit 12
		ICR313 = 13             ; Timer/Counter3 Input Capture bits bit 13
		ICR314 = 14             ; Timer/Counter3 Input Capture bits bit 14
		ICR315 = 15             ; Timer/Counter3 Input Capture bits bit 15
	}
	OCR3A(0x98, 0x99) {     ; Timer/Counter3 Output Compare Register A  Bytes
		OCR3A0 = 0              ; Timer/Counter3 Output Compare A bits bit 0
		OCR3A1 = 1              ; Timer/Counter3 Output Compare A bits bit 1
		OCR3A2 = 2              ; Timer/Counter3 Output Compare A bits bit 2
		OCR3A3 = 3              ; Timer/Counter3 Output Compare A bits bit 3
		OCR3A4 = 4              ; Timer/Counter3 Output Compare A bits bit 4
		OCR3A5 = 5              ; Timer/Counter3 Output Compare A bits bit 5
		OCR3A6 = 6              ; Timer/Counter3 Output Compare A bits bit 6
		OCR3A7 = 7              ; Timer/Counter3 Output Compare A bits bit 7
		OCR3A8 = 8              ; Timer/Counter3 Output Compare A bits bit 8
		OCR3A9 = 9              ; Timer/Counter3 Output Compare A bits bit 9
		OCR3A10 = 10            ; Timer/Counter3 Output Compare A bits bit 10
		OCR3A11 = 11            ; Timer/Counter3 Output Compare A bits bit 11
		OCR3A12 = 12            ; Timer/Counter3 Output Compare A bits bit 12
		OCR3A13 = 13            ; Timer/Counter3 Output Compare A bits bit 13
		OCR3A14 = 14            ; Timer/Counter3 Output Compare A bits bit 14
		OCR3A15 = 15            ; Timer/Counter3 Output Compare A bits bit 15
	}
	OCR3B(0x9a, 0x9b) {     ; Timer/Counter3 Output Compare Register B Bytes
		OCR3B0 = 0              ; Timer/Counter3 Output Compare B bits bit 0
		OCR3B1 = 1              ; Timer/Counter3 Output Compare B bits bit 1
		OCR3B2 = 2              ; Timer/Counter3 Output Compare B bits bit 2
		OCR3B3 = 3              ; Timer/Counter3 Output Compare B bits bit 3
		OCR3B4 = 4              ; Timer/Counter3 Output Compare B bits bit 4
		OCR3B5 = 5              ; Timer/Counter3 Output Compare B bits bit 5
		OCR3B6 = 6              ; Timer/Counter3 Output Compare B bits bit 6
		OCR3B7 = 7              ; Timer/Counter3 Output Compare B bits bit 7
		OCR3B8 = 8              ; Timer/Counter3 Output Compare B bits bit 8
		OCR3B9 = 9              ; Timer/Counter3 Output Compare B bits bit 9
		OCR3B10 = 10            ; Timer/Counter3 Output Compare B bits bit 10
		OCR3B11 = 11            ; Timer/Counter3 Output Compare B bits bit 11
		OCR3B12 = 12            ; Timer/Counter3 Output Compare B bits bit 12
		OCR3B13 = 13            ; Timer/Counter3 Output Compare B bits bit 13
		OCR3B14 = 14            ; Timer/Counter3 Output Compare B bits bit 14
		OCR3B15 = 15            ; Timer/Counter3 Output Compare B bits bit 15
	}
	OCR3C(0x9c, 0x9d) {     ; Timer/Counter3 Output Compare Register C Bytes
		OCR3C0 = 0              ; Timer/Counter3 Output Compare C bits bit 0
		OCR3C1 = 1              ; Timer/Counter3 Output Compare C bits bit 1
		OCR3C2 = 2              ; Timer/Counter3 Output Compare C bits bit 2
		OCR3C3 = 3              ; Timer/Counter3 Output Compare C bits bit 3
		OCR3C4 = 4              ; Timer/Counter3 Output Compare C bits bit 4
		OCR3C5 = 5              ; Timer/Counter3 Output Compare C bits bit 5
		OCR3C6 = 6              ; Timer/Counter3 Output Compare C bits bit 6
		OCR3C7 = 7              ; Timer/Counter3 Output Compare C bits bit 7
		OCR3C8 = 8              ; Timer/Counter3 Output Compare C bits bit 8
		OCR3C9 = 9              ; Timer/Counter3 Output Compare C bits bit 9
		OCR3C10 = 10            ; Timer/Counter3 Output Compare C bits bit 10
		OCR3C11 = 11            ; Timer/Counter3 Output Compare C bits bit 11
		OCR3C12 = 12            ; Timer/Counter3 Output Compare C bits bit 12
		OCR3C13 = 13            ; Timer/Counter3 Output Compare C bits bit 13
		OCR3C14 = 14            ; Timer/Counter3 Output Compare C bits bit 14
		OCR3C15 = 15            ; Timer/Counter3 Output Compare C bits bit 15
	}
	TWBR(0xb8)              ; TWI Bit Rate register
	TWSR(0xb9) {            ; TWI Status Register
		TWPS0 = 0               ; TWI Prescaler bit 0
		TWPS1 = 1               ; TWI Prescaler bit 1
		TWS0 = 3                ; TWI Status bit 0
		TWS1 = 4                ; TWI Status bit 1
		TWS2 = 5                ; TWI Status bit 2
		TWS3 = 6                ; TWI Status bit 3
		TWS4 = 7                ; TWI Status bit 4
	}
	TWAR(0xba) {            ; TWI (Slave) Address register
		TWGCE = 0               ; TWI General Call Recognition Enable Bit
		TWA0 = 1                ; TWI (Slave) Address register Bits bit 0
		TWA1 = 2                ; TWI (Slave) Address register Bits bit 1
		TWA2 = 3                ; TWI (Slave) Address register Bits bit 2
		TWA3 = 4                ; TWI (Slave) Address register Bits bit 3
		TWA4 = 5                ; TWI (Slave) Address register Bits bit 4
		TWA5 = 6                ; TWI (Slave) Address register Bits bit 5
		TWA6 = 7                ; TWI (Slave) Address register Bits bit 6
	}
	TWDR(0xbb)              ; TWI Data register
	TWCR(0xbc) {            ; TWI Control Register
		TWIE = 0                ; TWI Interrupt Enable
		TWEN = 2                ; TWI Enable Bit
		TWWC = 3                ; TWI Write Collition Flag
		TWSTO = 4               ; TWI Stop Condition Bit
		TWSTA = 5               ; TWI Start Condition Bit
		TWEA = 6                ; TWI Enable Acknowledge Bit
		TWINT = 7               ; TWI Interrupt Flag
	}
	TWAMR(0xbd) {           ; TWI (Slave) Address Mask Register
		TWAM0 = 1               ; 
		TWAM1 = 2               ; 
		TWAM2 = 3               ; 
		TWAM3 = 4               ; 
		TWAM4 = 5               ; 
		TWAM5 = 6               ; 
		TWAM6 = 7               ; 
	}
	TCNT4(0xbe) {           ; Timer/Counter4 Low Bytes
		TC40 = 0                ; Timer/Counter4 bits bit 0
		TC41 = 1                ; Timer/Counter4 bits bit 1
		TC42 = 2                ; Timer/Counter4 bits bit 2
		TC43 = 3                ; Timer/Counter4 bits bit 3
		TC44 = 4                ; Timer/Counter4 bits bit 4
		TC45 = 5                ; Timer/Counter4 bits bit 5
		TC46 = 6                ; Timer/Counter4 bits bit 6
		TC47 = 7                ; Timer/Counter4 bits bit 7
	}
	TC4H(0xbf) {            ; Timer/Counter4
		TC40 = 0                ; Timer/Counter4 bits bit 0
		TC41 = 1                ; Timer/Counter4 bits bit 1
		TC42 = 2                ; Timer/Counter4 bits bit 2
	}
	TCCR4A(0xc0) {          ; Timer/Counter4 Control Register A
		PWM4B = 0               ; 
		PWM4A = 1               ; 
		FOC4B = 2               ; Force Output Compare Match 4B
		FOC4A = 3               ; Force Output Compare Match 4A
		COM4B0 = 4              ; Compare Output Mode 4B, bits bit 0
		COM4B1 = 5              ; Compare Output Mode 4B, bits bit 1
		COM4A0 = 6              ; Compare Output Mode 1A, bits bit 0
		COM4A1 = 7              ; Compare Output Mode 1A, bits bit 1
	}
	TCCR4B(0xc1) {          ; Timer/Counter4 Control Register B
		CS40 = 0                ; Clock Select Bits bit 0
		CS41 = 1                ; Clock Select Bits bit 1
		CS42 = 2                ; Clock Select Bits bit 2
		CS43 = 3                ; Clock Select Bits bit 3
		DTPS40 = 4              ; Dead Time Prescaler Bits bit 0
		DTPS41 = 5              ; Dead Time Prescaler Bits bit 1
		PSR4 = 6                ; Prescaler Reset Timer/Counter 4
		PWM4X = 7               ; PWM Inversion Mode
	}
	TCCR4C(0xc2) {          ; Timer/Counter 4 Control Register C
		PWM4D = 0               ; Pulse Width Modulator D Enable
		FOC4D = 1               ; Force Output Compare Match 4D
		COM4D0 = 2              ; Comparator D Output Mode bit 0
		COM4D1 = 3              ; Comparator D Output Mode bit 1
		COM4B0S = 4             ; Comparator B Output Mode
		COM4B1S = 5             ; Comparator B Output Mode
		COM4A0S = 6             ; Comparator A Output Mode
		COM4A1S = 7             ; Comparator A Output Mode
	}
	TCCR4D(0xc3) {          ; Timer/Counter 4 Control Register D
		WGM40 = 0               ; Waveform Generation Mode bits bit 0
		WGM41 = 1               ; Waveform Generation Mode bits bit 1
		FPF4 = 2                ; Fault Protection Interrupt Flag
		FPAC4 = 3               ; Fault Protection Analog Comparator Enable
		FPES4 = 4               ; Fault Protection Edge Select
		FPNC4 = 5               ; Fault Protection Noise Canceler
		FPEN4 = 6               ; Fault Protection Mode Enable
		FPIE4 = 7               ; Fault Protection Interrupt Enable
	}
	TCCR4E(0xc4) {          ; Timer/Counter 4 Control Register E
		OC4OE0 = 0              ; Output Compare Override Enable bit bit 0
		OC4OE1 = 1              ; Output Compare Override Enable bit bit 1
		OC4OE2 = 2              ; Output Compare Override Enable bit bit 2
		OC4OE3 = 3              ; Output Compare Override Enable bit bit 3
		OC4OE4 = 4              ; Output Compare Override Enable bit bit 4
		OC4OE5 = 5              ; Output Compare Override Enable bit bit 5
		ENHC4 = 6               ; Enhanced Compare/PWM Mode
		TLOCK4 = 7              ; Register Update Lock
	}
	CLKSEL0(0xc5) {         ; 
		CLKS = 0                ; 
		EXTE = 2                ; 
		RCE = 3                 ; 
		EXSUT0 = 4              ; 
		EXSUT1 = 5              ; 
		RCSUT0 = 6              ; 
		RCSUT1 = 7              ; 
	}
	CLKSEL1(0xc6) {         ; 
		EXCKSEL0 = 0            ; 
		EXCKSEL1 = 1            ; 
		EXCKSEL2 = 2            ; 
		EXCKSEL3 = 3            ; 
		RCCKSEL0 = 4            ; 
		RCCKSEL1 = 5            ; 
		RCCKSEL2 = 6            ; 
		RCCKSEL3 = 7            ; 
	}
	CLKSTA(0xc7) {          ; 
		EXTON = 0               ; 
		RCON = 1                ; 
	}
	UCSR1A(0xc8) {          ; USART Control and Status Register A
		MPCM1 = 0               ; Multi-processor Communication Mode
		U2X1 = 1                ; Double the USART transmission speed
		UPE1 = 2                ; Parity Error
		DOR1 = 3                ; Data overRun
		FE1 = 4                 ; Framing Error
		UDRE1 = 5               ; USART Data Register Empty
		TXC1 = 6                ; USART Transmitt Complete
		RXC1 = 7                ; USART Receive Complete
	}
	UCSR1B(0xc9) {          ; USART Control and Status Register B
		TXB81 = 0               ; Transmit Data Bit 8
		RXB81 = 1               ; Receive Data Bit 8
		UCSZ12 = 2              ; Character Size
		TXEN1 = 3               ; Transmitter Enable
		RXEN1 = 4               ; Receiver Enable
		UDRIE1 = 5              ; USART Data register Empty Interrupt Enable
		TXCIE1 = 6              ; TX Complete Interrupt Enable
		RXCIE1 = 7              ; RX Complete Interrupt Enable
	}
	UCSR1C(0xca) {          ; USART Control and Status Register C
		UCPOL1 = 0              ; Clock Polarity
		UCSZ10 = 1              ; Character Size bit 0
		UCSZ11 = 2              ; Character Size bit 1
		USBS1 = 3               ; Stop Bit Select
		UPM10 = 4               ; Parity Mode Bits bit 0
		UPM11 = 5               ; Parity Mode Bits bit 1
		UMSEL10 = 6             ; USART Mode Select bit 0
		UMSEL11 = 7             ; USART Mode Select bit 1
	}
	UCSR1D(0xcb) {          ; USART Control and Status Register D
		RTSEN = 0               ; RTS Enable
		CTSEN = 1               ; CTS Enable
	}
	UBRR1(0xcc, 0xcd)       ; USART Baud Rate Register  Bytes
	UDR1(0xce) {            ; USART I/O Data Register
		UDR10 = 0               ; USART I/O Data bits bit 0
		UDR11 = 1               ; USART I/O Data bits bit 1
		UDR12 = 2               ; USART I/O Data bits bit 2
		UDR13 = 3               ; USART I/O Data bits bit 3
		UDR14 = 4               ; USART I/O Data bits bit 4
		UDR15 = 5               ; USART I/O Data bits bit 5
		UDR16 = 6               ; USART I/O Data bits bit 6
		UDR17 = 7               ; USART I/O Data bits bit 7
	}
	OCR4A(0xcf) {           ; Timer/Counter4 Output Compare Register A
		OCR4A0 = 0              ; Timer/Counter4 Output Compare A bits bit 0
		OCR4A1 = 1              ; Timer/Counter4 Output Compare A bits bit 1
		OCR4A2 = 2              ; Timer/Counter4 Output Compare A bits bit 2
		OCR4A3 = 3              ; Timer/Counter4 Output Compare A bits bit 3
		OCR4A4 = 4              ; Timer/Counter4 Output Compare A bits bit 4
		OCR4A5 = 5              ; Timer/Counter4 Output Compare A bits bit 5
		OCR4A6 = 6              ; Timer/Counter4 Output Compare A bits bit 6
		OCR4A7 = 7              ; Timer/Counter4 Output Compare A bits bit 7
	}
	OCR4B(0xd0) {           ; Timer/Counter4 Output Compare Register B
		OCR4B0 = 0              ; Timer/Counter4 Output Compare B bits bit 0
		OCR4B1 = 1              ; Timer/Counter4 Output Compare B bits bit 1
		OCR4B2 = 2              ; Timer/Counter4 Output Compare B bits bit 2
		OCR4B3 = 3              ; Timer/Counter4 Output Compare B bits bit 3
		OCR4B4 = 4              ; Timer/Counter4 Output Compare B bits bit 4
		OCR4B5 = 5              ; Timer/Counter4 Output Compare B bits bit 5
		OCR4B6 = 6              ; Timer/Counter4 Output Compare B bits bit 6
		OCR4B7 = 7              ; Timer/Counter4 Output Compare B bits bit 7
	}
	OCR4C(0xd1) {           ; Timer/Counter4 Output Compare Register C
		OCR4C0 = 0              ; Timer/Counter4 Output Compare C bits bit 0
		OCR4C1 = 1              ; Timer/Counter4 Output Compare C bits bit 1
		OCR4C2 = 2              ; Timer/Counter4 Output Compare C bits bit 2
		OCR4C3 = 3              ; Timer/Counter4 Output Compare C bits bit 3
		OCR4C4 = 4              ; Timer/Counter4 Output Compare C bits bit 4
		OCR4C5 = 5              ; Timer/Counter4 Output Compare C bits bit 5
		OCR4C6 = 6              ; Timer/Counter4 Output Compare C bits bit 6
		OCR4C7 = 7              ; Timer/Counter4 Output Compare C bits bit 7
	}
	OCR4D(0xd2) {           ; Timer/Counter4 Output Compare Register D
		OCR4D0 = 0              ; Timer/Counter4 Output Compare D bits bit 0
		OCR4D1 = 1              ; Timer/Counter4 Output Compare D bits bit 1
		OCR4D2 = 2              ; Timer/Counter4 Output Compare D bits bit 2
		OCR4D3 = 3              ; Timer/Counter4 Output Compare D bits bit 3
		OCR4D4 = 4              ; Timer/Counter4 Output Compare D bits bit 4
		OCR4D5 = 5              ; Timer/Counter4 Output Compare D bits bit 5
		OCR4D6 = 6              ; Timer/Counter4 Output Compare D bits bit 6
		OCR4D7 = 7              ; Timer/Counter4 Output Compare D bits bit 7
	}
	DT4(0xd4) {             ; Timer/Counter 4 Dead Time Value
		DT4L0 = 0               ; Timer/Counter 4 Dead Time Value Bits bit 0
		DT4L1 = 1               ; Timer/Counter 4 Dead Time Value Bits bit 1
		DT4L2 = 2               ; Timer/Counter 4 Dead Time Value Bits bit 2
		DT4L3 = 3               ; Timer/Counter 4 Dead Time Value Bits bit 3
		DT4L4 = 4               ; Timer/Counter 4 Dead Time Value Bits bit 4
		DT4L5 = 5               ; Timer/Counter 4 Dead Time Value Bits bit 5
		DT4L6 = 6               ; Timer/Counter 4 Dead Time Value Bits bit 6
		DT4L7 = 7               ; Timer/Counter 4 Dead Time Value Bits bit 7
	}
	UHWCON(0xd7) {          ; 
		UVREGE = 0              ; 
	}
	USBCON(0xd8) {          ; USB General Control Register
		VBUSTE = 0              ; 
		OTGPADE = 4             ; 
		FRZCLK = 5              ; 
		USBE = 7                ; 
	}
	USBSTA(0xd9) {          ; 
		VBUS = 0                ; 
		SPEED = 3               ; 
	}
	USBINT(0xda) {          ; 
		VBUSTI = 0              ; 
	}
	UDCON(0xe0) {           ; 
		DETACH = 0              ; 
		RMWKUP = 1              ; 
		LSM = 2                 ; USB low speed mode
		RSTCPU = 3              ; 
	}
	UDINT(0xe1) {           ; 
		SUSPI = 0               ; 
		SOFI = 2                ; 
		EORSTI = 3              ; 
		WAKEUPI = 4             ; 
		EORSMI = 5              ; 
		UPRSMI = 6              ; 
	}
	UDIEN(0xe2) {           ; 
		SUSPE = 0               ; 
		SOFE = 2                ; 
		EORSTE = 3              ; 
		WAKEUPE = 4             ; 
		EORSME = 5              ; 
		UPRSME = 6              ; 
	}
	UDADDR(0xe3) {          ; 
		UADD0 = 0               ; 
		UADD1 = 1               ; 
		UADD2 = 2               ; 
		UADD3 = 3               ; 
		UADD4 = 4               ; 
		UADD5 = 5               ; 
		UADD6 = 6               ; 
		ADDEN = 7               ; 
	}
	UDFNUM(0xe4, 0xe5) {    ; 
		FNUM0 = 0               ; Frame number value bit 0
		FNUM1 = 1               ; Frame number value bit 1
		FNUM2 = 2               ; Frame number value bit 2
		FNUM3 = 3               ; Frame number value bit 3
		FNUM4 = 4               ; Frame number value bit 4
		FNUM5 = 5               ; Frame number value bit 5
		FNUM6 = 6               ; Frame number value bit 6
		FNUM7 = 7               ; Frame number value bit 7
		FNUM8 = 8               ; Frame number value bit 8
		FNUM9 = 9               ; Frame number value bit 9
		FNUM10 = 10             ; Frame number value bit 10
	}
	UDMFN(0xe6) {           ; 
		FNCERR = 4              ; 
	}
	UEINTX(0xe8) {          ; 
		TXINI = 0               ; 
		STALLEDI = 1            ; 
		RXOUTI = 2              ; 
		RXSTPI = 3              ; 
		NAKOUTI = 4             ; 
		RWAL = 5                ; 
		NAKINI = 6              ; 
		FIFOCON = 7             ; 
	}
	UENUM(0xe9) {           ; 
		UENUM0 = 0              ; 
		UENUM1 = 1              ; 
		UENUM2 = 2              ; 
	}
	UERST(0xea) {           ; 
		EPRST0 = 0              ; 
		EPRST1 = 1              ; 
		EPRST2 = 2              ; 
		EPRST3 = 3              ; 
		EPRST4 = 4              ; 
		EPRST5 = 5              ; 
		EPRST6 = 6              ; 
	}
	UECONX(0xeb) {          ; 
		EPEN = 0                ; 
		RSTDT = 3               ; 
		STALLRQC = 4            ; 
		STALLRQ = 5             ; 
	}
	UECFG0X(0xec) {         ; 
		EPDIR = 0               ; 
		EPTYPE0 = 6             ; 
		EPTYPE1 = 7             ; 
	}
	UECFG1X(0xed) {         ; 
		ALLOC = 1               ; 
		EPBK0 = 2               ; 
		EPBK1 = 3               ; 
		EPSIZE0 = 4             ; 
		EPSIZE1 = 5             ; 
		EPSIZE2 = 6             ; 
	}
	UESTA0X(0xee) {         ; 
		NBUSYBK0 = 0            ; 
		NBUSYBK1 = 1            ; 
		DTSEQ0 = 2              ; 
		DTSEQ1 = 3              ; 
		UNDERFI = 5             ; 
		OVERFI = 6              ; 
		CFGOK = 7               ; 
	}
	UESTA1X(0xef) {         ; 
		CURRBK0 = 0             ; 
		CURRBK1 = 1             ; 
		CTRLDIR = 2             ; 
	}
	UEIENX(0xf0) {          ; 
		TXINE = 0               ; 
		STALLEDE = 1            ; 
		RXOUTE = 2              ; 
		RXSTPE = 3              ; 
		NAKOUTE = 4             ; 
		NAKINE = 6              ; 
		FLERRE = 7              ; 
	}
	UEDATX(0xf1) {          ; 
		DAT0 = 0                ; 
		DAT1 = 1                ; 
		DAT2 = 2                ; 
		DAT3 = 3                ; 
		DAT4 = 4                ; 
		DAT5 = 5                ; 
		DAT6 = 6                ; 
		DAT7 = 7                ; 
	}
	UEBCLX(0xf2) {          ; 
		BYCT0 = 0               ; Byte count bits bit 0
		BYCT1 = 1               ; Byte count bits bit 1
		BYCT2 = 2               ; Byte count bits bit 2
		BYCT3 = 3               ; Byte count bits bit 3
		BYCT4 = 4               ; Byte count bits bit 4
		BYCT5 = 5               ; Byte count bits bit 5
		BYCT6 = 6               ; Byte count bits bit 6
		BYCT7 = 7               ; Byte count bits bit 7
	}
	UEBCHX(0xf3) {          ; 
		BYCT0 = 0               ; Byte count bits bit 0
		BYCT1 = 1               ; Byte count bits bit 1
		BYCT2 = 2               ; Byte count bits bit 2
	}
	UEINT(0xf4) {           ; 
		EPINT0 = 0              ; Endpoint interrupt bits bit 0
		EPINT1 = 1              ; Endpoint interrupt bits bit 1
		EPINT2 = 2              ; Endpoint interrupt bits bit 2
		EPINT3 = 3              ; Endpoint interrupt bits bit 3
		EPINT4 = 4              ; Endpoint interrupt bits bit 4
		EPINT5 = 5              ; Endpoint interrupt bits bit 5
		EPINT6 = 6              ; Endpoint interrupt bits bit 6
	}
}

