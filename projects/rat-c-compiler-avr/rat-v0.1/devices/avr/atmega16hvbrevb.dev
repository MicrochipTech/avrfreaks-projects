device {
	name = "ATmega16HVBrevB"
	prog_size = 0x4000
	eeprom_size = 0x0200
	ram_size = 0x0400
	ram_start = 0x0100
}

interrupts {
	RESET = 0x00            ; External Pin, Power-on Reset, Brown-out Reset and Watchdog Reset
	BPINT = 0x01            ; Battery Protection Interrupt
	VREGMON = 0x02          ; Voltage regulator monitor interrupt
	INT0 = 0x03             ; External Interrupt Request 0
	INT1 = 0x04             ; External Interrupt Request 1
	INT2 = 0x05             ; External Interrupt Request 2
	INT3 = 0x06             ; External Interrupt Request 3
	PCINT0 = 0x07           ; Pin Change Interrupt 0
	PCINT1 = 0x08           ; Pin Change Interrupt 1
	WDT = 0x09              ; Watchdog Timeout Interrupt
	BGSCD = 0x0a            ; Bandgap Buffer Short Circuit Detected
	CHDET = 0x0b            ; Charger Detect
	TIMER1_IC = 0x0c        ; Timer 1 Input capture
	TIMER1_COMPA = 0x0d     ; Timer 1 Compare Match A
	TIMER1_COMPB = 0x0e     ; Timer 1 Compare Match B
	TIMER1_OVF = 0x0f       ; Timer 1 overflow
	TIMER0_IC = 0x10        ; Timer 0 Input Capture
	TIMER0_COMPA = 0x11     ; Timer 0 Comapre Match A
	TIMER0_COMPB = 0x12     ; Timer 0 Compare Match B
	TIMER0_OVF = 0x13       ; Timer 0 Overflow
	TWIBUSCD = 0x14         ; Two-Wire Bus Connect/Disconnect
	TWI = 0x15              ; Two-Wire Serial Interface
	SPI_STC = 0x16          ; SPI Serial transfer complete
	VADC = 0x17             ; Voltage ADC Conversion Complete
	CCADC_CONV = 0x18       ; Coulomb Counter ADC Conversion Complete
	CCADC_REG_CUR = 0x19    ; Coloumb Counter ADC Regular Current
	CCADC_ACC = 0x1a        ; Coloumb Counter ADC Accumulator
	EE_READY = 0x1b         ; EEPROM Ready
	SPM = 0x1c              ; SPM Ready
}

registers {
	PINA(0x00)              ; Port A Input Pins
	DDRA(0x01)              ; Port A Data Direction Register
	PORTA(0x02)             ; Port A Data Register
	PINB(0x03)              ; Port B Input Pins
	DDRB(0x04)              ; Port B Data Direction Register
	PORTB(0x05)             ; Port B Data Register
	PINC(0x06)              ; Port C Input Pins
	PORTC(0x08)             ; Port C Data Register
	TIFR0(0x15) {           ; Timer/Counter Interrupt Flag register
		TOV0 = 0                ; Timer/Counter0 Overflow Flag
		OCF0A = 1               ; Timer/Counter0 Output Compare Flag A
		OCF0B = 2               ; Timer/Counter0 Output Compare Flag B
		ICF0 = 3                ; Timer/Counter 0 Input Capture Flag
	}
	TIFR1(0x16) {           ; Timer/Counter Interrupt Flag register
		TOV1 = 0                ; Timer/Counter1 Overflow Flag
		OCF1A = 1               ; Timer/Counter1 Output Compare Flag A
		OCF1B = 2               ; Timer/Counter1 Output Compare Flag B
		ICF1 = 3                ; Timer/Counter 1 Input Capture Flag
	}
	OSICSR(0x17) {          ; Oscillator Sampling Interface Control and Status Register
		OSIEN = 0               ; Oscillator Sampling Interface Enable
		OSIST = 1               ; Oscillator Sampling Interface Status
		OSISEL0 = 4             ; Oscillator Sampling Interface Select 0
	}
	PCIFR(0x1b) {           ; Pin Change Interrupt Flag Register
		PCIF0 = 0               ; Pin Change Interrupt Flags bit 0
		PCIF1 = 1               ; Pin Change Interrupt Flags bit 1
	}
	EIFR(0x1c) {            ; External Interrupt Flag Register
		INTF0 = 0               ; External Interrupt Flags bit 0
		INTF1 = 1               ; External Interrupt Flags bit 1
		INTF2 = 2               ; External Interrupt Flags bit 2
		INTF3 = 3               ; External Interrupt Flags bit 3
	}
	EIMSK(0x1d) {           ; External Interrupt Mask Register
		INT0 = 0                ; External Interrupt Request 3 Enable bit 0
		INT1 = 1                ; External Interrupt Request 3 Enable bit 1
		INT2 = 2                ; External Interrupt Request 3 Enable bit 2
		INT3 = 3                ; External Interrupt Request 3 Enable bit 3
	}
	GPIOR0(0x1e) {          ; General Purpose IO Register 0
		GPIOR00 = 0             ; General Purpose IO bits bit 0
		GPIOR01 = 1             ; General Purpose IO bits bit 1
		GPIOR02 = 2             ; General Purpose IO bits bit 2
		GPIOR03 = 3             ; General Purpose IO bits bit 3
		GPIOR04 = 4             ; General Purpose IO bits bit 4
		GPIOR05 = 5             ; General Purpose IO bits bit 5
		GPIOR06 = 6             ; General Purpose IO bits bit 6
		GPIOR07 = 7             ; General Purpose IO bits bit 7
	}
	EECR(0x1f) {            ; EEPROM Control Register
		EERE = 0                ; EEPROM Read Enable
		EEPE = 1                ; EEPROM Write Enable
		EEMPE = 2               ; EEPROM Master Write Enable
		EERIE = 3               ; EEProm Ready Interrupt Enable
		EEPM0 = 4               ; 
		EEPM1 = 5               ; 
	}
	EEDR(0x20) {            ; EEPROM Data Register
		EEDR0 = 0               ; EEPROM Data bits bit 0
		EEDR1 = 1               ; EEPROM Data bits bit 1
		EEDR2 = 2               ; EEPROM Data bits bit 2
		EEDR3 = 3               ; EEPROM Data bits bit 3
		EEDR4 = 4               ; EEPROM Data bits bit 4
		EEDR5 = 5               ; EEPROM Data bits bit 5
		EEDR6 = 6               ; EEPROM Data bits bit 6
		EEDR7 = 7               ; EEPROM Data bits bit 7
	}
	EEAR(0x21, 0x22) {      ; EEPROM Read/Write Access
		EEAR0 = 0               ; EEPROM Address bits bit 0
		EEAR1 = 1               ; EEPROM Address bits bit 1
		EEAR2 = 2               ; EEPROM Address bits bit 2
		EEAR3 = 3               ; EEPROM Address bits bit 3
		EEAR4 = 4               ; EEPROM Address bits bit 4
		EEAR5 = 5               ; EEPROM Address bits bit 5
		EEAR6 = 6               ; EEPROM Address bits bit 6
		EEAR7 = 7               ; EEPROM Address bits bit 7
		EEAR8 = 8               ; EEPROM Address bits bit 8
		EEAR9 = 9               ; EEPROM Address bits bit 9
	}
	GTCCR(0x23) {           ; General Timer/Counter Control Register
		PSRSYNC = 0             ; Prescaler Reset
		TSM = 7                 ; Timer/Counter Synchronization Mode
	}
	TCCR0A(0x24) {          ; Timer/Counter 0 Control Register A
		WGM00 = 0               ; Waveform Generation Mode
		ICS0 = 3                ; Input Capture Select
		ICES0 = 4               ; Input Capture Edge Select
		ICNC0 = 5               ; Input Capture Noise Canceler
		ICEN0 = 6               ; Input Capture Mode Enable
		TCW0 = 7                ; Timer/Counter Width
	}
	TCCR0B(0x25) {          ; Timer/Counter0 Control Register B
		CS00 = 0                ; Clock Select0 bit 0
		CS01 = 1                ; Clock Select0 bit 1
		CS02 = 2                ; Clock Select0 bit 2
	}
	TCNT0(0x26, 0x27) {     ; Timer Counter 0 Bytes
		TCNT00 = 0              ; Timer Counter 0 bits bit 0
		TCNT01 = 1              ; Timer Counter 0 bits bit 1
		TCNT02 = 2              ; Timer Counter 0 bits bit 2
		TCNT03 = 3              ; Timer Counter 0 bits bit 3
		TCNT04 = 4              ; Timer Counter 0 bits bit 4
		TCNT05 = 5              ; Timer Counter 0 bits bit 5
		TCNT06 = 6              ; Timer Counter 0 bits bit 6
		TCNT07 = 7              ; Timer Counter 0 bits bit 7
		TCNT08 = 8              ; Timer Counter 0 bits bit 8
		TCNT09 = 9              ; Timer Counter 0 bits bit 9
		TCNT010 = 10            ; Timer Counter 0 bits bit 10
		TCNT011 = 11            ; Timer Counter 0 bits bit 11
		TCNT012 = 12            ; Timer Counter 0 bits bit 12
		TCNT013 = 13            ; Timer Counter 0 bits bit 13
		TCNT014 = 14            ; Timer Counter 0 bits bit 14
		TCNT015 = 15            ; Timer Counter 0 bits bit 15
	}
	OCR0A(0x28) {           ; Output Compare Register 0A
		OCR0A0 = 0              ; Output Compare 0 A bits bit 0
		OCR0A1 = 1              ; Output Compare 0 A bits bit 1
		OCR0A2 = 2              ; Output Compare 0 A bits bit 2
		OCR0A3 = 3              ; Output Compare 0 A bits bit 3
		OCR0A4 = 4              ; Output Compare 0 A bits bit 4
		OCR0A5 = 5              ; Output Compare 0 A bits bit 5
		OCR0A6 = 6              ; Output Compare 0 A bits bit 6
		OCR0A7 = 7              ; Output Compare 0 A bits bit 7
	}
	OCR0B(0x29) {           ; Output Compare Register B
		OCR0B0 = 0              ; Output Compare 0 B bits bit 0
		OCR0B1 = 1              ; Output Compare 0 B bits bit 1
		OCR0B2 = 2              ; Output Compare 0 B bits bit 2
		OCR0B3 = 3              ; Output Compare 0 B bits bit 3
		OCR0B4 = 4              ; Output Compare 0 B bits bit 4
		OCR0B5 = 5              ; Output Compare 0 B bits bit 5
		OCR0B6 = 6              ; Output Compare 0 B bits bit 6
		OCR0B7 = 7              ; Output Compare 0 B bits bit 7
	}
	GPIOR1(0x2a) {          ; General Purpose IO Register 1
		GPIOR10 = 0             ; General Purpose IO bits bit 0
		GPIOR11 = 1             ; General Purpose IO bits bit 1
		GPIOR12 = 2             ; General Purpose IO bits bit 2
		GPIOR13 = 3             ; General Purpose IO bits bit 3
		GPIOR14 = 4             ; General Purpose IO bits bit 4
		GPIOR15 = 5             ; General Purpose IO bits bit 5
		GPIOR16 = 6             ; General Purpose IO bits bit 6
		GPIOR17 = 7             ; General Purpose IO bits bit 7
	}
	GPIOR2(0x2b) {          ; General Purpose IO Register 2
		GPIOR20 = 0             ; General Purpose IO bits bit 0
		GPIOR21 = 1             ; General Purpose IO bits bit 1
		GPIOR22 = 2             ; General Purpose IO bits bit 2
		GPIOR23 = 3             ; General Purpose IO bits bit 3
		GPIOR24 = 4             ; General Purpose IO bits bit 4
		GPIOR25 = 5             ; General Purpose IO bits bit 5
		GPIOR26 = 6             ; General Purpose IO bits bit 6
		GPIOR27 = 7             ; General Purpose IO bits bit 7
	}
	SPCR(0x2c) {            ; SPI Control Register
		SPR0 = 0                ; SPI Clock Rate Selects bit 0
		SPR1 = 1                ; SPI Clock Rate Selects bit 1
		CPHA = 2                ; Clock Phase
		CPOL = 3                ; Clock polarity
		MSTR = 4                ; Master/Slave Select
		DORD = 5                ; Data Order
		SPE = 6                 ; SPI Enable
		SPIE = 7                ; SPI Interrupt Enable
	}
	SPSR(0x2d) {            ; SPI Status Register
		SPI2X = 0               ; Double SPI Speed Bit
		WCOL = 6                ; Write Collision Flag
		SPIF = 7                ; SPI Interrupt Flag
	}
	SPDR(0x2e) {            ; SPI Data Register
		SPDR0 = 0               ; SPI Data bits bit 0
		SPDR1 = 1               ; SPI Data bits bit 1
		SPDR2 = 2               ; SPI Data bits bit 2
		SPDR3 = 3               ; SPI Data bits bit 3
		SPDR4 = 4               ; SPI Data bits bit 4
		SPDR5 = 5               ; SPI Data bits bit 5
		SPDR6 = 6               ; SPI Data bits bit 6
		SPDR7 = 7               ; SPI Data bits bit 7
	}
	SMCR(0x33) {            ; Sleep Mode Control Register
		SE = 0                  ; Sleep Enable
		SM0 = 1                 ; Sleep Mode Select bits bit 0
		SM1 = 2                 ; Sleep Mode Select bits bit 1
		SM2 = 3                 ; Sleep Mode Select bits bit 2
	}
	MCUSR(0x34) {           ; MCU Status Register
		PORF = 0                ; Power-on reset flag
		EXTRF = 1               ; External Reset Flag
		BODRF = 2               ; Brown-out Reset Flag
		WDRF = 3                ; Watchdog Reset Flag
		OCDRF = 4               ; OCD Reset Flag
	}
	MCUCR(0x35) {           ; MCU Control Register
		IVCE = 0                ; Interrupt Vector Change Enable
		IVSEL = 1               ; Interrupt Vector Select
		PUD = 4                 ; Pull-up disable
		CKOE = 5                ; Clock Output Enable
	}
	SPMCSR(0x37) {          ; Store Program Memory Control and Status Register
		SPMEN = 0               ; Store Program Memory Enable
		PGERS = 1               ; Page Erase
		PGWRT = 2               ; Page Write
		LBSET = 3               ; Lock Bit Set
		RWWSRE = 4              ; Read-While-Write Section Read Enable
		SIGRD = 5               ; Signature Row Read
		RWWSB = 6               ; Read-While-Write Section Busy
		SPMIE = 7               ; SPM Interrupt Enable
	}
	SP(0x3d, 0x3e)          ; Stack Pointer 
	SREG(0x3f) {            ; Status Register
		C = 0                   ; Carry Flag
		Z = 1                   ; Zero Flag
		N = 2                   ; Negative Flag
		V = 3                   ; Two's Complement Overflow Flag
		S = 4                   ; Sign Bit
		H = 5                   ; Half Carry Flag
		T = 6                   ; Bit Copy Storage
		I = 7                   ; Global Interrupt Enable
	}
	WDTCSR(0x60) {          ; Watchdog Timer Control Register
		WDP0 = 0                ; Watchdog Timer Prescaler Bits bit 0
		WDP1 = 1                ; Watchdog Timer Prescaler Bits bit 1
		WDP2 = 2                ; Watchdog Timer Prescaler Bits bit 2
		WDE = 3                 ; Watch Dog Enable
		WDCE = 4                ; Watchdog Change Enable
		WDP3 = 5                ; Watchdog Timer Prescaler Bits bit 3
		WDIE = 6                ; Watchdog Timeout Interrupt Enable
		WDIF = 7                ; Watchdog Timeout Interrupt Flag
	}
	CLKPR(0x61) {           ; Clock Prescale Register
		CLKPS0 = 0              ; Clock Prescaler Select Bits bit 0
		CLKPS1 = 1              ; Clock Prescaler Select Bits bit 1
		CLKPCE = 7              ; Clock Prescaler Change Enable
	}
	PRR0(0x64) {            ; Power Reduction Register 0
		PRVADC = 0              ; Power Reduction V-ADC
		PRTIM0 = 1              ; Power Reduction Timer/Counter0
		PRTIM1 = 2              ; Power Reduction Timer/Counter1
		PRSPI = 3               ; Power reduction SPI
		PRVRM = 5               ; Power Reduction Voltage Regulator Monitor
		PRTWI = 6               ; Power Reduction TWI
	}
	FOSCCAL(0x66) {         ; Fast Oscillator Calibration Value
		FCAL0 = 0               ; Fast Oscillator Calibration Value bit 0
		FCAL1 = 1               ; Fast Oscillator Calibration Value bit 1
		FCAL2 = 2               ; Fast Oscillator Calibration Value bit 2
		FCAL3 = 3               ; Fast Oscillator Calibration Value bit 3
		FCAL4 = 4               ; Fast Oscillator Calibration Value bit 4
		FCAL5 = 5               ; Fast Oscillator Calibration Value bit 5
		FCAL6 = 6               ; Fast Oscillator Calibration Value bit 6
		FCAL7 = 7               ; Fast Oscillator Calibration Value bit 7
	}
	PCICR(0x68) {           ; Pin Change Interrupt Control Register
		PCIE0 = 0               ; Pin Change Interrupt Enables bit 0
		PCIE1 = 1               ; Pin Change Interrupt Enables bit 1
	}
	EICRA(0x69) {           ; External Interrupt Control Register
		ISC00 = 0               ; External Interrupt Sense Control 0 Bits bit 0
		ISC01 = 1               ; External Interrupt Sense Control 0 Bits bit 1
		ISC10 = 2               ; External Interrupt Sense Control 1 Bits bit 0
		ISC11 = 3               ; External Interrupt Sense Control 1 Bits bit 1
		ISC20 = 4               ; External Interrupt Sense Control 2 Bits bit 0
		ISC21 = 5               ; External Interrupt Sense Control 2 Bits bit 1
		ISC30 = 6               ; External Interrupt Sense Control 3 Bits bit 0
		ISC31 = 7               ; External Interrupt Sense Control 3 Bits bit 1
	}
	PCMSK0(0x6b) {          ; Pin Change Enable Mask Register 0
		PCINT0 = 0              ; Pin Change Enable Mask bit 0
		PCINT1 = 1              ; Pin Change Enable Mask bit 1
		PCINT2 = 2              ; Pin Change Enable Mask bit 2
		PCINT3 = 3              ; Pin Change Enable Mask bit 3
	}
	PCMSK1(0x6c) {          ; Pin Change Enable Mask Register 1
		PCINT0 = 0              ; Pin Change Enable Mask bit 0
		PCINT1 = 1              ; Pin Change Enable Mask bit 1
		PCINT2 = 2              ; Pin Change Enable Mask bit 2
		PCINT3 = 3              ; Pin Change Enable Mask bit 3
		PCINT4 = 4              ; Pin Change Enable Mask bit 4
		PCINT5 = 5              ; Pin Change Enable Mask bit 5
		PCINT6 = 6              ; Pin Change Enable Mask bit 6
		PCINT7 = 7              ; Pin Change Enable Mask bit 7
	}
	TIMSK0(0x6e) {          ; Timer/Counter Interrupt Mask Register
		TOIE0 = 0               ; Timer/Counter0 Overflow Interrupt Enable
		OCIE0A = 1              ; Timer/Counter0 Output Compare A Interrupt Enable
		OCIE0B = 2              ; Timer/Counter0 Output Compare B Interrupt Enable
		ICIE0 = 3               ; Timer/Counter n Input Capture Interrupt Enable
	}
	TIMSK1(0x6f) {          ; Timer/Counter Interrupt Mask Register
		TOIE1 = 0               ; Timer/Counter1 Overflow Interrupt Enable
		OCIE1A = 1              ; Timer/Counter1 Output Compare A Interrupt Enable
		OCIE1B = 2              ; Timer/Counter1 Output Compare B Interrupt Enable
		ICIE1 = 3               ; Timer/Counter n Input Capture Interrupt Enable
	}
	VADC(0x78, 0x79) {      ; VADC Data Register Bytes
		VADC0 = 0               ; VADC Data bits bit 0
		VADC1 = 1               ; VADC Data bits bit 1
		VADC2 = 2               ; VADC Data bits bit 2
		VADC3 = 3               ; VADC Data bits bit 3
		VADC4 = 4               ; VADC Data bits bit 4
		VADC5 = 5               ; VADC Data bits bit 5
		VADC6 = 6               ; VADC Data bits bit 6
		VADC7 = 7               ; VADC Data bits bit 7
		VADC8 = 8               ; VADC Data bits bit 8
		VADC9 = 9               ; VADC Data bits bit 9
		VADC10 = 10             ; VADC Data bits bit 10
		VADC11 = 11             ; VADC Data bits bit 11
	}
	VADCSR(0x7a) {          ; The VADC Control and Status register
		VADCCIE = 0             ; VADC Conversion Complete Interrupt Enable
		VADCCIF = 1             ; VADC Conversion Complete Interrupt Flag
		VADSC = 2               ; VADC Satrt Conversion
		VADEN = 3               ; VADC Enable
	}
	VADMUX(0x7c) {          ; The VADC multiplexer Selection Register
		VADMUX0 = 0             ; Analog Channel and Gain Selection Bits bit 0
		VADMUX1 = 1             ; Analog Channel and Gain Selection Bits bit 1
		VADMUX2 = 2             ; Analog Channel and Gain Selection Bits bit 2
		VADMUX3 = 3             ; Analog Channel and Gain Selection Bits bit 3
	}
	DIDR0(0x7e) {           ; Digital Input Disable Register
		PA0DID = 0              ; When this bit is written logic one, the digital input buffer of the corresponding V_ADC pin is disabled.
		PA1DID = 1              ; When this bit is written logic one, the digital input buffer of the corresponding V_ADC pin is disabled.
	}
	TCCR1A(0x80) {          ; Timer/Counter 1 Control Register A
		WGM10 = 0               ; Waveform Generation Mode
		ICS1 = 3                ; Input Capture Select
		ICES1 = 4               ; Input Capture Edge Select
		ICNC1 = 5               ; Input Capture Noise Canceler
		ICEN1 = 6               ; Input Capture Mode Enable
		TCW1 = 7                ; Timer/Counter Width
	}
	TCCR1B(0x81) {          ; Timer/Counter1 Control Register B
		CS0 = 0                 ; Clock Select1 bis bit 0
		CS1 = 1                 ; Clock Select1 bis bit 1
		CS2 = 2                 ; Clock Select1 bis bit 2
	}
	TCNT1(0x84, 0x85) {     ; Timer Counter 1 Bytes
		TCNT10 = 0              ; Timer Counter 1 bits bit 0
		TCNT11 = 1              ; Timer Counter 1 bits bit 1
		TCNT12 = 2              ; Timer Counter 1 bits bit 2
		TCNT13 = 3              ; Timer Counter 1 bits bit 3
		TCNT14 = 4              ; Timer Counter 1 bits bit 4
		TCNT15 = 5              ; Timer Counter 1 bits bit 5
		TCNT16 = 6              ; Timer Counter 1 bits bit 6
		TCNT17 = 7              ; Timer Counter 1 bits bit 7
		TCNT18 = 8              ; Timer Counter 1 bits bit 8
		TCNT19 = 9              ; Timer Counter 1 bits bit 9
		TCNT110 = 10            ; Timer Counter 1 bits bit 10
		TCNT111 = 11            ; Timer Counter 1 bits bit 11
		TCNT112 = 12            ; Timer Counter 1 bits bit 12
		TCNT113 = 13            ; Timer Counter 1 bits bit 13
		TCNT114 = 14            ; Timer Counter 1 bits bit 14
		TCNT115 = 15            ; Timer Counter 1 bits bit 15
	}
	OCR1A(0x88) {           ; Output Compare Register 1A
		OCR1A0 = 0              ; Output Compare 1 A bits bit 0
		OCR1A1 = 1              ; Output Compare 1 A bits bit 1
		OCR1A2 = 2              ; Output Compare 1 A bits bit 2
		OCR1A3 = 3              ; Output Compare 1 A bits bit 3
		OCR1A4 = 4              ; Output Compare 1 A bits bit 4
		OCR1A5 = 5              ; Output Compare 1 A bits bit 5
		OCR1A6 = 6              ; Output Compare 1 A bits bit 6
		OCR1A7 = 7              ; Output Compare 1 A bits bit 7
	}
	OCR1B(0x89) {           ; Output Compare Register B
		OCR1B0 = 0              ; Output Compare 1 B bits bit 0
		OCR1B1 = 1              ; Output Compare 1 B bits bit 1
		OCR1B2 = 2              ; Output Compare 1 B bits bit 2
		OCR1B3 = 3              ; Output Compare 1 B bits bit 3
		OCR1B4 = 4              ; Output Compare 1 B bits bit 4
		OCR1B5 = 5              ; Output Compare 1 B bits bit 5
		OCR1B6 = 6              ; Output Compare 1 B bits bit 6
		OCR1B7 = 7              ; Output Compare 1 B bits bit 7
	}
	TWBR(0xb8) {            ; TWI Bit Rate register
		TWBR0 = 0               ; TWI Bit Rate bits bit 0
		TWBR1 = 1               ; TWI Bit Rate bits bit 1
		TWBR2 = 2               ; TWI Bit Rate bits bit 2
		TWBR3 = 3               ; TWI Bit Rate bits bit 3
		TWBR4 = 4               ; TWI Bit Rate bits bit 4
		TWBR5 = 5               ; TWI Bit Rate bits bit 5
		TWBR6 = 6               ; TWI Bit Rate bits bit 6
		TWBR7 = 7               ; TWI Bit Rate bits bit 7
	}
	TWSR(0xb9) {            ; TWI Status Register
		TWPS0 = 0               ; TWI Prescaler bit 0
		TWPS1 = 1               ; TWI Prescaler bit 1
		TWS0 = 3                ; TWI Status bit 0
		TWS1 = 4                ; TWI Status bit 1
		TWS2 = 5                ; TWI Status bit 2
		TWS3 = 6                ; TWI Status bit 3
		TWS4 = 7                ; TWI Status bit 4
	}
	TWAR(0xba) {            ; TWI (Slave) Address register
		TWGCE = 0               ; TWI General Call Recognition Enable Bit
		TWA0 = 1                ; TWI (Slave) Address register Bits bit 0
		TWA1 = 2                ; TWI (Slave) Address register Bits bit 1
		TWA2 = 3                ; TWI (Slave) Address register Bits bit 2
		TWA3 = 4                ; TWI (Slave) Address register Bits bit 3
		TWA4 = 5                ; TWI (Slave) Address register Bits bit 4
		TWA5 = 6                ; TWI (Slave) Address register Bits bit 5
		TWA6 = 7                ; TWI (Slave) Address register Bits bit 6
	}
	TWDR(0xbb) {            ; TWI Data register
		TWD0 = 0                ; TWI Data Bits bit 0
		TWD1 = 1                ; TWI Data Bits bit 1
		TWD2 = 2                ; TWI Data Bits bit 2
		TWD3 = 3                ; TWI Data Bits bit 3
		TWD4 = 4                ; TWI Data Bits bit 4
		TWD5 = 5                ; TWI Data Bits bit 5
		TWD6 = 6                ; TWI Data Bits bit 6
		TWD7 = 7                ; TWI Data Bits bit 7
	}
	TWCR(0xbc) {            ; TWI Control Register
		TWIE = 0                ; TWI Interrupt Enable
		TWEN = 2                ; TWI Enable Bit
		TWWC = 3                ; TWI Write Collition Flag
		TWSTO = 4               ; TWI Stop Condition Bit
		TWSTA = 5               ; TWI Start Condition Bit
		TWEA = 6                ; TWI Enable Acknowledge Bit
		TWINT = 7               ; TWI Interrupt Flag
	}
	TWAMR(0xbd) {           ; TWI (Slave) Address Mask Register
		TWAM0 = 1               ; 
		TWAM1 = 2               ; 
		TWAM2 = 3               ; 
		TWAM3 = 4               ; 
		TWAM4 = 5               ; 
		TWAM5 = 6               ; 
		TWAM6 = 7               ; 
	}
	TWBCSR(0xbe) {          ; TWI Bus Control and Status Register
		TWBCIP = 0              ; TWI Bus Connect/Disconnect Interrupt Polarity
		TWBDT0 = 1              ; TWI Bus Disconnect Time-out Period bit 0
		TWBDT1 = 2              ; TWI Bus Disconnect Time-out Period bit 1
		TWBCIE = 6              ; TWI Bus Connect/Disconnect Interrupt Enable
		TWBCIF = 7              ; TWI Bus Connect/Disconnect Interrupt Flag
	}
	ROCR(0xc8) {            ; Regulator Operating Condition Register
		ROCWIE = 0              ; ROC Warning Interrupt Enable
		ROCWIF = 1              ; ROC Warning Interrupt Flag
		ROCD = 4                ; ROC Disable
		ROCS = 7                ; ROC Status
	}
	BGCCR(0xd0) {           ; Bandgap Calibration Register
		BGCC0 = 0               ; BG Calibration of PTAT Current Bits bit 0
		BGCC1 = 1               ; BG Calibration of PTAT Current Bits bit 1
		BGCC2 = 2               ; BG Calibration of PTAT Current Bits bit 2
		BGCC3 = 3               ; BG Calibration of PTAT Current Bits bit 3
		BGCC4 = 4               ; BG Calibration of PTAT Current Bits bit 4
		BGCC5 = 5               ; BG Calibration of PTAT Current Bits bit 5
	}
	BGCRR(0xd1) {           ; Bandgap Calibration of Resistor Ladder
		BGCR0 = 0               ; Bandgap Calibration of Resistor Ladder Bits bit 0
		BGCR1 = 1               ; Bandgap Calibration of Resistor Ladder Bits bit 1
		BGCR2 = 2               ; Bandgap Calibration of Resistor Ladder Bits bit 2
		BGCR3 = 3               ; Bandgap Calibration of Resistor Ladder Bits bit 3
		BGCR4 = 4               ; Bandgap Calibration of Resistor Ladder Bits bit 4
		BGCR5 = 5               ; Bandgap Calibration of Resistor Ladder Bits bit 5
		BGCR6 = 6               ; Bandgap Calibration of Resistor Ladder Bits bit 6
		BGCR7 = 7               ; Bandgap Calibration of Resistor Ladder Bits bit 7
	}
	BGCSR(0xd2) {           ; Bandgap Control and Status Register
		BGSCDIE = 0             ; Bandgap Short Circuit Detection Interrupt Enable
		BGSCDIF = 1             ; Bandgap Short Circuit Detection Interrupt Flag
		BGSCDE = 4              ; Bandgap Short Circuit Detection Enabled
		BGD = 5                 ; Bandgap Disable
	}
	CHGDCSR(0xd4) {         ; Charger Detect Control and Status Register
		CHGDIE = 0              ; Charger Detect Interrupt Enable
		CHGDIF = 1              ; Charger Detect Interrupt Flag
		CHGDISC0 = 2            ; Charger Detect Interrupt Sense Control bit 0
		CHGDISC1 = 3            ; Charger Detect Interrupt Sense Control bit 1
		BATTPVL = 4             ; BATT Pin Voltage Level
	}
	CADAC0(0xe0) {          ; ADC Accumulate Current
		CADAC00 = 0             ; ADC accumulate current bits bit 0
		CADAC01 = 1             ; ADC accumulate current bits bit 1
		CADAC02 = 2             ; ADC accumulate current bits bit 2
		CADAC03 = 3             ; ADC accumulate current bits bit 3
		CADAC04 = 4             ; ADC accumulate current bits bit 4
		CADAC05 = 5             ; ADC accumulate current bits bit 5
		CADAC06 = 6             ; ADC accumulate current bits bit 6
		CADAC07 = 7             ; ADC accumulate current bits bit 7
	}
	CADAC1(0xe1) {          ; ADC Accumulate Current
		CADAC00 = 0             ; ADC accumulate current bits bit 0
		CADAC01 = 1             ; ADC accumulate current bits bit 1
		CADAC0 = 2              ; ADC accumulate current bits bit 0
		CADAC1 = 3              ; ADC accumulate current bits bit 1
		CADAC2 = 4              ; ADC accumulate current bits bit 2
		CADAC3 = 5              ; ADC accumulate current bits bit 3
		CADAC4 = 6              ; ADC accumulate current bits bit 4
		CADAC5 = 7              ; ADC accumulate current bits bit 5
	}
	CADAC2(0xe2) {          ; ADC Accumulate Current
		CADAC0 = 0              ; ADC accumulate current bits bit 0
		CADAC1 = 1              ; ADC accumulate current bits bit 1
		CADAC2 = 2              ; ADC accumulate current bits bit 2
		CADAC3 = 3              ; ADC accumulate current bits bit 3
		CADAC4 = 4              ; ADC accumulate current bits bit 4
		CADAC5 = 5              ; ADC accumulate current bits bit 5
		CADAC6 = 6              ; ADC accumulate current bits bit 6
		CADAC7 = 7              ; ADC accumulate current bits bit 7
	}
	CADAC3(0xe3) {          ; ADC Accumulate Current
		CADAC0 = 0              ; ADC accumulate current bits bit 0
		CADAC1 = 1              ; ADC accumulate current bits bit 1
		CADAC2 = 2              ; ADC accumulate current bits bit 2
		CADAC3 = 3              ; ADC accumulate current bits bit 3
		CADAC4 = 4              ; ADC accumulate current bits bit 4
		CADAC5 = 5              ; ADC accumulate current bits bit 5
		CADAC6 = 6              ; ADC accumulate current bits bit 6
		CADAC7 = 7              ; ADC accumulate current bits bit 7
	}
	CADIC(0xe4, 0xe5) {     ; CC-ADC Instantaneous Current
		CADIC0 = 0              ; CC-ADC Instantaneous Current bit 0
		CADIC1 = 1              ; CC-ADC Instantaneous Current bit 1
		CADIC2 = 2              ; CC-ADC Instantaneous Current bit 2
		CADIC3 = 3              ; CC-ADC Instantaneous Current bit 3
		CADIC4 = 4              ; CC-ADC Instantaneous Current bit 4
		CADIC5 = 5              ; CC-ADC Instantaneous Current bit 5
		CADIC6 = 6              ; CC-ADC Instantaneous Current bit 6
		CADIC7 = 7              ; CC-ADC Instantaneous Current bit 7
		CADIC8 = 8              ; CC-ADC Instantaneous Current bit 8
		CADIC9 = 9              ; CC-ADC Instantaneous Current bit 9
		CADIC10 = 10            ; CC-ADC Instantaneous Current bit 10
		CADIC11 = 11            ; CC-ADC Instantaneous Current bit 11
		CADIC12 = 12            ; CC-ADC Instantaneous Current bit 12
		CADIC13 = 13            ; CC-ADC Instantaneous Current bit 13
		CADIC14 = 14            ; CC-ADC Instantaneous Current bit 14
		CADIC15 = 15            ; CC-ADC Instantaneous Current bit 15
	}
	CADCSRA(0xe6) {         ; CC-ADC Control and Status Register A
		CADSE = 0               ; When the CADSE bit is written to one, the ongoing CC-ADC conversion is aborted, and the CC-ADC enters Regular Current detection mode.
		CADSI0 = 1              ; The CADSI bits determine the current sampling interval for the Regular Current detection in Power-down mode. The actual settings remain to be determined. bit 0
		CADSI1 = 2              ; The CADSI bits determine the current sampling interval for the Regular Current detection in Power-down mode. The actual settings remain to be determined. bit 1
		CADAS0 = 3              ; CC_ADC Accumulate Current Select Bits bit 0
		CADAS1 = 4              ; CC_ADC Accumulate Current Select Bits bit 1
		CADUB = 5               ; CC_ADC Update Busy
		CADPOL = 6              ; 
		CADEN = 7               ; When the CADEN bit is cleared (zero), the CC-ADC is disabled. When the CADEN bit is set (one), the CC-ADC will continuously measure the voltage drop over the external sense resistor RSENSE. In Power-down, only the Regular Current detection is active. In Power-off, the CC-ADC is always disabled.
	}
	CADCSRB(0xe7) {         ; CC-ADC Control and Status Register B
		CADICIF = 0             ; CC-ADC Instantaneous Current Interrupt Flag
		CADRCIF = 1             ; CC-ADC Accumulate Current Interrupt Flag
		CADACIF = 2             ; CC-ADC Accumulate Current Interrupt Flag
		CADICIE = 4             ; CAD Instantenous Current Interrupt Enable
		CADRCIE = 5             ; Regular Current Interrupt Enable
		CADACIE = 6             ; 
	}
	CADCSRC(0xe8) {         ; CC-ADC Control and Status Register C
		CADVSE = 0              ; CC-ADC Voltage Scaling Enable
	}
	CADRCC(0xe9) {          ; CC-ADC Regular Charge Current
		CADRCC0 = 0             ; CC-ADC Regular Charge Current bit 0
		CADRCC1 = 1             ; CC-ADC Regular Charge Current bit 1
		CADRCC2 = 2             ; CC-ADC Regular Charge Current bit 2
		CADRCC3 = 3             ; CC-ADC Regular Charge Current bit 3
		CADRCC4 = 4             ; CC-ADC Regular Charge Current bit 4
		CADRCC5 = 5             ; CC-ADC Regular Charge Current bit 5
		CADRCC6 = 6             ; CC-ADC Regular Charge Current bit 6
		CADRCC7 = 7             ; CC-ADC Regular Charge Current bit 7
	}
	CADRDC(0xea) {          ; CC-ADC Regular Discharge Current
		CADRDC0 = 0             ; CC-ADC Regular Discharge Current bit 0
		CADRDC1 = 1             ; CC-ADC Regular Discharge Current bit 1
		CADRDC2 = 2             ; CC-ADC Regular Discharge Current bit 2
		CADRDC3 = 3             ; CC-ADC Regular Discharge Current bit 3
		CADRDC4 = 4             ; CC-ADC Regular Discharge Current bit 4
		CADRDC5 = 5             ; CC-ADC Regular Discharge Current bit 5
		CADRDC6 = 6             ; CC-ADC Regular Discharge Current bit 6
		CADRDC7 = 7             ; CC-ADC Regular Discharge Current bit 7
	}
	FCSR(0xf0) {            ; FET Control and Status Register
		CFE = 0                 ; Charge FET Enable
		DFE = 1                 ; Discharge FET Enable
		CPS = 2                 ; Current Protection Status
		DUVRD = 3               ; Deep Under-Voltage Recovery Disable
	}
	CBCR(0xf1) {            ; Cell Balancing Control Register
		CBE0 = 0                ; Cell Balancing Enables bit 0
		CBE1 = 1                ; Cell Balancing Enables bit 1
		CBE2 = 2                ; Cell Balancing Enables bit 2
		CBE3 = 3                ; Cell Balancing Enables bit 3
	}
	BPIMSK(0xf2) {          ; Battery Protection Interrupt Mask Register
		CHCIE = 0               ; Charger High-current Protection Activated Interrupt
		DHCIE = 1               ; Discharger High-current Protection Activated Interrupt
		COCIE = 2               ; Charge Over-current Protection Activated Interrupt Enable
		DOCIE = 3               ; Discharge Over-current Protection Activated Interrupt Enable
		SCIE = 4                ; Short-circuit Protection Activated Interrupt Enable
	}
	BPIFR(0xf3) {           ; Battery Protection Interrupt Flag Register
		CHCIF = 0               ; Charge High-current Protection Activated Interrupt
		DHCIF = 1               ; Disharge High-current Protection Activated Interrupt
		COCIF = 2               ; Charge Over-current Protection Activated Interrupt Flag
		DOCIF = 3               ; Discharge Over-current Protection Activated Interrupt Flag
		SCIF = 4                ; Short-circuit Protection Activated Interrupt Flag
	}
	BPSCD(0xf5) {           ; Battery Protection Short-Circuit Detection Level Register
		SCDL0 = 0               ; Battery Protection Short-Circuit Detection Level Register bits bit 0
		SCDL1 = 1               ; Battery Protection Short-Circuit Detection Level Register bits bit 1
		SCDL2 = 2               ; Battery Protection Short-Circuit Detection Level Register bits bit 2
		SCDL3 = 3               ; Battery Protection Short-Circuit Detection Level Register bits bit 3
		SCDL4 = 4               ; Battery Protection Short-Circuit Detection Level Register bits bit 4
		SCDL5 = 5               ; Battery Protection Short-Circuit Detection Level Register bits bit 5
		SCDL6 = 6               ; Battery Protection Short-Circuit Detection Level Register bits bit 6
		SCDL7 = 7               ; Battery Protection Short-Circuit Detection Level Register bits bit 7
	}
	BPDOCD(0xf6) {          ; Battery Protection Discharge-Over-current Detection Level Register
		DOCDL0 = 0              ; Battery Protection Discharge-Over-current Detection Level bits bit 0
		DOCDL1 = 1              ; Battery Protection Discharge-Over-current Detection Level bits bit 1
		DOCDL2 = 2              ; Battery Protection Discharge-Over-current Detection Level bits bit 2
		DOCDL3 = 3              ; Battery Protection Discharge-Over-current Detection Level bits bit 3
		DOCDL4 = 4              ; Battery Protection Discharge-Over-current Detection Level bits bit 4
		DOCDL5 = 5              ; Battery Protection Discharge-Over-current Detection Level bits bit 5
		DOCDL6 = 6              ; Battery Protection Discharge-Over-current Detection Level bits bit 6
		DOCDL7 = 7              ; Battery Protection Discharge-Over-current Detection Level bits bit 7
	}
	BPCOCD(0xf7) {          ; Battery Protection Charge-Over-current Detection Level Register
		COCDL0 = 0              ; Battery Protection Charge-Over-current Detection Level bits bit 0
		COCDL1 = 1              ; Battery Protection Charge-Over-current Detection Level bits bit 1
		COCDL2 = 2              ; Battery Protection Charge-Over-current Detection Level bits bit 2
		COCDL3 = 3              ; Battery Protection Charge-Over-current Detection Level bits bit 3
		COCDL4 = 4              ; Battery Protection Charge-Over-current Detection Level bits bit 4
		COCDL5 = 5              ; Battery Protection Charge-Over-current Detection Level bits bit 5
		COCDL6 = 6              ; Battery Protection Charge-Over-current Detection Level bits bit 6
		COCDL7 = 7              ; Battery Protection Charge-Over-current Detection Level bits bit 7
	}
	BPDHCD(0xf8) {          ; Battery Protection Discharge-High-current Detection Level Register
		DHCDL0 = 0              ; Battery Protection Discharge-High-current Detection Level bits bit 0
		DHCDL1 = 1              ; Battery Protection Discharge-High-current Detection Level bits bit 1
		DHCDL2 = 2              ; Battery Protection Discharge-High-current Detection Level bits bit 2
		DHCDL3 = 3              ; Battery Protection Discharge-High-current Detection Level bits bit 3
		DHCDL4 = 4              ; Battery Protection Discharge-High-current Detection Level bits bit 4
		DHCDL5 = 5              ; Battery Protection Discharge-High-current Detection Level bits bit 5
		DHCDL6 = 6              ; Battery Protection Discharge-High-current Detection Level bits bit 6
		DHCDL7 = 7              ; Battery Protection Discharge-High-current Detection Level bits bit 7
	}
	BPCHCD(0xf9) {          ; Battery Protection Charge-High-current Detection Level Register
		CHCDL0 = 0              ; Battery Protection Charge-High-current Detection Level bits bit 0
		CHCDL1 = 1              ; Battery Protection Charge-High-current Detection Level bits bit 1
		CHCDL2 = 2              ; Battery Protection Charge-High-current Detection Level bits bit 2
		CHCDL3 = 3              ; Battery Protection Charge-High-current Detection Level bits bit 3
		CHCDL4 = 4              ; Battery Protection Charge-High-current Detection Level bits bit 4
		CHCDL5 = 5              ; Battery Protection Charge-High-current Detection Level bits bit 5
		CHCDL6 = 6              ; Battery Protection Charge-High-current Detection Level bits bit 6
		CHCDL7 = 7              ; Battery Protection Charge-High-current Detection Level bits bit 7
	}
	BPSCTR(0xfa) {          ; Battery Protection Short-current Timing Register
		SCPT0 = 0               ; Battery Protection Short-current Timing bits bit 0
		SCPT1 = 1               ; Battery Protection Short-current Timing bits bit 1
		SCPT2 = 2               ; Battery Protection Short-current Timing bits bit 2
		SCPT3 = 3               ; Battery Protection Short-current Timing bits bit 3
		SCPT4 = 4               ; Battery Protection Short-current Timing bits bit 4
		SCPT5 = 5               ; Battery Protection Short-current Timing bits bit 5
		SCPT6 = 6               ; Battery Protection Short-current Timing bits bit 6
	}
	BPOCTR(0xfb) {          ; Battery Protection Over-current Timing Register
		OCPT0 = 0               ; Battery Protection Over-current Timing bits bit 0
		OCPT1 = 1               ; Battery Protection Over-current Timing bits bit 1
		OCPT2 = 2               ; Battery Protection Over-current Timing bits bit 2
		OCPT3 = 3               ; Battery Protection Over-current Timing bits bit 3
		OCPT4 = 4               ; Battery Protection Over-current Timing bits bit 4
		OCPT5 = 5               ; Battery Protection Over-current Timing bits bit 5
	}
	BPHCTR(0xfc) {          ; Battery Protection Short-current Timing Register
		HCPT0 = 0               ; Battery Protection Short-current Timing bits bit 0
		HCPT1 = 1               ; Battery Protection Short-current Timing bits bit 1
		HCPT2 = 2               ; Battery Protection Short-current Timing bits bit 2
		HCPT3 = 3               ; Battery Protection Short-current Timing bits bit 3
		HCPT4 = 4               ; Battery Protection Short-current Timing bits bit 4
		HCPT5 = 5               ; Battery Protection Short-current Timing bits bit 5
	}
	BPCR(0xfd) {            ; Battery Protection Control Register
		CHCD = 0                ; Charge High-current Protection Disable
		DHCD = 1                ; Discharge High-current Protection Disable
		COCD = 2                ; Charge Over-current Protection Disabled
		DOCD = 3                ; Discharge Over-current Protection Disabled
		SCD = 4                 ; Short Circuit Protection Disabled
		EPID = 5                ; External Protection Input Disable
	}
	BPPLR(0xfe) {           ; Battery Protection Parameter Lock Register
		BPPL = 0                ; Battery Protection Parameter Lock
		BPPLE = 1               ; Battery Protection Parameter Lock Enable
	}
}

