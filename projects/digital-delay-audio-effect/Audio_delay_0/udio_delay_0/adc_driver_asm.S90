;******************************************************************************
;*
;* XMEGA ADC driver assembly source file.
;*
;*      This file contains the low-level implementations for the
;*      XMEGA ADC driver. It is written for the IAR Assember.
;*
;*
;*      Note on IAR calling convention:
;*         Scratch registers:   R0-R3, R16-R23, R30-R31
;*         Preserved registers: R4-R15, R24-R27
;*         Parameter registers: R16-R23 (1-, 2- or 4-byte alignment)
;*         Return registers:    R16-R19
;*
;* Application note:
;*      AVR1300: Using the XMEGA ADC
;*
;* Documentation
;*      For comprehensive code documentation, supported compilers, compiler
;*      settings and supported devices see readme.html
;*
;*      Atmel Corporation: http:;www.atmel.com \n
;*      Support email: avr@atmel.com
;*
;* $Revision: 612 $
;* $URL: http:;revisor.norway.atmel.com/AppsXmega/avr1316_XMEGA_Self_programming/trunk/code/IAR/spm_driver.s90 $
;* $Date: 2007-06-12 13:56:51 +0200 (ty, 12 jun 2007) $
;*
;* Copyright (c) 2007, Atmel Corporation All rights reserved.
;*
;* Redistribution and use in source and binary forms, with or without
;* modification, are permitted provided that the following conditions are met:
;*
;* 1. Redistributions of source code must retain the above copyright notice,
;* this list of conditions and the following disclaimer.
;*
;* 2. Redistributions in binary form must reproduce the above copyright notice,
;* this list of conditions and the following disclaimer in the documentation
;* and/or other materials provided with the distribution.
;*
;* 3. The name of ATMEL may not be used to endorse or promote products derived
;* from this software without specific prior written permission.
;*
;* THIS SOFTWARE IS PROVIDED BY ATMEL ``AS IS'' AND ANY EXPRESS OR IMPLIED
;* WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
;* MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE EXPRESSLY AND
;* SPECIFICALLY DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT,
;* INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
;* (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
;* LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
;* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
;* (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
;* THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
;******************************************************************************


	;useful definitions that shall be provided by the ioavr.h file
	#include <ioavr.h>

	; ---
	; This routine reads the calibration byte given by the index in R16.
	;
	; Input:
	;     R16 - Byte index.
	;
	; Returns:
	;     R16 - Calibration byte.
	; ---
	MODULE _SP_ReadCalibrationByte
	PUBLIC SP_ReadCalibrationByte
	RSEG CODE

SP_ReadCalibrationByte:
	ldi		r20, NVM_CMD_READ_CALIB_ROW_gc         ; Prepare NVM command in R20.
	mov		ZL, r16                                ; Load byte index into low byte of Z.
	clr		ZH                                     ; Clear high byte of Z.
	sts		NVM_CMD, r20                           ; Load prepared command into NVM Command register.
	lpm             r16, Z                                 ; Preform a LPM to read out byte to R16

	ldi		r20, NVM_CMD_NO_OPERATION_gc           ; Clear NVM Command register
	sts		NVM_CMD, r20
	ret

	ENDMOD

	END
; END OF FILE
