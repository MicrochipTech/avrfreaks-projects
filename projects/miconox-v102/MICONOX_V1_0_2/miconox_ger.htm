<html>
<head>
<title>MICONOX</title>
</head>
<body>
<h1>MICONOX V1.0</h1>

<p>MICONOX ist die Abkürzung für &quot;Microcomputer
Native Operating Extensions&quot;.</p>

<p>Zur Zeit ist MICONOX eine Schnittstelle für serielle Peripheriegeräte.
Es orientiert sich am UNIX-Interface und ist konstruiert um auf Blockgeräte
erweitert zu werden. Noch mehr Funktionalität wie Threading, Speicherverwaltung
und weitere könnten in nächster Zeit hinzugefügt werden.</p>

<p>MICONOX ist von mir für meinen eigenen Gebrauch entwickelt. Ich stelle es als
Freeware ohne Unterstützung oder Garantie zu Verfügung. Es darf in jedem
Produkt verwendet werden, aber für MICONOX selbst darf kein Preis erhoben werden.</p> 
 
<h2>Warum MICONOX?</h2>

<p>MICONOX soll eine standardisierte Schnittstelle zum Zugriff auf
Peripheriegeräte bieten. Es können Funktionen für Serielle
Schnittstellen, LCD-Anzeigen, Drucker, I2C-Schnittstelle und weitere
geschrieben werden, ohne das spezielle Schnittstellen benötigt werden.
Ausgaben können vom LCD auf Drucker oder serielle Schnittstelle umgeleitet
werden, ohne dass das aufrufende Programm geändert werden muss.</p>

<p>Funktionen höherer Ebenen wie zum Bispiel das Formatierungsprogramm
<code>printf</code> können geschrieben werden, die ohne Änderung mit jeder Art
Peripheriegerät arbeiten.</p>

<p>MICONOX ist konstruiert zur Arbeit auf Mikrocomputern mit begrenztem
Speicherplatz. Überflüssige Teile in UNIX/LINUX für komplizierte
Mehrbenutzer-Netzwerk-Umgebungen sind weggelassen worden.</p>


<h2>Umgebung and Struktur</h2>

<p>MICONOX ist mit Hilfe des GNU C compiler für AVR in der Version von 12/2001 der AVR-Freaks entwickelt.  Es kann leicht auf andere Mikrocontroller als Atmel AVR
portiert werden, aber bisher habe ich noch keine derartigen Versuche unternommen.</p>

<p>Das Hauptprogramm ist Teil von MICONOX und ist in der Datei
&quot;miconox.c&quot; untergebracht. Nach der Initialisierung der Geräte
wird das Anwendungs-Hauptprogramm <code>appl_main()</code> aufgerufen,
das von dir geschrieben wird. Schaue dir die Datei &quot;test.c&quot;
als Beispiel an.</p>

<p>Kern des Sytstems ist die Dateisteuerung, die in fcntl.h deklariert und in
&quot;fcntl.c&quot; implementiert ist.<p>

<p>Die Dateien &quot;config.c&quot; und &quot;config.h&quot; sind die einzigen
Dateien in MICONOX die von dir angepasst werden sollten, um deine Anforderungen
zu erfüllen. In der Tabelle <code>dir</code> vereinbarst du eine Liste von textuellen
Namen für deine Geräte und eine Haupt- und eine Nebengerätenummer.
Die Hauptgerätenummer wird als Index in die Zeichengerätetabelle
<code>cdevsw</code> verwendet. Die Nebengerätenummer wird übergeben an Aufrufe
an die Lese- und Schreibfunktione (read/write) um eines von mehreren Geräten
zu bestimmen, die vom Gerätetreiber unterstützt werden.</p>


<h2>Zugriff auf ein Gerät</h2>

<p>Ein Gerät wird erst geöffnet (open), dann kann es gesteuert (ioctl) oder darauf
geschrieben (write) und davon gelesen (read) werden. Bei Abschluss des Zugriffs
wird das Gerät geschlossen (close).</p>

<p>Ein Gerät wird über einen Gerätenamen geöffnet. Er wird in der Verzeichnisstruktur
<code>dir</code> gesucht. Die gefundenen Hauptgerätenummer und
Nebengerätenummer werden in die Dateitabelle <code>filetable</code> geschrieben.
Die open-Funktion des Gerätetreibers wird aufgerufen. Der Index in der Dateitabelle
wird als Dateibezeichner fd zurückgegeben.</p>

<p>Bei Aufruf von read, write oder ioctl wird der Dateibezeichner übergeben. Er wird
verwendet um die Hauptgerätenummer aus der Dateitabelle zu lesen. Mit der
Hauptgerätenummer wird aus dem Eintrag in der Tabelle <code>cdevsw</code>
für den Gerätetreiber die entsprechende Funktion aufgerufen und dabei die
Nebengerätenummer und die sonstigen Parameter übergeben.</p>

<p>Die Funktion <code>ioctl</code> ist Gerätespezifisch. Sie erwartet zwei Parameter
vom Typ uint8_t. Der erste Prameter ist eine Befehlskennung und der zweite
ist ein Parameter für diesen Befehl. Es wird zur Steuerung des Gerätes verwendet,
z.B. zur Einstellung der Baudrate.</p>

<p>Die close-Funktion führt AUfräumarbeten durch. Die Datei wird aus der
Dateitabelle entfernt.</p>

<p>Ist der Zusatzaufwand von fcntl ein Problem für deine Anwendung, dann
kannst du die Gerätetreiber auch direkt aufrufen. Rufe einfach die open-Funktion
des Gerätes auf, dann beliebige read-/write- und ioctl-Aufrufe und rufe close zum
Abschluss auf. Alles, was du tun musst, ist eine sinnvolle Nebengerätenummer
beim Aufruf mitzugeben.</p>

<p>Viel Spa&szlig; und Erfolg mit MICONOX!</p>

<p>&copy; Mario Boller-Olfert 2002 -
E-Mail: <a href="mailto:mboller@bigfoot.de">mboller@bigfoot.de</a> -
<a href="http://www.123-byte.de">123-Byte</a></p>
</body>
</html> 