
AVRASM ver. 1.52  Tampil.asm Fri Mar 27 00:48:04 2009


         ;CodeVisionAVR C Compiler V1.23.8c Standard
         ;(C) Copyright 1998-2003 HP InfoTech s.r.l.
         ;http://www.hpinfotech.ro
         ;e-mail:office@hpinfotech.ro
         
         ;Chip type           : ATmega32
         ;Program type        : Application
         ;Clock frequency     : 11.059200 MHz
         ;Memory model        : Small
         ;Optimize for        : Size
         ;(s)printf features  : int
         ;External SRAM size  : 0
         ;Data Stack size     : 512
         ;Promote char to int : No
         ;char is unsigned    : Yes
         ;8 bit enums         : No
         ;Enhanced core instructions    : On
         ;Automatic register allocation : On
         ;Use AVR Studio Terminal I/O   : No
         
          	.LISTMAC
          	.EQU UDRE=0x5
          	.EQU RXC=0x7
          	.EQU USR=0xB
          	.EQU UDR=0xC
          	.EQU EERE=0x0
          	.EQU EEWE=0x1
          	.EQU EEMWE=0x2
          	.EQU SPSR=0xE
          	.EQU SPDR=0xF
          	.EQU EECR=0x1C
          	.EQU EEDR=0x1D
          	.EQU EEARL=0x1E
          	.EQU EEARH=0x1F
          	.EQU WDTCR=0x21
          	.EQU MCUCR=0x35
          	.EQU GICR=0x3B
          	.EQU SPL=0x3D
          	.EQU SPH=0x3E
          	.EQU SREG=0x3F
         
          	.DEF R0X0=R0
          	.DEF R0X1=R1
          	.DEF R0X2=R2
          	.DEF R0X3=R3
          	.DEF R0X4=R4
          	.DEF R0X5=R5
          	.DEF R0X6=R6
          	.DEF R0X7=R7
          	.DEF R0X8=R8
          	.DEF R0X9=R9
          	.DEF R0XA=R10
          	.DEF R0XB=R11
          	.DEF R0XC=R12
          	.DEF R0XD=R13
          	.DEF R0XE=R14
          	.DEF R0XF=R15
          	.DEF R0X10=R16
          	.DEF R0X11=R17
          	.DEF R0X12=R18
          	.DEF R0X13=R19
          	.DEF R0X14=R20
          	.DEF R0X15=R21
          	.DEF R0X16=R22
          	.DEF R0X17=R23
          	.DEF R0X18=R24
          	.DEF R0X19=R25
          	.DEF R0X1A=R26
          	.DEF R0X1B=R27
          	.DEF R0X1C=R28
          	.DEF R0X1D=R29
          	.DEF R0X1E=R30
          	.DEF R0X1F=R31
         
          	.EQU __se_bit=0x80
          	.EQU __sm_mask=0x30
          	.EQU __sm_powerdown=0x20
         
          	.MACRO __CPD1N
          	CPI  R30,LOW(@0)
          	LDI  R26,HIGH(@0)
          	CPC  R31,R26
          	LDI  R26,BYTE3(@0)
          	CPC  R22,R26
          	LDI  R26,BYTE4(@0)
          	CPC  R23,R26
          	.ENDM
         
          	.MACRO __CPD2N
          	CPI  R26,LOW(@0)
          	LDI  R30,HIGH(@0)
          	CPC  R27,R30
          	LDI  R30,BYTE3(@0)
          	CPC  R24,R30
          	LDI  R30,BYTE4(@0)
          	CPC  R25,R30
          	.ENDM
         
          	.MACRO __CPWRR
          	CP   R@0,R@2
          	CPC  R@1,R@3
          	.ENDM
         
          	.MACRO __CPWRN
          	CPI  R@0,LOW(@2)
          	LDI  R30,HIGH(@2)
          	CPC  R@1,R30
          	.ENDM
         
          	.MACRO __ADDD1N
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	SBCI R22,BYTE3(-@0)
          	SBCI R23,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __ADDD2N
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	SBCI R24,BYTE3(-@0)
          	SBCI R25,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __SUBD1N
          	SUBI R30,LOW(@0)
          	SBCI R31,HIGH(@0)
          	SBCI R22,BYTE3(@0)
          	SBCI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __SUBD2N
          	SUBI R26,LOW(@0)
          	SBCI R27,HIGH(@0)
          	SBCI R24,BYTE3(@0)
          	SBCI R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ANDD1N
          	ANDI R30,LOW(@0)
          	ANDI R31,HIGH(@0)
          	ANDI R22,BYTE3(@0)
          	ANDI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ORD1N
          	ORI  R30,LOW(@0)
          	ORI  R31,HIGH(@0)
          	ORI  R22,BYTE3(@0)
          	ORI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __DELAY_USB
          	LDI  R24,LOW(@0)
          __DELAY_USB_LOOP:
          	DEC  R24
          	BRNE __DELAY_USB_LOOP
          	.ENDM
         
          	.MACRO __DELAY_USW
          	LDI  R24,LOW(@0)
          	LDI  R25,HIGH(@0)
          __DELAY_USW_LOOP:
          	SBIW R24,1
          	BRNE __DELAY_USW_LOOP
          	.ENDM
         
          	.MACRO __CLRD1S
          	CLR  R30
          	STD  Y+@0,R30
          	STD  Y+@0+1,R30
          	STD  Y+@0+2,R30
          	STD  Y+@0+3,R30
          	.ENDM
         
          	.MACRO __GETD1S
          	LDD  R30,Y+@0
          	LDD  R31,Y+@0+1
          	LDD  R22,Y+@0+2
          	LDD  R23,Y+@0+3
          	.ENDM
         
          	.MACRO __PUTD1S
          	STD  Y+@0,R30
          	STD  Y+@0+1,R31
          	STD  Y+@0+2,R22
          	STD  Y+@0+3,R23
          	.ENDM
         
          	.MACRO __POINTB1MN
          	LDI  R30,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1MN
          	LDI  R30,LOW(@0+@1)
          	LDI  R31,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1FN
          	LDI  R30,LOW(2*@0+@1)
          	LDI  R31,HIGH(2*@0+@1)
          	.ENDM
         
          	.MACRO __POINTB2MN
          	LDI  R26,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW2MN
          	LDI  R26,LOW(@0+@1)
          	LDI  R27,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __GETD1N
          	LDI  R30,LOW(@0)
          	LDI  R31,HIGH(@0)
          	LDI  R22,BYTE3(@0)
          	LDI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2N
          	LDI  R26,LOW(@0)
          	LDI  R27,HIGH(@0)
          	LDI  R24,BYTE3(@0)
          	LDI  R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2S
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	LDD  R24,Y+@0+2
          	LDD  R25,Y+@0+3
          	.ENDM
         
          	.MACRO __GETB1MN
          	LDS  R30,@0+@1
          	.ENDM
         
          	.MACRO __GETW1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	LDS  R22,@0+@1+2
          	LDS  R23,@0+@1+3
          	.ENDM
         
          	.MACRO __GETBRMN
          	LDS  R@2,@0+@1
          	.ENDM
         
          	.MACRO __GETWRMN
          	LDS  R@2,@0+@1
          	LDS  R@3,@0+@1+1
          	.ENDM
         
          	.MACRO __GETB2MN
          	LDS  R26,@0+@1
          	.ENDM
         
          	.MACRO __GETW2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	LDS  R24,@0+@1+2
          	LDS  R25,@0+@1+3
          	.ENDM
         
          	.MACRO __PUTB1MN
          	STS  @0+@1,R30
          	.ENDM
         
          	.MACRO __PUTW1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	.ENDM
         
          	.MACRO __PUTD1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	STS  @0+@1+2,R22
          	STS  @0+@1+3,R23
          	.ENDM
         
          	.MACRO __PUTBMRN
          	STS  @0+@1,R@2
          	.ENDM
         
          	.MACRO __PUTWMRN
          	STS  @0+@1,R@2
          	STS  @0+@1+1,R@3
          	.ENDM
         
          	.MACRO __GETW1R
          	MOV  R30,R@0
          	MOV  R31,R@1
          	.ENDM
         
          	.MACRO __GETW2R
          	MOV  R26,R@0
          	MOV  R27,R@1
          	.ENDM
         
          	.MACRO __GETWRN
          	LDI  R@0,LOW(@2)
          	LDI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __PUTW1R
          	MOV  R@0,R30
          	MOV  R@1,R31
          	.ENDM
         
          	.MACRO __PUTW2R
          	MOV  R@0,R26
          	MOV  R@1,R27
          	.ENDM
         
          	.MACRO __ADDWRN
          	SUBI R@0,LOW(-@2)
          	SBCI R@1,HIGH(-@2)
          	.ENDM
         
          	.MACRO __ADDWRR
          	ADD  R@0,R@2
          	ADC  R@1,R@3
          	.ENDM
         
          	.MACRO __SUBWRN
          	SUBI R@0,LOW(@2)
          	SBCI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __SUBWRR
          	SUB  R@0,R@2
          	SBC  R@1,R@3
          	.ENDM
         
          	.MACRO __ANDWRN
          	ANDI R@0,LOW(@2)
          	ANDI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ANDWRR
          	AND  R@0,R@2
          	AND  R@1,R@3
          	.ENDM
         
          	.MACRO __ORWRN
          	ORI  R@0,LOW(@2)
          	ORI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ORWRR
          	OR   R@0,R@2
          	OR   R@1,R@3
          	.ENDM
         
          	.MACRO __EORWRR
          	EOR  R@0,R@2
          	EOR  R@1,R@3
          	.ENDM
         
          	.MACRO __GETWRS
          	LDD  R@0,Y+@2
          	LDD  R@1,Y+@2+1
          	.ENDM
         
          	.MACRO __PUTWSR
          	STD  Y+@2,R@0
          	STD  Y+@2+1,R@1
          	.ENDM
         
          	.MACRO __MOVEWRR
          	MOV  R@0,R@2
          	MOV  R@1,R@3
          	.ENDM
         
          	.MACRO __INWR
          	IN   R@0,@2
          	IN   R@1,@2+1
          	.ENDM
         
          	.MACRO __OUTWR
          	OUT  @2+1,R@1
          	OUT  @2,R@0
          	.ENDM
         
          	.MACRO __CALL1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	ICALL
          	.ENDM
         
          	.MACRO __NBST
          	BST  R@0,@1
          	IN   R30,SREG
          	LDI  R31,0x40
          	EOR  R30,R31
          	OUT  SREG,R30
          	.ENDM
         
         
          	.MACRO __PUTB1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	CALL __PUTDP1
          	.ENDM
         
          	.MACRO __GETB1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R30,Z
          	.ENDM
         
          	.MACRO __GETW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R31,Z
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __GETD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R1,Z+
          	LD   R22,Z+
          	LD   R23,Z
          	MOVW R30,R0
          	.ENDM
         
          	.MACRO __GETB2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R26,X
          	.ENDM
         
          	.MACRO __GETW2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	.ENDM
         
          	.MACRO __GETD2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R1,X+
          	LD   R24,X+
          	LD   R25,X
          	MOVW R26,R0
          	.ENDM
         
          	.MACRO __GETBRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@1)
          	SBCI R31,HIGH(-@1)
          	LD   R@0,Z
          	.ENDM
         
          	.MACRO __GETWRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	LD   R@0,Z+
          	LD   R@1,Z
          	.ENDM
         
          	.MACRO __LSLW8SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R31,Z
          	CLR  R30
          	.ENDM
         
          	.MACRO __PUTB1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __CLRW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __CLRD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __PUTB2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R26
          	.ENDM
         
          	.MACRO __PUTW2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z+,R26
          	ST   Z,R27
          	.ENDM
         
          	.MACRO __PUTBSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTWSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	ST   Z+,R@0
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTB1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __MULBRR
          	MULS R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __MULBRRU
          	MUL  R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.CSEG
          	.ORG 0
         
          	.INCLUDE "Tampil.vec"
         
         ;INTERRUPT VECTORS
000000 940c 002b 	JMP  __RESET
000002 940c 0000 	JMP  0
000004 940c 0000 	JMP  0
000006 940c 0000 	JMP  0
000008 940c 0000 	JMP  0
00000a 940c 0000 	JMP  0
00000c 940c 0000 	JMP  0
00000e 940c 0000 	JMP  0
000010 940c 0000 	JMP  0
000012 940c 0000 	JMP  0
000014 940c 0000 	JMP  0
000016 940c 0000 	JMP  0
000018 940c 0000 	JMP  0
00001a 940c 0000 	JMP  0
00001c 940c 0000 	JMP  0
00001e 940c 0000 	JMP  0
000020 940c 0000 	JMP  0
000022 940c 0000 	JMP  0
000024 940c 0000 	JMP  0
000026 940c 0000 	JMP  0
000028 940c 0000 	JMP  0
         
          	.INCLUDE "Tampil.inc"
          	.DEF _Level=R4
          	.DEF _Suhu=R6
         
          __GLOBAL_INI_TBL:
          	.DW  0
00002a 0000
         
          __RESET:
00002b 94f8      	CLI
00002c 27ee      	CLR  R30
00002d bbec      	OUT  EECR,R30
         
         ;INTERRUPT VECTORS ARE PLACED
         ;AT THE START OF FLASH
00002e e0f1      	LDI  R31,1
00002f bffb      	OUT  GICR,R31
000030 bfeb      	OUT  GICR,R30
000031 bfe5      	OUT  MCUCR,R30
         
         ;DISABLE WATCHDOG
000032 e1f8      	LDI  R31,0x18
000033 bdf1      	OUT  WDTCR,R31
000034 e1f0      	LDI  R31,0x10
000035 bdf1      	OUT  WDTCR,R31
         
         ;CLEAR R2-R14
000036 e08d      	LDI  R24,13
000037 e0a2      	LDI  R26,2
000038 27bb      	CLR  R27
          __CLEAR_REG:
000039 93ed      	ST   X+,R30
00003a 958a      	DEC  R24
00003b f7e9      	BRNE __CLEAR_REG
         
         ;CLEAR SRAM
00003c e080      	LDI  R24,LOW(0x800)
00003d e098      	LDI  R25,HIGH(0x800)
00003e e6a0      	LDI  R26,0x60
          __CLEAR_SRAM:
00003f 93ed      	ST   X+,R30
000040 9701      	SBIW R24,1
000041 f7e9      	BRNE __CLEAR_SRAM
         
         ;GLOBAL VARIABLES INITIALIZATION
000042 e5e4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000043 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
          __GLOBAL_INI_NEXT:
000044 9005      	LPM  R0,Z+
000045 9015      	LPM  R1,Z+
000046 01bf      	MOVW R22,R30
000047 01f0      	MOVW R30,R0
000048 9730      	SBIW R30,0
000049 f051      	BREQ __GLOBAL_INI_END
00004a 91a5      	LPM  R26,Z+
00004b 91b5      	LPM  R27,Z+
00004c 9185      	LPM  R24,Z+
00004d 9195      	LPM  R25,Z+
          __GLOBAL_INI_LOOP:
00004e 9005      	LPM  R0,Z+
00004f 920d      	ST   X+,R0
000050 9701      	SBIW R24,1
000051 f7e1      	BRNE __GLOBAL_INI_LOOP
000052 01fb      	MOVW R30,R22
000053 cff0      	RJMP __GLOBAL_INI_NEXT
          __GLOBAL_INI_END:
         
         ;STACK POINTER INITIALIZATION
000054 e5ef      	LDI  R30,LOW(0x85F)
000055 bfed      	OUT  SPL,R30
000056 e0e8      	LDI  R30,HIGH(0x85F)
000057 bfee      	OUT  SPH,R30
         
         ;DATA STACK POINTER INITIALIZATION
000058 e6c0      	LDI  R28,LOW(0x260)
000059 e0d2      	LDI  R29,HIGH(0x260)
         
00005a 940c 005c 	JMP  _main
         
          	.ESEG
          	.ORG 0
          	.DB  0 ; FIRST EEPROM LOCATION NOT USED, SEE ATMEL ERRATA SHEETS
000000 00
         
          	.DSEG
          	.ORG 0x260
         ;       1 #include<mega32.h> 
         ;       2 #include<delay.h>
         ;       3 #define mode_ADC 0x20;
         ;       4 unsigned int baca_adc(unsigned char pin_adc);
         ;       5 unsigned int Level,Suhu;   
         ;       6 void io_init(); 
         ;       7 void ADC_init();
         ;       8 void main(void)
         ;       9 {        
         
          	.CSEG
          _main:
         ;      10 	 io_init();
00005c d024      	RCALL _io_init
         ;      11 	 ADC_init();
00005d d029      	RCALL _ADC_init
         ;      12 	 while(1)
          _0x7:
         ;      13 	 { 
         ;      14        	 Level=baca_adc(0);
00005e 27ee      	CLR  R30
00005f 93ea      	ST   -Y,R30
000060 d015      	RCALL _baca_adc
000061   +  	__PUTW1R 4,5
000061 2e4e      	MOV  R0x4,R30
000062 2e5f      	MOV  R0x5,R31
          	.ENDM
         ;      15          Suhu=baca_adc(1);
000063 e0e1      	LDI  R30,LOW(1)
000064 93ea      	ST   -Y,R30
000065 d010      	RCALL _baca_adc
000066   +  	__PUTW1R 6,7
000066 2e6e      	MOV  R0x6,R30
000067 2e7f      	MOV  R0x7,R31
          	.ENDM
         ;      16          PORTC=Level;	//PORTC to output ADC 0
000068   +  	__GETW1R 4,5
000068 2de4      	MOV  R30,R0x4
000069 2df5      	MOV  R31,R0x5
          	.ENDM
00006a bbe5      	OUT  0x15,R30
         ;      17          PORTD=Suhu;
00006b   +  	__GETW1R 6,7
00006b 2de6      	MOV  R30,R0x6
00006c 2df7      	MOV  R31,R0x7
          	.ENDM
00006d bbe2      	OUT  0x12,R30
         ;      18          delay_ms(200); // just to give mikro not to work hard u can use 300 ,500, until 1000
00006e ece8      	LDI  R30,LOW(200)
00006f e0f0      	LDI  R31,HIGH(200)
000070 93fa      	ST   -Y,R31
000071 93ea      	ST   -Y,R30
000072 940e 008c 	CALL _delay_ms
         ;      19          }
000074 cfe9      	RJMP _0x7
         ;      20 }
          _0xA:
000075 cfff      	RJMP _0xA
         ;      21 
         ;      22 //>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>fungsi-fungsi<<<<<<<<<<<<<<<<<<<<<<<<
         ;      23 unsigned int baca_adc(unsigned char pin_adc)
         ;      24 {
          _baca_adc:
         ;      25 	ADMUX=pin_adc|mode_ADC;
000076 81e8      	LD   R30,Y
000077 62e0      	ORI  R30,0x20
000078 b9e7      	OUT  0x7,R30
         ;      26 	ADCSRA|=0x40;
000079 9a36      	SBI  0x6,6
         ;      27 	while((ADCSRA & 0x10)==0);
          _0xC:
00007a 9b34      	SBIS 0x6,4
00007b cffe      	RJMP _0xC
         ;      28 	ADCSRA|=0x10;
00007c 9a34      	SBI  0x6,4
         ;      29 	return ADCH;//>>1;//ADCW>>1;
00007d b1e5      	IN   R30,0x5
00007e 27ff      	CLR  R31
00007f 9621      	ADIW R28,1
000080 9508      	RET
         ;      30 } 	 
         ;      31 void io_init()
         ;      32 {  
          _io_init:
         ;      33 
         ;      34 //--------------- output	
         ;      35 	DDRD=0xff;
000081 efef      	LDI  R30,LOW(255)
000082 bbe1      	OUT  0x11,R30
         ;      36 	DDRC=0xff;
000083 bbe4      	OUT  0x14,R30
         ;      37 //--------------- seting port A 0 dan 1 to input ADC
         ;      38 	DDRA.0=0;
000084 98d0      	CBI  0x1A,0
         ;      39 	DDRA.1=0;
000085 98d1      	CBI  0x1A,1
         ;      40 }  
000086 9508      	RET
         ;      41 void ADC_init()
         ;      42 {
          _ADC_init:
         ;      43 	ADMUX=mode_ADC;
000087 e2e0      	LDI  R30,LOW(32)
000088 b9e7      	OUT  0x7,R30
         ;      44 	ADCSRA=0x87; //prescaler  87  
000089 e8e7      	LDI  R30,LOW(135)
00008a b9e6      	OUT  0x6,R30
         ;      45 }
00008b 9508      	RET
         
          _delay_ms:
00008c 91e9      	ld   r30,y+
00008d 91f9      	ld   r31,y+
00008e 9630      	adiw r30,0
00008f f039      	breq __delay_ms1
          __delay_ms0:
000090   +  	__DELAY_USW 0xACD
000090 ec8d      	LDI  R24,LOW(0xacd)
000091 e09a      	LDI  R25,HIGH(0xacd)
          __DELAY_USW_LOOP:
000092 9701      	SBIW R24,1
000093 f7f1      	BRNE __DELAY_USW_LOOP
          	.ENDM
000094 95a8      	wdr
000095 9731      	sbiw r30,1
000096 f7c9      	brne __delay_ms0
          __delay_ms1:
000097 9508      	ret
         

Assembly complete with no errors.
