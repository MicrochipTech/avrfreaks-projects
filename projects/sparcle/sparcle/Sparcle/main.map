Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                              main.o (__udivmodhi4)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                              main.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

PWM_input           0x1               main.o
ADC_input           0x1               main.o

Discarded input sections

 .stabstr       0x00000000        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
LOAD main.o
LOAD /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a
LOAD /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/libc.a
LOAD /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000     0x2334
 *(.vectors)
 .vectors       0x00000000       0x54 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.progmem.gcc*)
 .progmem.gcc_sw_table
                0x00000054       0x68 main.o
 *(.progmem*)
 .progmem.data  0x000000bc      0x57b main.o
                0x00000195                mode_text_ptr
                0x0000019f                err_text
                0x00000286                err_text_4
                0x0000011b                manual_text
                0x000001b2                err_text_0
                0x00000304                err_text_6
                0x00000133                sleep_text
                0x000000bc                auto_text
                0x00000337                ASCII_number_table
                0x00000207                err_text_1
                0x00000223                err_text_2
                0x000000e5                monitor_text
                0x0000015c                auto_2_text
                0x000002c7                err_text_5
                0x00000329                err_text_ptr
                0x0000025d                err_text_3
                0x00000638                . = ALIGN (0x2)
 *fill*         0x00000637        0x1 00
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
 *(.init0)
 .init0         0x00000638        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
                0x00000638                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000638        0xc /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000644       0x16 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
                0x00000644                __do_copy_data
 .init4         0x0000065a       0x10 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                0x0000065a                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000066a        0x4 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000066e        0x4 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
                0x0000066e                __vector_1
                0x0000066e                __vector_12
                0x0000066e                __bad_interrupt
                0x0000066e                __vector_6
                0x0000066e                __vector_11
                0x0000066e                __vector_13
                0x0000066e                __vector_17
                0x0000066e                __vector_19
                0x0000066e                __vector_7
                0x0000066e                __vector_5
                0x0000066e                __vector_4
                0x0000066e                __vector_9
                0x0000066e                __vector_2
                0x0000066e                __vector_15
                0x0000066e                __vector_8
                0x0000066e                __vector_14
                0x0000066e                __vector_10
                0x0000066e                __vector_16
                0x0000066e                __vector_18
                0x0000066e                __vector_20
 .text          0x00000672     0x1c9a main.o
                0x00000f7c                parameter_handling
                0x0000086a                flash_string_send
                0x00000a2c                sleeping_mode
                0x00000f34                __vector_3
                0x00000672                PWM_init
                0x0000094c                monitor_mode
                0x00000c2e                regulator
                0x00000806                packet_assembler
                0x000007cc                UART_recive
                0x0000068c                ADC_init
                0x00000b2e                P_regulator
                0x00000a78                manual_m
                0x00000842                UART_send
                0x00000750                error_handling
                0x00000d58                regulation
                0x000008c2                UART_transmit_TFb
                0x00001c32                auto_mode
                0x00000900                ioinit
                0x00001d80                main
                0x0000088e                UART_transmit_TF
                0x00000738                sleep_m
                0x000006a4                ADC_output
                0x0000067e                PWM_output
                0x0000073a                UART_init
 .text          0x0000230c        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 .text          0x0000230c        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .text          0x0000230c        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                0x0000230c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x0000230c       0x28 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
                0x0000230c                __udivmodhi4
 .text.libgcc   0x00002334        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .text.libgcc   0x00002334        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
                0x00002334                . = ALIGN (0x2)
 *(.fini9)
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 *(.fini0)
                0x00002334                _etext = .

.data           0x00800060        0x8 load address 0x00002334
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x7 main.o
                0x00800065                light4
                0x00800060                p
                0x00800064                light3
                0x00800066                hysteresis
                0x00800062                light1
                0x00800063                light2
                0x00800061                requested_value
 .data          0x00800067        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 .data          0x00800067        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .data          0x00800067        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800068                . = ALIGN (0x2)
 *fill*         0x00800067        0x1 00
                0x00800068                _edata = .
                0x00800068                PROVIDE (__data_end, .)

.bss            0x00800068       0x6c
                0x00800068                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800068        0x0 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800068       0x6a main.o
                0x00800069                operation_m_backup
                0x0080006a                monitor_counter
                0x00800068                operation_mode
 .bss           0x008000d2        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_udivmodhi4.o)
 .bss           0x008000d2        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_copy_data.o)
 .bss           0x008000d2        0x0 /usr/lib/gcc/avr/4.2.1/avr5/libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x008000d2        0x2 main.o
                0x008000d2                PWM_input
                0x008000d3                ADC_input
                0x008000d4                PROVIDE (__bss_end, .)
                0x00002334                __data_load_start = LOADADDR (.data)
                0x0000233c                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008000d4        0x0
                0x008000d4                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008000d4                PROVIDE (__noinit_end, .)
                0x008000d4                _end = .
                0x008000d4                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.stab           0x00000000      0x36c
 *(.stab)
 .stab          0x00000000      0x36c /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o

.stabstr        0x00000000       0x54
 *(.stabstr)
 .stabstr       0x00000000       0x54 /usr/lib/gcc/avr/4.2.1/../../../../avr/lib/avr5/crtm16.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
