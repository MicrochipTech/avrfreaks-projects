
AVRASM ver. 1.52  IM1.asm Wed Mar 25 07:35:10 2009


         ;CodeVisionAVR C Compiler V1.23.8c Standard
         ;(C) Copyright 1998-2003 HP InfoTech s.r.l.
         ;http://www.hpinfotech.ro
         ;e-mail:office@hpinfotech.ro
         
         ;Chip type           : ATmega8535L
         ;Program type        : Application
         ;Clock frequency     : 4.000000 MHz
         ;Memory model        : Small
         ;Optimize for        : Size
         ;(s)printf features  : int
         ;External SRAM size  : 0
         ;Data Stack size     : 128
         ;Promote char to int : No
         ;char is unsigned    : Yes
         ;8 bit enums         : No
         ;Enhanced core instructions    : On
         ;Automatic register allocation : On
         ;Use AVR Studio Terminal I/O   : No
         
          	.LISTMAC
          	.EQU UDRE=0x5
          	.EQU RXC=0x7
          	.EQU USR=0xB
          	.EQU UDR=0xC
          	.EQU EERE=0x0
          	.EQU EEWE=0x1
          	.EQU EEMWE=0x2
          	.EQU SPSR=0xE
          	.EQU SPDR=0xF
          	.EQU EECR=0x1C
          	.EQU EEDR=0x1D
          	.EQU EEARL=0x1E
          	.EQU EEARH=0x1F
          	.EQU WDTCR=0x21
          	.EQU MCUCR=0x35
          	.EQU GICR=0x3B
          	.EQU SPL=0x3D
          	.EQU SPH=0x3E
          	.EQU SREG=0x3F
         
          	.DEF R0X0=R0
          	.DEF R0X1=R1
          	.DEF R0X2=R2
          	.DEF R0X3=R3
          	.DEF R0X4=R4
          	.DEF R0X5=R5
          	.DEF R0X6=R6
          	.DEF R0X7=R7
          	.DEF R0X8=R8
          	.DEF R0X9=R9
          	.DEF R0XA=R10
          	.DEF R0XB=R11
          	.DEF R0XC=R12
          	.DEF R0XD=R13
          	.DEF R0XE=R14
          	.DEF R0XF=R15
          	.DEF R0X10=R16
          	.DEF R0X11=R17
          	.DEF R0X12=R18
          	.DEF R0X13=R19
          	.DEF R0X14=R20
          	.DEF R0X15=R21
          	.DEF R0X16=R22
          	.DEF R0X17=R23
          	.DEF R0X18=R24
          	.DEF R0X19=R25
          	.DEF R0X1A=R26
          	.DEF R0X1B=R27
          	.DEF R0X1C=R28
          	.DEF R0X1D=R29
          	.DEF R0X1E=R30
          	.DEF R0X1F=R31
         
          	.EQU __se_bit=0x40
          	.EQU __sm_mask=0xB0
          	.EQU __sm_adc_noise_red=0x10
          	.EQU __sm_powerdown=0x20
          	.EQU __sm_powersave=0x30
          	.EQU __sm_standby=0xA0
          	.EQU __sm_ext_standby=0xB0
         
          	.MACRO __CPD1N
          	CPI  R30,LOW(@0)
          	LDI  R26,HIGH(@0)
          	CPC  R31,R26
          	LDI  R26,BYTE3(@0)
          	CPC  R22,R26
          	LDI  R26,BYTE4(@0)
          	CPC  R23,R26
          	.ENDM
         
          	.MACRO __CPD2N
          	CPI  R26,LOW(@0)
          	LDI  R30,HIGH(@0)
          	CPC  R27,R30
          	LDI  R30,BYTE3(@0)
          	CPC  R24,R30
          	LDI  R30,BYTE4(@0)
          	CPC  R25,R30
          	.ENDM
         
          	.MACRO __CPWRR
          	CP   R@0,R@2
          	CPC  R@1,R@3
          	.ENDM
         
          	.MACRO __CPWRN
          	CPI  R@0,LOW(@2)
          	LDI  R30,HIGH(@2)
          	CPC  R@1,R30
          	.ENDM
         
          	.MACRO __ADDD1N
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	SBCI R22,BYTE3(-@0)
          	SBCI R23,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __ADDD2N
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	SBCI R24,BYTE3(-@0)
          	SBCI R25,BYTE4(-@0)
          	.ENDM
         
          	.MACRO __SUBD1N
          	SUBI R30,LOW(@0)
          	SBCI R31,HIGH(@0)
          	SBCI R22,BYTE3(@0)
          	SBCI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __SUBD2N
          	SUBI R26,LOW(@0)
          	SBCI R27,HIGH(@0)
          	SBCI R24,BYTE3(@0)
          	SBCI R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ANDD1N
          	ANDI R30,LOW(@0)
          	ANDI R31,HIGH(@0)
          	ANDI R22,BYTE3(@0)
          	ANDI R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __ORD1N
          	ORI  R30,LOW(@0)
          	ORI  R31,HIGH(@0)
          	ORI  R22,BYTE3(@0)
          	ORI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __DELAY_USB
          	LDI  R24,LOW(@0)
          __DELAY_USB_LOOP:
          	DEC  R24
          	BRNE __DELAY_USB_LOOP
          	.ENDM
         
          	.MACRO __DELAY_USW
          	LDI  R24,LOW(@0)
          	LDI  R25,HIGH(@0)
          __DELAY_USW_LOOP:
          	SBIW R24,1
          	BRNE __DELAY_USW_LOOP
          	.ENDM
         
          	.MACRO __CLRD1S
          	CLR  R30
          	STD  Y+@0,R30
          	STD  Y+@0+1,R30
          	STD  Y+@0+2,R30
          	STD  Y+@0+3,R30
          	.ENDM
         
          	.MACRO __GETD1S
          	LDD  R30,Y+@0
          	LDD  R31,Y+@0+1
          	LDD  R22,Y+@0+2
          	LDD  R23,Y+@0+3
          	.ENDM
         
          	.MACRO __PUTD1S
          	STD  Y+@0,R30
          	STD  Y+@0+1,R31
          	STD  Y+@0+2,R22
          	STD  Y+@0+3,R23
          	.ENDM
         
          	.MACRO __POINTB1MN
          	LDI  R30,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1MN
          	LDI  R30,LOW(@0+@1)
          	LDI  R31,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW1FN
          	LDI  R30,LOW(2*@0+@1)
          	LDI  R31,HIGH(2*@0+@1)
          	.ENDM
         
          	.MACRO __POINTB2MN
          	LDI  R26,LOW(@0+@1)
          	.ENDM
         
          	.MACRO __POINTW2MN
          	LDI  R26,LOW(@0+@1)
          	LDI  R27,HIGH(@0+@1)
          	.ENDM
         
          	.MACRO __GETD1N
          	LDI  R30,LOW(@0)
          	LDI  R31,HIGH(@0)
          	LDI  R22,BYTE3(@0)
          	LDI  R23,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2N
          	LDI  R26,LOW(@0)
          	LDI  R27,HIGH(@0)
          	LDI  R24,BYTE3(@0)
          	LDI  R25,BYTE4(@0)
          	.ENDM
         
          	.MACRO __GETD2S
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	LDD  R24,Y+@0+2
          	LDD  R25,Y+@0+3
          	.ENDM
         
          	.MACRO __GETB1MN
          	LDS  R30,@0+@1
          	.ENDM
         
          	.MACRO __GETW1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	LDS  R22,@0+@1+2
          	LDS  R23,@0+@1+3
          	.ENDM
         
          	.MACRO __GETBRMN
          	LDS  R@2,@0+@1
          	.ENDM
         
          	.MACRO __GETWRMN
          	LDS  R@2,@0+@1
          	LDS  R@3,@0+@1+1
          	.ENDM
         
          	.MACRO __GETB2MN
          	LDS  R26,@0+@1
          	.ENDM
         
          	.MACRO __GETW2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	.ENDM
         
          	.MACRO __GETD2MN
          	LDS  R26,@0+@1
          	LDS  R27,@0+@1+1
          	LDS  R24,@0+@1+2
          	LDS  R25,@0+@1+3
          	.ENDM
         
          	.MACRO __PUTB1MN
          	STS  @0+@1,R30
          	.ENDM
         
          	.MACRO __PUTW1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	.ENDM
         
          	.MACRO __PUTD1MN
          	STS  @0+@1,R30
          	STS  @0+@1+1,R31
          	STS  @0+@1+2,R22
          	STS  @0+@1+3,R23
          	.ENDM
         
          	.MACRO __PUTBMRN
          	STS  @0+@1,R@2
          	.ENDM
         
          	.MACRO __PUTWMRN
          	STS  @0+@1,R@2
          	STS  @0+@1+1,R@3
          	.ENDM
         
          	.MACRO __GETW1R
          	MOV  R30,R@0
          	MOV  R31,R@1
          	.ENDM
         
          	.MACRO __GETW2R
          	MOV  R26,R@0
          	MOV  R27,R@1
          	.ENDM
         
          	.MACRO __GETWRN
          	LDI  R@0,LOW(@2)
          	LDI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __PUTW1R
          	MOV  R@0,R30
          	MOV  R@1,R31
          	.ENDM
         
          	.MACRO __PUTW2R
          	MOV  R@0,R26
          	MOV  R@1,R27
          	.ENDM
         
          	.MACRO __ADDWRN
          	SUBI R@0,LOW(-@2)
          	SBCI R@1,HIGH(-@2)
          	.ENDM
         
          	.MACRO __ADDWRR
          	ADD  R@0,R@2
          	ADC  R@1,R@3
          	.ENDM
         
          	.MACRO __SUBWRN
          	SUBI R@0,LOW(@2)
          	SBCI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __SUBWRR
          	SUB  R@0,R@2
          	SBC  R@1,R@3
          	.ENDM
         
          	.MACRO __ANDWRN
          	ANDI R@0,LOW(@2)
          	ANDI R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ANDWRR
          	AND  R@0,R@2
          	AND  R@1,R@3
          	.ENDM
         
          	.MACRO __ORWRN
          	ORI  R@0,LOW(@2)
          	ORI  R@1,HIGH(@2)
          	.ENDM
         
          	.MACRO __ORWRR
          	OR   R@0,R@2
          	OR   R@1,R@3
          	.ENDM
         
          	.MACRO __EORWRR
          	EOR  R@0,R@2
          	EOR  R@1,R@3
          	.ENDM
         
          	.MACRO __GETWRS
          	LDD  R@0,Y+@2
          	LDD  R@1,Y+@2+1
          	.ENDM
         
          	.MACRO __PUTWSR
          	STD  Y+@2,R@0
          	STD  Y+@2+1,R@1
          	.ENDM
         
          	.MACRO __MOVEWRR
          	MOV  R@0,R@2
          	MOV  R@1,R@3
          	.ENDM
         
          	.MACRO __INWR
          	IN   R@0,@2
          	IN   R@1,@2+1
          	.ENDM
         
          	.MACRO __OUTWR
          	OUT  @2+1,R@1
          	OUT  @2,R@0
          	.ENDM
         
          	.MACRO __CALL1MN
          	LDS  R30,@0+@1
          	LDS  R31,@0+@1+1
          	ICALL
          	.ENDM
         
          	.MACRO __NBST
          	BST  R@0,@1
          	IN   R30,SREG
          	LDI  R31,0x40
          	EOR  R30,R31
          	OUT  SREG,R30
          	.ENDM
         
         
          	.MACRO __PUTB1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SN
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNS
          	LDD  R26,Y+@0
          	LDD  R27,Y+@0+1
          	ADIW R26,@1
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMN
          	LDS  R26,@0
          	LDS  R27,@0+1
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __PUTB1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1PMNS
          	LDS  R26,@0
          	LDS  R27,@0+1
          	ADIW R26,@1
          	RCALL __PUTDP1
          	.ENDM
         
          	.MACRO __GETB1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R30,Z
          	.ENDM
         
          	.MACRO __GETW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R31,Z
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __GETD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R0,Z+
          	LD   R1,Z+
          	LD   R22,Z+
          	LD   R23,Z
          	MOVW R30,R0
          	.ENDM
         
          	.MACRO __GETB2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R26,X
          	.ENDM
         
          	.MACRO __GETW2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	.ENDM
         
          	.MACRO __GETD2SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R1,X+
          	LD   R24,X+
          	LD   R25,X
          	MOVW R26,R0
          	.ENDM
         
          	.MACRO __GETBRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@1)
          	SBCI R31,HIGH(-@1)
          	LD   R@0,Z
          	.ENDM
         
          	.MACRO __GETWRSX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	LD   R@0,Z+
          	LD   R@1,Z
          	.ENDM
         
          	.MACRO __LSLW8SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	LD   R31,Z
          	CLR  R30
          	.ENDM
         
          	.MACRO __PUTB1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __CLRW1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __CLRD1SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	CLR  R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z+,R0
          	ST   Z,R0
          	.ENDM
         
          	.MACRO __PUTB2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R26
          	.ENDM
         
          	.MACRO __PUTW2SX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z+,R26
          	ST   Z,R27
          	.ENDM
         
          	.MACRO __PUTBSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@0)
          	SBCI R31,HIGH(-@0)
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTWSRX
          	MOVW R30,R28
          	SUBI R30,LOW(-@2)
          	SBCI R31,HIGH(-@2)
          	ST   Z+,R@0
          	ST   Z,R@1
          	.ENDM
         
          	.MACRO __PUTB1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X,R30
          	.ENDM
         
          	.MACRO __PUTW1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X,R31
          	.ENDM
         
          	.MACRO __PUTD1SNX
          	MOVW R26,R28
          	SUBI R26,LOW(-@0)
          	SBCI R27,HIGH(-@0)
          	LD   R0,X+
          	LD   R27,X
          	MOV  R26,R0
          	SUBI R26,LOW(-@1)
          	SBCI R27,HIGH(-@1)
          	ST   X+,R30
          	ST   X+,R31
          	ST   X+,R22
          	ST   X,R23
          	.ENDM
         
          	.MACRO __MULBRR
          	MULS R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.MACRO __MULBRRU
          	MUL  R@0,R@1
          	MOV  R30,R0
          	.ENDM
         
          	.CSEG
          	.ORG 0
         
          	.INCLUDE "IM1.vec"
         
         ;INTERRUPT VECTORS
000000 c032      	RJMP __RESET
000001 cffe      	RJMP 0
000002 cffd      	RJMP 0
000003 cffc      	RJMP 0
000004 cffb      	RJMP 0
000005 cffa      	RJMP 0
000006 cff9      	RJMP 0
000007 cff8      	RJMP 0
000008 cff7      	RJMP 0
000009 cff6      	RJMP 0
00000a cff5      	RJMP 0
00000b cff4      	RJMP 0
00000c cff3      	RJMP 0
00000d cff2      	RJMP 0
00000e cff1      	RJMP 0
00000f cff0      	RJMP 0
000010 cfef      	RJMP 0
000011 cfee      	RJMP 0
000012 cfed      	RJMP 0
000013 cfec      	RJMP 0
000014 cfeb      	RJMP 0
         
          	.INCLUDE "IM1.inc"
          _22:
          	.DB  0x31,0x30,0x30,0x2E,0x35,0x20,0x49,0x6D
000015 3031
000016 2e30
000017 2035
000018 6d49
          	.DB  0x70,0x61,0x63,0x74,0x20,0x46,0x6D,0xA
000019 6170
00001a 7463
00001b 4620
00001c 0a6d
          	.DB  0x4D,0x6F,0x72,0x65,0x20,0x54,0x68,0x61
00001d 6f4d
00001e 6572
00001f 5420
000020 6168
          	.DB  0x6E,0x20,0x57,0x69,0x6E,0x65,0x72,0x0
000021 206e
000022 6957
000023 656e
000024 0072
          ___base_y_G2:
          	.DW  __base_y_G2
000025 0101
          	.DW  0x2
000026 0002
          	.DB  0x80,0xC0
000027 c080
          	.DEF __lcd_x=R4
          	.DEF __lcd_y=R5
          	.DEF __lcd_maxx=R6
          _tbl10_G3:
          	.DW  0x2710,0x3E8,0x64,0xA,0x1
000028 2710
000029 03e8
00002a 0064
00002b 000a
00002c 0001
          _tbl16_G3:
          	.DW  0x1000,0x100,0x10,0x1
00002d 1000
00002e 0100
00002f 0010
000030 0001
         
          __GLOBAL_INI_TBL:
          	.DW  ___base_y_G2*2
000031 004a
          	.DW  0
000032 0000
         
          __RESET:
000033 94f8      	CLI
000034 27ee      	CLR  R30
000035 bbec      	OUT  EECR,R30
         
         ;INTERRUPT VECTORS ARE PLACED
         ;AT THE START OF FLASH
000036 e0f1      	LDI  R31,1
000037 bffb      	OUT  GICR,R31
000038 bfeb      	OUT  GICR,R30
000039 bfe5      	OUT  MCUCR,R30
         
         ;DISABLE WATCHDOG
00003a e1f8      	LDI  R31,0x18
00003b bdf1      	OUT  WDTCR,R31
00003c e1f0      	LDI  R31,0x10
00003d bdf1      	OUT  WDTCR,R31
         
         ;CLEAR R2-R14
00003e e08d      	LDI  R24,13
00003f e0a2      	LDI  R26,2
000040 27bb      	CLR  R27
          __CLEAR_REG:
000041 93ed      	ST   X+,R30
000042 958a      	DEC  R24
000043 f7e9      	BRNE __CLEAR_REG
         
         ;CLEAR SRAM
000044 e080      	LDI  R24,LOW(0x200)
000045 e092      	LDI  R25,HIGH(0x200)
000046 e6a0      	LDI  R26,0x60
          __CLEAR_SRAM:
000047 93ed      	ST   X+,R30
000048 9701      	SBIW R24,1
000049 f7e9      	BRNE __CLEAR_SRAM
         
         ;GLOBAL VARIABLES INITIALIZATION
00004a e6e2      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004b e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
          __GLOBAL_INI_NEXT:
00004c 9005      	LPM  R0,Z+
00004d 9015      	LPM  R1,Z+
00004e 01bf      	MOVW R22,R30
00004f 01f0      	MOVW R30,R0
000050 9730      	SBIW R30,0
000051 f051      	BREQ __GLOBAL_INI_END
000052 91a5      	LPM  R26,Z+
000053 91b5      	LPM  R27,Z+
000054 9185      	LPM  R24,Z+
000055 9195      	LPM  R25,Z+
          __GLOBAL_INI_LOOP:
000056 9005      	LPM  R0,Z+
000057 920d      	ST   X+,R0
000058 9701      	SBIW R24,1
000059 f7e1      	BRNE __GLOBAL_INI_LOOP
00005a 01fb      	MOVW R30,R22
00005b cff0      	RJMP __GLOBAL_INI_NEXT
          __GLOBAL_INI_END:
         
         ;STACK POINTER INITIALIZATION
00005c e5ef      	LDI  R30,LOW(0x25F)
00005d bfed      	OUT  SPL,R30
00005e e0e2      	LDI  R30,HIGH(0x25F)
00005f bfee      	OUT  SPH,R30
         
         ;DATA STACK POINTER INITIALIZATION
000060 eec0      	LDI  R28,LOW(0xE0)
000061 e0d0      	LDI  R29,HIGH(0xE0)
         
000062 c000      	RJMP _main
         
          	.ESEG
          	.ORG 0
          	.DB  0 ; FIRST EEPROM LOCATION NOT USED, SEE ATMEL ERRATA SHEETS
000000 00
         
          	.DSEG
          	.ORG 0xE0
         ;       1 #include<mega8535.h>
         ;       2 #asm
         ;       3 .equ __lcd_port=0x15;// use port c else PORTB=18;
          .equ __lcd_port=0x15;// use port c else PORTB=18;
         ;       4 #endasm              // see configuration in help LCD.h or in down 
         
         ;       5 #include<lcd.h>
         ;       6 #include<stdio.h>
         ;       7 #include<delay.h>
         ;       8 char lcd_buffer[33];
          _lcd_buffer:
0000e0      	.BYTE 0x21
         ;       9 void main(void)
         ;      10  { 
         
          	.CSEG
          _main:
         ;      11  
         ;      12     	
         ;      13 while(1)
          _0x17:
         ;      14      	 {      lcd_init(16);
000063 e1e0      	LDI  R30,LOW(16)
000064 93ea      	ST   -Y,R30
000065 d076      	RCALL _lcd_init
         ;      15      	 		lcd_clear();
000066 d043      	RCALL _lcd_clear
         ;      16 	 			sprintf(lcd_buffer,"100.5 Impact Fm\nMore Than Winer"); //u can write u caracter on "..UP..Max 16 carakter /n.....Down Max 16 caracter"
000067 d180      	RCALL SUBOPT_0x0
000068   +  	__POINTW1FN _22,0
000068 e2ea      	LDI  R30,LOW(2*_22+0x0)
000069 e0f0      	LDI  R31,HIGH(2*_22+0x0)
          	.ENDM
00006a 93fa      	ST   -Y,R31
00006b 93ea      	ST   -Y,R30
00006c e080      	LDI  R24,0
00006d d15b      	RCALL _sprintf
00006e 9624      	ADIW R28,4
         ;      17 	       		lcd_puts(lcd_buffer);
00006f d178      	RCALL SUBOPT_0x0
000070 d05c      	RCALL _lcd_puts
         ;      18 	   			delay_ms(1000);
000071 eee8      	LDI  R30,LOW(1000)
000072 e0f3      	LDI  R31,HIGH(1000)
000073 93fa      	ST   -Y,R31
000074 93ea      	ST   -Y,R30
000075 d19c      	RCALL _delay_ms
         ;      19 	   			lcd_clear();
000076 d033      	RCALL _lcd_clear
         ;      20          }
000077 cfeb      	RJMP _0x17
         ;      21 
         ;      22 } 
          _0x1A:
000078 cfff      	RJMP _0x1A
         ;      23 /*
         ;      24 The LCD module must be connected to the port bits as follows:
         ;      25 [LCD]	[AVR Port]
         ;      26 RS (pin4) ------ 	bit 0
         ;      27 RD (pin 5) ------	bit 1
         ;      28 EN (pin 6) ------	bit 2
         ;      29 DB4 (pin 11) ---	bit 4
         ;      30 DB5 (pin 12) ---	bit 5
         ;      31 DB6 (pin 13) ---	bit 6
         ;      32 DB7 (pin 14) ---	bit 7
         ;      33 
         ;      34  */
         ;      35 
         ;      36 
         ;      37 
         
          	.DSEG
          __base_y_G2:
000101      	.BYTE 0x4
              .equ __lcd_direction=__lcd_port-1
              .equ __lcd_pin=__lcd_port-2
              .equ __lcd_rs=0
              .equ __lcd_rd=1
              .equ __lcd_enable=2
              .equ __lcd_busy_flag=7
         
          	.CSEG
          __lcd_ready:
000079 b3a4          in    r26,__lcd_direction
00007a 70af          andi  r26,0xf                 ;set as input
00007b bba4          out   __lcd_direction,r26
00007c 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00007d 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
          __lcd_busy:
00007e d00c          rcall __lcd_delay
00007f 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
000080 d00a          rcall __lcd_delay
000081 999f          sbic  __lcd_pin,__lcd_busy_flag
000082 cffb          rjmp  __lcd_busy
000083 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000084 9508      	RET
          __lcd_write_nibble:
000085 7fa0          andi  r26,0xf0
000086 2bab          or    r26,r27
000087 bba5          out   __lcd_port,r26          ;write
000088 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
000089 d001          rcall __lcd_delay
00008a 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
          __lcd_delay:
00008b e0ff          ldi   r31,15
          __lcd_delay0:
00008c 95fa          dec   r31
00008d f7f1          brne  __lcd_delay0
00008e 9508          ret
          __lcd_write_data:
00008f 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000090 b3a4          in    r26,__lcd_direction
000091 6fa7          ori   r26,0xf7                ;set as output
000092 bba4          out   __lcd_direction,r26
000093 b3b5          in    r27,__lcd_port
000094 70bf          andi  r27,0xf
000095 81a8          ld    r26,y
000096 dfee          rcall __lcd_write_nibble      ;RD=0, write MSN
000097 81a8          ld    r26,y
000098 95a2          swap  r26
000099 dfeb          rcall __lcd_write_nibble      ;write LSN
00009a 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
00009b 9621      	ADIW R28,1
00009c 9508      	RET
          _lcd_gotoxy:
00009d dfdb      	RCALL __lcd_ready
00009e 81e8      	LD   R30,Y
00009f 27ff      	CLR  R31
0000a0 5fef      	SUBI R30,LOW(-__base_y_G2)
0000a1 4ffe      	SBCI R31,HIGH(-__base_y_G2)
0000a2 81e0      	LD   R30,Z
0000a3 81a9      	LDD  R26,Y+1
0000a4 0fea      	ADD  R30,R26
0000a5 d147      	RCALL SUBOPT_0x1
0000a6 8049      	LDD  R4,Y+1
0000a7 8058      	LDD  R5,Y+0
0000a8 9622      	ADIW R28,2
0000a9 9508      	RET
          _lcd_clear:
0000aa dfce      	RCALL __lcd_ready
0000ab e0ec      	LDI  R30,LOW(12)
0000ac d140      	RCALL SUBOPT_0x1
0000ad dfcb      	RCALL __lcd_ready
0000ae e0e1      	LDI  R30,LOW(1)
0000af d13d      	RCALL SUBOPT_0x1
0000b0 27ee      	CLR  R30
0000b1 2e5e      	MOV  R5,R30
0000b2 2e4e      	MOV  R4,R30
0000b3 9508      	RET
          _lcd_putchar:
0000b4 93ef          push r30
0000b5 93ff          push r31
0000b6 81a8          ld   r26,y
0000b7 9468          set
0000b8 30aa          cpi  r26,10
0000b9 f021          breq __lcd_putchar1
0000ba 94e8          clt
0000bb 9443      	INC  R4
0000bc 1464      	CP   R6,R4
0000bd f430      	BRSH _0x20
          	__lcd_putchar1:
0000be 9453      	INC  R5
0000bf 27ee      	CLR  R30
0000c0 93ea      	ST   -Y,R30
0000c1 925a      	ST   -Y,R5
0000c2 dfda      	RCALL _lcd_gotoxy
0000c3 f02e      	brts __lcd_putchar0
          _0x20:
0000c4 dfb4          rcall __lcd_ready
0000c5 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
0000c6 81a8          ld   r26,y
0000c7 93aa          st   -y,r26
0000c8 dfc6          rcall __lcd_write_data
          __lcd_putchar0:
0000c9 91ff          pop  r31
0000ca 91ef          pop  r30
0000cb 9621      	ADIW R28,1
0000cc 9508      	RET
          _lcd_puts:
0000cd 81f9          ldd  r31,y+1
0000ce 81e8          ld   r30,y
          __lcd_puts0:
0000cf 91a1          ld   r26,z+
0000d0 23aa          tst  r26
0000d1 f019          breq __lcd_puts1
0000d2 93aa          st   -y,r26    
0000d3 dfe0          rcall _lcd_putchar
0000d4 cffa          rjmp __lcd_puts0
          __lcd_puts1:
0000d5 9622      	ADIW R28,2
0000d6 9508      	RET
          __long_delay:
0000d7 27aa          clr   r26
0000d8 27bb          clr   r27
          __long_delay0:
0000d9 9711          sbiw  r26,1         ;2 cycles
0000da f7f1          brne  __long_delay0 ;2 cycles
0000db 9508      	RET
          _lcd_init:
0000dc 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0000dd 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
0000de 8068      	LDD  R6,Y+0
0000df 81e8      	LD   R30,Y
0000e0 58e0      	SUBI R30,-LOW(128)
0000e1   +  	__PUTB1MN __base_y_G2,2
0000e1 93e0 0103 	STS  __base_y_g2+0x2,R30
          	.ENDM
0000e3 81e8      	LD   R30,Y
0000e4 54e0      	SUBI R30,-LOW(192)
0000e5   +  	__PUTB1MN __base_y_G2,3
0000e5 93e0 0104 	STS  __base_y_g2+0x3,R30
          	.ENDM
0000e7 d107      	RCALL SUBOPT_0x2
0000e8 d106      	RCALL SUBOPT_0x2
0000e9 d105      	RCALL SUBOPT_0x2
0000ea dfec      	RCALL __long_delay
0000eb e2e0      	LDI  R30,LOW(32)
0000ec d100      	RCALL SUBOPT_0x1
0000ed df8b      	RCALL __lcd_ready
0000ee e2e8      	LDI  R30,LOW(40)
0000ef d0fd      	RCALL SUBOPT_0x1
0000f0 df88      	RCALL __lcd_ready
0000f1 e0e6      	LDI  R30,LOW(6)
0000f2 d0fa      	RCALL SUBOPT_0x1
0000f3 dfb6      	RCALL _lcd_clear
0000f4 9621      	ADIW R28,1
0000f5 9508      	RET
          _getchar:
0000f6 9b5f           sbis usr,rxc
0000f7 cffe           rjmp _getchar
0000f8 b1ec           in   r30,udr
0000f9 9508      	RET
          _putchar:
0000fa 9b5d           sbis usr,udre
0000fb cffe           rjmp _putchar
0000fc 81e8           ld   r30,y
0000fd b9ec           out  udr,r30
0000fe 9621      	ADIW R28,1
0000ff 9508      	RET
          __put_G3:
          	put:
000100 d0f1      	RCALL SUBOPT_0x3
000101 9730      	SBIW R30,0
000102 f041      	BREQ _0x5A
000103 d0ee      	RCALL SUBOPT_0x3
000104 9631      	ADIW R30,1
000105 d12a      	RCALL __PUTWP1
000106 9731      	SBIW R30,1
000107 01df      	MOVW R26,R30
000108 81ea      	LDD  R30,Y+2
000109 93ec      	ST   X,R30
00010a c003      	RJMP _0x5B
          _0x5A:
00010b 81ea      	LDD  R30,Y+2
00010c 93ea      	ST   -Y,R30
00010d dfec      	RCALL _putchar
          _0x5B:
00010e 9623      	ADIW R28,3
00010f 9508      	RET
          __print_G3:
000110 9724      	SBIW R28,4
000111 d125      	RCALL __SAVELOCR6
000112 e000      	LDI  R16,0
          _0x5D:
000113 85ee      	LDD  R30,Y+14
000114 85ff      	LDD  R31,Y+14+1
000115 9631      	ADIW R30,1
000116 87ee      	STD  Y+14,R30
000117 87ff      	STD  Y+14+1,R31
000118 9731      	SBIW R30,1
000119 91e4      	LPM  R30,Z
00011a d0db      	RCALL SUBOPT_0x4
00011b f409      	BRNE PC+2
00011c c0a9      	RJMP _0x5F
00011d 2fe0      	MOV  R30,R16
00011e 30e0      	CPI  R30,0
00011f f431      	BRNE _0x63
000120 3225      	CPI  R18,37
000121 f411      	BRNE _0x64
000122 e001      	LDI  R16,LOW(1)
000123 c001      	RJMP _0x65
          _0x64:
000124 d0d4      	RCALL SUBOPT_0x5
          _0x65:
000125 c09f      	RJMP _0x62
          _0x63:
000126 30e1      	CPI  R30,LOW(0x1)
000127 f489      	BRNE _0x66
000128 3225      	CPI  R18,37
000129 f419      	BRNE _0x67
00012a d0ce      	RCALL SUBOPT_0x5
00012b e000      	LDI  R16,LOW(0)
00012c c098      	RJMP _0x62
          _0x67:
00012d e002      	LDI  R16,LOW(2)
00012e e030      	LDI  R19,LOW(0)
00012f e010      	LDI  R17,LOW(0)
000130 322b      	CPI  R18,43
000131 f411      	BRNE _0x68
000132 e23b      	LDI  R19,LOW(43)
000133 c091      	RJMP _0x62
          _0x68:
000134 3220      	CPI  R18,32
000135 f411      	BRNE _0x69
000136 e230      	LDI  R19,LOW(32)
000137 c08d      	RJMP _0x62
          _0x69:
000138 c002      	RJMP _0x6A
          _0x66:
000139 30e2      	CPI  R30,LOW(0x2)
00013a f431      	BRNE _0x6B
          _0x6A:
00013b 3320      	CPI  R18,48
00013c f419      	BRNE _0x6C
00013d 6110      	ORI  R17,LOW(16)
00013e e005      	LDI  R16,LOW(5)
00013f c085      	RJMP _0x62
          _0x6C:
000140 c003      	RJMP _0x6D
          _0x6B:
000141 30e5      	CPI  R30,LOW(0x5)
000142 f009      	BREQ PC+2
000143 c081      	RJMP _0x62
          _0x6D:
000144 2fe2      	MOV  R30,R18
000145 36e3      	CPI  R30,LOW(0x63)
000146 f429      	BRNE _0x72
000147 d0b7      	RCALL SUBOPT_0x6
000148 91ec      	LD   R30,X
000149 93ea      	ST   -Y,R30
00014a d0bb      	RCALL SUBOPT_0x7
00014b c078      	RJMP _0x73
          _0x72:
00014c 37e3      	CPI  R30,LOW(0x73)
00014d f461      	BRNE _0x75
00014e d0b0      	RCALL SUBOPT_0x6
00014f d0bb      	RCALL SUBOPT_0x8
          _0x76:
000150 81ae      	LDD  R26,Y+6
000151 81bf      	LDD  R27,Y+6+1
000152 91ed      	LD   R30,X+
000153 83ae      	STD  Y+6,R26
000154 83bf      	STD  Y+6+1,R27
000155 d0a0      	RCALL SUBOPT_0x4
000156 f011      	BREQ _0x78
000157 d0a1      	RCALL SUBOPT_0x5
000158 cff7      	RJMP _0x76
          _0x78:
000159 c06a      	RJMP _0x73
          _0x75:
00015a 37e0      	CPI  R30,LOW(0x70)
00015b f471      	BRNE _0x7A
00015c d0a2      	RCALL SUBOPT_0x6
00015d d0ad      	RCALL SUBOPT_0x8
          _0x7B:
00015e 81ee      	LDD  R30,Y+6
00015f 81ff      	LDD  R31,Y+6+1
000160 9631      	ADIW R30,1
000161 83ee      	STD  Y+6,R30
000162 83ff      	STD  Y+6+1,R31
000163 9731      	SBIW R30,1
000164 91e4      	LPM  R30,Z
000165 d090      	RCALL SUBOPT_0x4
000166 f011      	BREQ _0x7D
000167 d091      	RCALL SUBOPT_0x5
000168 cff5      	RJMP _0x7B
          _0x7D:
000169 c05a      	RJMP _0x73
          _0x7A:
00016a 36e4      	CPI  R30,LOW(0x64)
00016b f011      	BREQ _0x80
00016c 36e9      	CPI  R30,LOW(0x69)
00016d f411      	BRNE _0x81
          _0x80:
00016e 6011      	ORI  R17,LOW(1)
00016f c002      	RJMP _0x82
          _0x81:
000170 37e5      	CPI  R30,LOW(0x75)
000171 f419      	BRNE _0x83
          _0x82:
000172 e5e0      	LDI  R30,LOW(_tbl10_G3*2)
000173 e0f0      	LDI  R31,HIGH(_tbl10_G3*2)
000174 c009      	RJMP _0x98
          _0x83:
000175 35e8      	CPI  R30,LOW(0x58)
000176 f411      	BRNE _0x86
000177 6012      	ORI  R17,LOW(2)
000178 c003      	RJMP _0x87
          _0x86:
000179 37e8      	CPI  R30,LOW(0x78)
00017a f009      	BREQ PC+2
00017b c048      	RJMP _0x96
          _0x87:
00017c e5ea      	LDI  R30,LOW(_tbl16_G3*2)
00017d e0f0      	LDI  R31,HIGH(_tbl16_G3*2)
          _0x98:
00017e 83ee      	STD  Y+6,R30
00017f 83ff      	STD  Y+6+1,R31
000180 ff10      	SBRS R17,0
000181 c011      	RJMP _0x89
000182 d07c      	RCALL SUBOPT_0x6
000183 914d      	LD   R20,X+
000184 915c      	LD   R21,X
000185 5040      	SUBI R20,0
000186 4050      	SBCI R21,0
000187 f434      	BRGE _0x8A
000188   +  	__GETW1R 20,21
000188 2fe4      	MOV  R30,R0x14
000189 2ff5      	MOV  R31,R0x15
          	.ENDM
00018a d097      	RCALL __ANEGW1
00018b   +  	__PUTW1R 20,21
00018b 2f4e      	MOV  R0x14,R30
00018c 2f5f      	MOV  R0x15,R31
          	.ENDM
00018d e23d      	LDI  R19,LOW(45)
          _0x8A:
00018e 3030      	CPI  R19,0
00018f f011      	BREQ _0x8B
000190 933a      	ST   -Y,R19
000191 d074      	RCALL SUBOPT_0x7
          _0x8B:
000192 c003      	RJMP _0x8C
          _0x89:
000193 d06b      	RCALL SUBOPT_0x6
000194 914d      	LD   R20,X+
000195 915c      	LD   R21,X
          _0x8C:
          _0x8E:
000196 e320      	LDI  R18,LOW(48)
000197 81ee      	LDD  R30,Y+6
000198 81ff      	LDD  R31,Y+6+1
000199 9632      	ADIW R30,2
00019a 83ee      	STD  Y+6,R30
00019b 83ff      	STD  Y+6+1,R31
00019c 9732      	SBIW R30,2
00019d d095      	RCALL __GETW1PF
00019e 87e8      	STD  Y+8,R30
00019f 87f9      	STD  Y+8+1,R31
                                        calc_digit:
0001a0 174e                                        cp   r20,r30
0001a1 075f                                        cpc  r21,r31
0001a2 f020                                        brlo calc_digit_done
0001a3 5f2f      	SUBI R18,-LOW(1)
0001a4 1b4e      	                              sub  r20,r30
0001a5 0b5f      	                              sbc  r21,r31
0001a6 f7c9      	                              brne calc_digit
                                        calc_digit_done:
0001a7 fd14      	SBRC R17,4
0001a8 c009      	RJMP _0x91
0001a9 e3e0      	LDI  R30,LOW(48)
0001aa 17e2      	CP   R30,R18
0001ab f030      	BRLO _0x91
0001ac 85a8      	LDD  R26,Y+8
0001ad 85b9      	LDD  R27,Y+8+1
0001ae 30a1      	CPI  R26,LOW(0x1)
0001af e0e0      	LDI  R30,HIGH(0x1)
0001b0 07be      	CPC  R27,R30
0001b1 f451      	BRNE _0x90
          _0x91:
0001b2 6110      	ORI  R17,LOW(16)
0001b3 e3e9      	LDI  R30,LOW(57)
0001b4 17e2      	CP   R30,R18
0001b5 f428      	BRSH _0x93
0001b6 ff11      	SBRS R17,1
0001b7 c002      	RJMP _0x94
0001b8 5f29      	SUBI R18,-LOW(7)
0001b9 c001      	RJMP _0x95
          _0x94:
0001ba 5d29      	SUBI R18,-LOW(39)
          _0x95:
          _0x93:
0001bb d03d      	RCALL SUBOPT_0x5
          _0x90:
0001bc 85a8      	LDD  R26,Y+8
0001bd 85b9      	LDD  R27,Y+8+1
0001be e0e1      	LDI  R30,LOW(1)
0001bf e0f0      	LDI  R31,HIGH(1)
0001c0 17ea      	CP   R30,R26
0001c1 07fb      	CPC  R31,R27
0001c2 f408      	BRSH _0x8F
0001c3 cfd2      	RJMP _0x8E
          _0x8F:
          _0x96:
          _0x73:
0001c4 e000      	LDI  R16,LOW(0)
          _0x62:
0001c5 cf4d      	RJMP _0x5D
          _0x5F:
0001c6 d077      	RCALL __LOADLOCR6
0001c7 9660      	ADIW R28,16
0001c8 9508      	RET
          _sprintf:
0001c9 2ef8      	MOV  R15,R24
0001ca 9724      	SBIW R28,4
0001cb 01de      	MOVW R26,R28
0001cc d051      	RCALL __ADDW2R15
0001cd 83aa      	STD  Y+2,R26
0001ce 83bb      	STD  Y+2+1,R27
0001cf 01de      	MOVW R26,R28
0001d0 9616      	ADIW R26,6
0001d1 d03d      	RCALL SUBOPT_0x9
0001d2 83e8      	ST   Y,R30
0001d3 83f9      	STD  Y+1,R31
0001d4 01de      	MOVW R26,R28
0001d5 9614      	ADIW R26,4
0001d6 d038      	RCALL SUBOPT_0x9
0001d7 93fa      	ST   -Y,R31
0001d8 93ea      	ST   -Y,R30
0001d9 81ec      	LDD  R30,Y+4
0001da 81fd      	LDD  R31,Y+4+1
0001db 93fa      	ST   -Y,R31
0001dc 93ea      	ST   -Y,R30
0001dd 01fe      	MOVW R30,R28
0001de 9634      	ADIW R30,4
0001df 93fa      	ST   -Y,R31
0001e0 93ea      	ST   -Y,R30
0001e1 df2e      	RCALL __print_G3
0001e2 81a8      	LD   R26,Y
0001e3 81b9      	LDD  R27,Y+1
0001e4 27ee      	CLR  R30
0001e5 93ec      	ST   X,R30
0001e6 9624      	ADIW R28,4
0001e7 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x0:
0001e8 eee0      	LDI  R30,LOW(_lcd_buffer)
0001e9 e0f0      	LDI  R31,HIGH(_lcd_buffer)
0001ea 93fa      	ST   -Y,R31
0001eb 93ea      	ST   -Y,R30
0001ec 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES
          SUBOPT_0x1:
0001ed 93ea      	ST   -Y,R30
0001ee cea0      	RJMP __lcd_write_data
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x2:
0001ef dee7      	RCALL __long_delay
0001f0 e3e0      	LDI  R30,LOW(48)
0001f1 cffb      	RJMP SUBOPT_0x1
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x3:
0001f2 81a8      	LD   R26,Y
0001f3 81b9      	LDD  R27,Y+1
0001f4 d031      	RCALL __GETW1P
0001f5 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES
          SUBOPT_0x4:
0001f6 2f2e      	MOV  R18,R30
0001f7 30e0      	CPI  R30,0
0001f8 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES
          SUBOPT_0x5:
0001f9 932a      	ST   -Y,R18
0001fa 85eb      	LDD  R30,Y+11
0001fb 85fc      	LDD  R31,Y+11+1
0001fc 93fa      	ST   -Y,R31
0001fd 93ea      	ST   -Y,R30
0001fe cf01      	RJMP __put_G3
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES
          SUBOPT_0x6:
0001ff 85ac      	LDD  R26,Y+12
000200 85bd      	LDD  R27,Y+12+1
000201 9714      	SBIW R26,4
000202 87ac      	STD  Y+12,R26
000203 87bd      	STD  Y+12+1,R27
000204 9614      	ADIW R26,4
000205 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x7:
000206 85eb      	LDD  R30,Y+11
000207 85fc      	LDD  R31,Y+11+1
000208 93fa      	ST   -Y,R31
000209 93ea      	ST   -Y,R30
00020a cef5      	RJMP __put_G3
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x8:
00020b d01e      	RCALL __GETD1P
00020c 83ee      	STD  Y+6,R30
00020d 83ff      	STD  Y+6+1,R31
00020e 9508      	RET
         
         ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES
          SUBOPT_0x9:
00020f d00e      	RCALL __ADDW2R15
000210 d015      	RCALL __GETW1P
000211 9508      	RET
         
          _delay_ms:
000212 91e9      	ld   r30,y+
000213 91f9      	ld   r31,y+
000214 9630      	adiw r30,0
000215 f039      	breq __delay_ms1
          __delay_ms0:
000216   +  	__DELAY_USW 0x3E8
000216 ee88      	LDI  R24,LOW(0x3e8)
000217 e093      	LDI  R25,HIGH(0x3e8)
          __DELAY_USW_LOOP:
000218 9701      	SBIW R24,1
000219 f7f1      	BRNE __DELAY_USW_LOOP
          	.ENDM
00021a 95a8      	wdr
00021b 9731      	sbiw r30,1
00021c f7c9      	brne __delay_ms0
          __delay_ms1:
00021d 9508      	ret
         
          __ADDW2R15:
00021e 2400      	CLR  R0
00021f 0daf      	ADD  R26,R15
000220 1db0      	ADC  R27,R0
000221 9508      	RET
         
          __ANEGW1:
000222 95e0      	COM  R30
000223 95f0      	COM  R31
000224 9631      	ADIW R30,1
000225 9508      	RET
         
          __GETW1P:
000226 91ed      	LD   R30,X+
000227 91fc      	LD   R31,X
000228 9711      	SBIW R26,1
000229 9508      	RET
         
          __GETD1P:
00022a 91ed      	LD   R30,X+
00022b 91fd      	LD   R31,X+
00022c 916d      	LD   R22,X+
00022d 917c      	LD   R23,X
00022e 9713      	SBIW R26,3
00022f 9508      	RET
         
          __PUTWP1:
000230 93ed      	ST   X+,R30
000231 93fc      	ST   X,R31
000232 9508      	RET
         
          __GETW1PF:
000233 9005      	LPM  R0,Z+
000234 91f4      	LPM  R31,Z
000235 2de0      	MOV  R30,R0
000236 9508      	RET
         
          __SAVELOCR6:
000237 935a      	ST   -Y,R21
          __SAVELOCR5:
000238 934a      	ST   -Y,R20
          __SAVELOCR4:
000239 933a      	ST   -Y,R19
          __SAVELOCR3:
00023a 932a      	ST   -Y,R18
          __SAVELOCR2:
00023b 931a      	ST   -Y,R17
00023c 930a      	ST   -Y,R16
00023d 9508      	RET
         
          __LOADLOCR6:
00023e 815d      	LDD  R21,Y+5
          __LOADLOCR5:
00023f 814c      	LDD  R20,Y+4
          __LOADLOCR4:
000240 813b      	LDD  R19,Y+3
          __LOADLOCR3:
000241 812a      	LDD  R18,Y+2
          __LOADLOCR2:
000242 8119      	LDD  R17,Y+1
000243 8108      	LD   R16,Y
000244 9508      	RET
         

Assembly complete with no errors.
