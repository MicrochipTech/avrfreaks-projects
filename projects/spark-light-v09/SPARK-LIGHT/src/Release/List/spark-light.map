################################################################################
#                                                                              #
#      IAR Universal Linker V4.61J/W32                                         #
#                                                                              #
#           Link time     =  24/Aug/2009  18:20:47                             #
#           Target CPU    =  A90                                               #
#           List file     =  D:\OM\SPARK_LIGHT\src\Release\List\spark-light.ma #
#                            p                                                 #
#           Output file 1 =  D:\OM\SPARK_LIGHT\src\Release\Exe\spark-light.hex #
#                            Format: intel-extended, variant: -y(CODE)         #
#           Output file 2 =  D:\OM\SPARK_LIGHT\src\Release\Exe\spark-light_dat #
#                            a.hex                                             #
#                            Format: intel-extended, variant: -y(DATA)         #
#           Output file 3 =  D:\OM\SPARK_LIGHT\src\Release\Exe\spark-light_eep #
#                            rom.hex                                           #
#                            Format: intel-extended, variant: -y(XDATA)        #
#           Command line  =  -y(CODE)                                          #
#                            -Ointel-extended,(DATA)=D:\OM\SPARK_LIGHT\src\Rel #
#                            ease\Exe\spark-light_data.hex                     #
#                            -Ointel-extended,(XDATA)=D:\OM\SPARK_LIGHT\src\Re #
#                            lease\Exe\spark-light_eeprom.hex                  #
#                            D:\OM\SPARK_LIGHT\src\Release\Obj\main.r90 -o     #
#                            D:\OM\SPARK_LIGHT\src\Release\Exe\spark-light.hex #
#                            -Fintel-extended -l                               #
#                            D:\OM\SPARK_LIGHT\src\Release\List\spark-light.ma #
#                            p                                                 #
#                            -xesnio                                           #
#                            "-IC:\Embedded\IAR Systems\Embedded Workbench 5.3 #
#                            \avr\LIB\"                                        #
#                            -f                                                #
#                            "C:\Embedded\IAR Systems\Embedded Workbench 5.3\a #
#                            vr\src\template\cfgtiny13.xcl"                    #
#                            (-D_..X_INTVEC_SIZE=14 -D_..X_FLASH_END=3FF       #
#                            -D_..X_SRAM_BASE=60                               #
#                            -D_..X_SRAM_TBASE=_..X_SRAM_BASE                  #
#                            -D_..X_SRAM_END=9F -D_..X_EEPROM_END=3F           #
#                            -D_..X_EEPROM_START=0) -D_..X_HEAP_SIZE=0         #
#                            -D_..X_TINY_HEAP_SIZE=0 -D_..X_NEAR_HEAP_SIZE=0   #
#                            -D_..X_FAR_HEAP_SIZE=0 -D_..X_HUGE_HEAP_SIZE=0    #
#                            -D_..X_CSTACK_SIZE=A -D_..X_RSTACK_SIZE=A -f      #
#                            "C:\Embedded\IAR Systems\Embedded Workbench 5.3\a #
#                            vr\src\template\cfg0t.xcl"                        #
#                            (-ca90 -w29                                       #
#                            -Z(CODE)INTVEC=0-(_..X_INTVEC_SIZE-1)             #
#                            -Z(CODE)TINY_F=_..X_FLASH_BASE-FF                 #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)SWITCH=_..X_FLASH_BASE-_..X_FLASH_END     #
#                            -Z(CODE)INITTAB=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)DIFUNCT=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CODE=_..X_FLASH_BASE-_..X_FLASH_END       #
#                            -Z(CODE)TINY_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)NEAR_ID=_..X_FLASH_BASE-_..X_FLASH_END    #
#                            -Z(CODE)CHECKSUM#_..X_FLASH_END                   #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_END                                          #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_CSTACK_BASE- #
#                            _..X_CSTACK_END                                   #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE-_..X_S #
#                            RAM_END                                           #
#                            -Z(DATA)IOSTREAM_N#_..X_SRAM_BASE-_..X_SRAM_END   #
#                            -Z(DATA)TINY_HEAP+_..X_TINY_HEAP_SIZE=_..X_SRAM_B #
#                            ASE-_..X_SRAM_END                                 #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_RSTACK_BASE- #
#                            _..X_RSTACK_END                                   #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=_..X_EEPROM_START-_..X #
#                            _EEPROM_END)                                      #
#                            -D_..X_FLASH_BASE=_..X_INTVEC_SIZE -H1895         #
#                            -h(CODE)0-(_..X_INTVEC_SIZE-1)                    #
#                            -D_..X_CSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_CSTACK_END=_..X_SRAM_END                   #
#                            -D_..X_RSTACK_BASE=_..X_SRAM_BASE                 #
#                            -D_..X_RSTACK_END=_..X_SRAM_END -s                #
#                            __program_start                                   #
#                            "C:\Embedded\IAR Systems\Embedded Workbench 5.3\a #
#                            vr\LIB\CLIB\cl0t-ec_nomul.r90"                    #
#                            -e_small_write=_formatted_write                   #
#                            -e_medium_read=_formatted_read                    #
#                                                                              #
#                                        Copyright (C) 1987-2008 IAR Systems AB.
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      00000000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __64bit_doubles = disabled
  __cpu           = 0
  __cpu_name      = ATtiny13
  __enhanced_core = enabled
  __has_elpm      = false
  __memory_model  = 1
  __rt_version    = 3

                ****************************************
                *                                      *
                *              ENTRY LIST              *
                *                                      *
                ****************************************

Module  Entry                             Address
------  -----                             -------
?ABS_ENTRY_MOD
        _..X_RSTACK_END                   CODE 0000009F
        _..X_RSTACK_BASE                  CODE 00000060
        _..X_CSTACK_END                   CODE 0000009F
        _..X_CSTACK_BASE                  CODE 00000060
        _..X_FLASH_BASE                   CODE 00000014
        _..X_RSTACK_SIZE                  CODE 0000000A
        _..X_CSTACK_SIZE                  CODE 0000000A
        _..X_HUGE_HEAP_SIZE               CODE 00000000
        _..X_FAR_HEAP_SIZE                CODE 00000000
        _..X_NEAR_HEAP_SIZE               CODE 00000000
        _..X_TINY_HEAP_SIZE               CODE 00000000
        _..X_HEAP_SIZE                    CODE 00000000
        _..X_EEPROM_START                 CODE 00000000
        _..X_EEPROM_END                   CODE 0000003F
        _..X_SRAM_END                     CODE 0000009F
        _..X_SRAM_TBASE                   CODE 00000060
        _..X_SRAM_BASE                    CODE 00000060
        _..X_FLASH_END                    CODE 000003FF
        _..X_INTVEC_SIZE                  CODE 00000014
main ( D:\OM\SPARK_LIGHT\src\Release\Obj\main.r90 )
        _A_GIMSK                          DATA 0000005B
        _A_GIFR                           DATA 0000005A
        _A_TIMSK0                         DATA 00000059
        _A_TIFR0                          DATA 00000058
        _A_OCR0A                          DATA 00000056
        _A_MCUCR                          DATA 00000055
        _A_TCCR0B                         DATA 00000053
        _A_TCCR0A                         DATA 0000004F
        _A_OCR0B                          DATA 00000049
        _A_PORTB                          DATA 00000038
        _A_DDRB                           DATA 00000037
        _A_PINB                           DATA 00000036
        _A_DIDR0                          DATA 00000034
        _A_ACSR                           DATA 00000028
        _A_ADMUX                          DATA 00000027
        _A_ADCSRA                         DATA 00000026
        _A_ADC                            DATA 00000024
        _A_ADCSRB                         DATA 00000023
        mode                              DATA 0000006B
        BlinkTimer                        DATA 00000060
        LEDlevel                          DATA 00000062
        adcv                              DATA 00000064
        level                             DATA 0000006A
        INT0_int                          CODE 00000018
        TIM0_OVF_int                      CODE 0000005C
        ADC_int                           CODE 00000062
        init                              CODE 000000FA
        main                              CODE 00000138
        PowerDown                         CODE 00000154
        __?EECR                            NOT NEEDED
        __?EEDR                            NOT NEEDED
        __?EEARL                           NOT NEEDED
        INT0_int::??INTVEC 2              CODE 00000002
        TIM0_OVF_int::??INTVEC 6          CODE 00000006
        ADC_int::??INTVEC 18              CODE 00000012
        ?<Segment init: TINY_I>           CODE 00000014
?__exit ( C:\Embedded\IAR Systems\Embedded Workbench 5.3\avr\LIB\CLIB\cl0t-ec_nomul.r90 )
        __exit                            CODE 0000018E
        ?C_EXIT                           CODE 0000018E
        ?C_FUNCALL                        CODE 0000018C
        _exit                             CODE 0000018C
        exit                              CODE 0000018C
?RESET ( C:\Embedded\IAR Systems\Embedded Workbench 5.3\avr\LIB\CLIB\cl0t-ec_nomul.r90 )
        __program_start                   CODE 00000000
        ?RESET                            CODE 00000000
?C_STARTUP ( C:\Embedded\IAR Systems\Embedded Workbench 5.3\avr\LIB\CLIB\cl0t-ec_nomul.r90 )
        ?C_STARTUP                        CODE 00000192
        __RESTART                         CODE 00000192
        __RSTACK_in_external_ram           NOT NEEDED
        __RSTACK_in_external_ram_new_way   NOT NEEDED
        ?zero_reg_initialization           NOT NEEDED
        ?call_low_level_init              CODE 00000198
        ?need_segment_init                CODE 0000019A
        ?cstartup_call_main               CODE 000001A0
?low_level_init ( C:\Embedded\IAR Systems\Embedded Workbench 5.3\avr\LIB\CLIB\cl0t-ec_nomul.r90 )
        __low_level_init                  CODE 000001A6
?segment_init ( C:\Embedded\IAR Systems\Embedded Workbench 5.3\avr\LIB\CLIB\cl0t-ec_nomul.r90 )
        __segment_init                    CODE 000001BE
        __memclr                          CODE 000001AA
        __flashcpy                        CODE 000001B4
?FILLER_BYTES


                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA
------               ----      ----
                    (Rel)  (Rel)  (Abs)
?C_STARTUP             20
?FILLER_BYTES
  + common             20
?RESET
  + common              2
?__exit                 6
?low_level_init         4
?segment_init          64
main                  387     12     19
  + common             20
N/A (command line)            20
N/A (alignment)
----------            ---     --     --
Total:                481     32     19
  + common             20


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000000 00000000
  01  INT0_int
      | Stack used (prev) :  00000000 00000000
      | + function block  :  00000005 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000005 00000002


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000005 00000002
  01  TIM0_OVF_int
      | Stack used (prev) :  00000005 00000002
      | + function block  :  00000001 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  00000006 00000004


  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK   RSTACK
    | Stack used (prev) :  00000006 00000004
  01  ADC_int
      | Stack used (prev) :  00000006 00000004
      | + function block  :  00000006 00000002
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000000C 00000006


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000000C 00000006
  02    PowerDown
        | Stack used (prev) :  0000000C 00000006
        | + function block  :  00000000 00000002
  02    init
        | Stack used (prev) :  0000000C 00000006
        | + function block  :  00000000 00000002
  01  main
      | Stack used (prev) :  0000000C 00000008
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000000C 0000000A


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000000C 0000000A
  01  __low_level_init
      | Stack used (prev) :  0000000C 0000000A
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000000C 0000000C


  ->Sub-tree of type: Function tree
                             CSTACK   RSTACK
    | Stack used (prev) :  0000000C 0000000C
  02    __flashcpy
        | Stack used (prev) :  0000000C 0000000C
        | + function block  :  00000000 00000002
  02    __memclr
        | Stack used (prev) :  0000000C 0000000C
        | + function block  :  00000000 00000002
  01  __segment_init
      | Stack used (prev) :  0000000C 0000000E
      | + function block  :  00000000 00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  0000000C 00000010




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          00000000 - 00000013          14   com    1
INITTAB              CODE          00000014 - 00000017           4   rel    0
CODE                 CODE          00000018 - 000001E9         1D2   rel    1
TINY_ID              CODE          000001EA - 000001F4           B   rel    0
ABSOLUTE             DATA          00000023 - 00000028           6   rel    0
                     DATA          00000034 - 00000034           1 
                     DATA          00000036 - 00000038           3 
                     DATA          00000049 - 00000049           1 
                     DATA          0000004F - 0000004F           1 
                     DATA          00000053 - 00000053           1 
                     DATA          00000055 - 00000056           2 
                     DATA          00000058 - 0000005B           4 
TINY_I               DATA          00000060 - 0000006A           B   rel    0
TINY_Z               DATA               0000006B                     dse    0
TINY_N               DATA          0000006B - 0000006B           1   rel    0
CSTACK               DATA          0000006C - 00000075           A   dse    0
RSTACK               DATA          00000076 - 0000007F           A   dse    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 501 bytes of CODE memory
  32 bytes of DATA memory (+ 19 absolute )

Errors: none
Warnings: none

