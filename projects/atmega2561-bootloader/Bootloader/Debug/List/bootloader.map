################################################################################
#                                                                              #
#      IAR Universal Linker V4.59Z/386                                         #
#                                                                              #
#           Link time     =  27/Jul/2007  17:05:17                             #
#           Target CPU    =  A90                                               #
#           List file     =  "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\List\bootloader.ma #
#                            p"                                                #
#           Output file 1 =  "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Exe\bootloader.d90 #
#                            "                                                 #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#                            Using library modules for C-SPY (-rt)             #
#           Command line  =  "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\Can128.r90"    #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\bl_can.r90"    #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\bootloader.r90 #
#                            "                                                 #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\intel_hex.r90" #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\move_iv.r90"   #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\protocol.r90"  #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\queue.r90"     #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Obj\usart.r90"     #
#                            -o                                                #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\Exe\bootloader.d90 #
#                            "                                                 #
#                            -l                                                #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\Debug\List\bootloader.ma #
#                            p"                                                #
#                            -xms                                              #
#                            "-IC:\Program Files\IAR Systems\Embedded Workbenc #
#                            h 4.0\avr\LIB\"                                   #
#                            -f                                                #
#                            "C:\Documents and Settings\User\My Documents\Stef #
#                            an\Bootloader\Bootloader\can128_bootlink.xcl"     #
#                            (-D_..X_INTVEC_SIZE=94 -D_..X_FLASH_TEND=FF       #
#                            -D_..X_FLASH_NEND=FFFF -D_..X_FLASH_END=1FFFF     #
#                            -D_..X_FLASH_BOOT=1E000 -D_..X_SRAM_BASE=100      #
#                            -D_..X_SRAM_TEND=100 -D_..X_SRAM_END=10FF         #
#                            -D_..X_EEPROM_END=FFF -D_..X_CSTACK_SIZE=200      #
#                            -D_..X_RSTACK_SIZE=50 -D_..X_HEAP_SIZE=100        #
#                            -ca90                                             #
#                            -Z(CODE)INTVEC+_..X_INTVEC_SIZE=_..X_FLASH_BOOT   #
#                            -Z(CODE)SWITCH,INITTAB,DIFUNCT=_..X_FLASH_BOOT-_. #
#                            .X_FLASH_END                                      #
#                            -Z(CODE)TINY_F=_..X_FLASH_BOOT-_..X_FLASH_END     #
#                            -Z(CODE)NEAR_F=_..X_FLASH_BOOT-_..X_FLASH_END     #
#                            -Z(CODE)FAR_F=_..X_FLASH_BOOT-_..X_FLASH_END      #
#                            -Z(CODE)CODE=_..X_FLASH_BOOT-_..X_FLASH_END       #
#                            -Z(CODE)TINY_ID,NEAR_ID=_..X_FLASH_BOOT-_..X_FLAS #
#                            H_END                                             #
#                            -Z(DATA)TINY_I,TINY_Z,TINY_N=_..X_SRAM_BASE-_..X_ #
#                            SRAM_TEND                                         #
#                            -Z(DATA)NEAR_I,NEAR_Z=_..X_SRAM_BASE-_..X_SRAM_EN #
#                            D                                                 #
#                            -Z(DATA)CSTACK+_..X_CSTACK_SIZE=_..X_SRAM_BASE    #
#                            -Z(DATA)HEAP+_..X_HEAP_SIZE=_..X_SRAM_BASE        #
#                            -Z(DATA)RSTACK+_..X_RSTACK_SIZE=_..X_SRAM_BASE    #
#                            -Z(XDATA)EEPROM_I,EEPROM_N=0-_..X_EEPROM_END      #
#                            -e_Printf_1=_Printf                               #
#                            -e_small_write=_formatted_write                   #
#                            -e_small_write_P=_formatted_write_P               #
#                            -e_Scanf_1=_Scanf                                 #
#                            -e_medium_read=_formatted_read                    #
#                            -e_medium_read_P=_formatted_read_P -w29) -rt -s   #
#                            __program_start                                   #
#                            "C:\Program Files\IAR Systems\Embedded Workbench  #
#                            4.0\avr\LIB\CLIB\cl3s-ec_mul.r90"                 #
#                                                                              #
#                        Copyright 1987-2006 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at : CODE      0001E000  Relocatable, from module : ?RESET




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  EEPROM_SIZE     = 2
  R4              = REG
  R5              = REG
  R6              = REG
  R7              = REG
  __64bit_doubles = disabled
  __cpu           = 3
  __cpu_name      = AT90CAN128
  __enhanced_core = enabled
  __has_elpm      = true
  __memory_model  = 2
  __no_rampd      = enabled
  __rt_version    = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _..X_HEAP_SIZE          00000100 
           _..X_RSTACK_SIZE        00000050 
           _..X_CSTACK_SIZE        00000200 
           _..X_EEPROM_END         00000FFF 
           _..X_SRAM_END           000010FF 
           _..X_SRAM_TEND          00000100 
           _..X_SRAM_BASE          00000100 
           _..X_FLASH_BOOT         0001E000 
           _..X_FLASH_END          0001FFFF 
           _..X_FLASH_NEND         0000FFFF 
           _..X_FLASH_TEND         000000FF 
           _..X_INTVEC_SIZE        00000094 
    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\Can128.r90
  PROGRAM MODULE, NAME : Can128

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000FA - 000000FA (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANMSG               000000FA 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F7 - 000000F7 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDM1              000000F7 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F6 - 000000F6 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDM2              000000F6 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F5 - 000000F5 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDM3              000000F5 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F4 - 000000F4 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDM4              000000F4 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F3 - 000000F3 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDT1              000000F3 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F2 - 000000F2 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDT2              000000F2 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F1 - 000000F1 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDT3              000000F1 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000F0 - 000000F0 (0x1 bytes), align: 0
  Segment part 9. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIDT4              000000F0 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000EF - 000000EF (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANCDMOB             000000EF 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000EE - 000000EE (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANSTMOB             000000EE 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000ED - 000000ED (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANPAGE              000000ED 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000E5 - 000000E5 (0x1 bytes), align: 0
  Segment part 13. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANTCON              000000E5 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000E4 - 000000E4 (0x1 bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANBT3               000000E4 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000E3 - 000000E3 (0x1 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANBT2               000000E3 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000E2 - 000000E2 (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANBT1               000000E2 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000DF - 000000DF (0x1 bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIE1               000000DF 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000DE - 000000DE (0x1 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANIE2               000000DE 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000DD - 000000DD (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANEN1               000000DD 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000DC - 000000DC (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANEN2               000000DC 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000DB - 000000DB (0x1 bytes), align: 0
  Segment part 21. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANGIE               000000DB 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000D9 - 000000D9 (0x1 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANGSTA              000000D9 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000D8 - 000000D8 (0x1 bytes), align: 0
  Segment part 23. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANGCON              000000D8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E0FA - 0001E1DD (0xe4 bytes), align: 1
  Segment part 33.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_can                0001E0FA        main (bootloader)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000100 - 00000100 (0x1 bytes), align: 0
  Segment part 30.            Intra module refs:   can_tx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           tx_mob                  00000100 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E1DE - 0001E28B (0xae bytes), align: 1
  Segment part 34.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_tx                  0001E1DE        process_can_queue (bl_can)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E28C - 0001E2E7 (0x5c bytes), align: 1
  Segment part 35.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_rx_set              0001E28C        set_rx_mbs (bl_can)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E2E8 - 0001E37D (0x96 bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_rx                  0001E2E8        Check_CAN_int (bl_can)
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000001F, align: 0
  Segment part 24. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EECR                 0000001F        Segment part 0 (?EEPROM_16)
                                                   Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000020, align: 0
  Segment part 25. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEDR                 00000020        __eeget8_16 (?EEPROM_16)
                                                   __eeput8_16 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000021, align: 0
  Segment part 26. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARL                00000021        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000022, align: 0
  Segment part 27. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __?EEARH                00000022        Segment part 1 (?EEPROM_16)
                                                   Segment part 8 (?EEPROM_16)
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0001F95E - 0001F95E (0x1 bytes), align: 0
  Segment part 31.            Intra module refs:   tx_mob
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 0001E0EC - 0001E0F2 (0x7 bytes), align: 0
  Segment part 32.            Intra module refs:   Segment part 17 (bl_can)
                                                   Segment part 29 (bootloader)
                                                   flash_page_written (intel_hex)
                                                   tx_mob
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_I>
                                   0001E0EC 

    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\bl_can.r90
  PROGRAM MODULE, NAME : bl_can

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000EC - 000000EC (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_CANHPMOB             000000EC 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000088 - 00000089 (0x2 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_OCR1A                00000088 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000084 - 00000085 (0x2 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCNT1                00000084 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000081 - 00000081 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1B               00000081 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000006F - 0000006F (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK1               0000006F 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000022 - 00000022 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_PORTA                00000022 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000134 - 00000177 (0x44 bytes), align: 0
  Segment part 15.            Intra module refs:   can_get_app_info
                                                   can_rx_app_info_with_sender
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           remote_apps             00000134        usart0_tx_app_info (usart)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000178 - 00000179 (0x2 bytes), align: 0
  Segment part 21.            Intra module refs:   set_rx_mbs
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ident_in_high           00000178        can_rx (Can128)
                                                   can_rx_set (Can128)
           ident_in_low            00000179        can_rx_set (Can128)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 0000017A - 00000182 (0x9 bytes), align: 0
  Segment part 22.            Intra module refs:   Check_CAN_int
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           data_in                 0000017B        can_rx (Can128)
           data_in_count           0000017A        can_rx (Can128)
                                                   can_rx_set (Can128)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E37E - 0001E3C5 (0x48 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           set_rx_mbs              0001E37E        main (bootloader)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E3C6 - 0001E3E9 (0x24 bytes), align: 1
  Segment part 24.            Intra module refs:   can_get_app_info
           LOCAL                   ADDRESS         
           =====                   =======         
           enable_mcu_timeout      0001E3C6 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E3EA - 0001E413 (0x2a bytes), align: 1
  Segment part 25.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_get_app_info        0001E3EA        handle_in_byte (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E414 - 0001E491 (0x7e bytes), align: 1
  Segment part 27.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_tx_app_info         0001E414        parse_header (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E492 - 0001E4B3 (0x22 bytes), align: 1
  Segment part 28.            Intra module refs:   can_get_app_info
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_tx_byte             0001E492        broadcast_jump_bootloader (protocol)
                                                   parse_header (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000000E )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E4B4 - 0001E521 (0x6e bytes), align: 1
  Segment part 29.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_pkg_add_byte        0001E4B4        handle_in_byte (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000101 - 00000126 (0x26 bytes), align: 0
  Segment part 17.            Intra module refs:   can_get_app_info
                                                   can_pkg_add_byte
                                                   can_rx_app_info_with_sender
                                                   can_rx_byte
                                                   can_tx_app_info
                                                   can_tx_byte
                                                   mcu_timeout
                                                   process_can_queue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           app_no                  0000011A        main (bootloader)
           current_rx_data         00000101 
           data_out                0000011F        can_tx (Can128)
           data_out_count          0000011E        can_tx (Can128)
           ident_out_high          0000011C        broadcast_jump_bootloader (protocol)
                                                   can_tx (Can128)
                                                   parse_header (protocol)
           ident_out_low           0000011D        broadcast_jump_bootloader (protocol)
                                                   can_tx (Can128)
                                                   parse_header (protocol)
           in_counter              0000011B 
           no_of_mcus_found        00000119        main (bootloader)
                                                   usart0_tx_app_info (usart)
           LOCAL                   ADDRESS         
           =====                   =======         
           can_pkg_add_byte::pkg   0000010D 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E522 - 0001E537 (0x16 bytes), align: 1
  Segment part 32.            Intra module refs:   can_rx_app_info_with_sender
                                                   forward_to_usart0
                                                   process_can_queue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_rx_byte             0001E522 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E538 - 0001E65F (0x128 bytes), align: 1
  Segment part 33.            Intra module refs:   process_can_queue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_rx_app_info_with_sender
                                   0001E538 
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E660 - 0001E6FF (0xa0 bytes), align: 1
  Segment part 34.            Intra module refs:   Check_CAN_int::??INTVEC 72
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Check_CAN_int           0001E660 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 0000001D )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E700 - 0001E70B (0xc bytes), align: 1
  Segment part 35.            Intra module refs:   process_can_queue
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           forward_to_usart0       0001E700 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E70C - 0001E7C9 (0xbe bytes), align: 1
  Segment part 36.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           process_can_queue       0001E70C        main (bootloader)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E7CA - 0001E7E5 (0x1c bytes), align: 1
  Segment part 37.            Intra module refs:   mcu_timeout::??INTVEC 48
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mcu_timeout             0001E7CA 
               interrupt function
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 0001E000 - 0001E033 (0x34 bytes), align: 1
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           mcu_timeout::??INTVEC 48
                                   0001E030 
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 0001E000 - 0001E04B (0x4c bytes), align: 1
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Check_CAN_int::??INTVEC 72
                                   0001E048 
    -------------------------------------------------------------------------
INITTAB
  Relative segment, address: CODE 0001E0F3 - 0001E0F9 (0x7 bytes), align: 0
  Segment part 16.            Intra module refs:   Segment part 21
                                                   Segment part 22
                                                   Segment part 7 (intel_hex)
                                                   Segment part 7 (protocol)
                                                   can_rx_queue (queue)
                                                   can_tx_queue (queue)
                                                   eeprom_page_buf (queue)
                                                   flash_complete_page (intel_hex)
                                                   incoming_page (intel_hex)
                                                   remote_apps
                                                   usart_rx_queue (queue)
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?<Segment init: NEAR_Z>
                                   0001E0F3 
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0001F95F - 0001F984 (0x26 bytes), align: 0
  Segment part 18.            Intra module refs:   Segment part 17

    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\bootloader.r90
  PROGRAM MODULE, NAME : bootloader

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000C9 - 000000C9 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR1B               000000C9 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C1 - 000000C1 (0x1 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0B               000000C1 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000BC - 000000BC (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TWCR                 000000BC 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000B0 - 000000B0 (0x1 bytes), align: 0
  Segment part 4. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR2A               000000B0 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000092 - 00000092 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR3C               00000092 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000091 - 00000091 (0x1 bytes), align: 0
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR3B               00000091 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000090 - 00000090 (0x1 bytes), align: 0
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR3A               00000090 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000082 - 00000082 (0x1 bytes), align: 0
  Segment part 8. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1C               00000082 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000080 - 00000080 (0x1 bytes), align: 0
  Segment part 10. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR1A               00000080 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000007A - 0000007A (0x1 bytes), align: 0
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ADCSRA               0000007A 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000070 - 00000070 (0x1 bytes), align: 0
  Segment part 12. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK2               00000070 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000006E - 0000006E (0x1 bytes), align: 0
  Segment part 14. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TIMSK0               0000006E 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000060 - 00000060 (0x1 bytes), align: 0
  Segment part 15. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_WDTCR                00000060 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000057 - 00000057 (0x1 bytes), align: 0
  Segment part 16. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPMCSR               00000057 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000050 - 00000050 (0x1 bytes), align: 0
  Segment part 17. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_ACSR                 00000050 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000004C - 0000004C (0x1 bytes), align: 0
  Segment part 18. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_SPCR                 0000004C 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000044 - 00000044 (0x1 bytes), align: 0
  Segment part 19. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_TCCR0A               00000044 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 0000003D - 0000003D (0x1 bytes), align: 0
  Segment part 20. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_EIMSK                0000003D 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 00000021 - 00000021 (0x1 bytes), align: 0
  Segment part 22. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_DDRA                 00000021 
    -------------------------------------------------------------------------
NEAR_I
  Relative segment, address: DATA 00000127 - 00000132 (0xc bytes), align: 0
  Segment part 29.            Intra module refs:   main
                                                   write_flash_page
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           app_page_addr           00000127 
           mem_write_ptr           0000012F        handle_in_byte (protocol)
           rx_counter              0000012B        handle_in_byte (protocol)
                                                   parse_header (protocol)
           state                   00000131        handle_in_byte (protocol)
                                                   parse_header (protocol)
                                                   parse_ihex (intel_hex)
                                                   process_can_queue (bl_can)
           transfer_init           00000132        handle_in_byte (protocol)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E7E6 - 0001E7F1 (0xc bytes), align: 1
  Segment part 32.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           reset                   0001E7E6 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E7F2 - 0001E835 (0x44 bytes), align: 1
  Segment part 33.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           clear                   0001E7F2 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E836 - 0001E869 (0x34 bytes), align: 1
  Segment part 34.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           erase_app_flash         0001E836 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E86A - 0001E901 (0x98 bytes), align: 1
  Segment part 35.            Intra module refs:   write_flash_page
           LOCAL                   ADDRESS         
           =====                   =======         
           write_page_app_flash    0001E86A 
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E902 - 0001E90F (0xe bytes), align: 1
  Segment part 36.            Intra module refs:   main
           LOCAL                   ADDRESS         
           =====                   =======         
           leds_init               0001E902 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E910 - 0001E955 (0x46 bytes), align: 1
  Segment part 37.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_flash_page        0001E910        handle_in_byte (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E956 - 0001E9A5 (0x50 bytes), align: 1
  Segment part 38.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           write_eeprom_page       0001E956        handle_in_byte (protocol)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000016 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001E9A6 - 0001EABD (0x118 bytes), align: 1
  Segment part 39.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    0001E9A6        ?cstartup_call_main (?C_STARTUP)
               calls direct and indirect
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EABE - 0001EB41 (0x84 bytes), align: 1
  Segment part 40.            Intra module refs:   main
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           store_app_info          0001EABE 
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EB42 - 0001EBFF (0xbe bytes), align: 1
  Segment part 41.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           read_app_info           0001EB42        can_get_app_info (bl_can)
                                                   handle_in_byte (protocol)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0001F985 - 0001F990 (0xc bytes), align: 0
  Segment part 30.            Intra module refs:   Segment part 29

    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\intel_hex.r90
  PROGRAM MODULE, NAME : intel_hex

  SEGMENTS IN THE MODULE
  ======================
NEAR_I
  Relative segment, address: DATA 00000133 - 00000133 (0x1 bytes), align: 0
  Segment part 11.            Intra module refs:   flash_enqueue_page
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_page_written      00000133        write_flash_page (bootloader)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EC00 - 0001EC05 (0x6 bytes), align: 1
  Segment part 14.            Intra module refs:   eeprom_enqueue_page
                                                   flash_enqueue_page
                                                   parse_ihex
           LOCAL                   ADDRESS         
           =====                   =======         
           reply_byte              0001EC00 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EC06 - 0001EC55 (0x50 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_enqueue_page      0001EC06        handle_in_byte (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EC56 - 0001EC83 (0x2e bytes), align: 1
  Segment part 16.            Intra module refs:   flash_data_record
                                                   parse_ihex
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_fill_end          0001EC56 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EC84 - 0001ECE5 (0x62 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_data_record       0001EC84        handle_in_byte (protocol)
               calls direct and indirect
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001ECE6 - 0001ED09 (0x24 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eeprom_enqueue_page     0001ECE6        handle_in_byte (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001ED0A - 0001ED57 (0x4e bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eeprom_data_record      0001ED0A        handle_in_byte (protocol)
               calls indirect
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001ED58 - 0001ED6D (0x16 bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           init_ihex               0001ED58        main (bootloader)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001ED6E - 0001EECF (0x162 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_ihex              0001ED6E        handle_in_byte (protocol)
               calls direct and indirect
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000183 - 000001A6 (0x24 bytes), align: 0
  Segment part 7.             Intra module refs:   eeprom_data_record
                                                   eeprom_enqueue_page
                                                   flash_data_record
                                                   init_ihex
                                                   parse_ihex
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           data_record             0000019F        handle_in_byte (protocol)
           enqueue_page            0000019D        handle_in_byte (protocol)
           hex_address             0000019B 
           hex_address_ext         00000199 
           hex_checksum            00000197 
           hex_data_size           000001A2 
           hex_in_byte             000001A3 
           hex_index               000001A1 
           hex_odd                 000001A4 
           hex_type                000001A5 
           incoming_eeprom_page    00000183 
           LOCAL                   ADDRESS         
           =====                   =======         
           parse_ihex::transfer_complete
                                   000001A6 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000001A7 - 000002A8 (0x102 bytes), align: 0
  Segment part 9.             Intra module refs:   flash_data_record
                                                   flash_enqueue_page
                                                   flash_fill_end
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           incoming_page           000001A7 
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000002A9 - 000003AA (0x102 bytes), align: 0
  Segment part 10.            Intra module refs:   flash_enqueue_page
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           flash_complete_page     000002A9        write_flash_page (bootloader)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EED0 - 0001EEDB (0xc bytes), align: 1
  Segment part 22.            Intra module refs:   parse_ihex
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ascii_to_bin            0001EED0 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
NEAR_ID
  Relative segment, address: CODE 0001F991 - 0001F991 (0x1 bytes), align: 0
  Segment part 12.            Intra module refs:   flash_page_written

    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\move_iv.r90
  PROGRAM MODULE, NAME : move_iv

Absolute parts
           LOCAL                   ADDRESS         
           =====                   =======         
           __AT86RF401__           00000000 
  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001EEDC - 0001EEE9 (0xe bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_iv_to_bls          0001EEDC        main (bootloader)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EEEA - 0001EEF7 (0xe bytes), align: 1
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           move_iv_to_app          0001EEEA        main (bootloader)

    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\protocol.r90
  PROGRAM MODULE, NAME : protocol

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 000003AB - 000003BE (0x14 bytes), align: 0
  Segment part 7.             Intra module refs:   parse_header
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           incoming_app_info       000003AB        main (bootloader)
           incoming_tmp            000003BB        main (bootloader)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EEF8 - 0001EEFD (0x6 bytes), align: 1
  Segment part 9.             Intra module refs:   handle_in_byte
                                                   parse_header
           LOCAL                   ADDRESS         
           =====                   =======         
           tx_byte                 0001EEF8 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EEFE - 0001EF03 (0x6 bytes), align: 1
  Segment part 10.            Intra module refs:   handle_in_byte
           LOCAL                   ADDRESS         
           =====                   =======         
           tx_int                  0001EEFE 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EF04 - 0001EF15 (0x12 bytes), align: 1
  Segment part 11.            Intra module refs:   handle_in_byte
           LOCAL                   ADDRESS         
           =====                   =======         
           rx_byte                 0001EF04 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000001 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EF16 - 0001EF29 (0x14 bytes), align: 1
  Segment part 12.            Intra module refs:   handle_in_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           broadcast_jump_bootloader
                                   0001EF16        main (bootloader)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001EF2A - 0001F07B (0x152 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           handle_in_byte          0001EF2A        process_usart_queue (usart)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000010 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F07C - 0001F25F (0x1e4 bytes), align: 1
  Segment part 14.            Intra module refs:   handle_in_byte
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           parse_header            0001F07C 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000008 )

    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\queue.r90
  PROGRAM MODULE, NAME : queue

  SEGMENTS IN THE MODULE
  ======================
NEAR_Z
  Relative segment, address: DATA 000003BF - 00000427 (0x69 bytes), align: 0
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eeprom_page_buf         000003BF        eeprom_enqueue_page (intel_hex)
                                                   main (bootloader)
                                                   write_eeprom_page (bootloader)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000428 - 00000468 (0x41 bytes), align: 0
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_rx_queue            00000428        Check_CAN_int (bl_can)
                                                   main (bootloader)
                                                   process_can_queue (bl_can)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 00000469 - 000004A9 (0x41 bytes), align: 0
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_tx_queue            00000469        can_pkg_add_byte (bl_can)
                                                   can_tx_app_info (bl_can)
                                                   can_tx_byte (bl_can)
                                                   main (bootloader)
                                                   process_can_queue (bl_can)
    -------------------------------------------------------------------------
NEAR_Z
  Relative segment, address: DATA 000004AA - 000004C0 (0x17 bytes), align: 0
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart_rx_queue          000004AA        main (bootloader)
                                                   process_usart_queue (usart)
                                                   rx_byte (protocol)
                                                   usart0_rx (usart)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F260 - 0001F26F (0x10 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eeprom_queue_init       0001F260        main (bootloader)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F270 - 0001F339 (0xca bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eeprom_queue_enqueue    0001F270        eeprom_enqueue_page (intel_hex)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F33A - 0001F3E9 (0xb0 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eeprom_queue_dequeue    0001F33A        write_eeprom_page (bootloader)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000007 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F3EA - 0001F40D (0x24 bytes), align: 1
  Segment part 15.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           eeprom_queue_is_empty   0001F3EA        write_eeprom_page (bootloader)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F40E - 0001F41D (0x10 bytes), align: 1
  Segment part 16.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_queue_init          0001F40E        main (bootloader)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F41E - 0001F50F (0xf2 bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_queue_enqueue       0001F41E        Check_CAN_int (bl_can)
                                                   can_pkg_add_byte (bl_can)
                                                   can_tx_app_info (bl_can)
                                                   can_tx_byte (bl_can)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000008 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F510 - 0001F5EB (0xdc bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_queue_dequeue       0001F510        process_can_queue (bl_can)
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000007 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F5EC - 0001F60F (0x24 bytes), align: 1
  Segment part 19.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           can_queue_is_empty      0001F5EC        process_can_queue (bl_can)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F610 - 0001F61F (0x10 bytes), align: 1
  Segment part 20.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           byte_queue_init         0001F610        main (bootloader)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F620 - 0001F681 (0x62 bytes), align: 1
  Segment part 21.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           byte_queue_enqueue      0001F620        usart0_rx (usart)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F682 - 0001F6CB (0x4a bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           byte_queue_dequeue      0001F682        rx_byte (protocol)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F6CC - 0001F6EF (0x24 bytes), align: 1
  Segment part 23.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           byte_queue_is_empty     0001F6CC        process_usart_queue (usart)
               stack 1 = 00000000 ( 00000002 )

    *************************************************************************

  FILE NAME : C:\Documents and Settings\User\My Documents\Stefan\Bootloader\Bootloader\Debug\Obj\usart.r90
  PROGRAM MODULE, NAME : usart

  SEGMENTS IN THE MODULE
  ======================
ABSOLUTE
  Relative segment, address: DATA 000000C6 - 000000C6 (0x1 bytes), align: 0
  Segment part 1. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UDR0                 000000C6 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C4 - 000000C5 (0x2 bytes), align: 0
  Segment part 2. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UBRR0                000000C4 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C2 - 000000C2 (0x1 bytes), align: 0
  Segment part 3. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0C               000000C2 
    -------------------------------------------------------------------------
ABSOLUTE
  Relative segment, address: DATA 000000C0 - 000000C0 (0x1 bytes), align: 0
  Segment part 5. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _A_UCSR0A               000000C0 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F6F0 - 0001F707 (0x18 bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_init             0001F6F0        main (bootloader)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F708 - 0001F717 (0x10 bytes), align: 1
  Segment part 15.            Intra module refs:   usart0_rx
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_rx_byte          0001F708 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F718 - 0001F727 (0x10 bytes), align: 1
  Segment part 16.            Intra module refs:   usart0_tx_app_info
                                                   usart0_tx_block
                                                   usart0_tx_int
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_byte          0001F718        forward_to_usart0 (bl_can)
                                                   main (bootloader)
                                                   reply_byte (intel_hex)
                                                   tx_byte (protocol)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F728 - 0001F761 (0x3a bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_app_info      0001F728        main (bootloader)
               calls direct
               stack 1 = 00000000 ( 00000004 )
               stack 2 = 00000000 ( 00000005 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F762 - 0001F775 (0x14 bytes), align: 1
  Segment part 18.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_int           0001F762        tx_int (protocol)
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F776 - 0001F79B (0x26 bytes), align: 1
  Segment part 21.            Intra module refs:   usart0_tx_app_info
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_tx_block         0001F776 
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F79C - 0001F7AF (0x14 bytes), align: 1
  Segment part 22.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           process_usart_queue     0001F79C        main (bootloader)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F7B0 - 0001F813 (0x64 bytes), align: 1
  Segment part 23.            Intra module refs:   usart0_rx::??INTVEC 84
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_rx               0001F7B0 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 00000002 )
               stack 2 = 00000000 ( 00000011 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: CODE 0001E000 - 0001E057 (0x58 bytes), align: 1
  Segment part 11. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           usart0_rx::??INTVEC 84
                                   0001E054 

    *************************************************************************

  FILE NAME : C:\Program Files\IAR Systems\Embedded Workbench 4.0\avr\LIB\CLIB\cl3s-ec_mul.r90
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F814 - 0001F819 (0x6 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  0001F816 
           ?C_EXIT                 0001F816 
           ?C_FUNCALL              0001F814 
           _exit                   0001F814        ?cstartup_call_main (?C_STARTUP)
           exit                    0001F814        ?cstartup_call_main (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?RESET

  SEGMENTS IN THE MODULE
  ======================
INTVEC
  Common segment, address: CODE 0001E000 - 0001E003 (0x4 bytes), align: 1
  Segment part 0. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         0001E000        Absolute parts (?ABS_ENTRY_MOD)
           ?RESET                  0001E000        Segment part 2 (?C_STARTUP)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?C_STARTUP

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F81A, align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?C_STARTUP              0001F81A        Segment part 0 (?RESET)
           __RESTART               0001F81A 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F81A - 0001F825 (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   Segment part 2
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F826 - 0001F829 (0x4 bytes), align: 1
  Segment part 7.             Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?call_low_level_init    0001F826 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F82A - 0001F831 (0x8 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?need_segment_init      0001F82A        ?<Segment init: NEAR_I> (Can128)
                                                   ?<Segment init: NEAR_Z> (bl_can)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F832 - 0001F83D (0xc bytes), align: 1
  Segment part 9.             Intra module refs:   ?call_low_level_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstartup_call_main     0001F832 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EEPROM_16

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F83E - 0001F843 (0x6 bytes), align: 1
  Segment part 0.             Intra module refs:   Segment part 1
                                                   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F844 - 0001F851 (0xe bytes), align: 1
  Segment part 1.             Intra module refs:   __eeget8_16
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F852 - 0001F857 (0x6 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeget8_16             0001F852        read_app_info (bootloader)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F858 - 0001F869 (0x12 bytes), align: 1
  Segment part 8.             Intra module refs:   __eeput8_16
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F86A - 0001F871 (0x8 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __eeput8_16             0001F86A        store_app_info (bootloader)
                                                   write_eeprom_page (bootloader)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_EC_MUL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F872 - 0001F881 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_EC_MUL_L02           0001F872        can_queue_dequeue (queue)
                                                   can_queue_enqueue (queue)
                                                   can_rx_app_info_with_sender (bl_can)
                                                   eeprom_queue_dequeue (queue)
                                                   eeprom_queue_enqueue (queue)
                                                   usart0_tx_app_info (usart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?S_SHL_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F882 - 0001F88D (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?S_SHL_L02              0001F882        can_rx_app_info_with_sender (bl_can)
                                                   parse_ihex (intel_hex)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SS_SHR_L02

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F88E - 0001F899 (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SS_SHR_L02             0001F88E        can_rx (Can128)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?L_SHL_L03

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F89A - 0001F8A9 (0x10 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?L_SHL_L03              0001F89A        can_rx_app_info_with_sender (bl_can)
                                                   read_app_info (bootloader)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?PROLOGUE_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8AA - 0001F8AB (0x2 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE8_L09          0001F8AA        can_queue_enqueue (queue)
                                                   eeprom_queue_enqueue (queue)
                                                   parse_header (protocol)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8AC - 0001F8AD (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?PROLOGUE8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE7_L09          0001F8AC        can_queue_dequeue (queue)
                                                   eeprom_queue_dequeue (queue)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8AE - 0001F8AF (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?PROLOGUE7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE6_L09          0001F8AE        can_tx_app_info (bl_can)
                                                   usart0_tx_block (usart)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8B0 - 0001F8B1 (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?PROLOGUE6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE5_L09          0001F8B0        can_rx_app_info_with_sender (bl_can)
                                                   usart0_tx_app_info (usart)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8B2 - 0001F8B3 (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?PROLOGUE5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE4_L09          0001F8B2        main (bootloader)
                                                   parse_ihex (intel_hex)
                                                   process_can_queue (bl_can)
                                                   store_app_info (bootloader)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8B4 - 0001F8B5 (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?PROLOGUE4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE3_L09          0001F8B4 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8B6 - 0001F8B7 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?PROLOGUE3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE2_L09          0001F8B6 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8B8 - 0001F8B9 (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?PROLOGUE2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?PROLOGUE1_L09          0001F8B8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8BA - 0001F8BB (0x2 bytes), align: 1
  Segment part 16.            Intra module refs:   ?PROLOGUE1_L09

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?EPILOGUE_B_L09

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8BC - 0001F8BD (0x2 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B8_L09        0001F8BC        can_queue_enqueue (queue)
                                                   eeprom_queue_enqueue (queue)
                                                   parse_header (protocol)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8BE - 0001F8BF (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   ?EPILOGUE_B8_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B7_L09        0001F8BE        can_queue_dequeue (queue)
                                                   eeprom_queue_dequeue (queue)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8C0 - 0001F8C1 (0x2 bytes), align: 1
  Segment part 10.            Intra module refs:   ?EPILOGUE_B7_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B6_L09        0001F8C0        can_tx_app_info (bl_can)
                                                   usart0_tx_block (usart)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8C2 - 0001F8C3 (0x2 bytes), align: 1
  Segment part 11.            Intra module refs:   ?EPILOGUE_B6_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B5_L09        0001F8C2        can_rx_app_info_with_sender (bl_can)
                                                   usart0_tx_app_info (usart)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8C4 - 0001F8C5 (0x2 bytes), align: 1
  Segment part 12.            Intra module refs:   ?EPILOGUE_B5_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B4_L09        0001F8C4        parse_ihex (intel_hex)
                                                   process_can_queue (bl_can)
                                                   store_app_info (bootloader)
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8C6 - 0001F8C7 (0x2 bytes), align: 1
  Segment part 13.            Intra module refs:   ?EPILOGUE_B4_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B3_L09        0001F8C6 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8C8 - 0001F8C9 (0x2 bytes), align: 1
  Segment part 14.            Intra module refs:   ?EPILOGUE_B3_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B2_L09        0001F8C8 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8CA - 0001F8CB (0x2 bytes), align: 1
  Segment part 15.            Intra module refs:   ?EPILOGUE_B2_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B1_L09        0001F8CA 
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8CC - 0001F8D9 (0xe bytes), align: 1
  Segment part 16.            Intra module refs:   ?EPILOGUE_B1_L09
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?EPILOGUE_B0_L09        0001F8CC 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR4_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8DA, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R4_is_cg_reg
                                   0001F8DA        can_queue_dequeue (queue)
                                                   can_queue_enqueue (queue)
                                                   can_rx_app_info_with_sender (bl_can)
                                                   can_tx_app_info (bl_can)
                                                   eeprom_queue_dequeue (queue)
                                                   eeprom_queue_enqueue (queue)
                                                   parse_header (protocol)
                                                   usart0_tx_app_info (usart)
                                                   usart0_tx_block (usart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR5_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8DA, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R5_is_cg_reg
                                   0001F8DA        can_queue_dequeue (queue)
                                                   can_queue_enqueue (queue)
                                                   can_tx_app_info (bl_can)
                                                   eeprom_queue_dequeue (queue)
                                                   eeprom_queue_enqueue (queue)
                                                   parse_header (protocol)
                                                   usart0_tx_block (usart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR6_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8DA, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R6_is_cg_reg
                                   0001F8DA        can_queue_dequeue (queue)
                                                   can_queue_enqueue (queue)
                                                   eeprom_queue_dequeue (queue)
                                                   eeprom_queue_enqueue (queue)
                                                   parse_header (protocol)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?REGISTER_CGREGR7_L10

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8DA, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Register_R7_is_cg_reg
                                   0001F8DA        can_queue_enqueue (queue)
                                                   eeprom_queue_enqueue (queue)
                                                   parse_header (protocol)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?low_level_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8DA - 0001F8DD (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        0001F8DA        ?call_low_level_init (?C_STARTUP)
               stack 1 = 00000000 ( 00000002 )

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?segment_init

  SEGMENTS IN THE MODULE
  ======================
CODE
  Relative segment, address: CODE 0001F8DE - 0001F8E5 (0x8 bytes), align: 1
  Segment part 3.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __memclr                0001F8DE 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8E6 - 0001F8F1 (0xc bytes), align: 1
  Segment part 4.             Intra module refs:   __segment_init
           LOCAL                   ADDRESS         
           =====                   =======         
           __flashcpy              0001F8E6 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8F2 - 0001F8FD (0xc bytes), align: 1
  Segment part 5.             Intra module refs:   __flashcpy
                                                   __memclr
    -------------------------------------------------------------------------
CODE
  Relative segment, address: CODE 0001F8FE - 0001F95D (0x60 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __segment_init          0001F8FE        ?need_segment_init (?C_STARTUP)
               calls direct
               stack 1 = 00000000 ( 00000002 )




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
INTVEC               CODE          0001E000 - 0001E0EB          EC   com    1
SWITCH               CODE               0001E0EC                     dse    0
INITTAB              CODE          0001E0EC - 0001E0F9           E   rel    0
CODE                 CODE          0001E0FA - 0001F95D        1864   rel    1
TINY_ID              CODE               0001F95E                     dse    0
NEAR_ID              CODE          0001F95E - 0001F991          34   rel    0
ABSOLUTE             DATA               0000001F                     rel    0
                     DATA               00000020                   
                     DATA               00000021                   
                     DATA          0000003D - 0000003D           1 
                     DATA          00000044 - 00000044           1 
                     DATA          0000004C - 0000004C           1 
                     DATA          00000050 - 00000050           1 
                     DATA          00000057 - 00000057           1 
                     DATA          00000060 - 00000060           1 
                     DATA          0000006E - 00000070           3 
                     DATA          0000007A - 0000007A           1 
                     DATA          00000080 - 00000082           3 
                     DATA          00000084 - 00000085           2 
                     DATA          00000088 - 00000089           2 
                     DATA          00000090 - 00000092           3 
                     DATA          000000B0 - 000000B0           1 
                     DATA          000000BC - 000000BC           1 
                     DATA          000000C0 - 000000C2           3 
                     DATA          000000C4 - 000000C6           3 
                     DATA          000000C9 - 000000C9           1 
                     DATA          000000D8 - 000000D9           2 
                     DATA          000000DB - 000000DF           5 
                     DATA          000000E2 - 000000E5           4 
                     DATA          000000EC - 000000F7           C 
                     DATA          000000FA - 000000FA           1 
NEAR_I               DATA          00000100 - 00000133          34   rel    0
NEAR_Z               DATA          00000134 - 000004C0         38D   rel    0
CSTACK               DATA          000004C1 - 000006C0         200   dse    0
RSTACK               DATA          000006C1 - 00000710          50   dse    0

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 6 546 bytes of CODE memory
 1 553 bytes of DATA memory (+ 55 absolute )

Errors: none
Warnings: none

