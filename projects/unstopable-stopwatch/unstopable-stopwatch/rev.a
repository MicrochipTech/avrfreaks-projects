;/*****************************************************
;This program was produced by the
;CodeWizardAVR V1.24.6 Professional
;Automatic Program Generator
;© Copyright 1998-2005 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;e-mail:office@hpinfotech.com
;
;Project :
;Version :
;Date    : 6/5/2012
;Author  : F4CG
;Company : F4CG
;Comments:
;
;
;
;Chip type           : ATmega16
;Program type        : Application
;Clock frequency     : 12.000000 MHz
;Memory model        : Small
;External SRAM size  : 0
;Data Stack size     : 256
;*****************************************************/
;unsigned char count, temp[16], indeks=0;
;unsigned char detik=0, menit=0, jam=0;
;
;// Declare your global variables here
;
;#include <mega16.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x40
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0xB0
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0xA0
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0xB0
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include <stdlib.h>
;#include <delay.h>
;// Alphanumeric LCD Module functions
;#asm
;PCODE: $0000000D VOL: 0
   .equ __lcd_port=0x15 ;PORTC
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
; 0000 0025 #endasm
;#include <lcd.h>
;
;// Timer 0 overflow interrupt service routine
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 002A {

	.CSEG
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 002B // Reinitialize Timer 0 value
; 0000 002C TCNT0=0x8A;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 002D count++;
;PCODE: $00000014 VOL: 0
; 0000 002E }
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;
;
;void hitung_waktu()
; 0000 0032 {
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 0033 if (count>=100)
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 0034     {
; 0000 0035     lcd_clear();
;PCODE: $0000001D VOL: 0
; 0000 0036     detik++;
;PCODE: $0000001E VOL: 0
; 0000 0037     count=0;
;PCODE: $0000001F VOL: 0
; 0000 0038     }
; 0000 0039 
; 0000 003A if (detik>=60)
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
; 0000 003B     {
; 0000 003C     menit++;
;PCODE: $00000024 VOL: 0
; 0000 003D     detik=0;
;PCODE: $00000025 VOL: 0
; 0000 003E     }
; 0000 003F 
; 0000 0040 if (menit>=60)
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 0041     {
; 0000 0042     jam++;
;PCODE: $0000002A VOL: 0
; 0000 0043     menit=0;
;PCODE: $0000002B VOL: 0
; 0000 0044     }
; 0000 0045 }
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;
;
;void detek_tombol()
; 0000 0049 {
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 004A if (PINA.0==0 && (indeks==0 || indeks==2))//run timer
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 004B     {
; 0000 004C     indeks=1;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 004D     TIMSK=0x01;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 004E     lcd_clear();
;PCODE: $00000045 VOL: 0
; 0000 004F     }
; 0000 0050 
; 0000 0051 if (PINA.1==0 && indeks==1)//stop timer
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
; 0000 0052     {
; 0000 0053     indeks=2;
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
; 0000 0054     TIMSK=0x00;
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
; 0000 0055     lcd_clear();
;PCODE: $00000056 VOL: 0
; 0000 0056     }
; 0000 0057 
; 0000 0058 if (PINA.2==0 && indeks==2)//reset timer
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0059     {
; 0000 005A     indeks=0;
;PCODE: $00000063 VOL: 0
; 0000 005B     count=0;
;PCODE: $00000064 VOL: 0
; 0000 005C     detik=0;
;PCODE: $00000065 VOL: 0
; 0000 005D     menit=0;
;PCODE: $00000066 VOL: 0
; 0000 005E     jam=0;
;PCODE: $00000067 VOL: 0
; 0000 005F     lcd_clear();
;PCODE: $00000068 VOL: 0
; 0000 0060     }
; 0000 0061 }
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;
;void tampil_lcd()
; 0000 0064 {
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
; 0000 0065 lcd_gotoxy(0,0);
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
; 0000 0066 sprintf(temp,"Timer %d:%d:%d:%d",jam,menit,detik,count);
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
; 0000 0067 lcd_puts(temp);//tampilkan waktu di LCD baris pertama
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 0068 
; 0000 0069 if (indeks==0)
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
; 0000 006A     {
; 0000 006B     lcd_gotoxy(0,1);
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 006C     lcd_putsf("START");
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
; 0000 006D     }
; 0000 006E 
; 0000 006F if (indeks==1)
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0070     {
; 0000 0071     lcd_gotoxy(0,1);
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
; 0000 0072     lcd_putsf("STOP");
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
; 0000 0073     }
; 0000 0074 
; 0000 0075 if (indeks==2)
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
; 0000 0076     {
; 0000 0077     lcd_gotoxy(0,1);
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
; 0000 0078     lcd_putsf("START      RESET");
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0079     }
; 0000 007A }
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;
;void main(void)
; 0000 007D {
;PCODE: $000000AB VOL: 0
; 0000 007E PORTA=0x0f;
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
; 0000 007F DDRA=0x00;
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 0080 
; 0000 0081 // Timer/Counter 0 initialization
; 0000 0082 // Clock source: System Clock
; 0000 0083 // Clock value: 11.719 kHz
; 0000 0084 // Mode: Normal top=FFh
; 0000 0085 // OC0 output: Disconnected
; 0000 0086 TCCR0=0x05;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
; 0000 0087 TCNT0=0x8A;
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 0088 OCR0=0x00;
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0089 
; 0000 008A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 008B //TIMSK=0x00;
; 0000 008C 
; 0000 008D // Analog Comparator initialization
; 0000 008E // Analog Comparator: Off
; 0000 008F // Analog Comparator Input Capture by Timer/Counter 1: Off
; 0000 0090 ACSR=0x80;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0091 SFIOR=0x00;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
; 0000 0092 
; 0000 0093 // LCD module initialization
; 0000 0094 lcd_init(16);
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
; 0000 0095 lcd_clear();
;PCODE: $000000BC VOL: 0
; 0000 0096 lcd_gotoxy(0,0);
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
; 0000 0097 lcd_putsf("     Tunggu      ");
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 0098 lcd_gotoxy(0,1);
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 0099 lcd_putsf(".....");
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 009A delay_ms(3000);
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 009B lcd_gotoxy(0,7);
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 009C lcd_putsf(".....");
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 009D delay_ms(3000);
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
; 0000 009E lcd_gotoxy(0,14);
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 009F lcd_putsf(".......");
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00A0 delay_ms(3000);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00A1 
; 0000 00A2 // Global enable interrupts
; 0000 00A3 #asm("sei")
;PCODE: $000000DF VOL: 0
	sei
;PCODE: $000000E0 VOL: 0
; 0000 00A4 
; 0000 00A5 while (1)
;PCODE: $000000E1 VOL: 0
; 0000 00A6       {
; 0000 00A7       detek_tombol();
;PCODE: $000000E2 VOL: 0
; 0000 00A8       hitung_waktu();
;PCODE: $000000E3 VOL: 0
; 0000 00A9       tampil_lcd();
;PCODE: $000000E4 VOL: 0
; 0000 00AA       };
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00AB }
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
