
AVRASM ver. 2.1.17  D:\posting blog\simple stopwacth\program\List\sw.asm Sat Jun 11 21:07:08 2011

D:\posting blog\simple stopwacth\program\List\sw.asm(1016): warning: Register r5 already defined by the .DEF directive
D:\posting blog\simple stopwacth\program\List\sw.asm(1017): warning: Register r4 already defined by the .DEF directive
D:\posting blog\simple stopwacth\program\List\sw.asm(1018): warning: Register r7 already defined by the .DEF directive
D:\posting blog\simple stopwacth\program\List\sw.asm(1019): warning: Register r6 already defined by the .DEF directive
D:\posting blog\simple stopwacth\program\List\sw.asm(1020): warning: Register r9 already defined by the .DEF directive
D:\posting blog\simple stopwacth\program\List\sw.asm(1021): warning: Register r8 already defined by the .DEF directive
D:\posting blog\simple stopwacth\program\List\sw.asm(1022): warning: Register r11 already defined by the .DEF directive
D:\posting blog\simple stopwacth\program\List\sw.asm(1023): warning: Register r10 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.03.9 Standard
                 ;(C) Copyright 1998-2008 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type              : ATmega16
                 ;Program type           : Application
                 ;Clock frequency        : 12.000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote char to int    : Yes
                 ;char is unsigned       : Yes
                 ;global const stored in FLASH  : No
                 ;8 bit enums            : Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+@1
                 	ANDI R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+@1
                 	ORI  R30,LOW(@2)
                 	STS  @0+@1,R30
                 	LDS  R30,@0+@1+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+@1+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+@1)
                 	LDI  R31,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	LDI  R22,BYTE3(2*@0+@1)
                 	LDI  R23,BYTE4(2*@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+@2)
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+@3)
                 	LDI  R@1,HIGH(@2+@3)
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+@3)
                 	LDI  R@1,HIGH(@2*2+@3)
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	LDS  R22,@0+@1+2
                 	LDS  R23,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+@2
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+@3
                 	LDS  R@1,@2+@3+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+@1
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+@1
                 	LDS  R27,@0+@1+1
                 	LDS  R24,@0+@1+2
                 	LDS  R25,@0+@1+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+@1,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+@1,R30
                 	STS  @0+@1+1,R31
                 	STS  @0+@1+2,R22
                 	STS  @0+@1+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+@1,R0
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+@1,R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+@1,R@2
                 	STS  @0+@1+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+@1
                 	LDS  R31,@0+@1+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+@1)
                 	LDI  R31,HIGH(2*@0+@1)
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+@1)
                 	LDI  R27,HIGH(@0+@1)
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _count=R5
                 	.DEF _indeks=R4
                 	.DEF _detik=R7
                 	.DEF _menit=R6
                 	.DEF _jam=R9
                 	.DEF __lcd_x=R8
                 	.DEF __lcd_y=R11
                 	.DEF __lcd_maxx=R10
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;INTERRUPT VECTORS
000000 940c 005c 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 008c 	JMP  _timer0_ovf_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 _0x18:
000033 0000
000034 0000
000035 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0
                 _0x0:
000036 6954
000037 656d
000038 2072
000039 6425      	.DB  0x54,0x69,0x6D,0x65,0x72,0x20,0x25,0x64
00003a 253a
00003b 3a64
00003c 6425
00003d 253a      	.DB  0x3A,0x25,0x64,0x3A,0x25,0x64,0x3A,0x25
00003e 0064
00003f 5453
000040 5241
000041 0054      	.DB  0x64,0x0,0x53,0x54,0x41,0x52,0x54,0x0
000042 5453
000043 504f
000044 5300
000045 4154      	.DB  0x53,0x54,0x4F,0x50,0x0,0x53,0x54,0x41
000046 5452
000047 2020
000048 2020
000049 2020      	.DB  0x52,0x54,0x20,0x20,0x20,0x20,0x20,0x20
00004a 4552
00004b 4553
00004c 0054      	.DB  0x52,0x45,0x53,0x45,0x54,0x0
                 _0x202005F:
D:\posting blog\simple stopwacth\program\List\sw.asm(1067): warning: .cseg .db misalignment - padding zero byte
00004d 0001      	.DB  0x1
                 _0x2020000:
00004e 4e2d
00004f 4e41
D:\posting blog\simple stopwacth\program\List\sw.asm(1069): warning: .cseg .db misalignment - padding zero byte
000050 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 _0x2040003:
000051 c080      	.DB  0x80,0xC0
                 
                 __GLOBAL_INI_TBL:
000052 0006      	.DW  0x06
000053 0004      	.DW  0x04
000054 0066      	.DW  _0x18*2
                 
000055 0001      	.DW  0x01
000056 0170      	.DW  __seed_G101
000057 009a      	.DW  _0x202005F*2
                 
000058 0002      	.DW  0x02
000059 0174      	.DW  __base_y_G102
00005a 00a2      	.DW  _0x2040003*2
                 
                 _0xFFFFFFFF:
00005b 0000      	.DW  0
                 
                 __RESET:
00005c 94f8      	CLI
00005d 27ee      	CLR  R30
00005e bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00005f e0f1      	LDI  R31,1
000060 bffb      	OUT  GICR,R31
000061 bfeb      	OUT  GICR,R30
000062 bfe5      	OUT  MCUCR,R30
                 
                 ;DISABLE WATCHDOG
000063 e1f8      	LDI  R31,0x18
000064 bdf1      	OUT  WDTCR,R31
000065 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
000066 e08d      	LDI  R24,(14-2)+1
000067 e0a2      	LDI  R26,2
000068 27bb      	CLR  R27
                 __CLEAR_REG:
000069 93ed      	ST   X+,R30
00006a 958a      	DEC  R24
00006b f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
00006c e080      	LDI  R24,LOW(0x400)
00006d e094      	LDI  R25,HIGH(0x400)
00006e e6a0      	LDI  R26,0x60
                 __CLEAR_SRAM:
00006f 93ed      	ST   X+,R30
000070 9701      	SBIW R24,1
000071 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
000072 eae4      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
000073 e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000074 9185      	LPM  R24,Z+
000075 9195      	LPM  R25,Z+
000076 9700      	SBIW R24,0
000077 f061      	BREQ __GLOBAL_INI_END
000078 91a5      	LPM  R26,Z+
000079 91b5      	LPM  R27,Z+
00007a 9005      	LPM  R0,Z+
00007b 9015      	LPM  R1,Z+
00007c 01bf      	MOVW R22,R30
00007d 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00007e 9005      	LPM  R0,Z+
00007f 920d      	ST   X+,R0
000080 9701      	SBIW R24,1
000081 f7e1      	BRNE __GLOBAL_INI_LOOP
000082 01fb      	MOVW R30,R22
000083 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;STACK POINTER INITIALIZATION
000084 e5ef      	LDI  R30,LOW(0x45F)
000085 bfed      	OUT  SPL,R30
000086 e0e4      	LDI  R30,HIGH(0x45F)
000087 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000088 e6c0      	LDI  R28,LOW(0x160)
000089 e0d1      	LDI  R29,HIGH(0x160)
                 
00008a 940c 0118 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;unsigned char count, temp[16], indeks=0;
                 ;unsigned char detik=0, menit=0, jam=0;
                 ;#include <mega16.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;// Alphanumeric LCD Module functions
                 ;#asm
                    .equ __lcd_port=0x15 ;PORTC
                 ; 0000 000A #endasm
                 ;#include <lcd.h>
                 ;
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0000 000F {
                 
                 	.CSEG
                 _timer0_ovf_isr:
00008c 93ea      	ST   -Y,R30
00008d b7ef      	IN   R30,SREG
00008e 93ea      	ST   -Y,R30
                 ; 0000 0010 // Reinitialize Timer 0 value
                 ; 0000 0011 TCNT0=0x8A;
00008f e8ea      	LDI  R30,LOW(138)
000090 bfe2      	OUT  0x32,R30
                 ; 0000 0012 count++;
000091 9453      	INC  R5
                 ; 0000 0013 }
000092 91e9      	LD   R30,Y+
000093 bfef      	OUT  SREG,R30
000094 91e9      	LD   R30,Y+
000095 9518      	RETI
                 ;
                 ;
                 ;void hitung_waktu()
                 ; 0000 0017 {
                 _hitung_waktu:
                 ; 0000 0018 if (count>=100)
000096 e6e4      	LDI  R30,LOW(100)
000097 165e      	CP   R5,R30
000098 f020      	BRLO _0x3
                 ; 0000 0019     {
                 ; 0000 001A     lcd_clear();
000099 940e 0339 	CALL _lcd_clear
                 ; 0000 001B     detik++;
00009b 9473      	INC  R7
                 ; 0000 001C     count=0;
00009c 2455      	CLR  R5
                 ; 0000 001D     }
                 ; 0000 001E 
                 ; 0000 001F if (detik>=60)
                 _0x3:
00009d e3ec      	LDI  R30,LOW(60)
00009e 167e      	CP   R7,R30
00009f f010      	BRLO _0x4
                 ; 0000 0020     {
                 ; 0000 0021     menit++;
0000a0 9463      	INC  R6
                 ; 0000 0022     detik=0;
0000a1 2477      	CLR  R7
                 ; 0000 0023     }
                 ; 0000 0024 
                 ; 0000 0025 if (menit>=60)
                 _0x4:
0000a2 e3ec      	LDI  R30,LOW(60)
0000a3 166e      	CP   R6,R30
0000a4 f010      	BRLO _0x5
                 ; 0000 0026     {
                 ; 0000 0027     jam++;
0000a5 9493      	INC  R9
                 ; 0000 0028     menit=0;
0000a6 2466      	CLR  R6
                 ; 0000 0029     }
                 ; 0000 002A }
                 _0x5:
0000a7 9508      	RET
                 ;
                 ;
                 ;void detek_tombol()
                 ; 0000 002E {
                 _detek_tombol:
                 ; 0000 002F if (PINA.0==0 && (indeks==0 || indeks==2))//run timer
0000a8 e0a0      	LDI  R26,0
0000a9 99c8      	SBIC 0x19,0
0000aa e0a1      	LDI  R26,1
0000ab 30a0      	CPI  R26,LOW(0x0)
0000ac f439      	BRNE _0x7
0000ad e0e0      	LDI  R30,LOW(0)
0000ae 15e4      	CP   R30,R4
0000af f019      	BREQ _0x8
0000b0 e0e2      	LDI  R30,LOW(2)
0000b1 15e4      	CP   R30,R4
0000b2 f409      	BRNE _0x7
                 _0x8:
0000b3 c001      	RJMP _0xA
                 _0x7:
0000b4 c005      	RJMP _0x6
                 _0xA:
                 ; 0000 0030     {
                 ; 0000 0031     indeks=1;
0000b5 e0e1      	LDI  R30,LOW(1)
0000b6 2e4e      	MOV  R4,R30
                 ; 0000 0032     TIMSK=0x01;
0000b7 bfe9      	OUT  0x39,R30
                 ; 0000 0033     lcd_clear();
0000b8 940e 0339 	CALL _lcd_clear
                 ; 0000 0034     }
                 ; 0000 0035 
                 ; 0000 0036 if (PINA.1==0 && indeks==1)//stop timer
                 _0x6:
0000ba e0a0      	LDI  R26,0
0000bb 99c9      	SBIC 0x19,1
0000bc e0a1      	LDI  R26,1
0000bd 30a0      	CPI  R26,LOW(0x0)
0000be f419      	BRNE _0xC
0000bf e0e1      	LDI  R30,LOW(1)
0000c0 15e4      	CP   R30,R4
0000c1 f009      	BREQ _0xD
                 _0xC:
0000c2 c006      	RJMP _0xB
                 _0xD:
                 ; 0000 0037     {
                 ; 0000 0038     indeks=2;
0000c3 e0e2      	LDI  R30,LOW(2)
0000c4 2e4e      	MOV  R4,R30
                 ; 0000 0039     TIMSK=0x00;
0000c5 e0e0      	LDI  R30,LOW(0)
0000c6 bfe9      	OUT  0x39,R30
                 ; 0000 003A     lcd_clear();
0000c7 940e 0339 	CALL _lcd_clear
                 ; 0000 003B     }
                 ; 0000 003C 
                 ; 0000 003D if (PINA.2==0 && indeks==2)//reset timer
                 _0xB:
0000c9 e0a0      	LDI  R26,0
0000ca 99ca      	SBIC 0x19,2
0000cb e0a1      	LDI  R26,1
0000cc 30a0      	CPI  R26,LOW(0x0)
0000cd f419      	BRNE _0xF
0000ce e0e2      	LDI  R30,LOW(2)
0000cf 15e4      	CP   R30,R4
0000d0 f009      	BREQ _0x10
                 _0xF:
0000d1 c007      	RJMP _0xE
                 _0x10:
                 ; 0000 003E     {
                 ; 0000 003F     indeks=0;
0000d2 2444      	CLR  R4
                 ; 0000 0040     count=0;
0000d3 2455      	CLR  R5
                 ; 0000 0041     detik=0;
0000d4 2477      	CLR  R7
                 ; 0000 0042     menit=0;
0000d5 2466      	CLR  R6
                 ; 0000 0043     jam=0;
0000d6 2499      	CLR  R9
                 ; 0000 0044     lcd_clear();
0000d7 940e 0339 	CALL _lcd_clear
                 ; 0000 0045     }
                 ; 0000 0046 }
                 _0xE:
0000d9 9508      	RET
                 ;
                 ;void tampil_lcd()
                 ; 0000 0049 {
                 _tampil_lcd:
                 ; 0000 004A lcd_gotoxy(0,0);
0000da e0e0      	LDI  R30,LOW(0)
0000db 93ea      	ST   -Y,R30
0000dc 93ea      	ST   -Y,R30
0000dd 940e 0325 	CALL _lcd_gotoxy
                 ; 0000 004B sprintf(temp,"Timer %d:%d:%d:%d",jam,menit,detik,count);
0000df e6e0      	LDI  R30,LOW(_temp)
0000e0 e0f1      	LDI  R31,HIGH(_temp)
0000e1 93fa      	ST   -Y,R31
0000e2 93ea      	ST   -Y,R30
                +
0000e3 e6ec     +LDI R30 , LOW ( 2 * _0x0 + 0 )
0000e4 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + 0 )
                 	__POINTW1FN _0x0,0
0000e5 93fa      	ST   -Y,R31
0000e6 93ea      	ST   -Y,R30
0000e7 2de9      	MOV  R30,R9
0000e8 940e 03e3 	CALL SUBOPT_0x0
0000ea 2de6      	MOV  R30,R6
0000eb 940e 03e3 	CALL SUBOPT_0x0
0000ed 2de7      	MOV  R30,R7
0000ee 940e 03e3 	CALL SUBOPT_0x0
0000f0 2de5      	MOV  R30,R5
0000f1 940e 03e3 	CALL SUBOPT_0x0
0000f3 e180      	LDI  R24,16
0000f4 940e 02b9 	CALL _sprintf
0000f6 9664      	ADIW R28,20
                 ; 0000 004C lcd_puts(temp);//tampilkan waktu di LCD baris pertama
0000f7 e6e0      	LDI  R30,LOW(_temp)
0000f8 e0f1      	LDI  R31,HIGH(_temp)
0000f9 93fa      	ST   -Y,R31
0000fa 93ea      	ST   -Y,R30
0000fb 940e 0368 	CALL _lcd_puts
                 ; 0000 004D 
                 ; 0000 004E if (indeks==0)
0000fd 2044      	TST  R4
0000fe f431      	BRNE _0x11
                 ; 0000 004F     {
                 ; 0000 0050     lcd_gotoxy(0,1);
0000ff 940e 03e9 	CALL SUBOPT_0x1
                 ; 0000 0051     lcd_putsf("START");
                +
000101 e7ee     +LDI R30 , LOW ( 2 * _0x0 + 18 )
000102 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + 18 )
                 	__POINTW1FN _0x0,18
000103 940e 03ef 	CALL SUBOPT_0x2
                 ; 0000 0052     }
                 ; 0000 0053 
                 ; 0000 0054 if (indeks==1)
                 _0x11:
000105 e0e1      	LDI  R30,LOW(1)
000106 15e4      	CP   R30,R4
000107 f431      	BRNE _0x12
                 ; 0000 0055     {
                 ; 0000 0056     lcd_gotoxy(0,1);
000108 940e 03e9 	CALL SUBOPT_0x1
                 ; 0000 0057     lcd_putsf("STOP");
                +
00010a e8e4     +LDI R30 , LOW ( 2 * _0x0 + 24 )
00010b e0f0     +LDI R31 , HIGH ( 2 * _0x0 + 24 )
                 	__POINTW1FN _0x0,24
00010c 940e 03ef 	CALL SUBOPT_0x2
                 ; 0000 0058     }
                 ; 0000 0059 
                 ; 0000 005A if (indeks==2)
                 _0x12:
00010e e0e2      	LDI  R30,LOW(2)
00010f 15e4      	CP   R30,R4
000110 f431      	BRNE _0x13
                 ; 0000 005B     {
                 ; 0000 005C     lcd_gotoxy(0,1);
000111 940e 03e9 	CALL SUBOPT_0x1
                 ; 0000 005D     lcd_putsf("START      RESET");
                +
000113 e8e9     +LDI R30 , LOW ( 2 * _0x0 + 29 )
000114 e0f0     +LDI R31 , HIGH ( 2 * _0x0 + 29 )
                 	__POINTW1FN _0x0,29
000115 940e 03ef 	CALL SUBOPT_0x2
                 ; 0000 005E     }
                 ; 0000 005F }
                 _0x13:
000117 9508      	RET
                 ;
                 ;void main(void)
                 ; 0000 0062 {
                 _main:
                 ; 0000 0063 PORTA=0x0f;
000118 e0ef      	LDI  R30,LOW(15)
000119 bbeb      	OUT  0x1B,R30
                 ; 0000 0064 DDRA=0x00;
00011a e0e0      	LDI  R30,LOW(0)
00011b bbea      	OUT  0x1A,R30
                 ; 0000 0065 
                 ; 0000 0066 // Timer/Counter 0 initialization
                 ; 0000 0067 // Clock source: System Clock
                 ; 0000 0068 // Clock value: 11.719 kHz
                 ; 0000 0069 // Mode: Normal top=FFh
                 ; 0000 006A // OC0 output: Disconnected
                 ; 0000 006B TCCR0=0x05;
00011c e0e5      	LDI  R30,LOW(5)
00011d bfe3      	OUT  0x33,R30
                 ; 0000 006C TCNT0=0x8A;
00011e e8ea      	LDI  R30,LOW(138)
00011f bfe2      	OUT  0x32,R30
                 ; 0000 006D OCR0=0x00;
000120 e0e0      	LDI  R30,LOW(0)
000121 bfec      	OUT  0x3C,R30
                 ; 0000 006E 
                 ; 0000 006F // Timer(s)/Counter(s) Interrupt(s) initialization
                 ; 0000 0070 //TIMSK=0x00;
                 ; 0000 0071 
                 ; 0000 0072 // Analog Comparator initialization
                 ; 0000 0073 // Analog Comparator: Off
                 ; 0000 0074 // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0000 0075 ACSR=0x80;
000122 e8e0      	LDI  R30,LOW(128)
000123 b9e8      	OUT  0x8,R30
                 ; 0000 0076 SFIOR=0x00;
000124 e0e0      	LDI  R30,LOW(0)
000125 bfe0      	OUT  0x30,R30
                 ; 0000 0077 
                 ; 0000 0078 // LCD module initialization
                 ; 0000 0079 lcd_init(16);
000126 e1e0      	LDI  R30,LOW(16)
000127 93ea      	ST   -Y,R30
000128 940e 0396 	CALL _lcd_init
                 ; 0000 007A 
                 ; 0000 007B // Global enable interrupts
                 ; 0000 007C #asm("sei")
00012a 9478      	sei
                 ; 0000 007D 
                 ; 0000 007E while (1)
                 _0x14:
                 ; 0000 007F       {
                 ; 0000 0080       detek_tombol();
00012b df7c      	RCALL _detek_tombol
                 ; 0000 0081       hitung_waktu();
00012c df69      	RCALL _hitung_waktu
                 ; 0000 0082       tampil_lcd();
00012d dfac      	RCALL _tampil_lcd
                 ; 0000 0083       };
00012e cffc      	RJMP _0x14
                 ; 0000 0084 }
                 _0x17:
00012f cfff      	RJMP _0x17
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
000130 9b5d           sbis usr,udre
000131 cffe           rjmp _putchar
000132 81e8           ld   r30,y
000133 b9ec           out  udr,r30
000134 940c 03cc 	JMP  _0x20C0001
                 __put_G100:
000136 931a      	ST   -Y,R17
000137 930a      	ST   -Y,R16
000138 81ac      	LDD  R26,Y+4
000139 81bd      	LDD  R27,Y+4+1
00013a 940e 0439 	CALL __GETW1P
00013c 9730      	SBIW R30,0
00013d f0d9      	BREQ _0x2000010
00013e 81aa      	LDD  R26,Y+2
00013f 81bb      	LDD  R27,Y+2+1
000140 940e 0439 	CALL __GETW1P
000142 018f      	MOVW R16,R30
000143 9730      	SBIW R30,0
000144 f049      	BREQ _0x2000012
                +
000145 3002     +CPI R16 , LOW ( 2 )
000146 e0e0     +LDI R30 , HIGH ( 2 )
000147 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
000148 f078      	BRLO _0x2000013
000149 01f8      	MOVW R30,R16
00014a 9731      	SBIW R30,1
00014b 018f      	MOVW R16,R30
00014c 93ed      	ST   X+,R30
00014d 93fc      	ST   X,R31
                 _0x2000012:
00014e 81ac      	LDD  R26,Y+4
00014f 81bd      	LDD  R27,Y+4+1
000150 91ed      	LD   R30,X+
000151 91fd      	LD   R31,X+
000152 9631      	ADIW R30,1
000153 93fe      	ST   -X,R31
000154 93ee      	ST   -X,R30
000155 9731      	SBIW R30,1
000156 81ae      	LDD  R26,Y+6
000157 83a0      	STD  Z+0,R26
                 _0x2000013:
000158 c003      	RJMP _0x2000014
                 _0x2000010:
000159 81ee      	LDD  R30,Y+6
00015a 93ea      	ST   -Y,R30
00015b dfd4      	RCALL _putchar
                 _0x2000014:
00015c 8119      	LDD  R17,Y+1
00015d 8108      	LDD  R16,Y+0
00015e 9627      	ADIW R28,7
00015f 9508      	RET
                 __print_G100:
000160 9726      	SBIW R28,6
000161 940e 044d 	CALL __SAVELOCR6
000163 e010      	LDI  R17,0
                 _0x2000015:
000164 89ea      	LDD  R30,Y+18
000165 89fb      	LDD  R31,Y+18+1
000166 9631      	ADIW R30,1
000167 8bea      	STD  Y+18,R30
000168 8bfb      	STD  Y+18+1,R31
000169 9731      	SBIW R30,1
00016a 91e4      	LPM  R30,Z
00016b 2f2e      	MOV  R18,R30
00016c 30e0      	CPI  R30,0
00016d f411      	BRNE PC+3
00016e 940c 02b5 	JMP _0x2000017
000170 2fe1      	MOV  R30,R17
000171 e0f0      	LDI  R31,0
000172 9730      	SBIW R30,0
000173 f439      	BRNE _0x200001B
000174 3225      	CPI  R18,37
000175 f411      	BRNE _0x200001C
000176 e011      	LDI  R17,LOW(1)
000177 c002      	RJMP _0x200001D
                 _0x200001C:
000178 940e 03f3 	CALL SUBOPT_0x3
                 _0x200001D:
00017a c139      	RJMP _0x200001A
                 _0x200001B:
00017b 30e1      	CPI  R30,LOW(0x1)
00017c e0a0      	LDI  R26,HIGH(0x1)
00017d 07fa      	CPC  R31,R26
00017e f4a9      	BRNE _0x200001E
00017f 3225      	CPI  R18,37
000180 f419      	BRNE _0x200001F
000181 940e 03f3 	CALL SUBOPT_0x3
000183 c12f      	RJMP _0x20000BC
                 _0x200001F:
000184 e012      	LDI  R17,LOW(2)
000185 e040      	LDI  R20,LOW(0)
000186 e000      	LDI  R16,LOW(0)
000187 322d      	CPI  R18,45
000188 f411      	BRNE _0x2000020
000189 e001      	LDI  R16,LOW(1)
00018a c129      	RJMP _0x200001A
                 _0x2000020:
00018b 322b      	CPI  R18,43
00018c f411      	BRNE _0x2000021
00018d e24b      	LDI  R20,LOW(43)
00018e c125      	RJMP _0x200001A
                 _0x2000021:
00018f 3220      	CPI  R18,32
000190 f411      	BRNE _0x2000022
000191 e240      	LDI  R20,LOW(32)
000192 c121      	RJMP _0x200001A
                 _0x2000022:
000193 c004      	RJMP _0x2000023
                 _0x200001E:
000194 30e2      	CPI  R30,LOW(0x2)
000195 e0a0      	LDI  R26,HIGH(0x2)
000196 07fa      	CPC  R31,R26
000197 f439      	BRNE _0x2000024
                 _0x2000023:
000198 e050      	LDI  R21,LOW(0)
000199 e013      	LDI  R17,LOW(3)
00019a 3320      	CPI  R18,48
00019b f411      	BRNE _0x2000025
00019c 6800      	ORI  R16,LOW(128)
00019d c116      	RJMP _0x200001A
                 _0x2000025:
00019e c006      	RJMP _0x2000026
                 _0x2000024:
00019f 30e3      	CPI  R30,LOW(0x3)
0001a0 e0a0      	LDI  R26,HIGH(0x3)
0001a1 07fa      	CPC  R31,R26
0001a2 f011      	BREQ PC+3
0001a3 940c 02b4 	JMP _0x200001A
                 _0x2000026:
0001a5 3320      	CPI  R18,48
0001a6 f010      	BRLO _0x2000029
0001a7 332a      	CPI  R18,58
0001a8 f008      	BRLO _0x200002A
                 _0x2000029:
0001a9 c015      	RJMP _0x2000028
                 _0x200002A:
0001aa 2fa5      	MOV  R26,R21
0001ab e0b0      	LDI  R27,0
0001ac e0ea      	LDI  R30,LOW(10)
0001ad e0f0      	LDI  R31,HIGH(10)
0001ae 02ea      	MULS R30,R26
0001af 01f0      	MOVW R30,R0
0001b0 2f5e      	MOV  R21,R30
0001b1 2f65      	MOV  R22,R21
0001b2 2777      	CLR  R23
0001b3 2fa2      	MOV  R26,R18
0001b4 e0b0      	LDI  R27,0
0001b5 e3e0      	LDI  R30,LOW(48)
0001b6 e0f0      	LDI  R31,HIGH(48)
0001b7 940e 0446 	CALL __SWAPW12
0001b9 1bea      	SUB  R30,R26
0001ba 0bfb      	SBC  R31,R27
0001bb 01db      	MOVW R26,R22
0001bc 0fea      	ADD  R30,R26
0001bd 2f5e      	MOV  R21,R30
0001be c0f5      	RJMP _0x200001A
                 _0x2000028:
0001bf 940e 03fe 	CALL SUBOPT_0x4
0001c1 36e3      	CPI  R30,LOW(0x63)
0001c2 e0a0      	LDI  R26,HIGH(0x63)
0001c3 07fa      	CPC  R31,R26
0001c4 f449      	BRNE _0x200002E
0001c5 940e 0401 	CALL SUBOPT_0x5
0001c7 89e8      	LDD  R30,Y+16
0001c8 89f9      	LDD  R31,Y+16+1
0001c9 81a4      	LDD  R26,Z+4
0001ca 93aa      	ST   -Y,R26
0001cb 940e 0407 	CALL SUBOPT_0x6
0001cd c0e5      	RJMP _0x200002F
                 _0x200002E:
0001ce 37e3      	CPI  R30,LOW(0x73)
0001cf e0a0      	LDI  R26,HIGH(0x73)
0001d0 07fa      	CPC  R31,R26
0001d1 f441      	BRNE _0x2000031
0001d2 940e 0401 	CALL SUBOPT_0x5
0001d4 940e 0411 	CALL SUBOPT_0x7
0001d6 940e 03ce 	CALL _strlen
0001d8 2f1e      	MOV  R17,R30
0001d9 c00c      	RJMP _0x2000032
                 _0x2000031:
0001da 37e0      	CPI  R30,LOW(0x70)
0001db e0a0      	LDI  R26,HIGH(0x70)
0001dc 07fa      	CPC  R31,R26
0001dd f461      	BRNE _0x2000034
0001de 940e 0401 	CALL SUBOPT_0x5
0001e0 940e 0411 	CALL SUBOPT_0x7
0001e2 940e 03d8 	CALL _strlenf
0001e4 2f1e      	MOV  R17,R30
0001e5 6008      	ORI  R16,LOW(8)
                 _0x2000032:
0001e6 6002      	ORI  R16,LOW(2)
0001e7 770f      	ANDI R16,LOW(127)
0001e8 e030      	LDI  R19,LOW(0)
0001e9 c03f      	RJMP _0x2000035
                 _0x2000034:
0001ea 36e4      	CPI  R30,LOW(0x64)
0001eb e0a0      	LDI  R26,HIGH(0x64)
0001ec 07fa      	CPC  R31,R26
0001ed f021      	BREQ _0x2000038
0001ee 36e9      	CPI  R30,LOW(0x69)
0001ef e0a0      	LDI  R26,HIGH(0x69)
0001f0 07fa      	CPC  R31,R26
0001f1 f411      	BRNE _0x2000039
                 _0x2000038:
0001f2 6004      	ORI  R16,LOW(4)
0001f3 c004      	RJMP _0x200003A
                 _0x2000039:
0001f4 37e5      	CPI  R30,LOW(0x75)
0001f5 e0a0      	LDI  R26,HIGH(0x75)
0001f6 07fa      	CPC  R31,R26
0001f7 f431      	BRNE _0x200003B
                 _0x200003A:
0001f8 e5e4      	LDI  R30,LOW(_tbl10_G100*2)
0001f9 e0f0      	LDI  R31,HIGH(_tbl10_G100*2)
0001fa 83ee      	STD  Y+6,R30
0001fb 83ff      	STD  Y+6+1,R31
0001fc e015      	LDI  R17,LOW(5)
0001fd c011      	RJMP _0x200003C
                 _0x200003B:
0001fe 35e8      	CPI  R30,LOW(0x58)
0001ff e0a0      	LDI  R26,HIGH(0x58)
000200 07fa      	CPC  R31,R26
000201 f411      	BRNE _0x200003E
000202 6008      	ORI  R16,LOW(8)
000203 c006      	RJMP _0x200003F
                 _0x200003E:
000204 37e8      	CPI  R30,LOW(0x78)
000205 e0a0      	LDI  R26,HIGH(0x78)
000206 07fa      	CPC  R31,R26
000207 f011      	BREQ PC+3
000208 940c 02b3 	JMP _0x2000070
                 _0x200003F:
00020a e5ee      	LDI  R30,LOW(_tbl16_G100*2)
00020b e0f0      	LDI  R31,HIGH(_tbl16_G100*2)
00020c 83ee      	STD  Y+6,R30
00020d 83ff      	STD  Y+6+1,R31
00020e e014      	LDI  R17,LOW(4)
                 _0x200003C:
00020f ff02      	SBRS R16,2
000210 c014      	RJMP _0x2000041
000211 940e 0401 	CALL SUBOPT_0x5
000213 940e 041b 	CALL SUBOPT_0x8
000215 85ab      	LDD  R26,Y+11
000216 23aa      	TST  R26
000217 f43a      	BRPL _0x2000042
000218 85ea      	LDD  R30,Y+10
000219 85fb      	LDD  R31,Y+10+1
00021a 940e 0435 	CALL __ANEGW1
00021c 87ea      	STD  Y+10,R30
00021d 87fb      	STD  Y+10+1,R31
00021e e24d      	LDI  R20,LOW(45)
                 _0x2000042:
00021f 3040      	CPI  R20,0
000220 f011      	BREQ _0x2000043
000221 5f1f      	SUBI R17,-LOW(1)
000222 c001      	RJMP _0x2000044
                 _0x2000043:
000223 7f0b      	ANDI R16,LOW(251)
                 _0x2000044:
000224 c004      	RJMP _0x2000045
                 _0x2000041:
000225 940e 0401 	CALL SUBOPT_0x5
000227 940e 041b 	CALL SUBOPT_0x8
                 _0x2000045:
                 _0x2000035:
000229 fd00      	SBRC R16,0
00022a c011      	RJMP _0x2000046
                 _0x2000047:
00022b 1715      	CP   R17,R21
00022c f478      	BRSH _0x2000049
00022d ff07      	SBRS R16,7
00022e c008      	RJMP _0x200004A
00022f ff02      	SBRS R16,2
000230 c004      	RJMP _0x200004B
000231 7f0b      	ANDI R16,LOW(251)
000232 2f24      	MOV  R18,R20
000233 5011      	SUBI R17,LOW(1)
000234 c001      	RJMP _0x200004C
                 _0x200004B:
000235 e320      	LDI  R18,LOW(48)
                 _0x200004C:
000236 c001      	RJMP _0x200004D
                 _0x200004A:
000237 e220      	LDI  R18,LOW(32)
                 _0x200004D:
000238 940e 03f3 	CALL SUBOPT_0x3
00023a 5051      	SUBI R21,LOW(1)
00023b cfef      	RJMP _0x2000047
                 _0x2000049:
                 _0x2000046:
00023c 2f31      	MOV  R19,R17
00023d ff01      	SBRS R16,1
00023e c01a      	RJMP _0x200004E
                 _0x200004F:
00023f 3030      	CPI  R19,0
000240 f0b9      	BREQ _0x2000051
000241 ff03      	SBRS R16,3
000242 c008      	RJMP _0x2000052
000243 81ee      	LDD  R30,Y+6
000244 81ff      	LDD  R31,Y+6+1
000245 9631      	ADIW R30,1
000246 83ee      	STD  Y+6,R30
000247 83ff      	STD  Y+6+1,R31
000248 9731      	SBIW R30,1
000249 91e4      	LPM  R30,Z
00024a c005      	RJMP _0x20000BD
                 _0x2000052:
00024b 81ae      	LDD  R26,Y+6
00024c 81bf      	LDD  R27,Y+6+1
00024d 91ed      	LD   R30,X+
00024e 83ae      	STD  Y+6,R26
00024f 83bf      	STD  Y+6+1,R27
                 _0x20000BD:
000250 93ea      	ST   -Y,R30
000251 940e 0407 	CALL SUBOPT_0x6
000253 3050      	CPI  R21,0
000254 f009      	BREQ _0x2000054
000255 5051      	SUBI R21,LOW(1)
                 _0x2000054:
000256 5031      	SUBI R19,LOW(1)
000257 cfe7      	RJMP _0x200004F
                 _0x2000051:
000258 c050      	RJMP _0x2000055
                 _0x200004E:
                 _0x2000057:
000259 e320      	LDI  R18,LOW(48)
00025a 81ee      	LDD  R30,Y+6
00025b 81ff      	LDD  R31,Y+6+1
00025c 940e 043d 	CALL __GETW1PF
00025e 87e8      	STD  Y+8,R30
00025f 87f9      	STD  Y+8+1,R31
000260 81ee      	LDD  R30,Y+6
000261 81ff      	LDD  R31,Y+6+1
000262 9632      	ADIW R30,2
000263 83ee      	STD  Y+6,R30
000264 83ff      	STD  Y+6+1,R31
                 _0x2000059:
000265 85e8      	LDD  R30,Y+8
000266 85f9      	LDD  R31,Y+8+1
000267 85aa      	LDD  R26,Y+10
000268 85bb      	LDD  R27,Y+10+1
000269 17ae      	CP   R26,R30
00026a 07bf      	CPC  R27,R31
00026b f050      	BRLO _0x200005B
00026c 5f2f      	SUBI R18,-LOW(1)
00026d 85a8      	LDD  R26,Y+8
00026e 85b9      	LDD  R27,Y+8+1
00026f 85ea      	LDD  R30,Y+10
000270 85fb      	LDD  R31,Y+10+1
000271 1bea      	SUB  R30,R26
000272 0bfb      	SBC  R31,R27
000273 87ea      	STD  Y+10,R30
000274 87fb      	STD  Y+10+1,R31
000275 cfef      	RJMP _0x2000059
                 _0x200005B:
000276 332a      	CPI  R18,58
000277 f050      	BRLO _0x200005C
000278 ff03      	SBRS R16,3
000279 c004      	RJMP _0x200005D
00027a 940e 03fe 	CALL SUBOPT_0x4
00027c 9637      	ADIW R30,7
00027d c003      	RJMP _0x20000BE
                 _0x200005D:
00027e 940e 03fe 	CALL SUBOPT_0x4
000280 96b7      	ADIW R30,39
                 _0x20000BE:
000281 2f2e      	MOV  R18,R30
                 _0x200005C:
000282 fd04      	SBRC R16,4
000283 c01a      	RJMP _0x2000060
000284 3321      	CPI  R18,49
000285 f420      	BRSH _0x2000062
000286 85a8      	LDD  R26,Y+8
000287 85b9      	LDD  R27,Y+8+1
000288 9711      	SBIW R26,1
000289 f409      	BRNE _0x2000061
                 _0x2000062:
00028a c009      	RJMP _0x20000BF
                 _0x2000061:
00028b 1753      	CP   R21,R19
00028c f010      	BRLO _0x2000066
00028d ff00      	SBRS R16,0
00028e c001      	RJMP _0x2000067
                 _0x2000066:
00028f c013      	RJMP _0x2000065
                 _0x2000067:
000290 e220      	LDI  R18,LOW(32)
000291 ff07      	SBRS R16,7
000292 c00b      	RJMP _0x2000068
000293 e320      	LDI  R18,LOW(48)
                 _0x20000BF:
000294 6100      	ORI  R16,LOW(16)
000295 ff02      	SBRS R16,2
000296 c007      	RJMP _0x2000069
000297 7f0b      	ANDI R16,LOW(251)
000298 934a      	ST   -Y,R20
000299 940e 0407 	CALL SUBOPT_0x6
00029b 3050      	CPI  R21,0
00029c f009      	BREQ _0x200006A
00029d 5051      	SUBI R21,LOW(1)
                 _0x200006A:
                 _0x2000069:
                 _0x2000068:
                 _0x2000060:
00029e 940e 03f3 	CALL SUBOPT_0x3
0002a0 3050      	CPI  R21,0
0002a1 f009      	BREQ _0x200006B
0002a2 5051      	SUBI R21,LOW(1)
                 _0x200006B:
                 _0x2000065:
0002a3 5031      	SUBI R19,LOW(1)
0002a4 85a8      	LDD  R26,Y+8
0002a5 85b9      	LDD  R27,Y+8+1
0002a6 9712      	SBIW R26,2
0002a7 f008      	BRLO _0x2000058
0002a8 cfb0      	RJMP _0x2000057
                 _0x2000058:
                 _0x2000055:
0002a9 ff00      	SBRS R16,0
0002aa c008      	RJMP _0x200006C
                 _0x200006D:
0002ab 3050      	CPI  R21,0
0002ac f031      	BREQ _0x200006F
0002ad 5051      	SUBI R21,LOW(1)
0002ae e2e0      	LDI  R30,LOW(32)
0002af 93ea      	ST   -Y,R30
0002b0 940e 0407 	CALL SUBOPT_0x6
0002b2 cff8      	RJMP _0x200006D
                 _0x200006F:
                 _0x200006C:
                 _0x2000070:
                 _0x200002F:
                 _0x20000BC:
0002b3 e010      	LDI  R17,LOW(0)
                 _0x200001A:
0002b4 ceaf      	RJMP _0x2000015
                 _0x2000017:
0002b5 940e 0454 	CALL __LOADLOCR6
0002b7 9664      	ADIW R28,20
0002b8 9508      	RET
                 _sprintf:
0002b9 92ff      	PUSH R15
0002ba 2ef8      	MOV  R15,R24
0002bb 9722      	SBIW R28,2
0002bc 931a      	ST   -Y,R17
0002bd 930a      	ST   -Y,R16
0002be 01de      	MOVW R26,R28
0002bf 940e 0431 	CALL __ADDW2R15
0002c1 018d      	MOVW R16,R26
0002c2 01de      	MOVW R26,R28
0002c3 9616      	ADIW R26,6
0002c4 940e 0431 	CALL __ADDW2R15
0002c6 940e 0439 	CALL __GETW1P
0002c8 83ea      	STD  Y+2,R30
0002c9 83fb      	STD  Y+2+1,R31
0002ca 01de      	MOVW R26,R28
0002cb 9614      	ADIW R26,4
0002cc 940e 0431 	CALL __ADDW2R15
0002ce 940e 0439 	CALL __GETW1P
0002d0 93fa      	ST   -Y,R31
0002d1 93ea      	ST   -Y,R30
0002d2 931a      	ST   -Y,R17
0002d3 930a      	ST   -Y,R16
0002d4 01fe      	MOVW R30,R28
0002d5 9636      	ADIW R30,6
0002d6 93fa      	ST   -Y,R31
0002d7 93ea      	ST   -Y,R30
0002d8 e0e0      	LDI  R30,LOW(0)
0002d9 e0f0      	LDI  R31,HIGH(0)
0002da 93fa      	ST   -Y,R31
0002db 93ea      	ST   -Y,R30
0002dc de83      	RCALL __print_G100
0002dd 81aa      	LDD  R26,Y+2
0002de 81bb      	LDD  R27,Y+2+1
0002df e0e0      	LDI  R30,LOW(0)
0002e0 93ec      	ST   X,R30
0002e1 8119      	LDD  R17,Y+1
0002e2 8108      	LDD  R16,Y+0
0002e3 9624      	ADIW R28,4
0002e4 90ff      	POP  R15
0002e5 9508      	RET
                 
                 	.CSEG
                 
                 	.DSEG
                 
                 	.CSEG
                     .equ __lcd_direction=__lcd_port-1
                     .equ __lcd_pin=__lcd_port-2
                     .equ __lcd_rs=0
                     .equ __lcd_rd=1
                     .equ __lcd_enable=2
                     .equ __lcd_busy_flag=7
                 
                 	.DSEG
                 
                 	.CSEG
                 __lcd_delay_G102:
0002e6 e0ff          ldi   r31,15
                 __lcd_delay0:
0002e7 95fa          dec   r31
0002e8 f7f1          brne  __lcd_delay0
0002e9 9508      	RET
                 __lcd_ready:
0002ea b3a4          in    r26,__lcd_direction
0002eb 70af          andi  r26,0xf                 ;set as input
0002ec bba4          out   __lcd_direction,r26
0002ed 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0002ee 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
                 __lcd_busy:
0002ef dff6      	RCALL __lcd_delay_G102
0002f0 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002f1 dff4      	RCALL __lcd_delay_G102
0002f2 b3a3          in    r26,__lcd_pin
0002f3 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002f4 dff1      	RCALL __lcd_delay_G102
0002f5 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002f6 dfef      	RCALL __lcd_delay_G102
0002f7 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
0002f8 fda7          sbrc  r26,__lcd_busy_flag
0002f9 cff5          rjmp  __lcd_busy
0002fa 9508      	RET
                 __lcd_write_nibble_G102:
0002fb 7fa0          andi  r26,0xf0
0002fc 2bab          or    r26,r27
0002fd bba5          out   __lcd_port,r26          ;write
0002fe 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
0002ff 940e 02e6 	CALL __lcd_delay_G102
000301 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000302 940e 02e6 	CALL __lcd_delay_G102
000304 9508      	RET
                 __lcd_write_data:
000305 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
000306 b3a4          in    r26,__lcd_direction
000307 6fa7          ori   r26,0xf0 | (1<<__lcd_rs) | (1<<__lcd_rd) | (1<<__lcd_enable) ;set as output
000308 bba4          out   __lcd_direction,r26
000309 b3b5          in    r27,__lcd_port
00030a 70bf          andi  r27,0xf
00030b 81a8          ld    r26,y
00030c dfee      	RCALL __lcd_write_nibble_G102
00030d 81a8          ld    r26,y
00030e 95a2          swap  r26
00030f dfeb      	RCALL __lcd_write_nibble_G102
000310 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000311 940c 03cc 	JMP  _0x20C0001
                 __lcd_read_nibble_G102:
000313 9aaa          sbi   __lcd_port,__lcd_enable ;EN=1
000314 940e 02e6 	CALL __lcd_delay_G102
000316 b3e3          in    r30,__lcd_pin           ;read
000317 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000318 940e 02e6 	CALL __lcd_delay_G102
00031a 7fe0          andi  r30,0xf0
00031b 9508      	RET
                 _lcd_read_byte0_G102:
00031c 940e 02e6 	CALL __lcd_delay_G102
00031e dff4      	RCALL __lcd_read_nibble_G102
00031f 2fae          mov   r26,r30
000320 dff2      	RCALL __lcd_read_nibble_G102
000321 98a9          cbi   __lcd_port,__lcd_rd     ;RD=0
000322 95e2          swap  r30
000323 2bea          or    r30,r26
000324 9508      	RET
                 _lcd_gotoxy:
000325 940e 02ea 	CALL __lcd_ready
000327 940e 0423 	CALL SUBOPT_0x9
000329 58ec      	SUBI R30,LOW(-__base_y_G102)
00032a 4ffe      	SBCI R31,HIGH(-__base_y_G102)
00032b 81e0      	LD   R30,Z
00032c e0f0      	LDI  R31,0
00032d 01df      	MOVW R26,R30
00032e 81e9      	LDD  R30,Y+1
00032f e0f0      	LDI  R31,0
000330 0fea      	ADD  R30,R26
000331 1ffb      	ADC  R31,R27
000332 93ea      	ST   -Y,R30
000333 940e 0305 	CALL __lcd_write_data
000335 8089      	LDD  R8,Y+1
000336 80b8      	LDD  R11,Y+0
000337 9622      	ADIW R28,2
000338 9508      	RET
                 _lcd_clear:
000339 940e 02ea 	CALL __lcd_ready
00033b e0e2      	LDI  R30,LOW(2)
00033c 93ea      	ST   -Y,R30
00033d 940e 0305 	CALL __lcd_write_data
00033f 940e 02ea 	CALL __lcd_ready
000341 e0ec      	LDI  R30,LOW(12)
000342 93ea      	ST   -Y,R30
000343 940e 0305 	CALL __lcd_write_data
000345 940e 02ea 	CALL __lcd_ready
000347 e0e1      	LDI  R30,LOW(1)
000348 93ea      	ST   -Y,R30
000349 940e 0305 	CALL __lcd_write_data
00034b e0e0      	LDI  R30,LOW(0)
00034c 2ebe      	MOV  R11,R30
00034d 2e8e      	MOV  R8,R30
00034e 9508      	RET
                 _lcd_putchar:
00034f 93ef          push r30
000350 93ff          push r31
000351 81a8          ld   r26,y
000352 9468          set
000353 30aa          cpi  r26,10
000354 f019          breq __lcd_putchar1
000355 94e8          clt
000356 148a      	CP   R8,R10
000357 f030      	BRLO _0x2040004
                 	__lcd_putchar1:
000358 94b3      	INC  R11
000359 e0e0      	LDI  R30,LOW(0)
00035a 93ea      	ST   -Y,R30
00035b 92ba      	ST   -Y,R11
00035c dfc8      	RCALL _lcd_gotoxy
00035d f036      	brts __lcd_putchar0
                 _0x2040004:
00035e 9483      	INC  R8
00035f df8a          rcall __lcd_ready
000360 9aa8          sbi  __lcd_port,__lcd_rs ;RS=1
000361 81a8          ld   r26,y
000362 93aa          st   -y,r26
000363 dfa1          rcall __lcd_write_data
                 __lcd_putchar0:
000364 91ff          pop  r31
000365 91ef          pop  r30
000366 940c 03cc 	JMP  _0x20C0001
                 _lcd_puts:
000368 931a      	ST   -Y,R17
                 _0x2040005:
000369 81a9      	LDD  R26,Y+1
00036a 81ba      	LDD  R27,Y+1+1
00036b 91ed      	LD   R30,X+
00036c 83a9      	STD  Y+1,R26
00036d 83ba      	STD  Y+1+1,R27
00036e 2f1e      	MOV  R17,R30
00036f 30e0      	CPI  R30,0
000370 f019      	BREQ _0x2040007
000371 931a      	ST   -Y,R17
000372 dfdc      	RCALL _lcd_putchar
000373 cff5      	RJMP _0x2040005
                 _0x2040007:
000374 c00e      	RJMP _0x20C0002
                 _lcd_putsf:
000375 931a      	ST   -Y,R17
                 _0x2040008:
000376 81e9      	LDD  R30,Y+1
000377 81fa      	LDD  R31,Y+1+1
000378 9631      	ADIW R30,1
000379 83e9      	STD  Y+1,R30
00037a 83fa      	STD  Y+1+1,R31
00037b 9731      	SBIW R30,1
00037c 91e4      	LPM  R30,Z
00037d 2f1e      	MOV  R17,R30
00037e 30e0      	CPI  R30,0
00037f f019      	BREQ _0x204000A
000380 931a      	ST   -Y,R17
000381 dfcd      	RCALL _lcd_putchar
000382 cff3      	RJMP _0x2040008
                 _0x204000A:
                 _0x20C0002:
000383 8118      	LDD  R17,Y+0
000384 9623      	ADIW R28,3
000385 9508      	RET
                 __long_delay_G102:
000386 27aa          clr   r26
000387 27bb          clr   r27
                 __long_delay0:
000388 9711          sbiw  r26,1         ;2 cycles
000389 f7f1          brne  __long_delay0 ;2 cycles
00038a 9508      	RET
                 __lcd_init_write_G102:
00038b 98a9          cbi  __lcd_port,__lcd_rd 	  ;RD=0
00038c b3a4          in    r26,__lcd_direction
00038d 6fa7          ori   r26,0xf7                ;set as output
00038e bba4          out   __lcd_direction,r26
00038f b3b5          in    r27,__lcd_port
000390 70bf          andi  r27,0xf
000391 81a8          ld    r26,y
000392 940e 02fb 	CALL __lcd_write_nibble_G102
000394 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
000395 c036      	RJMP _0x20C0001
                 _lcd_init:
000396 98aa          cbi   __lcd_port,__lcd_enable ;EN=0
000397 98a8          cbi   __lcd_port,__lcd_rs     ;RS=0
000398 80a8      	LDD  R10,Y+0
000399 940e 0423 	CALL SUBOPT_0x9
00039b 58e0      	SUBI R30,LOW(-128)
00039c 4fff      	SBCI R31,HIGH(-128)
                +
00039d 93e0 0176+STS __base_y_G102 + 2 , R30
                 	__PUTB1MN __base_y_G102,2
00039f 940e 0423 	CALL SUBOPT_0x9
0003a1 54e0      	SUBI R30,LOW(-192)
0003a2 4fff      	SBCI R31,HIGH(-192)
                +
0003a3 93e0 0177+STS __base_y_G102 + 3 , R30
                 	__PUTB1MN __base_y_G102,3
0003a5 940e 0426 	CALL SUBOPT_0xA
0003a7 940e 0426 	CALL SUBOPT_0xA
0003a9 940e 0426 	CALL SUBOPT_0xA
0003ab dfda      	RCALL __long_delay_G102
0003ac e2e0      	LDI  R30,LOW(32)
0003ad 93ea      	ST   -Y,R30
0003ae dfdc      	RCALL __lcd_init_write_G102
0003af dfd6      	RCALL __long_delay_G102
0003b0 e2e8      	LDI  R30,LOW(40)
0003b1 940e 042c 	CALL SUBOPT_0xB
0003b3 e0e4      	LDI  R30,LOW(4)
0003b4 940e 042c 	CALL SUBOPT_0xB
0003b6 e8e5      	LDI  R30,LOW(133)
0003b7 940e 042c 	CALL SUBOPT_0xB
0003b9 b3a4          in    r26,__lcd_direction
0003ba 70af          andi  r26,0xf                 ;set as input
0003bb bba4          out   __lcd_direction,r26
0003bc 9aa9          sbi   __lcd_port,__lcd_rd     ;RD=1
0003bd 940e 031c 	CALL _lcd_read_byte0_G102
0003bf 30e5      	CPI  R30,LOW(0x5)
0003c0 f011      	BREQ _0x204000B
0003c1 e0e0      	LDI  R30,LOW(0)
0003c2 c009      	RJMP _0x20C0001
                 _0x204000B:
0003c3 940e 02ea 	CALL __lcd_ready
0003c5 e0e6      	LDI  R30,LOW(6)
0003c6 93ea      	ST   -Y,R30
0003c7 940e 0305 	CALL __lcd_write_data
0003c9 940e 0339 	CALL _lcd_clear
0003cb e0e1      	LDI  R30,LOW(1)
                 _0x20C0001:
0003cc 9621      	ADIW R28,1
0003cd 9508      	RET
                 
                 	.CSEG
                 
                 	.CSEG
                 _strlen:
0003ce 91a9          ld   r26,y+
0003cf 91b9          ld   r27,y+
0003d0 27ee          clr  r30
0003d1 27ff          clr  r31
                 strlen0:
0003d2 916d          ld   r22,x+
0003d3 2366          tst  r22
0003d4 f011          breq strlen1
0003d5 9631          adiw r30,1
0003d6 cffb          rjmp strlen0
                 strlen1:
0003d7 9508          ret
                 _strlenf:
0003d8 27aa          clr  r26
0003d9 27bb          clr  r27
0003da 91e9          ld   r30,y+
0003db 91f9          ld   r31,y+
                 strlenf0:
0003dc 9005          lpm  r0,z+
0003dd 2000          tst  r0
0003de f011          breq strlenf1
0003df 9611          adiw r26,1
0003e0 cffb          rjmp strlenf0
                 strlenf1:
0003e1 01fd          movw r30,r26
0003e2 9508          ret
                 
                 	.CSEG
                 
                 	.DSEG
                 _temp:
000160           	.BYTE 0x10
                 __seed_G101:
000170           	.BYTE 0x4
                 __base_y_G102:
000174           	.BYTE 0x4
                 _p_S1040024:
000178           	.BYTE 0x2
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x0:
0003e3 27ff      	CLR  R31
0003e4 2766      	CLR  R22
0003e5 2777      	CLR  R23
0003e6 940e 0441 	CALL __PUTPARD1
0003e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1:
0003e9 e0e0      	LDI  R30,LOW(0)
0003ea 93ea      	ST   -Y,R30
0003eb e0e1      	LDI  R30,LOW(1)
0003ec 93ea      	ST   -Y,R30
0003ed 940c 0325 	JMP  _lcd_gotoxy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2:
0003ef 93fa      	ST   -Y,R31
0003f0 93ea      	ST   -Y,R30
0003f1 940c 0375 	JMP  _lcd_putsf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x3:
0003f3 932a      	ST   -Y,R18
0003f4 85ef      	LDD  R30,Y+15
0003f5 89f8      	LDD  R31,Y+15+1
0003f6 93fa      	ST   -Y,R31
0003f7 93ea      	ST   -Y,R30
0003f8 01fe      	MOVW R30,R28
0003f9 963f      	ADIW R30,15
0003fa 93fa      	ST   -Y,R31
0003fb 93ea      	ST   -Y,R30
0003fc 940c 0136 	JMP  __put_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4:
0003fe 2fe2      	MOV  R30,R18
0003ff e0f0      	LDI  R31,0
000400 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x5:
000401 89e8      	LDD  R30,Y+16
000402 89f9      	LDD  R31,Y+16+1
000403 9734      	SBIW R30,4
000404 8be8      	STD  Y+16,R30
000405 8bf9      	STD  Y+16+1,R31
000406 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6:
000407 85ef      	LDD  R30,Y+15
000408 89f8      	LDD  R31,Y+15+1
000409 93fa      	ST   -Y,R31
00040a 93ea      	ST   -Y,R30
00040b 01fe      	MOVW R30,R28
00040c 963f      	ADIW R30,15
00040d 93fa      	ST   -Y,R31
00040e 93ea      	ST   -Y,R30
00040f 940c 0136 	JMP  __put_G100
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
000411 89a8      	LDD  R26,Y+16
000412 89b9      	LDD  R27,Y+16+1
000413 9614      	ADIW R26,4
000414 940e 0439 	CALL __GETW1P
000416 83ee      	STD  Y+6,R30
000417 83ff      	STD  Y+6+1,R31
000418 93fa      	ST   -Y,R31
000419 93ea      	ST   -Y,R30
00041a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x8:
00041b 89a8      	LDD  R26,Y+16
00041c 89b9      	LDD  R27,Y+16+1
00041d 9614      	ADIW R26,4
00041e 940e 0439 	CALL __GETW1P
000420 87ea      	STD  Y+10,R30
000421 87fb      	STD  Y+10+1,R31
000422 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
000423 81e8      	LD   R30,Y
000424 e0f0      	LDI  R31,0
000425 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA:
000426 940e 0386 	CALL __long_delay_G102
000428 e3e0      	LDI  R30,LOW(48)
000429 93ea      	ST   -Y,R30
00042a 940c 038b 	JMP  __lcd_init_write_G102
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB:
00042c 93ea      	ST   -Y,R30
00042d 940e 0305 	CALL __lcd_write_data
00042f 940c 0386 	JMP  __long_delay_G102
                 
                 
                 	.CSEG
                 __ADDW2R15:
000431 2400      	CLR  R0
000432 0daf      	ADD  R26,R15
000433 1db0      	ADC  R27,R0
000434 9508      	RET
                 
                 __ANEGW1:
000435 95f1      	NEG  R31
000436 95e1      	NEG  R30
000437 40f0      	SBCI R31,0
000438 9508      	RET
                 
                 __GETW1P:
000439 91ed      	LD   R30,X+
00043a 91fc      	LD   R31,X
00043b 9711      	SBIW R26,1
00043c 9508      	RET
                 
                 __GETW1PF:
00043d 9005      	LPM  R0,Z+
00043e 91f4      	LPM  R31,Z
00043f 2de0      	MOV  R30,R0
000440 9508      	RET
                 
                 __PUTPARD1:
000441 937a      	ST   -Y,R23
000442 936a      	ST   -Y,R22
000443 93fa      	ST   -Y,R31
000444 93ea      	ST   -Y,R30
000445 9508      	RET
                 
                 __SWAPW12:
000446 2e1b      	MOV  R1,R27
000447 2fbf      	MOV  R27,R31
000448 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
000449 2e1a      	MOV  R1,R26
00044a 2fae      	MOV  R26,R30
00044b 2de1      	MOV  R30,R1
00044c 9508      	RET
                 
                 __SAVELOCR6:
00044d 935a      	ST   -Y,R21
                 __SAVELOCR5:
00044e 934a      	ST   -Y,R20
                 __SAVELOCR4:
00044f 933a      	ST   -Y,R19
                 __SAVELOCR3:
000450 932a      	ST   -Y,R18
                 __SAVELOCR2:
000451 931a      	ST   -Y,R17
000452 930a      	ST   -Y,R16
000453 9508      	RET
                 
                 __LOADLOCR6:
000454 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
000455 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
000456 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000457 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000458 8119      	LDD  R17,Y+1
000459 8108      	LD   R16,Y
00045a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16 register use summary:
r0 :  11 r1 :   5 r2 :   0 r3 :   0 r4 :  10 r5 :   5 r6 :   5 r7 :   5 
r8 :   4 r9 :   3 r10:   2 r11:   4 r12:   0 r13:   0 r14:   0 r15:   4 
r16:  36 r17:  29 r18:  24 r19:   8 r20:   9 r21:  18 r22:   8 r23:   3 
r24:   9 r25:   2 r26: 111 r27:  33 r28:  16 r29:   1 r30: 249 r31:  93 
x  :  15 y  : 177 z  :  16 
Registers used: 30 out of 35 (85.7%)

ATmega16 instruction use summary:
adc   :   2 add   :   3 adiw  :  23 and   :   0 andi  :  10 asr   :   0 
bclr  :   0 bld   :   0 brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 
break :   0 breq  :  21 brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 
brie  :   0 brlo  :  11 brlt  :   0 brmi  :   0 brne  :  29 brpl  :   1 
brsh  :   2 brtc  :   0 brts  :   1 brvc  :   0 brvs  :   0 bset  :   0 
bst   :   0 call  :  84 cbi   :  10 cbr   :   0 clc   :   0 clh   :   0 
cli   :   1 cln   :   0 clr   :  21 cls   :   0 clt   :   1 clv   :   0 
clz   :   0 com   :   0 cp    :  13 cpc   :  13 cpi   :  36 cpse  :   0 
dec   :   2 des   :   0 eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 
icall :   0 ijmp  :   0 in    :   9 inc   :   6 jmp   :  34 ld    :  22 
ldd   :  66 ldi   : 121 lds   :   0 lpm   :  17 lsl   :   0 lsr   :   0 
mov   :  32 movw  :  17 mul   :   0 muls  :   1 mulsu :   0 neg   :   2 
nop   :   0 or    :   2 ori   :   8 out   :  25 pop   :   3 push  :   3 
rcall :  21 ret   :  32 reti  :   1 rjmp  :  61 rol   :   0 ror   :   0 
sbc   :   2 sbci  :   4 sbi   :   9 sbic  :   3 sbis  :   1 sbiw  :  18 
sbr   :   0 sbrc  :   3 sbrs  :  10 sec   :   0 seh   :   0 sei   :   1 
sen   :   0 ser   :   0 ses   :   0 set   :   1 sev   :   0 sez   :   0 
sleep :   0 spm   :   0 st    :  76 std   :  31 sts   :   2 sub   :   2 
subi  :  13 swap  :   2 tst   :   4 wdr   :   0 
Instructions used: 56 out of 112 (50.0%)

ATmega16 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x0008b6   2130    100   2230   16384  13.6%
[.dseg] 0x000060 0x00017a      0     26     26    1024   2.5%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 10 warnings
