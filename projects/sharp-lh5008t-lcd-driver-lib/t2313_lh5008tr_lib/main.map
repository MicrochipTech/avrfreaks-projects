Archive member included because of file (symbol)

/usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o (exit)
/usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
                              main.o (__do_copy_data)
/usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
                              upd7225.o (__eerd_byte_tn2313)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000400 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
LOAD main.o
LOAD upd7225.o
LOAD /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a
LOAD /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a
LOAD /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x350
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000000                __vectors
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
 .progmem.data  0x0000000000000026       0x32 upd7225.o
                0x0000000000000026                symbol_t
                0x0000000000000058                . = ALIGN (0x2)
                0x0000000000000058                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000058        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000058                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000058                __ctors_start = .
 *(.ctors)
                0x0000000000000058                __ctors_end = .
                0x0000000000000058                __dtors_start = .
 *(.dtors)
                0x0000000000000058                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000058        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
                0x0000000000000058                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000058        0x8 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000060       0x16 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
                0x0000000000000060                __do_copy_data
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000076        0x4 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 *(.init9)
 *(.text)
 .text          0x000000000000007a        0x2 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
                0x000000000000007a                __vector_1
                0x000000000000007a                __vector_12
                0x000000000000007a                __bad_interrupt
                0x000000000000007a                __vector_6
                0x000000000000007a                __vector_3
                0x000000000000007a                __vector_11
                0x000000000000007a                __vector_13
                0x000000000000007a                __vector_17
                0x000000000000007a                __vector_7
                0x000000000000007a                __vector_5
                0x000000000000007a                __vector_9
                0x000000000000007a                __vector_2
                0x000000000000007a                __vector_15
                0x000000000000007a                __vector_8
                0x000000000000007a                __vector_14
                0x000000000000007a                __vector_10
                0x000000000000007a                __vector_16
                0x000000000000007a                __vector_18
 .text          0x000000000000007c      0x110 main.o
                0x000000000000007c                main
 .text          0x000000000000018c      0x1b0 upd7225.o
                0x000000000000018c                __vector_4
                0x00000000000001aa                __vector_default
                0x00000000000001be                SIout
                0x00000000000001fe                Startx
                0x000000000000020c                Stoptx
                0x0000000000000214                SetDataPointer
                0x0000000000000234                WriteData
                0x0000000000000252                LcdCommand
                0x0000000000000268                lcd_putc
                0x0000000000000276                lcd_putc_p
                0x0000000000000292                write_text
                0x00000000000002e6                InitLcd
                0x000000000000032a                lcd_putc_e
 .text          0x000000000000033c        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .text          0x000000000000033c        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .text          0x000000000000033c        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
                0x000000000000033c                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x000000000000033c        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .text.libgcc   0x000000000000033c        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .text.avr-libc
                0x000000000000033c       0x10 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
                0x000000000000033c                __eerd_byte_tn2313
                0x000000000000034c                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x000000000000034c        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
                0x000000000000034c                exit
                0x000000000000034c                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x000000000000034c        0x4 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000350                _etext = .

.data           0x0000000000800060       0x66 load address 0x0000000000000350
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 .data          0x0000000000800060       0x66 main.o
 .data          0x00000000008000c6        0x0 upd7225.o
 .data          0x00000000008000c6        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .data          0x00000000008000c6        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .data          0x00000000008000c6        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00000000008000c6                . = ALIGN (0x2)
                0x00000000008000c6                _edata = .
                0x00000000008000c6                PROVIDE (__data_end, .)

.bss            0x00000000008000c6        0x0
                0x00000000008000c6                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00000000008000c6        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 .bss           0x00000000008000c6        0x0 main.o
 .bss           0x00000000008000c6        0x0 upd7225.o
 .bss           0x00000000008000c6        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_exit.o)
 .bss           0x00000000008000c6        0x0 /usr/lib/gcc/avr/4.3.5/avr25/libgcc.a(_copy_data.o)
 .bss           0x00000000008000c6        0x0 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
 *(.bss*)
 *(COMMON)
                0x00000000008000c6                PROVIDE (__bss_end, .)
                0x0000000000000350                __data_load_start = LOADADDR (.data)
                0x00000000000003b6                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008000c6        0x0
                0x00000000008000c6                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00000000008000c6                PROVIDE (__noinit_end, .)
                0x00000000008000c6                _end = .
                0x00000000008000c6                PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x0000000000000000      0x72c
 *(.stab)
 .stab          0x0000000000000000      0x69c /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o
 .stab          0x000000000000069c       0x90 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/libc.a(eerd_byte_attiny2313.o)
                                         0x9c (size before relaxing)

.stabstr        0x0000000000000000       0x83
 *(.stabstr)
 .stabstr       0x0000000000000000       0x83 /usr/lib/gcc/avr/4.3.5/../../../avr/lib/avr25/crttn2313.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x0000000000000000       0x40
 *(.debug_aranges)
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 upd7225.o

.debug_pubnames
                0x0000000000000000       0xf4
 *(.debug_pubnames)
 .debug_pubnames
                0x0000000000000000       0x1b main.o
 .debug_pubnames
                0x000000000000001b       0xd9 upd7225.o

.debug_info     0x0000000000000000      0x9f6
 *(.debug_info)
 .debug_info    0x0000000000000000      0x43e main.o
 .debug_info    0x000000000000043e      0x5b8 upd7225.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x0000000000000000      0x2df
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000       0xf3 main.o
 .debug_abbrev  0x00000000000000f3      0x1ec upd7225.o

.debug_line     0x0000000000000000      0x6a8
 *(.debug_line)
 .debug_line    0x0000000000000000      0x2fb main.o
 .debug_line    0x00000000000002fb      0x3ad upd7225.o

.debug_frame    0x0000000000000000      0x100
 *(.debug_frame)
 .debug_frame   0x0000000000000000       0x20 main.o
 .debug_frame   0x0000000000000020       0xe0 upd7225.o

.debug_str      0x0000000000000000      0x1c9
 *(.debug_str)
 .debug_str     0x0000000000000000       0xbc main.o
                                         0xf0 (size before relaxing)
 .debug_str     0x00000000000000bc      0x10d upd7225.o
                                        0x1c8 (size before relaxing)

.debug_loc      0x0000000000000000      0x4cf
 *(.debug_loc)
 .debug_loc     0x0000000000000000      0x260 main.o
 .debug_loc     0x0000000000000260      0x26f upd7225.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(main.elf elf32-avr)
LOAD linker stubs

.debug_ranges   0x0000000000000000       0x90
 .debug_ranges  0x0000000000000000       0x48 main.o
 .debug_ranges  0x0000000000000048       0x48 upd7225.o
