
Contagiri.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000210  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000004  00800060  00800060  00000284  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000081  00000000  00000000  000002a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000118  00000000  00000000  00000325  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000bc  00000000  00000000  0000043d  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   000003c0  00000000  00000000  000004f9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000060  00000000  00000000  000008bc  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000000d2  00000000  00000000  0000091c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000038  00000000  00000000  000009ee  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	1a c0       	rjmp	.+52     	; 0x36 <__ctors_end>
   2:	32 c0       	rjmp	.+100    	; 0x68 <__bad_interrupt>
   4:	31 c0       	rjmp	.+98     	; 0x68 <__bad_interrupt>
   6:	30 c0       	rjmp	.+96     	; 0x68 <__bad_interrupt>
   8:	2f c0       	rjmp	.+94     	; 0x68 <__bad_interrupt>
   a:	2e c0       	rjmp	.+92     	; 0x68 <__bad_interrupt>
   c:	2d c0       	rjmp	.+90     	; 0x68 <__bad_interrupt>
   e:	2c c0       	rjmp	.+88     	; 0x68 <__bad_interrupt>
  10:	2b c0       	rjmp	.+86     	; 0x68 <__bad_interrupt>
  12:	2a c0       	rjmp	.+84     	; 0x68 <__bad_interrupt>
  14:	29 c0       	rjmp	.+82     	; 0x68 <__bad_interrupt>
  16:	28 c0       	rjmp	.+80     	; 0x68 <__bad_interrupt>
  18:	27 c0       	rjmp	.+78     	; 0x68 <__bad_interrupt>
  1a:	26 c0       	rjmp	.+76     	; 0x68 <__bad_interrupt>
  1c:	25 c0       	rjmp	.+74     	; 0x68 <__bad_interrupt>
  1e:	24 c0       	rjmp	.+72     	; 0x68 <__bad_interrupt>
  20:	23 c0       	rjmp	.+70     	; 0x68 <__bad_interrupt>
  22:	49 c0       	rjmp	.+146    	; 0xb6 <Gestione_LEDS+0x10>
  24:	4b c0       	rjmp	.+150    	; 0xbc <Gestione_LEDS+0x16>
  26:	52 c0       	rjmp	.+164    	; 0xcc <Gestione_LEDS+0x26>
  28:	55 c0       	rjmp	.+170    	; 0xd4 <Gestione_LEDS+0x2e>
  2a:	59 c0       	rjmp	.+178    	; 0xde <Gestione_LEDS+0x38>
  2c:	5e c0       	rjmp	.+188    	; 0xea <__stack+0xb>
  2e:	64 c0       	rjmp	.+200    	; 0xf8 <__stack+0x19>
  30:	6c c0       	rjmp	.+216    	; 0x10a <__stack+0x2b>
  32:	75 c0       	rjmp	.+234    	; 0x11e <__stack+0x3f>
  34:	7f c0       	rjmp	.+254    	; 0x134 <__stack+0x55>

00000036 <__ctors_end>:
  36:	11 24       	eor	r1, r1
  38:	1f be       	out	0x3f, r1	; 63
  3a:	cf ed       	ldi	r28, 0xDF	; 223
  3c:	cd bf       	out	0x3d, r28	; 61

0000003e <__do_copy_data>:
  3e:	10 e0       	ldi	r17, 0x00	; 0
  40:	a0 e6       	ldi	r26, 0x60	; 96
  42:	b0 e0       	ldi	r27, 0x00	; 0
  44:	e0 e1       	ldi	r30, 0x10	; 16
  46:	f2 e0       	ldi	r31, 0x02	; 2
  48:	02 c0       	rjmp	.+4      	; 0x4e <.do_copy_data_start>

0000004a <.do_copy_data_loop>:
  4a:	05 90       	lpm	r0, Z+
  4c:	0d 92       	st	X+, r0

0000004e <.do_copy_data_start>:
  4e:	a0 36       	cpi	r26, 0x60	; 96
  50:	b1 07       	cpc	r27, r17
  52:	d9 f7       	brne	.-10     	; 0x4a <.do_copy_data_loop>

00000054 <__do_clear_bss>:
  54:	10 e0       	ldi	r17, 0x00	; 0
  56:	a0 e6       	ldi	r26, 0x60	; 96
  58:	b0 e0       	ldi	r27, 0x00	; 0
  5a:	01 c0       	rjmp	.+2      	; 0x5e <.do_clear_bss_start>

0000005c <.do_clear_bss_loop>:
  5c:	1d 92       	st	X+, r1

0000005e <.do_clear_bss_start>:
  5e:	a4 36       	cpi	r26, 0x64	; 100
  60:	b1 07       	cpc	r27, r17
  62:	e1 f7       	brne	.-8      	; 0x5c <.do_clear_bss_loop>
  64:	72 d0       	rcall	.+228    	; 0x14a <main>
  66:	d2 c0       	rjmp	.+420    	; 0x20c <_exit>

00000068 <__bad_interrupt>:
  68:	cb cf       	rjmp	.-106    	; 0x0 <__vectors>

0000006a <io_Setup>:


void io_Setup(void)
{	
	// PA7, PA6, PA5, PA4, PA2, PA1, PA0 outputs LED
	PORTA	= 0b00000000;
  6a:	1b ba       	out	0x1b, r1	; 27
	DDRA	= 0b11110111;
  6c:	87 ef       	ldi	r24, 0xF7	; 247
  6e:	8a bb       	out	0x1a, r24	; 26
	PORTA	= 0b00000000;
  70:	1b ba       	out	0x1b, r1	; 27
	// PB2, PB1, PB0 outputs LED
	PORTB	= 0b00000000;
  72:	18 ba       	out	0x18, r1	; 24
	DDRB	= 0b00000111;
  74:	87 e0       	ldi	r24, 0x07	; 7
  76:	87 bb       	out	0x17, r24	; 23
	PORTB	= 0b00000000;
  78:	18 ba       	out	0x18, r1	; 24
}
  7a:	08 95       	ret

0000007c <frequency_IN_Setup>:

// timer0
void frequency_IN_Setup(void)
{
	TCNT0 = 0;						// reset timer
  7c:	12 be       	out	0x32, r1	; 50
	TCCR0B = 0;						// stop
  7e:	13 be       	out	0x33, r1	; 51
	TCCR0A = 0;						// normal operation
  80:	10 be       	out	0x30, r1	; 48
	TIFR0 = 0x08;					// reset alla flags
  82:	88 e0       	ldi	r24, 0x08	; 8
  84:	88 bf       	out	0x38, r24	; 56
	TCCR0B = (1<<CS02)|(1<<CS01);	// External clock source on T0 pin. Clock on falling edge.
  86:	86 e0       	ldi	r24, 0x06	; 6
  88:	83 bf       	out	0x33, r24	; 51
}
  8a:	08 95       	ret

0000008c <freq_2Hz_Setup>:
/////////////////////////////////////////////////////////////////////////////////////////
//	timer1 2Hz frequency
void freq_2Hz_Setup(void)
{	
	TCCR1B = 0;						// stop
  8c:	1e bc       	out	0x2e, r1	; 46
	TCCR1A = 0;						// normal operation,
  8e:	1f bc       	out	0x2f, r1	; 47
	TCNT1 = 0;						// reset timer
  90:	1d bc       	out	0x2d, r1	; 45
  92:	1c bc       	out	0x2c, r1	; 44
	OCR1A = 244;					// Output compare every 250ms
  94:	84 ef       	ldi	r24, 0xF4	; 244
  96:	90 e0       	ldi	r25, 0x00	; 0
  98:	9b bd       	out	0x2b, r25	; 43
  9a:	8a bd       	out	0x2a, r24	; 42
	TIFR1 = 0x2F;					// reset all flags
  9c:	8f e2       	ldi	r24, 0x2F	; 47
  9e:	8b b9       	out	0x0b, r24	; 11
	TCCR1B = (1<<WGM12)|(1<<CS12)|(1<<CS10);	// start timer, Freq/1024, CTC
  a0:	8d e0       	ldi	r24, 0x0D	; 13
  a2:	8e bd       	out	0x2e, r24	; 46
}
  a4:	08 95       	ret

000000a6 <Gestione_LEDS>:
	}
}

void Gestione_LEDS(unsigned int value)
{
		switch (value)
  a6:	fc 01       	movw	r30, r24
  a8:	8a 30       	cpi	r24, 0x0A	; 10
  aa:	91 05       	cpc	r25, r1
  ac:	08 f0       	brcs	.+2      	; 0xb0 <Gestione_LEDS+0xa>
  ae:	4c c0       	rjmp	.+152    	; 0x148 <__stack+0x69>
  b0:	ef 5e       	subi	r30, 0xEF	; 239
  b2:	ff 4f       	sbci	r31, 0xFF	; 255
  b4:	09 94       	ijmp
		{
			case 0:
				LED0_ON;
  b6:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_OFF;
  b8:	d9 98       	cbi	0x1b, 1	; 27
  ba:	02 c0       	rjmp	.+4      	; 0xc0 <Gestione_LEDS+0x1a>
				LED8_OFF;
				LED9_OFF;
				break;
			
			case 1:
				LED0_ON;
  bc:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
  be:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_OFF;
  c0:	da 98       	cbi	0x1b, 2	; 27
				LED3_OFF;
  c2:	dc 98       	cbi	0x1b, 4	; 27
				LED4_OFF;
  c4:	dd 98       	cbi	0x1b, 5	; 27
				LED5_OFF;
  c6:	c0 98       	cbi	0x18, 0	; 24
				LED6_OFF;
  c8:	c1 98       	cbi	0x18, 1	; 24
  ca:	1d c0       	rjmp	.+58     	; 0x106 <__stack+0x27>
				LED8_OFF;
				LED9_OFF;
				break;
			
			case 2:
				LED0_ON;
  cc:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
  ce:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
  d0:	da 9a       	sbi	0x1b, 2	; 27
  d2:	f7 cf       	rjmp	.-18     	; 0xc2 <Gestione_LEDS+0x1c>
				LED8_OFF;
				LED9_OFF;
				break;
			
			case 3:
				LED0_ON;
  d4:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
  d6:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
  d8:	da 9a       	sbi	0x1b, 2	; 27
				LED3_ON;
  da:	dc 9a       	sbi	0x1b, 4	; 27
  dc:	f3 cf       	rjmp	.-26     	; 0xc4 <Gestione_LEDS+0x1e>
				LED8_OFF;
				LED9_OFF;
				break;
			
			case 4:
				LED0_ON;
  de:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
  e0:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
  e2:	da 9a       	sbi	0x1b, 2	; 27
				LED3_ON;
  e4:	dc 9a       	sbi	0x1b, 4	; 27
				LED4_ON;
  e6:	dd 9a       	sbi	0x1b, 5	; 27
  e8:	ee cf       	rjmp	.-36     	; 0xc6 <Gestione_LEDS+0x20>
				LED8_OFF;
				LED9_OFF;
				break;
			
			case 5:
				LED0_ON;
  ea:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
  ec:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
  ee:	da 9a       	sbi	0x1b, 2	; 27
				LED3_ON;
  f0:	dc 9a       	sbi	0x1b, 4	; 27
				LED4_ON;
  f2:	dd 9a       	sbi	0x1b, 5	; 27
				LED5_ON;
  f4:	c0 9a       	sbi	0x18, 0	; 24
  f6:	e8 cf       	rjmp	.-48     	; 0xc8 <Gestione_LEDS+0x22>
				LED8_OFF;
				LED9_OFF;
				break;
				
			case 6:
				LED0_ON;
  f8:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
  fa:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
  fc:	da 9a       	sbi	0x1b, 2	; 27
				LED3_ON;
  fe:	dc 9a       	sbi	0x1b, 4	; 27
				LED4_ON;
 100:	dd 9a       	sbi	0x1b, 5	; 27
				LED5_ON;
 102:	c0 9a       	sbi	0x18, 0	; 24
				LED6_ON;
 104:	c1 9a       	sbi	0x18, 1	; 24
				LED7_OFF;
 106:	c2 98       	cbi	0x18, 2	; 24
 108:	08 c0       	rjmp	.+16     	; 0x11a <__stack+0x3b>
				LED8_OFF;
				LED9_OFF;
				break;
				
			case 7:
				LED0_ON;
 10a:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
 10c:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
 10e:	da 9a       	sbi	0x1b, 2	; 27
				LED3_ON;
 110:	dc 9a       	sbi	0x1b, 4	; 27
				LED4_ON;
 112:	dd 9a       	sbi	0x1b, 5	; 27
				LED5_ON;
 114:	c0 9a       	sbi	0x18, 0	; 24
				LED6_ON;
 116:	c1 9a       	sbi	0x18, 1	; 24
				LED7_ON;
 118:	c2 9a       	sbi	0x18, 2	; 24
				LED8_OFF;
 11a:	df 98       	cbi	0x1b, 7	; 27
 11c:	09 c0       	rjmp	.+18     	; 0x130 <__stack+0x51>
				LED9_OFF;
				break;
				
			case 8:
				LED0_ON;
 11e:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
 120:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
 122:	da 9a       	sbi	0x1b, 2	; 27
				LED3_ON;
 124:	dc 9a       	sbi	0x1b, 4	; 27
				LED4_ON;
 126:	dd 9a       	sbi	0x1b, 5	; 27
				LED5_ON;
 128:	c0 9a       	sbi	0x18, 0	; 24
				LED6_ON;
 12a:	c1 9a       	sbi	0x18, 1	; 24
				LED7_ON;
 12c:	c2 9a       	sbi	0x18, 2	; 24
				LED8_ON;
 12e:	df 9a       	sbi	0x1b, 7	; 27
				LED9_OFF;
 130:	de 98       	cbi	0x1b, 6	; 27
 132:	08 95       	ret
				break;
				
			case 9:
				LED0_ON;
 134:	d8 9a       	sbi	0x1b, 0	; 27
				LED1_ON;
 136:	d9 9a       	sbi	0x1b, 1	; 27
				LED2_ON;
 138:	da 9a       	sbi	0x1b, 2	; 27
				LED3_ON;
 13a:	dc 9a       	sbi	0x1b, 4	; 27
				LED4_ON;
 13c:	dd 9a       	sbi	0x1b, 5	; 27
				LED5_ON;
 13e:	c0 9a       	sbi	0x18, 0	; 24
				LED6_ON;
 140:	c1 9a       	sbi	0x18, 1	; 24
				LED7_ON;
 142:	c2 9a       	sbi	0x18, 2	; 24
				LED8_ON;
 144:	df 9a       	sbi	0x1b, 7	; 27
				LED9_ON;
 146:	de 9a       	sbi	0x1b, 6	; 27
 148:	08 95       	ret

0000014a <main>:

void Gestione_LEDS(unsigned int value);

int main(void)
{
	io_Setup();
 14a:	8f df       	rcall	.-226    	; 0x6a <io_Setup>
}

// timer0
void frequency_IN_Setup(void)
{
	TCNT0 = 0;						// reset timer
 14c:	12 be       	out	0x32, r1	; 50
	TCCR0B = 0;						// stop
 14e:	13 be       	out	0x33, r1	; 51
	TCCR0A = 0;						// normal operation
 150:	10 be       	out	0x30, r1	; 48
	TIFR0 = 0x08;					// reset alla flags
 152:	88 e0       	ldi	r24, 0x08	; 8
 154:	88 bf       	out	0x38, r24	; 56
	TCCR0B = (1<<CS02)|(1<<CS01);	// External clock source on T0 pin. Clock on falling edge.
 156:	86 e0       	ldi	r24, 0x06	; 6
 158:	83 bf       	out	0x33, r24	; 51

int main(void)
{
	io_Setup();
	frequency_IN_Setup();
	freq_2Hz_Setup();
 15a:	98 df       	rcall	.-208    	; 0x8c <freq_2Hz_Setup>

	OCR1A = 61;
 15c:	8d e3       	ldi	r24, 0x3D	; 61
 15e:	90 e0       	ldi	r25, 0x00	; 0
 160:	9b bd       	out	0x2b, r25	; 43
 162:	8a bd       	out	0x2a, r24	; 42

	// routine power on
	// test all leds
	do
	{
		if (TIFR1 & (1<<OCF1A))
 164:	59 9b       	sbis	0x0b, 1	; 11
 166:	0b c0       	rjmp	.+22     	; 0x17e <main+0x34>
		{
			TIFR1 |= (1<<OCF1A);
 168:	59 9a       	sbi	0x0b, 1	; 11
			frequency_IN++;
 16a:	80 91 60 00 	lds	r24, 0x0060
 16e:	90 91 61 00 	lds	r25, 0x0061
 172:	01 96       	adiw	r24, 0x01	; 1
 174:	90 93 61 00 	sts	0x0061, r25
 178:	80 93 60 00 	sts	0x0060, r24
			
			Gestione_LEDS(frequency_IN);
 17c:	94 df       	rcall	.-216    	; 0xa6 <Gestione_LEDS>
		}
	}while (frequency_IN<10);
 17e:	80 91 60 00 	lds	r24, 0x0060
 182:	90 91 61 00 	lds	r25, 0x0061
 186:	0a 97       	sbiw	r24, 0x0a	; 10
 188:	68 f3       	brcs	.-38     	; 0x164 <main+0x1a>

	OCR1A = 244;
 18a:	84 ef       	ldi	r24, 0xF4	; 244
 18c:	90 e0       	ldi	r25, 0x00	; 0
 18e:	9b bd       	out	0x2b, r25	; 43
 190:	8a bd       	out	0x2a, r24	; 42
	
	while(1)
	{
		if (TIFR1 & (1<<OCF1A))
 192:	59 9b       	sbis	0x0b, 1	; 11
 194:	fe cf       	rjmp	.-4      	; 0x192 <main+0x48>
		{
			TIFR1 |= (1<<OCF1A);
 196:	59 9a       	sbi	0x0b, 1	; 11

			frequency_IN=TCNT0;
 198:	82 b7       	in	r24, 0x32	; 50
 19a:	80 93 60 00 	sts	0x0060, r24
 19e:	10 92 61 00 	sts	0x0061, r1

			LEDS_ON=(frequency_IN*240)/1000;	// display every 250ms or 1/4 second so: RPM/minute = frequency_IN *(60seconds*4)
 1a2:	90 e0       	ldi	r25, 0x00	; 0
 1a4:	60 ef       	ldi	r22, 0xF0	; 240
 1a6:	70 e0       	ldi	r23, 0x00	; 0
 1a8:	0b d0       	rcall	.+22     	; 0x1c0 <__mulhi3>
 1aa:	68 ee       	ldi	r22, 0xE8	; 232
 1ac:	73 e0       	ldi	r23, 0x03	; 3
 1ae:	1a d0       	rcall	.+52     	; 0x1e4 <__udivmodhi4>
 1b0:	cb 01       	movw	r24, r22
 1b2:	60 93 62 00 	sts	0x0062, r22
 1b6:	90 93 63 00 	sts	0x0063, r25
			
			Gestione_LEDS(LEDS_ON);
 1ba:	75 df       	rcall	.-278    	; 0xa6 <Gestione_LEDS>

			TCNT0 = 0;
 1bc:	12 be       	out	0x32, r1	; 50
 1be:	e9 cf       	rjmp	.-46     	; 0x192 <main+0x48>

000001c0 <__mulhi3>:
 1c0:	55 27       	eor	r21, r21
 1c2:	00 24       	eor	r0, r0

000001c4 <__mulhi3_loop>:
 1c4:	80 ff       	sbrs	r24, 0
 1c6:	02 c0       	rjmp	.+4      	; 0x1cc <__mulhi3_skip1>
 1c8:	06 0e       	add	r0, r22
 1ca:	57 1f       	adc	r21, r23

000001cc <__mulhi3_skip1>:
 1cc:	66 0f       	add	r22, r22
 1ce:	77 1f       	adc	r23, r23
 1d0:	61 15       	cp	r22, r1
 1d2:	71 05       	cpc	r23, r1
 1d4:	21 f0       	breq	.+8      	; 0x1de <__mulhi3_exit>
 1d6:	96 95       	lsr	r25
 1d8:	87 95       	ror	r24
 1da:	00 97       	sbiw	r24, 0x00	; 0
 1dc:	99 f7       	brne	.-26     	; 0x1c4 <__mulhi3_loop>

000001de <__mulhi3_exit>:
 1de:	95 2f       	mov	r25, r21
 1e0:	80 2d       	mov	r24, r0
 1e2:	08 95       	ret

000001e4 <__udivmodhi4>:
 1e4:	aa 1b       	sub	r26, r26
 1e6:	bb 1b       	sub	r27, r27
 1e8:	51 e1       	ldi	r21, 0x11	; 17
 1ea:	07 c0       	rjmp	.+14     	; 0x1fa <__udivmodhi4_ep>

000001ec <__udivmodhi4_loop>:
 1ec:	aa 1f       	adc	r26, r26
 1ee:	bb 1f       	adc	r27, r27
 1f0:	a6 17       	cp	r26, r22
 1f2:	b7 07       	cpc	r27, r23
 1f4:	10 f0       	brcs	.+4      	; 0x1fa <__udivmodhi4_ep>
 1f6:	a6 1b       	sub	r26, r22
 1f8:	b7 0b       	sbc	r27, r23

000001fa <__udivmodhi4_ep>:
 1fa:	88 1f       	adc	r24, r24
 1fc:	99 1f       	adc	r25, r25
 1fe:	5a 95       	dec	r21
 200:	a9 f7       	brne	.-22     	; 0x1ec <__udivmodhi4_loop>
 202:	80 95       	com	r24
 204:	90 95       	com	r25
 206:	bc 01       	movw	r22, r24
 208:	cd 01       	movw	r24, r26
 20a:	08 95       	ret

0000020c <_exit>:
 20c:	f8 94       	cli

0000020e <__stop_program>:
 20e:	ff cf       	rjmp	.-2      	; 0x20e <__stop_program>
