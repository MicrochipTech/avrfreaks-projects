
HHO_Driver.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001838  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000030  00800060  00001838  000018cc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          000000e3  00800090  00800090  000018fc  2**0
                  ALLOC
  3 .comment      0000008c  00000000  00000000  000018fc  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001988  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000368  00000000  00000000  000019c4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000608e  00000000  00000000  00001d2c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000df0  00000000  00000000  00007dba  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001b3e  00000000  00000000  00008baa  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000af8  00000000  00000000  0000a6e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000017e8  00000000  00000000  0000b1e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00002e92  00000000  00000000  0000c9c8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000003a0  00000000  00000000  0000f85a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	21 c0       	rjmp	.+66     	; 0x44 <__dtors_end>
       2:	45 c0       	rjmp	.+138    	; 0x8e <__bad_interrupt>
       4:	44 c0       	rjmp	.+136    	; 0x8e <__bad_interrupt>
       6:	63 c0       	rjmp	.+198    	; 0xce <__vector_3>
       8:	42 c0       	rjmp	.+132    	; 0x8e <__bad_interrupt>
       a:	41 c0       	rjmp	.+130    	; 0x8e <__bad_interrupt>
       c:	40 c0       	rjmp	.+128    	; 0x8e <__bad_interrupt>
       e:	3f c0       	rjmp	.+126    	; 0x8e <__bad_interrupt>
      10:	3e c0       	rjmp	.+124    	; 0x8e <__bad_interrupt>
      12:	13 c7       	rjmp	.+3622   	; 0xe3a <__vector_9>
      14:	3c c0       	rjmp	.+120    	; 0x8e <__bad_interrupt>
      16:	3b c0       	rjmp	.+118    	; 0x8e <__bad_interrupt>
      18:	3a c0       	rjmp	.+116    	; 0x8e <__bad_interrupt>
      1a:	39 c0       	rjmp	.+114    	; 0x8e <__bad_interrupt>
      1c:	38 c0       	rjmp	.+112    	; 0x8e <__bad_interrupt>
      1e:	37 c0       	rjmp	.+110    	; 0x8e <__bad_interrupt>
      20:	36 c0       	rjmp	.+108    	; 0x8e <__bad_interrupt>
      22:	35 c0       	rjmp	.+106    	; 0x8e <__bad_interrupt>
      24:	34 c0       	rjmp	.+104    	; 0x8e <__bad_interrupt>

00000026 <__trampolines_end>:
      26:	48 48       	sbci	r20, 0x88	; 136
      28:	4f 20       	and	r4, r15
      2a:	44 72       	andi	r20, 0x24	; 36
      2c:	69 76       	andi	r22, 0x69	; 105
      2e:	65 20       	and	r6, r5
      30:	56 00       	.word	0x0056	; ????

00000032 <_ZZ4mainE3__c>:
      32:	48 48 4f 20 44 72 69 76 65 20 56 00                 HHO Drive V.

0000003e <__ctors_start>:
      3e:	92 01       	movw	r18, r4
      40:	e1 03       	fmuls	r22, r17

00000042 <__ctors_end>:
      42:	ef 03       	fmulsu	r22, r23

00000044 <__dtors_end>:
      44:	11 24       	eor	r1, r1
      46:	1f be       	out	0x3f, r1	; 63
      48:	cf e5       	ldi	r28, 0x5F	; 95
      4a:	d4 e0       	ldi	r29, 0x04	; 4
      4c:	de bf       	out	0x3e, r29	; 62
      4e:	cd bf       	out	0x3d, r28	; 61

00000050 <__do_copy_data>:
      50:	10 e0       	ldi	r17, 0x00	; 0
      52:	a0 e6       	ldi	r26, 0x60	; 96
      54:	b0 e0       	ldi	r27, 0x00	; 0
      56:	e8 e3       	ldi	r30, 0x38	; 56
      58:	f8 e1       	ldi	r31, 0x18	; 24
      5a:	02 c0       	rjmp	.+4      	; 0x60 <__do_copy_data+0x10>
      5c:	05 90       	lpm	r0, Z+
      5e:	0d 92       	st	X+, r0
      60:	a0 39       	cpi	r26, 0x90	; 144
      62:	b1 07       	cpc	r27, r17
      64:	d9 f7       	brne	.-10     	; 0x5c <__do_copy_data+0xc>

00000066 <__do_clear_bss>:
      66:	21 e0       	ldi	r18, 0x01	; 1
      68:	a0 e9       	ldi	r26, 0x90	; 144
      6a:	b0 e0       	ldi	r27, 0x00	; 0
      6c:	01 c0       	rjmp	.+2      	; 0x70 <.do_clear_bss_start>

0000006e <.do_clear_bss_loop>:
      6e:	1d 92       	st	X+, r1

00000070 <.do_clear_bss_start>:
      70:	a3 37       	cpi	r26, 0x73	; 115
      72:	b2 07       	cpc	r27, r18
      74:	e1 f7       	brne	.-8      	; 0x6e <.do_clear_bss_loop>

00000076 <__do_global_ctors>:
      76:	10 e0       	ldi	r17, 0x00	; 0
      78:	c1 e2       	ldi	r28, 0x21	; 33
      7a:	d0 e0       	ldi	r29, 0x00	; 0
      7c:	03 c0       	rjmp	.+6      	; 0x84 <__do_global_ctors+0xe>
      7e:	21 97       	sbiw	r28, 0x01	; 1
      80:	fe 01       	movw	r30, r28
      82:	c9 d7       	rcall	.+3986   	; 0x1016 <__tablejump2__>
      84:	cf 31       	cpi	r28, 0x1F	; 31
      86:	d1 07       	cpc	r29, r17
      88:	d1 f7       	brne	.-12     	; 0x7e <__do_global_ctors+0x8>
      8a:	56 d1       	rcall	.+684    	; 0x338 <main>
      8c:	c9 cb       	rjmp	.-2158   	; 0xfffff820 <__eeprom_end+0xff7ef820>

0000008e <__bad_interrupt>:
      8e:	b8 cf       	rjmp	.-144    	; 0x0 <__vectors>

00000090 <_ZN8class_IO13LEDInitializeEv>:
			}
		}
	}
	_io.time.DelayMsS(50);
	return tmp;
}
      90:	8f b7       	in	r24, 0x3f	; 63
      92:	f8 94       	cli
      94:	c0 9a       	sbi	0x18, 0	; 24
      96:	b8 9a       	sbi	0x17, 0	; 23
      98:	8f bf       	out	0x3f, r24	; 63
      9a:	08 95       	ret

0000009c <_ZN8class_IO14PWMsInitializeEv>:
      9c:	9f b7       	in	r25, 0x3f	; 63
      9e:	f8 94       	cli
      a0:	b9 9a       	sbi	0x17, 1	; 23
      a2:	bb 9a       	sbi	0x17, 3	; 23
      a4:	c1 98       	cbi	0x18, 1	; 24
      a6:	c3 98       	cbi	0x18, 3	; 24
      a8:	82 ec       	ldi	r24, 0xC2	; 194
      aa:	8f bd       	out	0x2f, r24	; 47
      ac:	89 e1       	ldi	r24, 0x19	; 25
      ae:	8e bd       	out	0x2e, r24	; 46
      b0:	20 ea       	ldi	r18, 0xA0	; 160
      b2:	30 e0       	ldi	r19, 0x00	; 0
      b4:	37 bd       	out	0x27, r19	; 39
      b6:	26 bd       	out	0x26, r18	; 38
      b8:	1b bc       	out	0x2b, r1	; 43
      ba:	1a bc       	out	0x2a, r1	; 42
      bc:	8b e0       	ldi	r24, 0x0B	; 11
      be:	85 bd       	out	0x25, r24	; 37
      c0:	8f ef       	ldi	r24, 0xFF	; 255
      c2:	83 bd       	out	0x23, r24	; 35
      c4:	89 b7       	in	r24, 0x39	; 57
      c6:	80 68       	ori	r24, 0x80	; 128
      c8:	89 bf       	out	0x39, r24	; 57
      ca:	9f bf       	out	0x3f, r25	; 63
      cc:	08 95       	ret

000000ce <__vector_3>:
      ce:	1f 92       	push	r1
      d0:	0f 92       	push	r0
      d2:	0f b6       	in	r0, 0x3f	; 63
      d4:	0f 92       	push	r0
      d6:	11 24       	eor	r1, r1
      d8:	8f 93       	push	r24
      da:	9f 93       	push	r25
      dc:	ef 93       	push	r30
      de:	ff 93       	push	r31
      e0:	e0 e9       	ldi	r30, 0x90	; 144
      e2:	f0 e0       	ldi	r31, 0x00	; 0
      e4:	81 81       	ldd	r24, Z+1	; 0x01
      e6:	8f 5f       	subi	r24, 0xFF	; 255
      e8:	81 83       	std	Z+1, r24	; 0x01
      ea:	80 34       	cpi	r24, 0x40	; 64
      ec:	10 f0       	brcs	.+4      	; 0xf2 <__vector_3+0x24>
      ee:	10 92 91 00 	sts	0x0091, r1
      f2:	e0 e9       	ldi	r30, 0x90	; 144
      f4:	f0 e0       	ldi	r31, 0x00	; 0
      f6:	91 81       	ldd	r25, Z+1	; 0x01
      f8:	82 81       	ldd	r24, Z+2	; 0x02
      fa:	89 17       	cp	r24, r25
      fc:	20 f4       	brcc	.+8      	; 0x106 <__vector_3+0x38>
      fe:	c3 9a       	sbi	0x18, 3	; 24
     100:	1d bc       	out	0x2d, r1	; 45
     102:	1c bc       	out	0x2c, r1	; 44
     104:	01 c0       	rjmp	.+2      	; 0x108 <__vector_3+0x3a>
     106:	c3 98       	cbi	0x18, 3	; 24
     108:	ff 91       	pop	r31
     10a:	ef 91       	pop	r30
     10c:	9f 91       	pop	r25
     10e:	8f 91       	pop	r24
     110:	0f 90       	pop	r0
     112:	0f be       	out	0x3f, r0	; 63
     114:	0f 90       	pop	r0
     116:	1f 90       	pop	r1
     118:	18 95       	reti

0000011a <_ZN8class_IO13ADCInitializeEh>:
     11a:	9f b7       	in	r25, 0x3f	; 63
     11c:	f8 94       	cli
     11e:	85 b3       	in	r24, 0x15	; 21
     120:	80 7f       	andi	r24, 0xF0	; 240
     122:	85 bb       	out	0x15, r24	; 21
     124:	84 b3       	in	r24, 0x14	; 20
     126:	80 7f       	andi	r24, 0xF0	; 240
     128:	84 bb       	out	0x14, r24	; 20
     12a:	87 b1       	in	r24, 0x07	; 7
     12c:	80 6c       	ori	r24, 0xC0	; 192
     12e:	87 b9       	out	0x07, r24	; 7
     130:	3d 98       	cbi	0x07, 5	; 7
     132:	66 23       	and	r22, r22
     134:	11 f0       	breq	.+4      	; 0x13a <_ZN8class_IO13ADCInitializeEh+0x20>
     136:	14 f4       	brge	.+4      	; 0x13c <_ZN8class_IO13ADCInitializeEh+0x22>
     138:	0a c0       	rjmp	.+20     	; 0x14e <_ZN8class_IO13ADCInitializeEh+0x34>
     13a:	61 e0       	ldi	r22, 0x01	; 1
     13c:	87 e0       	ldi	r24, 0x07	; 7
     13e:	66 0f       	add	r22, r22
     140:	81 50       	subi	r24, 0x01	; 1
     142:	66 23       	and	r22, r22
     144:	e4 f7       	brge	.-8      	; 0x13e <_ZN8class_IO13ADCInitializeEh+0x24>
     146:	80 fd       	sbrc	r24, 0
     148:	03 c0       	rjmp	.+6      	; 0x150 <_ZN8class_IO13ADCInitializeEh+0x36>
     14a:	30 98       	cbi	0x06, 0	; 6
     14c:	02 c0       	rjmp	.+4      	; 0x152 <_ZN8class_IO13ADCInitializeEh+0x38>
     14e:	87 e0       	ldi	r24, 0x07	; 7
     150:	30 9a       	sbi	0x06, 0	; 6
     152:	81 fd       	sbrc	r24, 1
     154:	02 c0       	rjmp	.+4      	; 0x15a <_ZN8class_IO13ADCInitializeEh+0x40>
     156:	31 98       	cbi	0x06, 1	; 6
     158:	01 c0       	rjmp	.+2      	; 0x15c <_ZN8class_IO13ADCInitializeEh+0x42>
     15a:	31 9a       	sbi	0x06, 1	; 6
     15c:	82 fd       	sbrc	r24, 2
     15e:	02 c0       	rjmp	.+4      	; 0x164 <_ZN8class_IO13ADCInitializeEh+0x4a>
     160:	32 98       	cbi	0x06, 2	; 6
     162:	01 c0       	rjmp	.+2      	; 0x166 <_ZN8class_IO13ADCInitializeEh+0x4c>
     164:	32 9a       	sbi	0x06, 2	; 6
     166:	86 b1       	in	r24, 0x06	; 6
     168:	80 6c       	ori	r24, 0xC0	; 192
     16a:	86 b9       	out	0x06, r24	; 6
     16c:	36 99       	sbic	0x06, 6	; 6
     16e:	fe cf       	rjmp	.-4      	; 0x16c <_ZN8class_IO13ADCInitializeEh+0x52>
     170:	9f bf       	out	0x3f, r25	; 63
     172:	08 95       	ret

00000174 <_ZN8class_IO13KeyInitializeEv>:
     174:	ad 9a       	sbi	0x15, 5	; 21
     176:	a5 98       	cbi	0x14, 5	; 20
     178:	08 95       	ret

0000017a <_ZN8class_IO10InitializeEv>:
     17a:	1f 93       	push	r17
     17c:	cf 93       	push	r28
     17e:	df 93       	push	r29
     180:	ec 01       	movw	r28, r24
     182:	1f b7       	in	r17, 0x3f	; 63
     184:	60 e2       	ldi	r22, 0x20	; 32
     186:	c9 df       	rcall	.-110    	; 0x11a <_ZN8class_IO13ADCInitializeEh>
     188:	ce 01       	movw	r24, r28
     18a:	f4 df       	rcall	.-24     	; 0x174 <_ZN8class_IO13KeyInitializeEv>
     18c:	ce 01       	movw	r24, r28
     18e:	86 df       	rcall	.-244    	; 0x9c <_ZN8class_IO14PWMsInitializeEv>
     190:	ce 01       	movw	r24, r28
     192:	7e df       	rcall	.-260    	; 0x90 <_ZN8class_IO13LEDInitializeEv>
     194:	1f bf       	out	0x3f, r17	; 63
     196:	df 91       	pop	r29
     198:	cf 91       	pop	r28
     19a:	1f 91       	pop	r17
     19c:	08 95       	ret

0000019e <_ZN8class_IOC1Ev>:
     19e:	ed cf       	rjmp	.-38     	; 0x17a <_ZN8class_IO10InitializeEv>
     1a0:	08 95       	ret

000001a2 <_ZN8class_IO13ADCSetChannelEh>:
     1a2:	9f b7       	in	r25, 0x3f	; 63
     1a4:	f8 94       	cli
     1a6:	67 70       	andi	r22, 0x07	; 7
     1a8:	60 93 90 00 	sts	0x0090, r22
     1ac:	87 b1       	in	r24, 0x07	; 7
     1ae:	80 7f       	andi	r24, 0xF0	; 240
     1b0:	87 b9       	out	0x07, r24	; 7
     1b2:	87 b1       	in	r24, 0x07	; 7
     1b4:	68 2b       	or	r22, r24
     1b6:	67 b9       	out	0x07, r22	; 7
     1b8:	9f bf       	out	0x3f, r25	; 63
     1ba:	08 95       	ret

000001bc <_ZN8class_IO11ADCGetValueEv>:
     1bc:	2f b7       	in	r18, 0x3f	; 63
     1be:	36 9a       	sbi	0x06, 6	; 6
     1c0:	36 99       	sbic	0x06, 6	; 6
     1c2:	fe cf       	rjmp	.-4      	; 0x1c0 <_ZN8class_IO11ADCGetValueEv+0x4>
     1c4:	f8 94       	cli
     1c6:	84 b1       	in	r24, 0x04	; 4
     1c8:	95 b1       	in	r25, 0x05	; 5
     1ca:	2f bf       	out	0x3f, r18	; 63
     1cc:	08 95       	ret

000001ce <_ZN8class_IO5RangeElllll>:
     1ce:	4f 92       	push	r4
     1d0:	5f 92       	push	r5
     1d2:	6f 92       	push	r6
     1d4:	7f 92       	push	r7
     1d6:	8f 92       	push	r8
     1d8:	9f 92       	push	r9
     1da:	af 92       	push	r10
     1dc:	bf 92       	push	r11
     1de:	cf 92       	push	r12
     1e0:	df 92       	push	r13
     1e2:	ef 92       	push	r14
     1e4:	ff 92       	push	r15
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	cf 93       	push	r28
     1ec:	df 93       	push	r29
     1ee:	cd b7       	in	r28, 0x3d	; 61
     1f0:	de b7       	in	r29, 0x3e	; 62
     1f2:	28 01       	movw	r4, r16
     1f4:	39 01       	movw	r6, r18
     1f6:	9a 01       	movw	r18, r20
     1f8:	ab 01       	movw	r20, r22
     1fa:	24 19       	sub	r18, r4
     1fc:	35 09       	sbc	r19, r5
     1fe:	46 09       	sbc	r20, r6
     200:	57 09       	sbc	r21, r7
     202:	8b 89       	ldd	r24, Y+19	; 0x13
     204:	9c 89       	ldd	r25, Y+20	; 0x14
     206:	ad 89       	ldd	r26, Y+21	; 0x15
     208:	be 89       	ldd	r27, Y+22	; 0x16
     20a:	bc 01       	movw	r22, r24
     20c:	cd 01       	movw	r24, r26
     20e:	68 19       	sub	r22, r8
     210:	79 09       	sbc	r23, r9
     212:	8a 09       	sbc	r24, r10
     214:	9b 09       	sbc	r25, r11
     216:	a8 d6       	rcall	.+3408   	; 0xf68 <__mulsi3>
     218:	a7 01       	movw	r20, r14
     21a:	96 01       	movw	r18, r12
     21c:	24 19       	sub	r18, r4
     21e:	35 09       	sbc	r19, r5
     220:	46 09       	sbc	r20, r6
     222:	57 09       	sbc	r21, r7
     224:	b0 d6       	rcall	.+3424   	; 0xf86 <__divmodsi4>
     226:	ca 01       	movw	r24, r20
     228:	b9 01       	movw	r22, r18
     22a:	68 0d       	add	r22, r8
     22c:	79 1d       	adc	r23, r9
     22e:	8a 1d       	adc	r24, r10
     230:	9b 1d       	adc	r25, r11
     232:	df 91       	pop	r29
     234:	cf 91       	pop	r28
     236:	1f 91       	pop	r17
     238:	0f 91       	pop	r16
     23a:	ff 90       	pop	r15
     23c:	ef 90       	pop	r14
     23e:	df 90       	pop	r13
     240:	cf 90       	pop	r12
     242:	bf 90       	pop	r11
     244:	af 90       	pop	r10
     246:	9f 90       	pop	r9
     248:	8f 90       	pop	r8
     24a:	7f 90       	pop	r7
     24c:	6f 90       	pop	r6
     24e:	5f 90       	pop	r5
     250:	4f 90       	pop	r4
     252:	08 95       	ret

00000254 <_ZN8class_IO12KeyReadFlashEv>:
     254:	83 b3       	in	r24, 0x13	; 19
     256:	85 fb       	bst	r24, 5
     258:	88 27       	eor	r24, r24
     25a:	80 f9       	bld	r24, 0
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	89 27       	eor	r24, r25
     260:	08 95       	ret

00000262 <_ZN8class_IO12MedianFilterEiPiS0_>:
//	+-------------------------------------------------------------------------------+

#define FILTER_SIZE	5

int16_t	class_IO::MedianFilter(int16_t newValue,int16_t sortBuffer[],int16_t queueBuffer[])
{
     262:	1f 93       	push	r17
     264:	cf 93       	push	r28
     266:	df 93       	push	r29
     268:	d9 01       	movw	r26, r18
     26a:	e9 01       	movw	r28, r18
     26c:	28 96       	adiw	r28, 0x08	; 8
     26e:	f9 01       	movw	r30, r18
	int16_t tmp;
	//shift data into queue
	for(uint8_t i=0;i<(FILTER_SIZE-1);i++)
	{
		queueBuffer[i]=queueBuffer[i+1];
     270:	82 81       	ldd	r24, Z+2	; 0x02
     272:	93 81       	ldd	r25, Z+3	; 0x03
     274:	81 93       	st	Z+, r24
     276:	91 93       	st	Z+, r25

int16_t	class_IO::MedianFilter(int16_t newValue,int16_t sortBuffer[],int16_t queueBuffer[])
{
	int16_t tmp;
	//shift data into queue
	for(uint8_t i=0;i<(FILTER_SIZE-1);i++)
     278:	ec 17       	cp	r30, r28
     27a:	fd 07       	cpc	r31, r29
     27c:	c9 f7       	brne	.-14     	; 0x270 <_ZN8class_IO12MedianFilterEiPiS0_+0xe>
	{
		queueBuffer[i]=queueBuffer[i+1];
	}
	queueBuffer[FILTER_SIZE-1]=newValue;
     27e:	f9 01       	movw	r30, r18
     280:	71 87       	std	Z+9, r23	; 0x09
     282:	60 87       	std	Z+8, r22	; 0x08
     284:	14 2f       	mov	r17, r20
     286:	d5 2f       	mov	r29, r21
     288:	26 5f       	subi	r18, 0xF6	; 246
     28a:	3f 4f       	sbci	r19, 0xFF	; 255
     28c:	fa 01       	movw	r30, r20
	//transfer data to sortbuf
	for(uint8_t i=0;i<FILTER_SIZE;i++)
	{
		sortBuffer[i]=queueBuffer[i];
     28e:	8d 91       	ld	r24, X+
     290:	9d 91       	ld	r25, X+
     292:	81 93       	st	Z+, r24
     294:	91 93       	st	Z+, r25
	{
		queueBuffer[i]=queueBuffer[i+1];
	}
	queueBuffer[FILTER_SIZE-1]=newValue;
	//transfer data to sortbuf
	for(uint8_t i=0;i<FILTER_SIZE;i++)
     296:	a2 17       	cp	r26, r18
     298:	b3 07       	cpc	r27, r19
     29a:	c9 f7       	brne	.-14     	; 0x28e <_ZN8class_IO12MedianFilterEiPiS0_+0x2c>
     29c:	c2 e0       	ldi	r28, 0x02	; 2
     29e:	13 c0       	rjmp	.+38     	; 0x2c6 <_ZN8class_IO12MedianFilterEiPiS0_+0x64>
	//sort data to get median value
	for(uint8_t j=FILTER_SIZE-2;j>1;j--)
	{
		for(uint8_t i=0;i<j;i++)
		{
			if (sortBuffer[i]>sortBuffer[i+1])
     2a0:	81 91       	ld	r24, Z+
     2a2:	91 91       	ld	r25, Z+
     2a4:	20 81       	ld	r18, Z
     2a6:	31 81       	ldd	r19, Z+1	; 0x01
     2a8:	28 17       	cp	r18, r24
     2aa:	39 07       	cpc	r19, r25
     2ac:	34 f4       	brge	.+12     	; 0x2ba <_ZN8class_IO12MedianFilterEiPiS0_+0x58>
     2ae:	df 01       	movw	r26, r30
     2b0:	12 97       	sbiw	r26, 0x02	; 2
			{
				tmp=sortBuffer[i];
				sortBuffer[i]=sortBuffer[i+1];
     2b2:	2d 93       	st	X+, r18
     2b4:	3c 93       	st	X, r19
				sortBuffer[i+1]=tmp;
     2b6:	91 83       	std	Z+1, r25	; 0x01
     2b8:	80 83       	st	Z, r24
		sortBuffer[i]=queueBuffer[i];
	}
	//sort data to get median value
	for(uint8_t j=FILTER_SIZE-2;j>1;j--)
	{
		for(uint8_t i=0;i<j;i++)
     2ba:	e6 17       	cp	r30, r22
     2bc:	f7 07       	cpc	r31, r23
     2be:	81 f7       	brne	.-32     	; 0x2a0 <_ZN8class_IO12MedianFilterEiPiS0_+0x3e>
	for(uint8_t i=0;i<FILTER_SIZE;i++)
	{
		sortBuffer[i]=queueBuffer[i];
	}
	//sort data to get median value
	for(uint8_t j=FILTER_SIZE-2;j>1;j--)
     2c0:	c2 30       	cpi	r28, 0x02	; 2
     2c2:	70 f0       	brcs	.+28     	; 0x2e0 <_ZN8class_IO12MedianFilterEiPiS0_+0x7e>
     2c4:	c1 50       	subi	r28, 0x01	; 1
	{
		for(uint8_t i=0;i<j;i++)
     2c6:	cf 3f       	cpi	r28, 0xFF	; 255
     2c8:	e9 f3       	breq	.-6      	; 0x2c4 <_ZN8class_IO12MedianFilterEiPiS0_+0x62>
     2ca:	6c 2f       	mov	r22, r28
     2cc:	70 e0       	ldi	r23, 0x00	; 0
     2ce:	6f 5f       	subi	r22, 0xFF	; 255
     2d0:	7f 4f       	sbci	r23, 0xFF	; 255
     2d2:	66 0f       	add	r22, r22
     2d4:	77 1f       	adc	r23, r23
     2d6:	64 0f       	add	r22, r20
     2d8:	75 1f       	adc	r23, r21
     2da:	e1 2f       	mov	r30, r17
     2dc:	fd 2f       	mov	r31, r29
     2de:	e0 cf       	rjmp	.-64     	; 0x2a0 <_ZN8class_IO12MedianFilterEiPiS0_+0x3e>
				sortBuffer[i+1]=tmp;
			}
		}
	}
	return sortBuffer[FILTER_SIZE>>1];
}
     2e0:	fa 01       	movw	r30, r20
     2e2:	84 81       	ldd	r24, Z+4	; 0x04
     2e4:	95 81       	ldd	r25, Z+5	; 0x05
     2e6:	df 91       	pop	r29
     2e8:	cf 91       	pop	r28
     2ea:	1f 91       	pop	r17
     2ec:	08 95       	ret

000002ee <_ZN8class_IO16PWMSetTopAndFaseEjjjj>:
//	| @OUTPUT  :  none								                                |
//	| @REMARKS :																	|
//	+-------------------------------------------------------------------------------+

void	class_IO::PWMSetTopAndFase(uint16_t topPWM1,uint16_t fasePWM1,uint16_t topPWM2,uint16_t fasePWM2)
{
     2ee:	0f 93       	push	r16
     2f0:	1f 93       	push	r17
	uint8_t sreg;
	
	//save SREG
	sreg=SREG;
     2f2:	8f b7       	in	r24, 0x3f	; 63
	cli();
     2f4:	f8 94       	cli
	//FREQ AND FASE TIMER1 (FQ2)
	ICR1=topPWM2;
     2f6:	37 bd       	out	0x27, r19	; 39
     2f8:	26 bd       	out	0x26, r18	; 38
	OCR1A=fasePWM2;		
     2fa:	1b bd       	out	0x2b, r17	; 43
     2fc:	0a bd       	out	0x2a, r16	; 42
	//FREQ AND FASE TIMER2 (FQ1)
	OCR2=topPWM1;
     2fe:	63 bd       	out	0x23, r22	; 35
	_io.pwm2cp=fasePWM1;
     300:	40 93 92 00 	sts	0x0092, r20
	//restore SREG
	SREG=sreg;
     304:	8f bf       	out	0x3f, r24	; 63
	
}
     306:	1f 91       	pop	r17
     308:	0f 91       	pop	r16
     30a:	08 95       	ret

0000030c <_ZN8class_IO6LEDSetEb>:
//	| @OUTPUT  :  none								                                |
//	| @REMARKS :																	|
//	+-------------------------------------------------------------------------------+
void	class_IO::LEDSet(bool ledState)
{
	switch (ledState)
     30c:	61 30       	cpi	r22, 0x01	; 1
     30e:	11 f4       	brne	.+4      	; 0x314 <_ZN8class_IO6LEDSetEb+0x8>
	{
		case true:
			_IO_LED_PORT_OUTPUT&=~(1<<_IO_LED_BIT);
     310:	c0 98       	cbi	0x18, 0	; 24
			break;
     312:	08 95       	ret
		case false:
			_IO_LED_PORT_OUTPUT|=(1<<_IO_LED_BIT);
     314:	c0 9a       	sbi	0x18, 0	; 24
     316:	08 95       	ret

00000318 <_ZN8class_IO7LEDSwapEv>:
//	| @OUTPUT  :  none								                                |
//	| @REMARKS :																	|
//	+-------------------------------------------------------------------------------+
void	class_IO::LEDSwap()
{
	if ((_IO_LED_PORT_INPUT & (1<<_IO_LED_BIT))==0)
     318:	b0 99       	sbic	0x16, 0	; 22
     31a:	02 c0       	rjmp	.+4      	; 0x320 <_ZN8class_IO7LEDSwapEv+0x8>
	{
		_IO_LED_PORT_OUTPUT|=(1<<_IO_LED_BIT);
     31c:	c0 9a       	sbi	0x18, 0	; 24
     31e:	08 95       	ret
	}
	else
	{
		_IO_LED_PORT_OUTPUT&=~(1<<_IO_LED_BIT);
     320:	c0 98       	cbi	0x18, 0	; 24
     322:	08 95       	ret

00000324 <_GLOBAL__sub_I__io>:
 |        STRUCTS AND UNIONS		    |
 +--------------------------------------+
*/


struct _IO_Struct
     324:	e0 e9       	ldi	r30, 0x90	; 144
     326:	f0 e0       	ldi	r31, 0x00	; 0
     328:	10 82       	st	Z, r1
     32a:	11 82       	std	Z+1, r1	; 0x01
     32c:	8f e3       	ldi	r24, 0x3F	; 63
     32e:	82 83       	std	Z+2, r24	; 0x02
     330:	83 e9       	ldi	r24, 0x93	; 147
     332:	90 e0       	ldi	r25, 0x00	; 0
     334:	28 c5       	rjmp	.+2640   	; 0xd86 <_ZN10class_TimeC1Ev>
     336:	08 95       	ret

00000338 <main>:
	_seg=second;
	_min=minute;
	_hour=hour;
}
int main()
{
     338:	cf 93       	push	r28
     33a:	df 93       	push	r29
     33c:	cd b7       	in	r28, 0x3d	; 61
     33e:	de b7       	in	r29, 0x3e	; 62
     340:	68 97       	sbiw	r28, 0x18	; 24
     342:	0f b6       	in	r0, 0x3f	; 63
     344:	f8 94       	cli
     346:	de bf       	out	0x3e, r29	; 62
     348:	0f be       	out	0x3f, r0	; 63
     34a:	cd bf       	out	0x3d, r28	; 61
	#define defPwmDiv		64L
	#define defDiv(freq)	(F_CPU/(defPrescaler*defPwmDiv*freq)-1)
	#define defFreq(div)	(F_CPU/(defPrescaler*defPwmDiv*(div+1)))

	
	sei();
     34c:	78 94       	sei

	lcd.SetCursorState(OFF);
     34e:	60 e0       	ldi	r22, 0x00	; 0
     350:	8a e9       	ldi	r24, 0x9A	; 154
     352:	90 e0       	ldi	r25, 0x00	; 0
     354:	6f d4       	rcall	.+2270   	; 0xc34 <_ZN19class_HD44780_Drive14SetCursorStateEh>
	lcd.Locate(1,1);
     356:	41 e0       	ldi	r20, 0x01	; 1
     358:	61 e0       	ldi	r22, 0x01	; 1
     35a:	8a e9       	ldi	r24, 0x9A	; 154
     35c:	90 e0       	ldi	r25, 0x00	; 0
     35e:	79 d4       	rcall	.+2290   	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
				  //1234567890123456
	lcd.PutSF(PSTR("HHO Drive V"));
     360:	62 e3       	ldi	r22, 0x32	; 50
     362:	70 e0       	ldi	r23, 0x00	; 0
     364:	8a e9       	ldi	r24, 0x9A	; 154
     366:	90 e0       	ldi	r25, 0x00	; 0
     368:	c9 d4       	rcall	.+2450   	; 0xcfc <_ZN19class_HD44780_Drive5PutSFEPKc>
	sprintf(bf,"%d.%03d",_HHO_VERSION,_HHO_REVISION);
     36a:	1f 92       	push	r1
     36c:	8c e0       	ldi	r24, 0x0C	; 12
     36e:	8f 93       	push	r24
     370:	1f 92       	push	r1
     372:	81 e0       	ldi	r24, 0x01	; 1
     374:	8f 93       	push	r24
     376:	86 e6       	ldi	r24, 0x66	; 102
     378:	90 e0       	ldi	r25, 0x00	; 0
     37a:	9f 93       	push	r25
     37c:	8f 93       	push	r24
     37e:	89 e0       	ldi	r24, 0x09	; 9
     380:	91 e0       	ldi	r25, 0x01	; 1
     382:	9f 93       	push	r25
     384:	8f 93       	push	r24
     386:	86 d7       	rcall	.+3852   	; 0x1294 <sprintf>
	lcd.PutS(bf);
     388:	69 e0       	ldi	r22, 0x09	; 9
     38a:	71 e0       	ldi	r23, 0x01	; 1
     38c:	8a e9       	ldi	r24, 0x9A	; 154
     38e:	90 e0       	ldi	r25, 0x00	; 0
     390:	7a d4       	rcall	.+2292   	; 0xc86 <_ZN19class_HD44780_Drive4PutSEPc>
	//hi counter 2 interrupt 250khz reduce delay precision
	time.DelayMsS(2000);
     392:	60 ed       	ldi	r22, 0xD0	; 208
     394:	77 e0       	ldi	r23, 0x07	; 7
     396:	81 eb       	ldi	r24, 0xB1	; 177
     398:	90 e0       	ldi	r25, 0x00	; 0
     39a:	90 d5       	rcall	.+2848   	; 0xebc <_ZN10class_Time8DelayMsSEj>
	
	time.SetElapsed(&t);
     39c:	be 01       	movw	r22, r28
     39e:	67 5f       	subi	r22, 0xF7	; 247
     3a0:	7f 4f       	sbci	r23, 0xFF	; 255
     3a2:	81 eb       	ldi	r24, 0xB1	; 177
     3a4:	90 e0       	ldi	r25, 0x00	; 0
     3a6:	ad d5       	rcall	.+2906   	; 0xf02 <_ZN10class_Time10SetElapsedEPm>
	time.SetElapsed(&toc1);
     3a8:	be 01       	movw	r22, r28
     3aa:	6b 5f       	subi	r22, 0xFB	; 251
     3ac:	7f 4f       	sbci	r23, 0xFF	; 255
     3ae:	81 eb       	ldi	r24, 0xB1	; 177
     3b0:	90 e0       	ldi	r25, 0x00	; 0
     3b2:	a7 d5       	rcall	.+2894   	; 0xf02 <_ZN10class_Time10SetElapsedEPm>
	time.SetElapsed(&toc2);
     3b4:	be 01       	movw	r22, r28
     3b6:	6f 5f       	subi	r22, 0xFF	; 255
     3b8:	7f 4f       	sbci	r23, 0xFF	; 255
     3ba:	81 eb       	ldi	r24, 0xB1	; 177
     3bc:	90 e0       	ldi	r25, 0x00	; 0
     3be:	a1 d5       	rcall	.+2882   	; 0xf02 <_ZN10class_Time10SetElapsedEPm>
     3c0:	0f b6       	in	r0, 0x3f	; 63
     3c2:	f8 94       	cli
     3c4:	de bf       	out	0x3e, r29	; 62
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	cd bf       	out	0x3d, r28	; 61
		
		//*/
		
		//show values
		lcd.Locate(1,1);
		sprintf(bf,"F1=%4ld F2=%5ld",defFreq(fq1),F_CPU/fq2);
     3ca:	0f 2e       	mov	r0, r31
     3cc:	f9 e0       	ldi	r31, 0x09	; 9
     3ce:	2f 2e       	mov	r2, r31
     3d0:	f1 e0       	ldi	r31, 0x01	; 1
     3d2:	3f 2e       	mov	r3, r31
     3d4:	f0 2d       	mov	r31, r0
			{
				io.LEDSet(true);
				lcd.Cls();
				//1234567890123456
				lcd.PutSF(PSTR("HHO Drive V"));
				sprintf(bf,"%d.%03d",_HHO_VERSION,_HHO_REVISION);
     3d6:	2f 8a       	std	Y+23, r2	; 0x17
     3d8:	38 8e       	std	Y+24, r3	; 0x18
	for(;;)
	{
		///*
		//get F2 FREQUENCY
		//----------------------------------------------------------------------------------
		io.ADCSetChannel(_IO_ADC_CHANNEL_FQ2);
     3da:	62 e0       	ldi	r22, 0x02	; 2
     3dc:	88 eb       	ldi	r24, 0xB8	; 184
     3de:	90 e0       	ldi	r25, 0x00	; 0
     3e0:	e0 de       	rcall	.-576    	; 0x1a2 <_ZN8class_IO13ADCSetChannelEh>
		//convert to frequency range 500..95000Hz
		fq2=io.Range(io.ADCGetValue(),0,1023,500,95000);
     3e2:	88 eb       	ldi	r24, 0xB8	; 184
     3e4:	90 e0       	ldi	r25, 0x00	; 0
     3e6:	ea de       	rcall	.-556    	; 0x1bc <_ZN8class_IO11ADCGetValueEv>
     3e8:	ac 01       	movw	r20, r24
     3ea:	60 e0       	ldi	r22, 0x00	; 0
     3ec:	70 e0       	ldi	r23, 0x00	; 0
     3ee:	1f 92       	push	r1
     3f0:	81 e0       	ldi	r24, 0x01	; 1
     3f2:	8f 93       	push	r24
     3f4:	83 e7       	ldi	r24, 0x73	; 115
     3f6:	8f 93       	push	r24
     3f8:	88 e1       	ldi	r24, 0x18	; 24
     3fa:	8f 93       	push	r24
     3fc:	0f 2e       	mov	r0, r31
     3fe:	f4 ef       	ldi	r31, 0xF4	; 244
     400:	8f 2e       	mov	r8, r31
     402:	99 24       	eor	r9, r9
     404:	93 94       	inc	r9
     406:	a1 2c       	mov	r10, r1
     408:	b1 2c       	mov	r11, r1
     40a:	f0 2d       	mov	r31, r0
     40c:	0f 2e       	mov	r0, r31
     40e:	cc 24       	eor	r12, r12
     410:	ca 94       	dec	r12
     412:	f3 e0       	ldi	r31, 0x03	; 3
     414:	df 2e       	mov	r13, r31
     416:	e1 2c       	mov	r14, r1
     418:	f1 2c       	mov	r15, r1
     41a:	f0 2d       	mov	r31, r0
     41c:	00 e0       	ldi	r16, 0x00	; 0
     41e:	10 e0       	ldi	r17, 0x00	; 0
     420:	98 01       	movw	r18, r16
     422:	88 eb       	ldi	r24, 0xB8	; 184
     424:	90 e0       	ldi	r25, 0x00	; 0
     426:	d3 de       	rcall	.-602    	; 0x1ce <_ZN8class_IO5RangeElllll>
     428:	9b 01       	movw	r18, r22
     42a:	ac 01       	movw	r20, r24
		//apply median filter and convert to pwm divisor
		fq2=io.MedianFilter(F_CPU/fq2,f2SortBuf,f2QueueBuf);
     42c:	60 e0       	ldi	r22, 0x00	; 0
     42e:	72 e1       	ldi	r23, 0x12	; 18
     430:	8a e7       	ldi	r24, 0x7A	; 122
     432:	90 e0       	ldi	r25, 0x00	; 0
     434:	a8 d5       	rcall	.+2896   	; 0xf86 <__divmodsi4>
     436:	ca 01       	movw	r24, r20
     438:	b9 01       	movw	r22, r18
     43a:	2d ec       	ldi	r18, 0xCD	; 205
     43c:	30 e0       	ldi	r19, 0x00	; 0
     43e:	47 ed       	ldi	r20, 0xD7	; 215
     440:	50 e0       	ldi	r21, 0x00	; 0
     442:	88 eb       	ldi	r24, 0xB8	; 184
     444:	90 e0       	ldi	r25, 0x00	; 0
     446:	0d df       	rcall	.-486    	; 0x262 <_ZN8class_IO12MedianFilterEiPiS0_>
     448:	2c 01       	movw	r4, r24
     44a:	99 0f       	add	r25, r25
     44c:	66 08       	sbc	r6, r6
     44e:	77 08       	sbc	r7, r7
		//check for invalid DIV values
		if (fq2<84) fq2=84;
     450:	0f 90       	pop	r0
     452:	0f 90       	pop	r0
     454:	0f 90       	pop	r0
     456:	0f 90       	pop	r0
     458:	34 e5       	ldi	r19, 0x54	; 84
     45a:	43 16       	cp	r4, r19
     45c:	51 04       	cpc	r5, r1
     45e:	61 04       	cpc	r6, r1
     460:	71 04       	cpc	r7, r1
     462:	3c f4       	brge	.+14     	; 0x472 <__stack+0x13>
     464:	0f 2e       	mov	r0, r31
     466:	f4 e5       	ldi	r31, 0x54	; 84
     468:	4f 2e       	mov	r4, r31
     46a:	51 2c       	mov	r5, r1
     46c:	61 2c       	mov	r6, r1
     46e:	71 2c       	mov	r7, r1
     470:	f0 2d       	mov	r31, r0
     472:	81 e8       	ldi	r24, 0x81	; 129
     474:	48 16       	cp	r4, r24
     476:	8e e3       	ldi	r24, 0x3E	; 62
     478:	58 06       	cpc	r5, r24
     47a:	61 04       	cpc	r6, r1
     47c:	71 04       	cpc	r7, r1
     47e:	4c f0       	brlt	.+18     	; 0x492 <__stack+0x33>
     480:	68 94       	set
     482:	44 24       	eor	r4, r4
     484:	47 f8       	bld	r4, 7
     486:	0f 2e       	mov	r0, r31
     488:	fe e3       	ldi	r31, 0x3E	; 62
     48a:	5f 2e       	mov	r5, r31
     48c:	f0 2d       	mov	r31, r0
     48e:	61 2c       	mov	r6, r1
     490:	71 2c       	mov	r7, r1
		if (fq2>16000) fq2=16000;
		//get F2 FASE
		io.ADCSetChannel(_IO_ADC_CHANNEL_FS2);
     492:	63 e0       	ldi	r22, 0x03	; 3
     494:	88 eb       	ldi	r24, 0xB8	; 184
     496:	90 e0       	ldi	r25, 0x00	; 0
     498:	84 de       	rcall	.-760    	; 0x1a2 <_ZN8class_IO13ADCSetChannelEh>
		fs2=io.MedianFilter(io.Range(io.ADCGetValue(),0,1023,0,fq2),f2FSortBuf,f2FQueueBuf);
     49a:	88 eb       	ldi	r24, 0xB8	; 184
     49c:	90 e0       	ldi	r25, 0x00	; 0
     49e:	8e de       	rcall	.-740    	; 0x1bc <_ZN8class_IO11ADCGetValueEv>
     4a0:	ac 01       	movw	r20, r24
     4a2:	60 e0       	ldi	r22, 0x00	; 0
     4a4:	70 e0       	ldi	r23, 0x00	; 0
     4a6:	7f 92       	push	r7
     4a8:	6f 92       	push	r6
     4aa:	5f 92       	push	r5
     4ac:	4f 92       	push	r4
     4ae:	81 2c       	mov	r8, r1
     4b0:	91 2c       	mov	r9, r1
     4b2:	54 01       	movw	r10, r8
     4b4:	0f 2e       	mov	r0, r31
     4b6:	cc 24       	eor	r12, r12
     4b8:	ca 94       	dec	r12
     4ba:	f3 e0       	ldi	r31, 0x03	; 3
     4bc:	df 2e       	mov	r13, r31
     4be:	e1 2c       	mov	r14, r1
     4c0:	f1 2c       	mov	r15, r1
     4c2:	f0 2d       	mov	r31, r0
     4c4:	00 e0       	ldi	r16, 0x00	; 0
     4c6:	10 e0       	ldi	r17, 0x00	; 0
     4c8:	98 01       	movw	r18, r16
     4ca:	88 eb       	ldi	r24, 0xB8	; 184
     4cc:	90 e0       	ldi	r25, 0x00	; 0
     4ce:	7f de       	rcall	.-770    	; 0x1ce <_ZN8class_IO5RangeElllll>
     4d0:	29 eb       	ldi	r18, 0xB9	; 185
     4d2:	30 e0       	ldi	r19, 0x00	; 0
     4d4:	43 ec       	ldi	r20, 0xC3	; 195
     4d6:	50 e0       	ldi	r21, 0x00	; 0
     4d8:	88 eb       	ldi	r24, 0xB8	; 184
     4da:	90 e0       	ldi	r25, 0x00	; 0
     4dc:	c2 de       	rcall	.-636    	; 0x262 <_ZN8class_IO12MedianFilterEiPiS0_>
     4de:	9a 8b       	std	Y+18, r25	; 0x12
     4e0:	89 8b       	std	Y+17, r24	; 0x11
     4e2:	09 2e       	mov	r0, r25
     4e4:	00 0c       	add	r0, r0
     4e6:	aa 0b       	sbc	r26, r26
     4e8:	bb 0b       	sbc	r27, r27
     4ea:	8b 8b       	std	Y+19, r24	; 0x13
     4ec:	9c 8b       	std	Y+20, r25	; 0x14
     4ee:	ad 8b       	std	Y+21, r26	; 0x15
     4f0:	be 8b       	std	Y+22, r27	; 0x16
		//----------------------------------------------------------------------------------
		//get F1 FREQUENCY
		io.ADCSetChannel(_IO_ADC_CHANNEL_FQ1);
     4f2:	60 e0       	ldi	r22, 0x00	; 0
     4f4:	88 eb       	ldi	r24, 0xB8	; 184
     4f6:	90 e0       	ldi	r25, 0x00	; 0
     4f8:	54 de       	rcall	.-856    	; 0x1a2 <_ZN8class_IO13ADCSetChannelEh>
		//convert to frequency range 16..436Hz
		fq1=io.Range(io.ADCGetValue(),0,1023,16,436);
     4fa:	88 eb       	ldi	r24, 0xB8	; 184
     4fc:	90 e0       	ldi	r25, 0x00	; 0
     4fe:	5e de       	rcall	.-836    	; 0x1bc <_ZN8class_IO11ADCGetValueEv>
     500:	ac 01       	movw	r20, r24
     502:	60 e0       	ldi	r22, 0x00	; 0
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	1f 92       	push	r1
     508:	1f 92       	push	r1
     50a:	81 e0       	ldi	r24, 0x01	; 1
     50c:	8f 93       	push	r24
     50e:	84 eb       	ldi	r24, 0xB4	; 180
     510:	8f 93       	push	r24
     512:	81 2c       	mov	r8, r1
     514:	91 2c       	mov	r9, r1
     516:	54 01       	movw	r10, r8
     518:	68 94       	set
     51a:	84 f8       	bld	r8, 4
     51c:	00 e0       	ldi	r16, 0x00	; 0
     51e:	10 e0       	ldi	r17, 0x00	; 0
     520:	98 01       	movw	r18, r16
     522:	88 eb       	ldi	r24, 0xB8	; 184
     524:	90 e0       	ldi	r25, 0x00	; 0
     526:	53 de       	rcall	.-858    	; 0x1ce <_ZN8class_IO5RangeElllll>
		//apply median filter and convert to pwm divisor
		fq1=io.MedianFilter(defDiv(fq1),f1SortBuf,f1QueueBuf);
     528:	9b 01       	movw	r18, r22
     52a:	ac 01       	movw	r20, r24
     52c:	01 2e       	mov	r0, r17
     52e:	1b e0       	ldi	r17, 0x0B	; 11
     530:	22 0f       	add	r18, r18
     532:	33 1f       	adc	r19, r19
     534:	44 1f       	adc	r20, r20
     536:	55 1f       	adc	r21, r21
     538:	1a 95       	dec	r17
     53a:	d1 f7       	brne	.-12     	; 0x530 <__stack+0xd1>
     53c:	10 2d       	mov	r17, r0
     53e:	60 e0       	ldi	r22, 0x00	; 0
     540:	72 e1       	ldi	r23, 0x12	; 18
     542:	8a e7       	ldi	r24, 0x7A	; 122
     544:	90 e0       	ldi	r25, 0x00	; 0
     546:	1f d5       	rcall	.+2622   	; 0xf86 <__divmodsi4>
     548:	b9 01       	movw	r22, r18
     54a:	61 50       	subi	r22, 0x01	; 1
     54c:	71 09       	sbc	r23, r1
     54e:	25 ef       	ldi	r18, 0xF5	; 245
     550:	30 e0       	ldi	r19, 0x00	; 0
     552:	4f ef       	ldi	r20, 0xFF	; 255
     554:	50 e0       	ldi	r21, 0x00	; 0
     556:	88 eb       	ldi	r24, 0xB8	; 184
     558:	90 e0       	ldi	r25, 0x00	; 0
     55a:	83 de       	rcall	.-762    	; 0x262 <_ZN8class_IO12MedianFilterEiPiS0_>
     55c:	09 2e       	mov	r0, r25
     55e:	00 0c       	add	r0, r0
     560:	aa 0b       	sbc	r26, r26
     562:	bb 0b       	sbc	r27, r27
		//check for invalid DIV values
		if (fq1<7) fq1=7;
     564:	0f b6       	in	r0, 0x3f	; 63
     566:	f8 94       	cli
     568:	de bf       	out	0x3e, r29	; 62
     56a:	0f be       	out	0x3f, r0	; 63
     56c:	cd bf       	out	0x3d, r28	; 61
     56e:	87 30       	cpi	r24, 0x07	; 7
     570:	91 05       	cpc	r25, r1
     572:	a1 05       	cpc	r26, r1
     574:	b1 05       	cpc	r27, r1
     576:	24 f4       	brge	.+8      	; 0x580 <__stack+0x121>
     578:	87 e0       	ldi	r24, 0x07	; 7
     57a:	90 e0       	ldi	r25, 0x00	; 0
     57c:	a0 e0       	ldi	r26, 0x00	; 0
     57e:	b0 e0       	ldi	r27, 0x00	; 0
     580:	8d 87       	std	Y+13, r24	; 0x0d
     582:	9e 87       	std	Y+14, r25	; 0x0e
     584:	af 87       	std	Y+15, r26	; 0x0f
     586:	b8 8b       	std	Y+16, r27	; 0x10
     588:	84 3f       	cpi	r24, 0xF4	; 244
     58a:	91 05       	cpc	r25, r1
     58c:	a1 05       	cpc	r26, r1
     58e:	b1 05       	cpc	r27, r1
     590:	2c f0       	brlt	.+10     	; 0x59c <__stack+0x13d>
     592:	33 ef       	ldi	r19, 0xF3	; 243
     594:	3d 87       	std	Y+13, r19	; 0x0d
     596:	1e 86       	std	Y+14, r1	; 0x0e
     598:	1f 86       	std	Y+15, r1	; 0x0f
     59a:	18 8a       	std	Y+16, r1	; 0x10
		if (fq1>243) fq1=243;
		//get F1 FASE
		io.ADCSetChannel(_IO_ADC_CHANNEL_FS1);
     59c:	61 e0       	ldi	r22, 0x01	; 1
     59e:	88 eb       	ldi	r24, 0xB8	; 184
     5a0:	90 e0       	ldi	r25, 0x00	; 0
     5a2:	ff dd       	rcall	.-1026   	; 0x1a2 <_ZN8class_IO13ADCSetChannelEh>
		fs1=io.MedianFilter(io.Range(io.ADCGetValue(),0,1023,0,_IO_PWM_OC2_MAX_VALUE),f1FSortBuf,f1FQueueBuf);
     5a4:	88 eb       	ldi	r24, 0xB8	; 184
     5a6:	90 e0       	ldi	r25, 0x00	; 0
     5a8:	09 de       	rcall	.-1006   	; 0x1bc <_ZN8class_IO11ADCGetValueEv>
     5aa:	ac 01       	movw	r20, r24
     5ac:	60 e0       	ldi	r22, 0x00	; 0
     5ae:	70 e0       	ldi	r23, 0x00	; 0
     5b0:	1f 92       	push	r1
     5b2:	1f 92       	push	r1
     5b4:	1f 92       	push	r1
     5b6:	8f e3       	ldi	r24, 0x3F	; 63
     5b8:	8f 93       	push	r24
     5ba:	81 2c       	mov	r8, r1
     5bc:	91 2c       	mov	r9, r1
     5be:	54 01       	movw	r10, r8
     5c0:	0f 2e       	mov	r0, r31
     5c2:	cc 24       	eor	r12, r12
     5c4:	ca 94       	dec	r12
     5c6:	f3 e0       	ldi	r31, 0x03	; 3
     5c8:	df 2e       	mov	r13, r31
     5ca:	e1 2c       	mov	r14, r1
     5cc:	f1 2c       	mov	r15, r1
     5ce:	f0 2d       	mov	r31, r0
     5d0:	00 e0       	ldi	r16, 0x00	; 0
     5d2:	10 e0       	ldi	r17, 0x00	; 0
     5d4:	98 01       	movw	r18, r16
     5d6:	88 eb       	ldi	r24, 0xB8	; 184
     5d8:	90 e0       	ldi	r25, 0x00	; 0
     5da:	f9 dd       	rcall	.-1038   	; 0x1ce <_ZN8class_IO5RangeElllll>
     5dc:	21 ee       	ldi	r18, 0xE1	; 225
     5de:	30 e0       	ldi	r19, 0x00	; 0
     5e0:	4b ee       	ldi	r20, 0xEB	; 235
     5e2:	50 e0       	ldi	r21, 0x00	; 0
     5e4:	88 eb       	ldi	r24, 0xB8	; 184
     5e6:	90 e0       	ldi	r25, 0x00	; 0
     5e8:	3c de       	rcall	.-904    	; 0x262 <_ZN8class_IO12MedianFilterEiPiS0_>
     5ea:	7c 01       	movw	r14, r24
		//Set Freq and Fase
		io.PWMSetTopAndFase((uint16_t)fq1,(uint16_t)fs1,(uint16_t)fq2,(uint16_t)fs2);
     5ec:	09 89       	ldd	r16, Y+17	; 0x11
     5ee:	1a 89       	ldd	r17, Y+18	; 0x12
     5f0:	92 01       	movw	r18, r4
     5f2:	ac 01       	movw	r20, r24
     5f4:	6d 85       	ldd	r22, Y+13	; 0x0d
     5f6:	7e 85       	ldd	r23, Y+14	; 0x0e
     5f8:	88 eb       	ldi	r24, 0xB8	; 184
     5fa:	90 e0       	ldi	r25, 0x00	; 0
     5fc:	78 de       	rcall	.-784    	; 0x2ee <_ZN8class_IO16PWMSetTopAndFaseEjjjj>
		
		//*/
		
		//show values
		lcd.Locate(1,1);
     5fe:	41 e0       	ldi	r20, 0x01	; 1
     600:	61 e0       	ldi	r22, 0x01	; 1
     602:	8a e9       	ldi	r24, 0x9A	; 154
     604:	90 e0       	ldi	r25, 0x00	; 0
     606:	25 d3       	rcall	.+1610   	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
		sprintf(bf,"F1=%4ld F2=%5ld",defFreq(fq1),F_CPU/fq2);
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	72 e1       	ldi	r23, 0x12	; 18
     60c:	8a e7       	ldi	r24, 0x7A	; 122
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	a3 01       	movw	r20, r6
     612:	92 01       	movw	r18, r4
     614:	b8 d4       	rcall	.+2416   	; 0xf86 <__divmodsi4>
     616:	5f 93       	push	r21
     618:	4f 93       	push	r20
     61a:	3f 93       	push	r19
     61c:	2f 93       	push	r18
     61e:	8d 85       	ldd	r24, Y+13	; 0x0d
     620:	9e 85       	ldd	r25, Y+14	; 0x0e
     622:	af 85       	ldd	r26, Y+15	; 0x0f
     624:	b8 89       	ldd	r27, Y+16	; 0x10
     626:	01 96       	adiw	r24, 0x01	; 1
     628:	a1 1d       	adc	r26, r1
     62a:	b1 1d       	adc	r27, r1
     62c:	9c 01       	movw	r18, r24
     62e:	ad 01       	movw	r20, r26
     630:	01 2e       	mov	r0, r17
     632:	1b e0       	ldi	r17, 0x0B	; 11
     634:	22 0f       	add	r18, r18
     636:	33 1f       	adc	r19, r19
     638:	44 1f       	adc	r20, r20
     63a:	55 1f       	adc	r21, r21
     63c:	1a 95       	dec	r17
     63e:	d1 f7       	brne	.-12     	; 0x634 <__stack+0x1d5>
     640:	10 2d       	mov	r17, r0
     642:	60 e0       	ldi	r22, 0x00	; 0
     644:	72 e1       	ldi	r23, 0x12	; 18
     646:	8a e7       	ldi	r24, 0x7A	; 122
     648:	90 e0       	ldi	r25, 0x00	; 0
     64a:	9d d4       	rcall	.+2362   	; 0xf86 <__divmodsi4>
     64c:	5f 93       	push	r21
     64e:	4f 93       	push	r20
     650:	3f 93       	push	r19
     652:	2f 93       	push	r18
     654:	ae e6       	ldi	r26, 0x6E	; 110
     656:	b0 e0       	ldi	r27, 0x00	; 0
     658:	bf 93       	push	r27
     65a:	af 93       	push	r26
     65c:	3f 92       	push	r3
     65e:	2f 92       	push	r2
     660:	19 d6       	rcall	.+3122   	; 0x1294 <sprintf>
		lcd.PutS(bf);
     662:	b1 01       	movw	r22, r2
     664:	8a e9       	ldi	r24, 0x9A	; 154
     666:	90 e0       	ldi	r25, 0x00	; 0
     668:	0e d3       	rcall	.+1564   	; 0xc86 <_ZN19class_HD44780_Drive4PutSEPc>
		lcd.Locate(2,1);
     66a:	41 e0       	ldi	r20, 0x01	; 1
     66c:	62 e0       	ldi	r22, 0x02	; 2
     66e:	8a e9       	ldi	r24, 0x9A	; 154
     670:	90 e0       	ldi	r25, 0x00	; 0
     672:	ef d2       	rcall	.+1502   	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
		//check for invalid DIV values
		if (fq1<7) fq1=7;
		if (fq1>243) fq1=243;
		//get F1 FASE
		io.ADCSetChannel(_IO_ADC_CHANNEL_FS1);
		fs1=io.MedianFilter(io.Range(io.ADCGetValue(),0,1023,0,_IO_PWM_OC2_MAX_VALUE),f1FSortBuf,f1FQueueBuf);
     674:	a7 01       	movw	r20, r14
     676:	ff 0c       	add	r15, r15
     678:	66 0b       	sbc	r22, r22
     67a:	77 0b       	sbc	r23, r23
		//show values
		lcd.Locate(1,1);
		sprintf(bf,"F1=%4ld F2=%5ld",defFreq(fq1),F_CPU/fq2);
		lcd.PutS(bf);
		lcd.Locate(2,1);
		sprintf(bf,"D1=%3ld",io.Range(fs1,0,_IO_PWM_OC2_MAX_VALUE,0,100));
     67c:	1f 92       	push	r1
     67e:	1f 92       	push	r1
     680:	1f 92       	push	r1
     682:	34 e6       	ldi	r19, 0x64	; 100
     684:	3f 93       	push	r19
     686:	0f 2e       	mov	r0, r31
     688:	ff e3       	ldi	r31, 0x3F	; 63
     68a:	cf 2e       	mov	r12, r31
     68c:	d1 2c       	mov	r13, r1
     68e:	e1 2c       	mov	r14, r1
     690:	f1 2c       	mov	r15, r1
     692:	f0 2d       	mov	r31, r0
     694:	00 e0       	ldi	r16, 0x00	; 0
     696:	10 e0       	ldi	r17, 0x00	; 0
     698:	98 01       	movw	r18, r16
     69a:	88 eb       	ldi	r24, 0xB8	; 184
     69c:	90 e0       	ldi	r25, 0x00	; 0
     69e:	97 dd       	rcall	.-1234   	; 0x1ce <_ZN8class_IO5RangeElllll>
     6a0:	9f 93       	push	r25
     6a2:	8f 93       	push	r24
     6a4:	7f 93       	push	r23
     6a6:	6f 93       	push	r22
     6a8:	ae e7       	ldi	r26, 0x7E	; 126
     6aa:	b0 e0       	ldi	r27, 0x00	; 0
     6ac:	bf 93       	push	r27
     6ae:	af 93       	push	r26
     6b0:	3f 92       	push	r3
     6b2:	2f 92       	push	r2
     6b4:	ef d5       	rcall	.+3038   	; 0x1294 <sprintf>
		lcd.PutS(bf);
     6b6:	b1 01       	movw	r22, r2
     6b8:	8a e9       	ldi	r24, 0x9A	; 154
     6ba:	90 e0       	ldi	r25, 0x00	; 0
     6bc:	e4 d2       	rcall	.+1480   	; 0xc86 <_ZN19class_HD44780_Drive4PutSEPc>
		lcd.PutC('%');
     6be:	65 e2       	ldi	r22, 0x25	; 37
     6c0:	8a e9       	ldi	r24, 0x9A	; 154
     6c2:	90 e0       	ldi	r25, 0x00	; 0
     6c4:	de d2       	rcall	.+1468   	; 0xc82 <_ZN19class_HD44780_Drive4PutCEc>
		sprintf(bf," D2=%3ld",io.Range(fs2,0,fq2,0,100));
     6c6:	1f 92       	push	r1
     6c8:	1f 92       	push	r1
     6ca:	1f 92       	push	r1
     6cc:	34 e6       	ldi	r19, 0x64	; 100
     6ce:	3f 93       	push	r19
     6d0:	73 01       	movw	r14, r6
     6d2:	62 01       	movw	r12, r4
     6d4:	00 e0       	ldi	r16, 0x00	; 0
     6d6:	10 e0       	ldi	r17, 0x00	; 0
     6d8:	98 01       	movw	r18, r16
     6da:	4b 89       	ldd	r20, Y+19	; 0x13
     6dc:	5c 89       	ldd	r21, Y+20	; 0x14
     6de:	6d 89       	ldd	r22, Y+21	; 0x15
     6e0:	7e 89       	ldd	r23, Y+22	; 0x16
     6e2:	88 eb       	ldi	r24, 0xB8	; 184
     6e4:	90 e0       	ldi	r25, 0x00	; 0
     6e6:	73 dd       	rcall	.-1306   	; 0x1ce <_ZN8class_IO5RangeElllll>
     6e8:	0f b6       	in	r0, 0x3f	; 63
     6ea:	f8 94       	cli
     6ec:	de bf       	out	0x3e, r29	; 62
     6ee:	0f be       	out	0x3f, r0	; 63
     6f0:	cd bf       	out	0x3d, r28	; 61
     6f2:	9f 93       	push	r25
     6f4:	8f 93       	push	r24
     6f6:	7f 93       	push	r23
     6f8:	6f 93       	push	r22
     6fa:	a6 e8       	ldi	r26, 0x86	; 134
     6fc:	b0 e0       	ldi	r27, 0x00	; 0
     6fe:	bf 93       	push	r27
     700:	af 93       	push	r26
     702:	3f 92       	push	r3
     704:	2f 92       	push	r2
     706:	c6 d5       	rcall	.+2956   	; 0x1294 <sprintf>
		lcd.PutS(bf);
     708:	b1 01       	movw	r22, r2
     70a:	8a e9       	ldi	r24, 0x9A	; 154
     70c:	90 e0       	ldi	r25, 0x00	; 0
     70e:	bb d2       	rcall	.+1398   	; 0xc86 <_ZN19class_HD44780_Drive4PutSEPc>
		lcd.PutC('%');
     710:	65 e2       	ldi	r22, 0x25	; 37
     712:	8a e9       	ldi	r24, 0x9A	; 154
     714:	90 e0       	ldi	r25, 0x00	; 0
     716:	b5 d2       	rcall	.+1386   	; 0xc82 <_ZN19class_HD44780_Drive4PutCEc>
	
		io.LEDSwap();
     718:	88 eb       	ldi	r24, 0xB8	; 184
     71a:	90 e0       	ldi	r25, 0x00	; 0
     71c:	fd dd       	rcall	.-1030   	; 0x318 <_ZN8class_IO7LEDSwapEv>
	
		if (io.KeyReadFlash()==KEY_DOWN)
     71e:	88 eb       	ldi	r24, 0xB8	; 184
     720:	90 e0       	ldi	r25, 0x00	; 0
     722:	98 dd       	rcall	.-1232   	; 0x254 <_ZN8class_IO12KeyReadFlashEv>
     724:	0f b6       	in	r0, 0x3f	; 63
     726:	f8 94       	cli
     728:	de bf       	out	0x3e, r29	; 62
     72a:	0f be       	out	0x3f, r0	; 63
     72c:	cd bf       	out	0x3d, r28	; 61
     72e:	81 30       	cpi	r24, 0x01	; 1
     730:	09 f0       	breq	.+2      	; 0x734 <__stack+0x2d5>
     732:	3f c0       	rjmp	.+126    	; 0x7b2 <__stack+0x353>
     734:	ff 88       	ldd	r15, Y+23	; 0x17
     736:	e8 8c       	ldd	r14, Y+24	; 0x18
		{
			for(;;)
			{
				io.LEDSet(true);
     738:	61 e0       	ldi	r22, 0x01	; 1
     73a:	88 eb       	ldi	r24, 0xB8	; 184
     73c:	90 e0       	ldi	r25, 0x00	; 0
     73e:	e6 dd       	rcall	.-1076   	; 0x30c <_ZN8class_IO6LEDSetEb>
				lcd.Cls();
     740:	8a e9       	ldi	r24, 0x9A	; 154
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	2c d2       	rcall	.+1112   	; 0xb9e <_ZN19class_HD44780_Drive3ClsEv>
				//1234567890123456
				lcd.PutSF(PSTR("HHO Drive V"));
     746:	66 e2       	ldi	r22, 0x26	; 38
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	8a e9       	ldi	r24, 0x9A	; 154
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	d6 d2       	rcall	.+1452   	; 0xcfc <_ZN19class_HD44780_Drive5PutSFEPKc>
				sprintf(bf,"%d.%03d",_HHO_VERSION,_HHO_REVISION);
     750:	1f 92       	push	r1
     752:	bc e0       	ldi	r27, 0x0C	; 12
     754:	bf 93       	push	r27
     756:	1f 92       	push	r1
     758:	81 e0       	ldi	r24, 0x01	; 1
     75a:	8f 93       	push	r24
     75c:	a6 e6       	ldi	r26, 0x66	; 102
     75e:	b0 e0       	ldi	r27, 0x00	; 0
     760:	bf 93       	push	r27
     762:	af 93       	push	r26
     764:	3f 92       	push	r3
     766:	2f 92       	push	r2
     768:	95 d5       	rcall	.+2858   	; 0x1294 <sprintf>
				lcd.PutS(bf);				
     76a:	6f 2d       	mov	r22, r15
     76c:	7e 2d       	mov	r23, r14
     76e:	8a e9       	ldi	r24, 0x9A	; 154
     770:	90 e0       	ldi	r25, 0x00	; 0
     772:	89 d2       	rcall	.+1298   	; 0xc86 <_ZN19class_HD44780_Drive4PutSEPc>
				time.DelayMsI(500);
     774:	44 ef       	ldi	r20, 0xF4	; 244
     776:	51 e0       	ldi	r21, 0x01	; 1
     778:	60 e0       	ldi	r22, 0x00	; 0
     77a:	70 e0       	ldi	r23, 0x00	; 0
     77c:	81 eb       	ldi	r24, 0xB1	; 177
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	cb d3       	rcall	.+1942   	; 0xf18 <_ZN10class_Time8DelayMsIEm>
				lcd.Cls();
     782:	8a e9       	ldi	r24, 0x9A	; 154
     784:	90 e0       	ldi	r25, 0x00	; 0
     786:	0b d2       	rcall	.+1046   	; 0xb9e <_ZN19class_HD44780_Drive3ClsEv>
				io.LEDSet(false);
     788:	60 e0       	ldi	r22, 0x00	; 0
     78a:	88 eb       	ldi	r24, 0xB8	; 184
     78c:	90 e0       	ldi	r25, 0x00	; 0
     78e:	be dd       	rcall	.-1156   	; 0x30c <_ZN8class_IO6LEDSetEb>
				time.DelayMsI(500);
     790:	44 ef       	ldi	r20, 0xF4	; 244
     792:	51 e0       	ldi	r21, 0x01	; 1
     794:	60 e0       	ldi	r22, 0x00	; 0
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	81 eb       	ldi	r24, 0xB1	; 177
     79a:	90 e0       	ldi	r25, 0x00	; 0
     79c:	bd d3       	rcall	.+1914   	; 0xf18 <_ZN10class_Time8DelayMsIEm>
				if (io.KeyReadFlash()==KEY_NONE) break;
     79e:	88 eb       	ldi	r24, 0xB8	; 184
     7a0:	90 e0       	ldi	r25, 0x00	; 0
     7a2:	58 dd       	rcall	.-1360   	; 0x254 <_ZN8class_IO12KeyReadFlashEv>
     7a4:	0f b6       	in	r0, 0x3f	; 63
     7a6:	f8 94       	cli
     7a8:	de bf       	out	0x3e, r29	; 62
     7aa:	0f be       	out	0x3f, r0	; 63
     7ac:	cd bf       	out	0x3d, r28	; 61
     7ae:	81 11       	cpse	r24, r1
     7b0:	c3 cf       	rjmp	.-122    	; 0x738 <__stack+0x2d9>
			}
		}
		time.DelayMsI(50);
     7b2:	42 e3       	ldi	r20, 0x32	; 50
     7b4:	50 e0       	ldi	r21, 0x00	; 0
     7b6:	60 e0       	ldi	r22, 0x00	; 0
     7b8:	70 e0       	ldi	r23, 0x00	; 0
     7ba:	81 eb       	ldi	r24, 0xB1	; 177
     7bc:	90 e0       	ldi	r25, 0x00	; 0
     7be:	ac d3       	rcall	.+1880   	; 0xf18 <_ZN10class_Time8DelayMsIEm>
	}
     7c0:	0c ce       	rjmp	.-1000   	; 0x3da <main+0xa2>

000007c2 <_GLOBAL__sub_I_bf>:
int16_t f2QueueBuf[FILTER_SIZE];
int16_t	f2FSortBuf[FILTER_SIZE];
int16_t f2FQueueBuf[FILTER_SIZE];


class_IO				io;
     7c2:	88 eb       	ldi	r24, 0xB8	; 184
     7c4:	90 e0       	ldi	r25, 0x00	; 0
     7c6:	eb dc       	rcall	.-1578   	; 0x19e <_ZN8class_IOC1Ev>
class_Time				time;
     7c8:	81 eb       	ldi	r24, 0xB1	; 177
     7ca:	90 e0       	ldi	r25, 0x00	; 0
     7cc:	dc d2       	rcall	.+1464   	; 0xd86 <_ZN10class_TimeC1Ev>
class_HD44780_Drive		lcd(_lcd_INTERFACE::SIZE_4_BITS,2,16);
     7ce:	20 e1       	ldi	r18, 0x10	; 16
     7d0:	42 e0       	ldi	r20, 0x02	; 2
     7d2:	64 e0       	ldi	r22, 0x04	; 4
     7d4:	70 e0       	ldi	r23, 0x00	; 0
     7d6:	8a e9       	ldi	r24, 0x9A	; 154
     7d8:	90 e0       	ldi	r25, 0x00	; 0
     7da:	ec c1       	rjmp	.+984    	; 0xbb4 <_ZN19class_HD44780_DriveC1E18enum_lcd_INTERFACEhh>
     7dc:	08 95       	ret

000007de <_GLOBAL__sub_D_bf>:
     7de:	8a e9       	ldi	r24, 0x9A	; 154
     7e0:	90 e0       	ldi	r25, 0x00	; 0
     7e2:	61 c0       	rjmp	.+194    	; 0x8a6 <_ZN19class_HD44780_DriveD1Ev>
     7e4:	08 95       	ret

000007e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>:
	else
	{
		REG3&=~(1<<static_cast<uint8_t>(_lcd_BIT::B));
	}
	//send command to display
	CmdWrite(REG3);
     7e6:	fc 01       	movw	r30, r24
     7e8:	2f b7       	in	r18, 0x3f	; 63
     7ea:	f8 94       	cli
     7ec:	61 15       	cp	r22, r1
     7ee:	71 05       	cpc	r23, r1
     7f0:	21 f0       	breq	.+8      	; 0x7fa <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x14>
     7f2:	62 30       	cpi	r22, 0x02	; 2
     7f4:	71 05       	cpc	r23, r1
     7f6:	d1 f4       	brne	.+52     	; 0x82c <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x46>
     7f8:	03 c0       	rjmp	.+6      	; 0x800 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x1a>
     7fa:	90 98       	cbi	0x12, 0	; 18
     7fc:	91 98       	cbi	0x12, 1	; 18
     7fe:	02 c0       	rjmp	.+4      	; 0x804 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x1e>
     800:	90 9a       	sbi	0x12, 0	; 18
     802:	91 98       	cbi	0x12, 1	; 18
     804:	84 81       	ldd	r24, Z+4	; 0x04
     806:	95 81       	ldd	r25, Z+5	; 0x05
     808:	08 97       	sbiw	r24, 0x08	; 8
     80a:	31 f4       	brne	.+12     	; 0x818 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x32>
     80c:	da 01       	movw	r26, r20
     80e:	8c 91       	ld	r24, X
     810:	82 bb       	out	0x12, r24	; 18
     812:	8f ef       	ldi	r24, 0xFF	; 255
     814:	81 bb       	out	0x11, r24	; 17
     816:	0a c0       	rjmp	.+20     	; 0x82c <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x46>
     818:	92 b3       	in	r25, 0x12	; 18
     81a:	da 01       	movw	r26, r20
     81c:	8c 91       	ld	r24, X
     81e:	80 7f       	andi	r24, 0xF0	; 240
     820:	9f 70       	andi	r25, 0x0F	; 15
     822:	98 2b       	or	r25, r24
     824:	92 bb       	out	0x12, r25	; 18
     826:	81 b3       	in	r24, 0x11	; 17
     828:	80 6f       	ori	r24, 0xF0	; 240
     82a:	81 bb       	out	0x11, r24	; 17
     82c:	61 30       	cpi	r22, 0x01	; 1
     82e:	71 05       	cpc	r23, r1
     830:	19 f4       	brne	.+6      	; 0x838 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x52>
     832:	90 98       	cbi	0x12, 0	; 18
     834:	91 9a       	sbi	0x12, 1	; 18
     836:	05 c0       	rjmp	.+10     	; 0x842 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x5c>
     838:	63 30       	cpi	r22, 0x03	; 3
     83a:	71 05       	cpc	r23, r1
     83c:	11 f4       	brne	.+4      	; 0x842 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x5c>
     83e:	90 9a       	sbi	0x12, 0	; 18
     840:	91 9a       	sbi	0x12, 1	; 18
	...
     84e:	92 9a       	sbi	0x12, 2	; 18
	...
     858:	00 00       	nop
     85a:	6d 7f       	andi	r22, 0xFD	; 253
     85c:	61 30       	cpi	r22, 0x01	; 1
     85e:	71 05       	cpc	r23, r1
     860:	61 f4       	brne	.+24     	; 0x87a <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x94>
     862:	84 81       	ldd	r24, Z+4	; 0x04
     864:	95 81       	ldd	r25, Z+5	; 0x05
     866:	08 97       	sbiw	r24, 0x08	; 8
     868:	21 f4       	brne	.+8      	; 0x872 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x8c>
     86a:	80 b3       	in	r24, 0x10	; 16
     86c:	fa 01       	movw	r30, r20
     86e:	80 83       	st	Z, r24
     870:	04 c0       	rjmp	.+8      	; 0x87a <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh+0x94>
     872:	80 b3       	in	r24, 0x10	; 16
     874:	80 7f       	andi	r24, 0xF0	; 240
     876:	da 01       	movw	r26, r20
     878:	8c 93       	st	X, r24
	...
     882:	00 00       	nop
     884:	92 98       	cbi	0x12, 2	; 18
	...
     88e:	82 b3       	in	r24, 0x12	; 18
     890:	80 6f       	ori	r24, 0xF0	; 240
     892:	82 bb       	out	0x12, r24	; 18
     894:	81 b3       	in	r24, 0x11	; 17
     896:	8f 70       	andi	r24, 0x0F	; 15
     898:	81 bb       	out	0x11, r24	; 17
	...
     8a2:	2f bf       	out	0x3f, r18	; 63
     8a4:	08 95       	ret

000008a6 <_ZN19class_HD44780_DriveD1Ev>:
     8a6:	cf 93       	push	r28
     8a8:	df 93       	push	r29
     8aa:	ec 01       	movw	r28, r24
     8ac:	8b 89       	ldd	r24, Y+19	; 0x13
     8ae:	9c 89       	ldd	r25, Y+20	; 0x14
     8b0:	59 d4       	rcall	.+2226   	; 0x1164 <free>
     8b2:	8d 89       	ldd	r24, Y+21	; 0x15
     8b4:	9e 89       	ldd	r25, Y+22	; 0x16
     8b6:	56 d4       	rcall	.+2220   	; 0x1164 <free>
     8b8:	df 91       	pop	r29
     8ba:	cf 91       	pop	r28
     8bc:	08 95       	ret

000008be <_ZN19class_HD44780_Drive7CmdReadEv>:
     8be:	0f 93       	push	r16
     8c0:	1f 93       	push	r17
     8c2:	cf 93       	push	r28
     8c4:	df 93       	push	r29
     8c6:	00 d0       	rcall	.+0      	; 0x8c8 <_ZN19class_HD44780_Drive7CmdReadEv+0xa>
     8c8:	cd b7       	in	r28, 0x3d	; 61
     8ca:	de b7       	in	r29, 0x3e	; 62
     8cc:	8c 01       	movw	r16, r24
     8ce:	ae 01       	movw	r20, r28
     8d0:	4e 5f       	subi	r20, 0xFE	; 254
     8d2:	5f 4f       	sbci	r21, 0xFF	; 255
     8d4:	61 e0       	ldi	r22, 0x01	; 1
     8d6:	70 e0       	ldi	r23, 0x00	; 0
     8d8:	86 df       	rcall	.-244    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     8da:	f8 01       	movw	r30, r16
     8dc:	84 81       	ldd	r24, Z+4	; 0x04
     8de:	95 81       	ldd	r25, Z+5	; 0x05
     8e0:	04 97       	sbiw	r24, 0x04	; 4
     8e2:	79 f4       	brne	.+30     	; 0x902 <_ZN19class_HD44780_Drive7CmdReadEv+0x44>
     8e4:	ae 01       	movw	r20, r28
     8e6:	4f 5f       	subi	r20, 0xFF	; 255
     8e8:	5f 4f       	sbci	r21, 0xFF	; 255
     8ea:	61 e0       	ldi	r22, 0x01	; 1
     8ec:	70 e0       	ldi	r23, 0x00	; 0
     8ee:	c8 01       	movw	r24, r16
     8f0:	7a df       	rcall	.-268    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     8f2:	89 81       	ldd	r24, Y+1	; 0x01
     8f4:	98 2f       	mov	r25, r24
     8f6:	92 95       	swap	r25
     8f8:	9f 70       	andi	r25, 0x0F	; 15
     8fa:	8a 81       	ldd	r24, Y+2	; 0x02
     8fc:	80 7f       	andi	r24, 0xF0	; 240
     8fe:	89 2b       	or	r24, r25
     900:	01 c0       	rjmp	.+2      	; 0x904 <_ZN19class_HD44780_Drive7CmdReadEv+0x46>
     902:	8a 81       	ldd	r24, Y+2	; 0x02
     904:	0f 90       	pop	r0
     906:	0f 90       	pop	r0
     908:	df 91       	pop	r29
     90a:	cf 91       	pop	r28
     90c:	1f 91       	pop	r17
     90e:	0f 91       	pop	r16
     910:	08 95       	ret

00000912 <_ZN19class_HD44780_Drive4BusyEv>:
     912:	cf 93       	push	r28
     914:	fc 01       	movw	r30, r24
     916:	c0 85       	ldd	r28, Z+8	; 0x08
     918:	cc 23       	and	r28, r28
     91a:	31 f0       	breq	.+12     	; 0x928 <_ZN19class_HD44780_Drive4BusyEv+0x16>
     91c:	d0 df       	rcall	.-96     	; 0x8be <_ZN19class_HD44780_Drive7CmdReadEv>
     91e:	c8 2f       	mov	r28, r24
     920:	cc 1f       	adc	r28, r28
     922:	cc 27       	eor	r28, r28
     924:	cc 1f       	adc	r28, r28
     926:	05 c0       	rjmp	.+10     	; 0x932 <_ZN19class_HD44780_Drive4BusyEv+0x20>
     928:	fc 01       	movw	r30, r24
     92a:	62 85       	ldd	r22, Z+10	; 0x0a
     92c:	73 85       	ldd	r23, Z+11	; 0x0b
     92e:	0c 96       	adiw	r24, 0x0c	; 12
     930:	c5 d2       	rcall	.+1418   	; 0xebc <_ZN10class_Time8DelayMsSEj>
     932:	8c 2f       	mov	r24, r28
     934:	cf 91       	pop	r28
     936:	08 95       	ret

00000938 <_ZN19class_HD44780_Drive8CmdWriteEh>:
     938:	0f 93       	push	r16
     93a:	1f 93       	push	r17
     93c:	cf 93       	push	r28
     93e:	df 93       	push	r29
     940:	1f 92       	push	r1
     942:	cd b7       	in	r28, 0x3d	; 61
     944:	de b7       	in	r29, 0x3e	; 62
     946:	8c 01       	movw	r16, r24
     948:	69 83       	std	Y+1, r22	; 0x01
     94a:	c8 01       	movw	r24, r16
     94c:	e2 df       	rcall	.-60     	; 0x912 <_ZN19class_HD44780_Drive4BusyEv>
     94e:	81 11       	cpse	r24, r1
     950:	fc cf       	rjmp	.-8      	; 0x94a <_ZN19class_HD44780_Drive8CmdWriteEh+0x12>
     952:	ae 01       	movw	r20, r28
     954:	4f 5f       	subi	r20, 0xFF	; 255
     956:	5f 4f       	sbci	r21, 0xFF	; 255
     958:	60 e0       	ldi	r22, 0x00	; 0
     95a:	70 e0       	ldi	r23, 0x00	; 0
     95c:	c8 01       	movw	r24, r16
     95e:	43 df       	rcall	.-378    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     960:	f8 01       	movw	r30, r16
     962:	84 81       	ldd	r24, Z+4	; 0x04
     964:	95 81       	ldd	r25, Z+5	; 0x05
     966:	04 97       	sbiw	r24, 0x04	; 4
     968:	59 f4       	brne	.+22     	; 0x980 <_ZN19class_HD44780_Drive8CmdWriteEh+0x48>
     96a:	89 81       	ldd	r24, Y+1	; 0x01
     96c:	82 95       	swap	r24
     96e:	80 7f       	andi	r24, 0xF0	; 240
     970:	89 83       	std	Y+1, r24	; 0x01
     972:	ae 01       	movw	r20, r28
     974:	4f 5f       	subi	r20, 0xFF	; 255
     976:	5f 4f       	sbci	r21, 0xFF	; 255
     978:	60 e0       	ldi	r22, 0x00	; 0
     97a:	70 e0       	ldi	r23, 0x00	; 0
     97c:	c8 01       	movw	r24, r16
     97e:	33 df       	rcall	.-410    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     980:	0f 90       	pop	r0
     982:	df 91       	pop	r29
     984:	cf 91       	pop	r28
     986:	1f 91       	pop	r17
     988:	0f 91       	pop	r16
     98a:	08 95       	ret

0000098c <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh>:
     98c:	bf 92       	push	r11
     98e:	cf 92       	push	r12
     990:	df 92       	push	r13
     992:	ef 92       	push	r14
     994:	ff 92       	push	r15
     996:	0f 93       	push	r16
     998:	1f 93       	push	r17
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	1f 92       	push	r1
     9a0:	cd b7       	in	r28, 0x3d	; 61
     9a2:	de b7       	in	r29, 0x3e	; 62
     9a4:	8c 01       	movw	r16, r24
     9a6:	c4 2e       	mov	r12, r20
     9a8:	bf b6       	in	r11, 0x3f	; 63
     9aa:	f8 94       	cli
     9ac:	fc 01       	movw	r30, r24
     9ae:	41 83       	std	Z+1, r20	; 0x01
     9b0:	81 e0       	ldi	r24, 0x01	; 1
     9b2:	80 83       	st	Z, r24
     9b4:	23 83       	std	Z+3, r18	; 0x03
     9b6:	82 83       	std	Z+2, r24	; 0x02
     9b8:	cb 01       	movw	r24, r22
     9ba:	99 27       	eor	r25, r25
     9bc:	84 30       	cpi	r24, 0x04	; 4
     9be:	91 05       	cpc	r25, r1
     9c0:	19 f0       	breq	.+6      	; 0x9c8 <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh+0x3c>
     9c2:	08 97       	sbiw	r24, 0x08	; 8
     9c4:	59 f0       	breq	.+22     	; 0x9dc <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh+0x50>
     9c6:	10 c0       	rjmp	.+32     	; 0x9e8 <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh+0x5c>
     9c8:	f8 01       	movw	r30, r16
     9ca:	75 83       	std	Z+5, r23	; 0x05
     9cc:	64 83       	std	Z+4, r22	; 0x04
     9ce:	82 b3       	in	r24, 0x12	; 18
     9d0:	80 6f       	ori	r24, 0xF0	; 240
     9d2:	82 bb       	out	0x12, r24	; 18
     9d4:	81 b3       	in	r24, 0x11	; 17
     9d6:	8f 70       	andi	r24, 0x0F	; 15
     9d8:	81 bb       	out	0x11, r24	; 17
     9da:	06 c0       	rjmp	.+12     	; 0x9e8 <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh+0x5c>
     9dc:	f8 01       	movw	r30, r16
     9de:	75 83       	std	Z+5, r23	; 0x05
     9e0:	64 83       	std	Z+4, r22	; 0x04
     9e2:	8f ef       	ldi	r24, 0xFF	; 255
     9e4:	82 bb       	out	0x12, r24	; 18
     9e6:	11 ba       	out	0x11, r1	; 17
     9e8:	92 98       	cbi	0x12, 2	; 18
     9ea:	8a 9a       	sbi	0x11, 2	; 17
     9ec:	91 9a       	sbi	0x12, 1	; 18
     9ee:	89 9a       	sbi	0x11, 1	; 17
     9f0:	90 9a       	sbi	0x12, 0	; 18
     9f2:	88 9a       	sbi	0x11, 0	; 17
     9f4:	64 e6       	ldi	r22, 0x64	; 100
     9f6:	70 e0       	ldi	r23, 0x00	; 0
     9f8:	78 01       	movw	r14, r16
     9fa:	fc e0       	ldi	r31, 0x0C	; 12
     9fc:	ef 0e       	add	r14, r31
     9fe:	f1 1c       	adc	r15, r1
     a00:	c7 01       	movw	r24, r14
     a02:	5c d2       	rcall	.+1208   	; 0xebc <_ZN10class_Time8DelayMsSEj>
     a04:	0f 2e       	mov	r0, r31
     a06:	f8 e3       	ldi	r31, 0x38	; 56
     a08:	df 2e       	mov	r13, r31
     a0a:	f0 2d       	mov	r31, r0
     a0c:	d9 82       	std	Y+1, r13	; 0x01
     a0e:	ae 01       	movw	r20, r28
     a10:	4f 5f       	subi	r20, 0xFF	; 255
     a12:	5f 4f       	sbci	r21, 0xFF	; 255
     a14:	60 e0       	ldi	r22, 0x00	; 0
     a16:	70 e0       	ldi	r23, 0x00	; 0
     a18:	c8 01       	movw	r24, r16
     a1a:	e5 de       	rcall	.-566    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     a1c:	68 e0       	ldi	r22, 0x08	; 8
     a1e:	70 e0       	ldi	r23, 0x00	; 0
     a20:	c7 01       	movw	r24, r14
     a22:	4c d2       	rcall	.+1176   	; 0xebc <_ZN10class_Time8DelayMsSEj>
     a24:	d9 82       	std	Y+1, r13	; 0x01
     a26:	ae 01       	movw	r20, r28
     a28:	4f 5f       	subi	r20, 0xFF	; 255
     a2a:	5f 4f       	sbci	r21, 0xFF	; 255
     a2c:	60 e0       	ldi	r22, 0x00	; 0
     a2e:	70 e0       	ldi	r23, 0x00	; 0
     a30:	c8 01       	movw	r24, r16
     a32:	d9 de       	rcall	.-590    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     a34:	61 e0       	ldi	r22, 0x01	; 1
     a36:	70 e0       	ldi	r23, 0x00	; 0
     a38:	c7 01       	movw	r24, r14
     a3a:	40 d2       	rcall	.+1152   	; 0xebc <_ZN10class_Time8DelayMsSEj>
     a3c:	d9 82       	std	Y+1, r13	; 0x01
     a3e:	ae 01       	movw	r20, r28
     a40:	4f 5f       	subi	r20, 0xFF	; 255
     a42:	5f 4f       	sbci	r21, 0xFF	; 255
     a44:	60 e0       	ldi	r22, 0x00	; 0
     a46:	70 e0       	ldi	r23, 0x00	; 0
     a48:	c8 01       	movw	r24, r16
     a4a:	cd de       	rcall	.-614    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     a4c:	65 e0       	ldi	r22, 0x05	; 5
     a4e:	70 e0       	ldi	r23, 0x00	; 0
     a50:	c7 01       	movw	r24, r14
     a52:	34 d2       	rcall	.+1128   	; 0xebc <_ZN10class_Time8DelayMsSEj>
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	c8 12       	cpse	r12, r24
     a58:	04 c0       	rjmp	.+8      	; 0xa62 <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh+0xd6>
     a5a:	60 e2       	ldi	r22, 0x20	; 32
     a5c:	c8 01       	movw	r24, r16
     a5e:	6c df       	rcall	.-296    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     a60:	03 c0       	rjmp	.+6      	; 0xa68 <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh+0xdc>
     a62:	68 e2       	ldi	r22, 0x28	; 40
     a64:	c8 01       	movw	r24, r16
     a66:	68 df       	rcall	.-304    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     a68:	86 e0       	ldi	r24, 0x06	; 6
     a6a:	f8 01       	movw	r30, r16
     a6c:	86 83       	std	Z+6, r24	; 0x06
     a6e:	66 e0       	ldi	r22, 0x06	; 6
     a70:	c8 01       	movw	r24, r16
     a72:	62 df       	rcall	.-316    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     a74:	8e e0       	ldi	r24, 0x0E	; 14
     a76:	f8 01       	movw	r30, r16
     a78:	87 83       	std	Z+7, r24	; 0x07
     a7a:	6e e0       	ldi	r22, 0x0E	; 14
     a7c:	c8 01       	movw	r24, r16
     a7e:	5c df       	rcall	.-328    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     a80:	bf be       	out	0x3f, r11	; 63
     a82:	0f 90       	pop	r0
     a84:	df 91       	pop	r29
     a86:	cf 91       	pop	r28
     a88:	1f 91       	pop	r17
     a8a:	0f 91       	pop	r16
     a8c:	ff 90       	pop	r15
     a8e:	ef 90       	pop	r14
     a90:	df 90       	pop	r13
     a92:	cf 90       	pop	r12
     a94:	bf 90       	pop	r11
     a96:	08 95       	ret

00000a98 <_ZN19class_HD44780_Drive9DataWriteEh>:
     a98:	0f 93       	push	r16
     a9a:	1f 93       	push	r17
     a9c:	cf 93       	push	r28
     a9e:	df 93       	push	r29
     aa0:	1f 92       	push	r1
     aa2:	cd b7       	in	r28, 0x3d	; 61
     aa4:	de b7       	in	r29, 0x3e	; 62
     aa6:	8c 01       	movw	r16, r24
     aa8:	69 83       	std	Y+1, r22	; 0x01
     aaa:	c8 01       	movw	r24, r16
     aac:	32 df       	rcall	.-412    	; 0x912 <_ZN19class_HD44780_Drive4BusyEv>
     aae:	81 11       	cpse	r24, r1
     ab0:	fc cf       	rjmp	.-8      	; 0xaaa <_ZN19class_HD44780_Drive9DataWriteEh+0x12>
     ab2:	ae 01       	movw	r20, r28
     ab4:	4f 5f       	subi	r20, 0xFF	; 255
     ab6:	5f 4f       	sbci	r21, 0xFF	; 255
     ab8:	62 e0       	ldi	r22, 0x02	; 2
     aba:	70 e0       	ldi	r23, 0x00	; 0
     abc:	c8 01       	movw	r24, r16
     abe:	93 de       	rcall	.-730    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     ac0:	f8 01       	movw	r30, r16
     ac2:	84 81       	ldd	r24, Z+4	; 0x04
     ac4:	95 81       	ldd	r25, Z+5	; 0x05
     ac6:	04 97       	sbiw	r24, 0x04	; 4
     ac8:	59 f4       	brne	.+22     	; 0xae0 <_ZN19class_HD44780_Drive9DataWriteEh+0x48>
     aca:	89 81       	ldd	r24, Y+1	; 0x01
     acc:	82 95       	swap	r24
     ace:	80 7f       	andi	r24, 0xF0	; 240
     ad0:	89 83       	std	Y+1, r24	; 0x01
     ad2:	ae 01       	movw	r20, r28
     ad4:	4f 5f       	subi	r20, 0xFF	; 255
     ad6:	5f 4f       	sbci	r21, 0xFF	; 255
     ad8:	62 e0       	ldi	r22, 0x02	; 2
     ada:	70 e0       	ldi	r23, 0x00	; 0
     adc:	c8 01       	movw	r24, r16
     ade:	83 de       	rcall	.-762    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     ae0:	0f 90       	pop	r0
     ae2:	df 91       	pop	r29
     ae4:	cf 91       	pop	r28
     ae6:	1f 91       	pop	r17
     ae8:	0f 91       	pop	r16
     aea:	08 95       	ret

00000aec <_ZN19class_HD44780_Drive8DataReadEv>:
     aec:	0f 93       	push	r16
     aee:	1f 93       	push	r17
     af0:	cf 93       	push	r28
     af2:	df 93       	push	r29
     af4:	00 d0       	rcall	.+0      	; 0xaf6 <_ZN19class_HD44780_Drive8DataReadEv+0xa>
     af6:	cd b7       	in	r28, 0x3d	; 61
     af8:	de b7       	in	r29, 0x3e	; 62
     afa:	8c 01       	movw	r16, r24
     afc:	c8 01       	movw	r24, r16
     afe:	09 df       	rcall	.-494    	; 0x912 <_ZN19class_HD44780_Drive4BusyEv>
     b00:	81 11       	cpse	r24, r1
     b02:	fc cf       	rjmp	.-8      	; 0xafc <_ZN19class_HD44780_Drive8DataReadEv+0x10>
     b04:	ae 01       	movw	r20, r28
     b06:	4e 5f       	subi	r20, 0xFE	; 254
     b08:	5f 4f       	sbci	r21, 0xFF	; 255
     b0a:	63 e0       	ldi	r22, 0x03	; 3
     b0c:	70 e0       	ldi	r23, 0x00	; 0
     b0e:	c8 01       	movw	r24, r16
     b10:	6a de       	rcall	.-812    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     b12:	f8 01       	movw	r30, r16
     b14:	84 81       	ldd	r24, Z+4	; 0x04
     b16:	95 81       	ldd	r25, Z+5	; 0x05
     b18:	04 97       	sbiw	r24, 0x04	; 4
     b1a:	79 f4       	brne	.+30     	; 0xb3a <_ZN19class_HD44780_Drive8DataReadEv+0x4e>
     b1c:	ae 01       	movw	r20, r28
     b1e:	4f 5f       	subi	r20, 0xFF	; 255
     b20:	5f 4f       	sbci	r21, 0xFF	; 255
     b22:	63 e0       	ldi	r22, 0x03	; 3
     b24:	70 e0       	ldi	r23, 0x00	; 0
     b26:	c8 01       	movw	r24, r16
     b28:	5e de       	rcall	.-836    	; 0x7e6 <_ZN19class_HD44780_Drive9InterfaceE18enum_lcd_INTERFACEPh>
     b2a:	89 81       	ldd	r24, Y+1	; 0x01
     b2c:	98 2f       	mov	r25, r24
     b2e:	92 95       	swap	r25
     b30:	9f 70       	andi	r25, 0x0F	; 15
     b32:	8a 81       	ldd	r24, Y+2	; 0x02
     b34:	80 7f       	andi	r24, 0xF0	; 240
     b36:	89 2b       	or	r24, r25
     b38:	01 c0       	rjmp	.+2      	; 0xb3c <_ZN19class_HD44780_Drive8DataReadEv+0x50>
     b3a:	8a 81       	ldd	r24, Y+2	; 0x02
     b3c:	0f 90       	pop	r0
     b3e:	0f 90       	pop	r0
     b40:	df 91       	pop	r29
     b42:	cf 91       	pop	r28
     b44:	1f 91       	pop	r17
     b46:	0f 91       	pop	r16
     b48:	08 95       	ret

00000b4a <_ZN19class_HD44780_Drive13PresenceCheckE18enum_lcd_INTERFACE>:
     b4a:	0f 93       	push	r16
     b4c:	1f 93       	push	r17
     b4e:	cf 93       	push	r28
     b50:	df 93       	push	r29
     b52:	ec 01       	movw	r28, r24
     b54:	08 85       	ldd	r16, Y+8	; 0x08
     b56:	18 86       	std	Y+8, r1	; 0x08
     b58:	2b 81       	ldd	r18, Y+3	; 0x03
     b5a:	49 81       	ldd	r20, Y+1	; 0x01
     b5c:	17 df       	rcall	.-466    	; 0x98c <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh>
     b5e:	60 e8       	ldi	r22, 0x80	; 128
     b60:	ce 01       	movw	r24, r28
     b62:	ea de       	rcall	.-556    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     b64:	6b e1       	ldi	r22, 0x1B	; 27
     b66:	ce 01       	movw	r24, r28
     b68:	97 df       	rcall	.-210    	; 0xa98 <_ZN19class_HD44780_Drive9DataWriteEh>
     b6a:	62 e1       	ldi	r22, 0x12	; 18
     b6c:	ce 01       	movw	r24, r28
     b6e:	94 df       	rcall	.-216    	; 0xa98 <_ZN19class_HD44780_Drive9DataWriteEh>
     b70:	60 e8       	ldi	r22, 0x80	; 128
     b72:	ce 01       	movw	r24, r28
     b74:	e1 de       	rcall	.-574    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     b76:	ce 01       	movw	r24, r28
     b78:	b9 df       	rcall	.-142    	; 0xaec <_ZN19class_HD44780_Drive8DataReadEv>
     b7a:	18 2f       	mov	r17, r24
     b7c:	ce 01       	movw	r24, r28
     b7e:	b6 df       	rcall	.-148    	; 0xaec <_ZN19class_HD44780_Drive8DataReadEv>
     b80:	98 2f       	mov	r25, r24
     b82:	08 87       	std	Y+8, r16	; 0x08
     b84:	1b 31       	cpi	r17, 0x1B	; 27
     b86:	29 f4       	brne	.+10     	; 0xb92 <_ZN19class_HD44780_Drive13PresenceCheckE18enum_lcd_INTERFACE+0x48>
     b88:	81 e0       	ldi	r24, 0x01	; 1
     b8a:	92 31       	cpi	r25, 0x12	; 18
     b8c:	19 f0       	breq	.+6      	; 0xb94 <_ZN19class_HD44780_Drive13PresenceCheckE18enum_lcd_INTERFACE+0x4a>
     b8e:	80 e0       	ldi	r24, 0x00	; 0
     b90:	01 c0       	rjmp	.+2      	; 0xb94 <_ZN19class_HD44780_Drive13PresenceCheckE18enum_lcd_INTERFACE+0x4a>
     b92:	80 e0       	ldi	r24, 0x00	; 0
     b94:	df 91       	pop	r29
     b96:	cf 91       	pop	r28
     b98:	1f 91       	pop	r17
     b9a:	0f 91       	pop	r16
     b9c:	08 95       	ret

00000b9e <_ZN19class_HD44780_Drive3ClsEv>:
     b9e:	cf 93       	push	r28
     ba0:	df 93       	push	r29
     ba2:	ec 01       	movw	r28, r24
     ba4:	61 e0       	ldi	r22, 0x01	; 1
     ba6:	c8 de       	rcall	.-624    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	8a 83       	std	Y+2, r24	; 0x02
     bac:	88 83       	st	Y, r24
     bae:	df 91       	pop	r29
     bb0:	cf 91       	pop	r28
     bb2:	08 95       	ret

00000bb4 <_ZN19class_HD44780_DriveC1E18enum_lcd_INTERFACEhh>:
     bb4:	df 92       	push	r13
     bb6:	ef 92       	push	r14
     bb8:	ff 92       	push	r15
     bba:	0f 93       	push	r16
     bbc:	1f 93       	push	r17
     bbe:	cf 93       	push	r28
     bc0:	df 93       	push	r29
     bc2:	ec 01       	movw	r28, r24
     bc4:	8b 01       	movw	r16, r22
     bc6:	e4 2e       	mov	r14, r20
     bc8:	d2 2e       	mov	r13, r18
     bca:	84 e0       	ldi	r24, 0x04	; 4
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	9d 83       	std	Y+5, r25	; 0x05
     bd0:	8c 83       	std	Y+4, r24	; 0x04
     bd2:	81 e0       	ldi	r24, 0x01	; 1
     bd4:	88 87       	std	Y+8, r24	; 0x08
     bd6:	19 86       	std	Y+9, r1	; 0x09
     bd8:	82 e0       	ldi	r24, 0x02	; 2
     bda:	90 e0       	ldi	r25, 0x00	; 0
     bdc:	9b 87       	std	Y+11, r25	; 0x0b
     bde:	8a 87       	std	Y+10, r24	; 0x0a
     be0:	ce 01       	movw	r24, r28
     be2:	0c 96       	adiw	r24, 0x0c	; 12
     be4:	d0 d0       	rcall	.+416    	; 0xd86 <_ZN10class_TimeC1Ev>
     be6:	ff b6       	in	r15, 0x3f	; 63
     be8:	f8 94       	cli
     bea:	18 86       	std	Y+8, r1	; 0x08
     bec:	84 e1       	ldi	r24, 0x14	; 20
     bee:	90 e0       	ldi	r25, 0x00	; 0
     bf0:	9b 87       	std	Y+11, r25	; 0x0b
     bf2:	8a 87       	std	Y+10, r24	; 0x0a
     bf4:	2d 2d       	mov	r18, r13
     bf6:	4e 2d       	mov	r20, r14
     bf8:	b8 01       	movw	r22, r16
     bfa:	ce 01       	movw	r24, r28
     bfc:	c7 de       	rcall	.-626    	; 0x98c <_ZN19class_HD44780_Drive19InterfaceInitializeE18enum_lcd_INTERFACEhh>
     bfe:	b8 01       	movw	r22, r16
     c00:	ce 01       	movw	r24, r28
     c02:	a3 df       	rcall	.-186    	; 0xb4a <_ZN19class_HD44780_Drive13PresenceCheckE18enum_lcd_INTERFACE>
     c04:	89 87       	std	Y+9, r24	; 0x09
     c06:	88 23       	and	r24, r24
     c08:	11 f0       	breq	.+4      	; 0xc0e <_ZN19class_HD44780_DriveC1E18enum_lcd_INTERFACEhh+0x5a>
     c0a:	ce 01       	movw	r24, r28
     c0c:	c8 df       	rcall	.-112    	; 0xb9e <_ZN19class_HD44780_Drive3ClsEv>
     c0e:	1c 8a       	std	Y+20, r1	; 0x14
     c10:	1b 8a       	std	Y+19, r1	; 0x13
     c12:	1e 8a       	std	Y+22, r1	; 0x16
     c14:	1d 8a       	std	Y+21, r1	; 0x15
     c16:	82 e0       	ldi	r24, 0x02	; 2
     c18:	90 e0       	ldi	r25, 0x00	; 0
     c1a:	9b 87       	std	Y+11, r25	; 0x0b
     c1c:	8a 87       	std	Y+10, r24	; 0x0a
     c1e:	81 e0       	ldi	r24, 0x01	; 1
     c20:	88 87       	std	Y+8, r24	; 0x08
     c22:	ff be       	out	0x3f, r15	; 63
     c24:	df 91       	pop	r29
     c26:	cf 91       	pop	r28
     c28:	1f 91       	pop	r17
     c2a:	0f 91       	pop	r16
     c2c:	ff 90       	pop	r15
     c2e:	ef 90       	pop	r14
     c30:	df 90       	pop	r13
     c32:	08 95       	ret

00000c34 <_ZN19class_HD44780_Drive14SetCursorStateEh>:
     c34:	66 23       	and	r22, r22
     c36:	29 f0       	breq	.+10     	; 0xc42 <_ZN19class_HD44780_Drive14SetCursorStateEh+0xe>
     c38:	fc 01       	movw	r30, r24
     c3a:	27 81       	ldd	r18, Z+7	; 0x07
     c3c:	22 60       	ori	r18, 0x02	; 2
     c3e:	27 83       	std	Z+7, r18	; 0x07
     c40:	04 c0       	rjmp	.+8      	; 0xc4a <_ZN19class_HD44780_Drive14SetCursorStateEh+0x16>
     c42:	fc 01       	movw	r30, r24
     c44:	27 81       	ldd	r18, Z+7	; 0x07
     c46:	2d 7f       	andi	r18, 0xFD	; 253
     c48:	27 83       	std	Z+7, r18	; 0x07
     c4a:	fc 01       	movw	r30, r24
     c4c:	67 81       	ldd	r22, Z+7	; 0x07
     c4e:	74 ce       	rjmp	.-792    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     c50:	08 95       	ret

00000c52 <_ZN19class_HD44780_Drive6LocateEhh>:
//	+-------------------------------------------------------------------------------+
void class_HD44780_Drive::Locate(uint8_t row,uint8_t col)
{
uint8_t tmp;

	if (row>=1 && row<=Rows && col>=1 && col<=Cols)
     c52:	66 23       	and	r22, r22
     c54:	a9 f0       	breq	.+42     	; 0xc80 <_ZN19class_HD44780_Drive6LocateEhh+0x2e>
     c56:	fc 01       	movw	r30, r24
     c58:	21 81       	ldd	r18, Z+1	; 0x01
     c5a:	26 17       	cp	r18, r22
     c5c:	88 f0       	brcs	.+34     	; 0xc80 <_ZN19class_HD44780_Drive6LocateEhh+0x2e>
     c5e:	44 23       	and	r20, r20
     c60:	79 f0       	breq	.+30     	; 0xc80 <_ZN19class_HD44780_Drive6LocateEhh+0x2e>
     c62:	23 81       	ldd	r18, Z+3	; 0x03
     c64:	24 17       	cp	r18, r20
     c66:	60 f0       	brcs	.+24     	; 0xc80 <_ZN19class_HD44780_Drive6LocateEhh+0x2e>
	{
		Row=row;
     c68:	60 83       	st	Z, r22
		Col=col;
     c6a:	42 83       	std	Z+2, r20	; 0x02
		row--;
		col--;
     c6c:	41 50       	subi	r20, 0x01	; 1
		tmp=static_cast<uint8_t>(_lcd_CMD::DDRAM_ADDR) + (col & 0x3f);
     c6e:	4f 73       	andi	r20, 0x3F	; 63
		if (row!=0) tmp+=0x40;
     c70:	61 30       	cpi	r22, 0x01	; 1
     c72:	19 f4       	brne	.+6      	; 0xc7a <_ZN19class_HD44780_Drive6LocateEhh+0x28>
	{
		Row=row;
		Col=col;
		row--;
		col--;
		tmp=static_cast<uint8_t>(_lcd_CMD::DDRAM_ADDR) + (col & 0x3f);
     c74:	60 e8       	ldi	r22, 0x80	; 128
     c76:	64 0f       	add	r22, r20
     c78:	02 c0       	rjmp	.+4      	; 0xc7e <_ZN19class_HD44780_Drive6LocateEhh+0x2c>
		if (row!=0) tmp+=0x40;
     c7a:	60 ec       	ldi	r22, 0xC0	; 192
     c7c:	64 0f       	add	r22, r20
		CmdWrite(tmp);
     c7e:	5c ce       	rjmp	.-840    	; 0x938 <_ZN19class_HD44780_Drive8CmdWriteEh>
     c80:	08 95       	ret

00000c82 <_ZN19class_HD44780_Drive4PutCEc>:
//	| @OUTPUT  : 																	|
//	| @REMARKS :  																	|
//	+-------------------------------------------------------------------------------+
void	class_HD44780_Drive::PutC(char character)
{
	DataWrite(character);
     c82:	0a cf       	rjmp	.-492    	; 0xa98 <_ZN19class_HD44780_Drive9DataWriteEh>
     c84:	08 95       	ret

00000c86 <_ZN19class_HD44780_Drive4PutSEPc>:
//	| @INPUT   :  *msg string into sram												|
//	| @OUTPUT  : 																	|
//	| @REMARKS :  																	|
//	+-------------------------------------------------------------------------------+
void	class_HD44780_Drive::PutS(char *string)
{
     c86:	ff 92       	push	r15
     c88:	0f 93       	push	r16
     c8a:	1f 93       	push	r17
     c8c:	cf 93       	push	r28
     c8e:	df 93       	push	r29
     c90:	fb 01       	movw	r30, r22
	  uint8_t data;
	  //send until zero is found
	  for(;;)
	  {
        //get char for sram
        	  data=*string;
     c92:	60 81       	ld	r22, Z
        //check if end
    	  if (data==0) break;
     c94:	66 23       	and	r22, r22
     c96:	61 f1       	breq	.+88     	; 0xcf0 <_ZN19class_HD44780_Drive4PutSEPc+0x6a>
     c98:	8f 01       	movw	r16, r30
     c9a:	ec 01       	movw	r28, r24
     c9c:	0f 5f       	subi	r16, 0xFF	; 255
     c9e:	1f 4f       	sbci	r17, 0xFF	; 255
        	  default:
        	      DataWrite(data);
        	      Col++;
        	      if (Col>Cols)
        	      {
            	      Col=1;
     ca0:	ff 24       	eor	r15, r15
     ca2:	f3 94       	inc	r15
        //get char for sram
        	  data=*string;
        //check if end
    	  if (data==0) break;
        //process according data
    	  switch (data)
     ca4:	6a 30       	cpi	r22, 0x0A	; 10
     ca6:	19 f0       	breq	.+6      	; 0xcae <_ZN19class_HD44780_Drive4PutSEPc+0x28>
     ca8:	6d 30       	cpi	r22, 0x0D	; 13
     caa:	41 f0       	breq	.+16     	; 0xcbc <_ZN19class_HD44780_Drive4PutSEPc+0x36>
     cac:	0d c0       	rjmp	.+26     	; 0xcc8 <_ZN19class_HD44780_Drive4PutSEPc+0x42>
    	  {
        	  //new line ?
        	  case '\n':
        	      Row++;
     cae:	68 81       	ld	r22, Y
     cb0:	6f 5f       	subi	r22, 0xFF	; 255
     cb2:	68 83       	st	Y, r22
        	      Locate(Row,Col);
     cb4:	4a 81       	ldd	r20, Y+2	; 0x02
     cb6:	ce 01       	movw	r24, r28
     cb8:	cc df       	rcall	.-104    	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
        	      break;
     cba:	15 c0       	rjmp	.+42     	; 0xce6 <_ZN19class_HD44780_Drive4PutSEPc+0x60>
        	  //carriage return?
        	  case '\r':
        	      Col=1;
     cbc:	fa 82       	std	Y+2, r15	; 0x02
        	      Locate(Row,Col);
     cbe:	4f 2d       	mov	r20, r15
     cc0:	68 81       	ld	r22, Y
     cc2:	ce 01       	movw	r24, r28
     cc4:	c6 df       	rcall	.-116    	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
        	      break;
     cc6:	0f c0       	rjmp	.+30     	; 0xce6 <_ZN19class_HD44780_Drive4PutSEPc+0x60>
        	  //other char?
        	  default:
        	      DataWrite(data);
     cc8:	ce 01       	movw	r24, r28
     cca:	e6 de       	rcall	.-564    	; 0xa98 <_ZN19class_HD44780_Drive9DataWriteEh>
        	      Col++;
     ccc:	8a 81       	ldd	r24, Y+2	; 0x02
     cce:	8f 5f       	subi	r24, 0xFF	; 255
     cd0:	8a 83       	std	Y+2, r24	; 0x02
        	      if (Col>Cols)
     cd2:	9b 81       	ldd	r25, Y+3	; 0x03
     cd4:	98 17       	cp	r25, r24
     cd6:	38 f4       	brcc	.+14     	; 0xce6 <_ZN19class_HD44780_Drive4PutSEPc+0x60>
        	      {
            	      Col=1;
     cd8:	fa 82       	std	Y+2, r15	; 0x02
            	      Row++;
     cda:	68 81       	ld	r22, Y
     cdc:	6f 5f       	subi	r22, 0xFF	; 255
     cde:	68 83       	st	Y, r22
            	      Locate(Row,Col);
     ce0:	4f 2d       	mov	r20, r15
     ce2:	ce 01       	movw	r24, r28
     ce4:	b6 df       	rcall	.-148    	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
	  uint8_t data;
	  //send until zero is found
	  for(;;)
	  {
        //get char for sram
        	  data=*string;
     ce6:	f8 01       	movw	r30, r16
     ce8:	61 91       	ld	r22, Z+
     cea:	8f 01       	movw	r16, r30
        //check if end
    	  if (data==0) break;
     cec:	61 11       	cpse	r22, r1
     cee:	da cf       	rjmp	.-76     	; 0xca4 <_ZN19class_HD44780_Drive4PutSEPc+0x1e>
        	      break;
    	  }
    	  //next char
    	  string++;
	  }
}
     cf0:	df 91       	pop	r29
     cf2:	cf 91       	pop	r28
     cf4:	1f 91       	pop	r17
     cf6:	0f 91       	pop	r16
     cf8:	ff 90       	pop	r15
     cfa:	08 95       	ret

00000cfc <_ZN19class_HD44780_Drive5PutSFEPKc>:
//	| @INPUT   :  *msg string into sram												|
//	| @OUTPUT  : 																	|
//	| @REMARKS :  																	|
//	+-------------------------------------------------------------------------------+
void	class_HD44780_Drive::PutSF(const char *string)
{
     cfc:	ff 92       	push	r15
     cfe:	0f 93       	push	r16
     d00:	1f 93       	push	r17
     d02:	cf 93       	push	r28
     d04:	df 93       	push	r29
     d06:	ec 01       	movw	r28, r24
     d08:	8b 01       	movw	r16, r22
	  uint8_t data;
	  //send until zero is found
	  for(;;)
	  {
        //get data form progmem
            data=pgm_read_byte(string);
     d0a:	fb 01       	movw	r30, r22
     d0c:	64 91       	lpm	r22, Z
        //check if end
    	  if (data==0) break;
     d0e:	66 23       	and	r22, r22
     d10:	49 f1       	breq	.+82     	; 0xd64 <_ZN19class_HD44780_Drive5PutSFEPKc+0x68>
        	  default:
        	      DataWrite(data);
        	      Col++;
        	      if (Col>Cols)
        	      {
            	      Col=1;
     d12:	ff 24       	eor	r15, r15
     d14:	f3 94       	inc	r15
        //get data form progmem
            data=pgm_read_byte(string);
        //check if end
    	  if (data==0) break;
        //process according data
    	  switch (data)
     d16:	6a 30       	cpi	r22, 0x0A	; 10
     d18:	19 f0       	breq	.+6      	; 0xd20 <_ZN19class_HD44780_Drive5PutSFEPKc+0x24>
     d1a:	6d 30       	cpi	r22, 0x0D	; 13
     d1c:	41 f0       	breq	.+16     	; 0xd2e <_ZN19class_HD44780_Drive5PutSFEPKc+0x32>
     d1e:	0d c0       	rjmp	.+26     	; 0xd3a <_ZN19class_HD44780_Drive5PutSFEPKc+0x3e>
    	  {
        	  //new line ?
        	  case '\n':
        	      Row++;
     d20:	68 81       	ld	r22, Y
     d22:	6f 5f       	subi	r22, 0xFF	; 255
     d24:	68 83       	st	Y, r22
        	      Locate(Row,Col);
     d26:	4a 81       	ldd	r20, Y+2	; 0x02
     d28:	ce 01       	movw	r24, r28
     d2a:	93 df       	rcall	.-218    	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
        	      break;
     d2c:	15 c0       	rjmp	.+42     	; 0xd58 <_ZN19class_HD44780_Drive5PutSFEPKc+0x5c>
        	  //carriage return?
        	  case '\r':
        	      Col=1;
     d2e:	fa 82       	std	Y+2, r15	; 0x02
        	      Locate(Row,Col);
     d30:	4f 2d       	mov	r20, r15
     d32:	68 81       	ld	r22, Y
     d34:	ce 01       	movw	r24, r28
     d36:	8d df       	rcall	.-230    	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
        	      break;
     d38:	0f c0       	rjmp	.+30     	; 0xd58 <_ZN19class_HD44780_Drive5PutSFEPKc+0x5c>
        	  //other char?
        	  default:
        	      DataWrite(data);
     d3a:	ce 01       	movw	r24, r28
     d3c:	ad de       	rcall	.-678    	; 0xa98 <_ZN19class_HD44780_Drive9DataWriteEh>
        	      Col++;
     d3e:	8a 81       	ldd	r24, Y+2	; 0x02
     d40:	8f 5f       	subi	r24, 0xFF	; 255
     d42:	8a 83       	std	Y+2, r24	; 0x02
        	      if (Col>Cols)
     d44:	9b 81       	ldd	r25, Y+3	; 0x03
     d46:	98 17       	cp	r25, r24
     d48:	38 f4       	brcc	.+14     	; 0xd58 <_ZN19class_HD44780_Drive5PutSFEPKc+0x5c>
        	      {
            	      Col=1;
     d4a:	fa 82       	std	Y+2, r15	; 0x02
            	      Row++;
     d4c:	68 81       	ld	r22, Y
     d4e:	6f 5f       	subi	r22, 0xFF	; 255
     d50:	68 83       	st	Y, r22
            	      Locate(Row,Col);
     d52:	4f 2d       	mov	r20, r15
     d54:	ce 01       	movw	r24, r28
     d56:	7d df       	rcall	.-262    	; 0xc52 <_ZN19class_HD44780_Drive6LocateEhh>
        	      }
        	      break;
    	  }
    	  //next char
    	  string++;
     d58:	0f 5f       	subi	r16, 0xFF	; 255
     d5a:	1f 4f       	sbci	r17, 0xFF	; 255
	  uint8_t data;
	  //send until zero is found
	  for(;;)
	  {
        //get data form progmem
            data=pgm_read_byte(string);
     d5c:	f8 01       	movw	r30, r16
     d5e:	64 91       	lpm	r22, Z
        //check if end
    	  if (data==0) break;
     d60:	61 11       	cpse	r22, r1
     d62:	d9 cf       	rjmp	.-78     	; 0xd16 <_ZN19class_HD44780_Drive5PutSFEPKc+0x1a>
        	      break;
    	  }
    	  //next char
    	  string++;
	  }
}
     d64:	df 91       	pop	r29
     d66:	cf 91       	pop	r28
     d68:	1f 91       	pop	r17
     d6a:	0f 91       	pop	r16
     d6c:	ff 90       	pop	r15
     d6e:	08 95       	ret

00000d70 <_ZN10class_Time10InitializeEv>:
//	| REMARKS :  								                                    |
//	+-------------------------------------------------------------------------------+
uint32_t class_Time::GetElapsed(uint32_t * timeVariable)
{
	return (GetMilliseconds()-*timeVariable);				//Get difference between actual tick and save tick
}
     d70:	9f b7       	in	r25, 0x3f	; 63
     d72:	f8 94       	cli
     d74:	84 e0       	ldi	r24, 0x04	; 4
     d76:	83 bf       	out	0x33, r24	; 51
     d78:	87 ee       	ldi	r24, 0xE7	; 231
     d7a:	82 bf       	out	0x32, r24	; 50
     d7c:	89 b7       	in	r24, 0x39	; 57
     d7e:	81 60       	ori	r24, 0x01	; 1
     d80:	89 bf       	out	0x39, r24	; 57
     d82:	9f bf       	out	0x3f, r25	; 63
     d84:	08 95       	ret

00000d86 <_ZN10class_TimeC1Ev>:
     d86:	cf 93       	push	r28
     d88:	cf b7       	in	r28, 0x3f	; 63
     d8a:	f8 94       	cli
     d8c:	20 91 61 01 	lds	r18, 0x0161
     d90:	21 11       	cpse	r18, r1
     d92:	04 c0       	rjmp	.+8      	; 0xd9c <_ZN10class_TimeC1Ev+0x16>
     d94:	21 e0       	ldi	r18, 0x01	; 1
     d96:	20 93 61 01 	sts	0x0161, r18
     d9a:	ea df       	rcall	.-44     	; 0xd70 <_ZN10class_Time10InitializeEv>
     d9c:	cf bf       	out	0x3f, r28	; 63
     d9e:	cf 91       	pop	r28
     da0:	08 95       	ret

00000da2 <_Z14_timeInterruptv>:
     da2:	80 91 60 01 	lds	r24, 0x0160
     da6:	88 23       	and	r24, r24
     da8:	39 f0       	breq	.+14     	; 0xdb8 <_Z14_timeInterruptv+0x16>
     daa:	e0 91 6d 01 	lds	r30, 0x016D
     dae:	f0 91 6e 01 	lds	r31, 0x016E
     db2:	30 97       	sbiw	r30, 0x00	; 0
     db4:	09 f0       	breq	.+2      	; 0xdb8 <_Z14_timeInterruptv+0x16>
     db6:	09 95       	icall
     db8:	08 95       	ret

00000dba <_Z10_timeClockv>:
     dba:	80 91 5f 01 	lds	r24, 0x015F
     dbe:	88 23       	and	r24, r24
     dc0:	d9 f1       	breq	.+118    	; 0xe38 <_Z10_timeClockv+0x7e>
     dc2:	e9 e5       	ldi	r30, 0x59	; 89
     dc4:	f1 e0       	ldi	r31, 0x01	; 1
     dc6:	83 81       	ldd	r24, Z+3	; 0x03
     dc8:	94 81       	ldd	r25, Z+4	; 0x04
     dca:	01 96       	adiw	r24, 0x01	; 1
     dcc:	94 83       	std	Z+4, r25	; 0x04
     dce:	83 83       	std	Z+3, r24	; 0x03
     dd0:	83 81       	ldd	r24, Z+3	; 0x03
     dd2:	94 81       	ldd	r25, Z+4	; 0x04
     dd4:	8d 37       	cpi	r24, 0x7D	; 125
     dd6:	91 05       	cpc	r25, r1
     dd8:	78 f1       	brcs	.+94     	; 0xe38 <_Z10_timeClockv+0x7e>
     dda:	14 82       	std	Z+4, r1	; 0x04
     ddc:	13 82       	std	Z+3, r1	; 0x03
     dde:	85 81       	ldd	r24, Z+5	; 0x05
     de0:	8f 5f       	subi	r24, 0xFF	; 255
     de2:	85 83       	std	Z+5, r24	; 0x05
     de4:	85 81       	ldd	r24, Z+5	; 0x05
     de6:	8a 30       	cpi	r24, 0x0A	; 10
     de8:	b8 f0       	brcs	.+46     	; 0xe18 <_Z10_timeClockv+0x5e>
     dea:	15 82       	std	Z+5, r1	; 0x05
     dec:	82 81       	ldd	r24, Z+2	; 0x02
     dee:	8f 5f       	subi	r24, 0xFF	; 255
     df0:	82 83       	std	Z+2, r24	; 0x02
     df2:	82 81       	ldd	r24, Z+2	; 0x02
     df4:	8c 33       	cpi	r24, 0x3C	; 60
     df6:	80 f0       	brcs	.+32     	; 0xe18 <_Z10_timeClockv+0x5e>
     df8:	12 82       	std	Z+2, r1	; 0x02
     dfa:	81 81       	ldd	r24, Z+1	; 0x01
     dfc:	8f 5f       	subi	r24, 0xFF	; 255
     dfe:	81 83       	std	Z+1, r24	; 0x01
     e00:	81 81       	ldd	r24, Z+1	; 0x01
     e02:	8c 33       	cpi	r24, 0x3C	; 60
     e04:	48 f0       	brcs	.+18     	; 0xe18 <_Z10_timeClockv+0x5e>
     e06:	11 82       	std	Z+1, r1	; 0x01
     e08:	80 81       	ld	r24, Z
     e0a:	8f 5f       	subi	r24, 0xFF	; 255
     e0c:	80 83       	st	Z, r24
     e0e:	80 81       	ld	r24, Z
     e10:	88 31       	cpi	r24, 0x18	; 24
     e12:	10 f0       	brcs	.+4      	; 0xe18 <_Z10_timeClockv+0x5e>
     e14:	10 92 59 01 	sts	0x0159, r1
     e18:	e0 91 6b 01 	lds	r30, 0x016B
     e1c:	f0 91 6c 01 	lds	r31, 0x016C
     e20:	30 97       	sbiw	r30, 0x00	; 0
     e22:	51 f0       	breq	.+20     	; 0xe38 <_Z10_timeClockv+0x7e>
     e24:	a9 e5       	ldi	r26, 0x59	; 89
     e26:	b1 e0       	ldi	r27, 0x01	; 1
     e28:	12 96       	adiw	r26, 0x02	; 2
     e2a:	4c 91       	ld	r20, X
     e2c:	12 97       	sbiw	r26, 0x02	; 2
     e2e:	11 96       	adiw	r26, 0x01	; 1
     e30:	6c 91       	ld	r22, X
     e32:	11 97       	sbiw	r26, 0x01	; 1
     e34:	8c 91       	ld	r24, X
     e36:	09 95       	icall
     e38:	08 95       	ret

00000e3a <__vector_9>:
     e3a:	1f 92       	push	r1
     e3c:	0f 92       	push	r0
     e3e:	0f b6       	in	r0, 0x3f	; 63
     e40:	0f 92       	push	r0
     e42:	11 24       	eor	r1, r1
     e44:	2f 93       	push	r18
     e46:	3f 93       	push	r19
     e48:	4f 93       	push	r20
     e4a:	5f 93       	push	r21
     e4c:	6f 93       	push	r22
     e4e:	7f 93       	push	r23
     e50:	8f 93       	push	r24
     e52:	9f 93       	push	r25
     e54:	af 93       	push	r26
     e56:	bf 93       	push	r27
     e58:	ef 93       	push	r30
     e5a:	ff 93       	push	r31
     e5c:	87 ee       	ldi	r24, 0xE7	; 231
     e5e:	82 bf       	out	0x32, r24	; 50
     e60:	78 94       	sei
     e62:	e9 e5       	ldi	r30, 0x59	; 89
     e64:	f1 e0       	ldi	r31, 0x01	; 1
     e66:	21 85       	ldd	r18, Z+9	; 0x09
     e68:	32 85       	ldd	r19, Z+10	; 0x0a
     e6a:	43 85       	ldd	r20, Z+11	; 0x0b
     e6c:	54 85       	ldd	r21, Z+12	; 0x0c
     e6e:	65 85       	ldd	r22, Z+13	; 0x0d
     e70:	76 85       	ldd	r23, Z+14	; 0x0e
     e72:	87 85       	ldd	r24, Z+15	; 0x0f
     e74:	90 89       	ldd	r25, Z+16	; 0x10
     e76:	24 53       	subi	r18, 0x34	; 52
     e78:	33 43       	sbci	r19, 0x33	; 51
     e7a:	43 43       	sbci	r20, 0x33	; 51
     e7c:	5f 4f       	sbci	r21, 0xFF	; 255
     e7e:	6f 4f       	sbci	r22, 0xFF	; 255
     e80:	7f 4f       	sbci	r23, 0xFF	; 255
     e82:	8f 4f       	sbci	r24, 0xFF	; 255
     e84:	9f 4f       	sbci	r25, 0xFF	; 255
     e86:	21 87       	std	Z+9, r18	; 0x09
     e88:	32 87       	std	Z+10, r19	; 0x0a
     e8a:	43 87       	std	Z+11, r20	; 0x0b
     e8c:	54 87       	std	Z+12, r21	; 0x0c
     e8e:	65 87       	std	Z+13, r22	; 0x0d
     e90:	76 87       	std	Z+14, r23	; 0x0e
     e92:	87 87       	std	Z+15, r24	; 0x0f
     e94:	90 8b       	std	Z+16, r25	; 0x10
     e96:	85 df       	rcall	.-246    	; 0xda2 <_Z14_timeInterruptv>
     e98:	90 df       	rcall	.-224    	; 0xdba <_Z10_timeClockv>
     e9a:	ff 91       	pop	r31
     e9c:	ef 91       	pop	r30
     e9e:	bf 91       	pop	r27
     ea0:	af 91       	pop	r26
     ea2:	9f 91       	pop	r25
     ea4:	8f 91       	pop	r24
     ea6:	7f 91       	pop	r23
     ea8:	6f 91       	pop	r22
     eaa:	5f 91       	pop	r21
     eac:	4f 91       	pop	r20
     eae:	3f 91       	pop	r19
     eb0:	2f 91       	pop	r18
     eb2:	0f 90       	pop	r0
     eb4:	0f be       	out	0x3f, r0	; 63
     eb6:	0f 90       	pop	r0
     eb8:	1f 90       	pop	r1
     eba:	18 95       	reti

00000ebc <_ZN10class_Time8DelayMsSEj>:
     ebc:	61 15       	cp	r22, r1
     ebe:	71 05       	cpc	r23, r1
     ec0:	49 f0       	breq	.+18     	; 0xed4 <_delayMsS10+0xa>
     ec2:	40 ed       	ldi	r20, 0xD0	; 208
     ec4:	57 e0       	ldi	r21, 0x07	; 7
     ec6:	9a 01       	movw	r18, r20
     ec8:	c9 01       	movw	r24, r18

00000eca <_delayMsS10>:
     eca:	01 97       	sbiw	r24, 0x01	; 1
     ecc:	f1 f7       	brne	.-4      	; 0xeca <_delayMsS10>
     ece:	61 50       	subi	r22, 0x01	; 1
     ed0:	71 09       	sbc	r23, r1
     ed2:	c9 f7       	brne	.-14     	; 0xec6 <_ZN10class_Time8DelayMsSEj+0xa>
     ed4:	08 95       	ret

00000ed6 <_ZN10class_Time15GetMillisecondsEv>:
     ed6:	0f 93       	push	r16
     ed8:	1f 93       	push	r17
     eda:	e9 e5       	ldi	r30, 0x59	; 89
     edc:	f1 e0       	ldi	r31, 0x01	; 1
     ede:	78 94       	sei
     ee0:	04 85       	ldd	r16, Z+12	; 0x0c
     ee2:	15 85       	ldd	r17, Z+13	; 0x0d
     ee4:	26 85       	ldd	r18, Z+14	; 0x0e
     ee6:	37 85       	ldd	r19, Z+15	; 0x0f
     ee8:	78 94       	sei
     eea:	64 85       	ldd	r22, Z+12	; 0x0c
     eec:	75 85       	ldd	r23, Z+13	; 0x0d
     eee:	86 85       	ldd	r24, Z+14	; 0x0e
     ef0:	97 85       	ldd	r25, Z+15	; 0x0f
     ef2:	06 17       	cp	r16, r22
     ef4:	17 07       	cpc	r17, r23
     ef6:	28 07       	cpc	r18, r24
     ef8:	39 07       	cpc	r19, r25
     efa:	89 f7       	brne	.-30     	; 0xede <_ZN10class_Time15GetMillisecondsEv+0x8>
     efc:	1f 91       	pop	r17
     efe:	0f 91       	pop	r16
     f00:	08 95       	ret

00000f02 <_ZN10class_Time10SetElapsedEPm>:
     f02:	cf 93       	push	r28
     f04:	df 93       	push	r29
     f06:	eb 01       	movw	r28, r22
     f08:	e6 df       	rcall	.-52     	; 0xed6 <_ZN10class_Time15GetMillisecondsEv>
     f0a:	68 83       	st	Y, r22
     f0c:	79 83       	std	Y+1, r23	; 0x01
     f0e:	8a 83       	std	Y+2, r24	; 0x02
     f10:	9b 83       	std	Y+3, r25	; 0x03
     f12:	df 91       	pop	r29
     f14:	cf 91       	pop	r28
     f16:	08 95       	ret

00000f18 <_ZN10class_Time8DelayMsIEm>:
//	| INPUT   :  timeMs in milliseconds					                            |
//	| OUTPUT  :  								                                    |
//	| REMARKS :  								                                    |
//	+-------------------------------------------------------------------------------+
void	class_Time::DelayMsI(uint32_t timeMs)
{
     f18:	8f 92       	push	r8
     f1a:	9f 92       	push	r9
     f1c:	af 92       	push	r10
     f1e:	bf 92       	push	r11
     f20:	cf 92       	push	r12
     f22:	df 92       	push	r13
     f24:	ef 92       	push	r14
     f26:	ff 92       	push	r15
     f28:	cf 93       	push	r28
     f2a:	df 93       	push	r29
     f2c:	ec 01       	movw	r28, r24
     f2e:	4a 01       	movw	r8, r20
     f30:	5b 01       	movw	r10, r22
	uint32_t tmp1,tmp2;

	tmp1=GetMilliseconds();             						//get actual tick value
     f32:	d1 df       	rcall	.-94     	; 0xed6 <_ZN10class_Time15GetMillisecondsEv>
     f34:	6b 01       	movw	r12, r22
     f36:	7c 01       	movw	r14, r24
	do{
		tmp2=GetMilliseconds();
     f38:	ce 01       	movw	r24, r28
     f3a:	cd df       	rcall	.-102    	; 0xed6 <_ZN10class_Time15GetMillisecondsEv>
	} while ((tmp2-tmp1)<timeMs);							//wait reach a predefined value tick
     f3c:	dc 01       	movw	r26, r24
     f3e:	cb 01       	movw	r24, r22
     f40:	8c 19       	sub	r24, r12
     f42:	9d 09       	sbc	r25, r13
     f44:	ae 09       	sbc	r26, r14
     f46:	bf 09       	sbc	r27, r15
void	class_Time::DelayMsI(uint32_t timeMs)
{
	uint32_t tmp1,tmp2;

	tmp1=GetMilliseconds();             						//get actual tick value
	do{
     f48:	88 15       	cp	r24, r8
     f4a:	99 05       	cpc	r25, r9
     f4c:	aa 05       	cpc	r26, r10
     f4e:	bb 05       	cpc	r27, r11
     f50:	98 f3       	brcs	.-26     	; 0xf38 <_ZN10class_Time8DelayMsIEm+0x20>
		tmp2=GetMilliseconds();
	} while ((tmp2-tmp1)<timeMs);							//wait reach a predefined value tick
}
     f52:	df 91       	pop	r29
     f54:	cf 91       	pop	r28
     f56:	ff 90       	pop	r15
     f58:	ef 90       	pop	r14
     f5a:	df 90       	pop	r13
     f5c:	cf 90       	pop	r12
     f5e:	bf 90       	pop	r11
     f60:	af 90       	pop	r10
     f62:	9f 90       	pop	r9
     f64:	8f 90       	pop	r8
     f66:	08 95       	ret

00000f68 <__mulsi3>:
     f68:	db 01       	movw	r26, r22
     f6a:	8f 93       	push	r24
     f6c:	9f 93       	push	r25
     f6e:	27 d0       	rcall	.+78     	; 0xfbe <__muluhisi3>
     f70:	bf 91       	pop	r27
     f72:	af 91       	pop	r26
     f74:	a2 9f       	mul	r26, r18
     f76:	80 0d       	add	r24, r0
     f78:	91 1d       	adc	r25, r1
     f7a:	a3 9f       	mul	r26, r19
     f7c:	90 0d       	add	r25, r0
     f7e:	b2 9f       	mul	r27, r18
     f80:	90 0d       	add	r25, r0
     f82:	11 24       	eor	r1, r1
     f84:	08 95       	ret

00000f86 <__divmodsi4>:
     f86:	05 2e       	mov	r0, r21
     f88:	97 fb       	bst	r25, 7
     f8a:	16 f4       	brtc	.+4      	; 0xf90 <__divmodsi4+0xa>
     f8c:	00 94       	com	r0
     f8e:	0f d0       	rcall	.+30     	; 0xfae <__negsi2>
     f90:	57 fd       	sbrc	r21, 7
     f92:	05 d0       	rcall	.+10     	; 0xf9e <__divmodsi4_neg2>
     f94:	1e d0       	rcall	.+60     	; 0xfd2 <__udivmodsi4>
     f96:	07 fc       	sbrc	r0, 7
     f98:	02 d0       	rcall	.+4      	; 0xf9e <__divmodsi4_neg2>
     f9a:	46 f4       	brtc	.+16     	; 0xfac <__divmodsi4_exit>
     f9c:	08 c0       	rjmp	.+16     	; 0xfae <__negsi2>

00000f9e <__divmodsi4_neg2>:
     f9e:	50 95       	com	r21
     fa0:	40 95       	com	r20
     fa2:	30 95       	com	r19
     fa4:	21 95       	neg	r18
     fa6:	3f 4f       	sbci	r19, 0xFF	; 255
     fa8:	4f 4f       	sbci	r20, 0xFF	; 255
     faa:	5f 4f       	sbci	r21, 0xFF	; 255

00000fac <__divmodsi4_exit>:
     fac:	08 95       	ret

00000fae <__negsi2>:
     fae:	90 95       	com	r25
     fb0:	80 95       	com	r24
     fb2:	70 95       	com	r23
     fb4:	61 95       	neg	r22
     fb6:	7f 4f       	sbci	r23, 0xFF	; 255
     fb8:	8f 4f       	sbci	r24, 0xFF	; 255
     fba:	9f 4f       	sbci	r25, 0xFF	; 255
     fbc:	08 95       	ret

00000fbe <__muluhisi3>:
     fbe:	31 d0       	rcall	.+98     	; 0x1022 <__umulhisi3>
     fc0:	a5 9f       	mul	r26, r21
     fc2:	90 0d       	add	r25, r0
     fc4:	b4 9f       	mul	r27, r20
     fc6:	90 0d       	add	r25, r0
     fc8:	a4 9f       	mul	r26, r20
     fca:	80 0d       	add	r24, r0
     fcc:	91 1d       	adc	r25, r1
     fce:	11 24       	eor	r1, r1
     fd0:	08 95       	ret

00000fd2 <__udivmodsi4>:
     fd2:	a1 e2       	ldi	r26, 0x21	; 33
     fd4:	1a 2e       	mov	r1, r26
     fd6:	aa 1b       	sub	r26, r26
     fd8:	bb 1b       	sub	r27, r27
     fda:	fd 01       	movw	r30, r26
     fdc:	0d c0       	rjmp	.+26     	; 0xff8 <__udivmodsi4_ep>

00000fde <__udivmodsi4_loop>:
     fde:	aa 1f       	adc	r26, r26
     fe0:	bb 1f       	adc	r27, r27
     fe2:	ee 1f       	adc	r30, r30
     fe4:	ff 1f       	adc	r31, r31
     fe6:	a2 17       	cp	r26, r18
     fe8:	b3 07       	cpc	r27, r19
     fea:	e4 07       	cpc	r30, r20
     fec:	f5 07       	cpc	r31, r21
     fee:	20 f0       	brcs	.+8      	; 0xff8 <__udivmodsi4_ep>
     ff0:	a2 1b       	sub	r26, r18
     ff2:	b3 0b       	sbc	r27, r19
     ff4:	e4 0b       	sbc	r30, r20
     ff6:	f5 0b       	sbc	r31, r21

00000ff8 <__udivmodsi4_ep>:
     ff8:	66 1f       	adc	r22, r22
     ffa:	77 1f       	adc	r23, r23
     ffc:	88 1f       	adc	r24, r24
     ffe:	99 1f       	adc	r25, r25
    1000:	1a 94       	dec	r1
    1002:	69 f7       	brne	.-38     	; 0xfde <__udivmodsi4_loop>
    1004:	60 95       	com	r22
    1006:	70 95       	com	r23
    1008:	80 95       	com	r24
    100a:	90 95       	com	r25
    100c:	9b 01       	movw	r18, r22
    100e:	ac 01       	movw	r20, r24
    1010:	bd 01       	movw	r22, r26
    1012:	cf 01       	movw	r24, r30
    1014:	08 95       	ret

00001016 <__tablejump2__>:
    1016:	ee 0f       	add	r30, r30
    1018:	ff 1f       	adc	r31, r31
    101a:	05 90       	lpm	r0, Z+
    101c:	f4 91       	lpm	r31, Z
    101e:	e0 2d       	mov	r30, r0
    1020:	09 94       	ijmp

00001022 <__umulhisi3>:
    1022:	a2 9f       	mul	r26, r18
    1024:	b0 01       	movw	r22, r0
    1026:	b3 9f       	mul	r27, r19
    1028:	c0 01       	movw	r24, r0
    102a:	a3 9f       	mul	r26, r19
    102c:	01 d0       	rcall	.+2      	; 0x1030 <__umulhisi3+0xe>
    102e:	b2 9f       	mul	r27, r18
    1030:	70 0d       	add	r23, r0
    1032:	81 1d       	adc	r24, r1
    1034:	11 24       	eor	r1, r1
    1036:	91 1d       	adc	r25, r1
    1038:	08 95       	ret

0000103a <malloc>:
    103a:	cf 93       	push	r28
    103c:	df 93       	push	r29
    103e:	82 30       	cpi	r24, 0x02	; 2
    1040:	91 05       	cpc	r25, r1
    1042:	10 f4       	brcc	.+4      	; 0x1048 <malloc+0xe>
    1044:	82 e0       	ldi	r24, 0x02	; 2
    1046:	90 e0       	ldi	r25, 0x00	; 0
    1048:	e0 91 71 01 	lds	r30, 0x0171
    104c:	f0 91 72 01 	lds	r31, 0x0172
    1050:	20 e0       	ldi	r18, 0x00	; 0
    1052:	30 e0       	ldi	r19, 0x00	; 0
    1054:	c0 e0       	ldi	r28, 0x00	; 0
    1056:	d0 e0       	ldi	r29, 0x00	; 0
    1058:	30 97       	sbiw	r30, 0x00	; 0
    105a:	11 f1       	breq	.+68     	; 0x10a0 <malloc+0x66>
    105c:	40 81       	ld	r20, Z
    105e:	51 81       	ldd	r21, Z+1	; 0x01
    1060:	48 17       	cp	r20, r24
    1062:	59 07       	cpc	r21, r25
    1064:	c0 f0       	brcs	.+48     	; 0x1096 <malloc+0x5c>
    1066:	48 17       	cp	r20, r24
    1068:	59 07       	cpc	r21, r25
    106a:	61 f4       	brne	.+24     	; 0x1084 <malloc+0x4a>
    106c:	82 81       	ldd	r24, Z+2	; 0x02
    106e:	93 81       	ldd	r25, Z+3	; 0x03
    1070:	20 97       	sbiw	r28, 0x00	; 0
    1072:	19 f0       	breq	.+6      	; 0x107a <malloc+0x40>
    1074:	9b 83       	std	Y+3, r25	; 0x03
    1076:	8a 83       	std	Y+2, r24	; 0x02
    1078:	2b c0       	rjmp	.+86     	; 0x10d0 <malloc+0x96>
    107a:	90 93 72 01 	sts	0x0172, r25
    107e:	80 93 71 01 	sts	0x0171, r24
    1082:	26 c0       	rjmp	.+76     	; 0x10d0 <malloc+0x96>
    1084:	21 15       	cp	r18, r1
    1086:	31 05       	cpc	r19, r1
    1088:	19 f0       	breq	.+6      	; 0x1090 <malloc+0x56>
    108a:	42 17       	cp	r20, r18
    108c:	53 07       	cpc	r21, r19
    108e:	18 f4       	brcc	.+6      	; 0x1096 <malloc+0x5c>
    1090:	9a 01       	movw	r18, r20
    1092:	be 01       	movw	r22, r28
    1094:	df 01       	movw	r26, r30
    1096:	ef 01       	movw	r28, r30
    1098:	02 80       	ldd	r0, Z+2	; 0x02
    109a:	f3 81       	ldd	r31, Z+3	; 0x03
    109c:	e0 2d       	mov	r30, r0
    109e:	dc cf       	rjmp	.-72     	; 0x1058 <malloc+0x1e>
    10a0:	21 15       	cp	r18, r1
    10a2:	31 05       	cpc	r19, r1
    10a4:	09 f1       	breq	.+66     	; 0x10e8 <malloc+0xae>
    10a6:	28 1b       	sub	r18, r24
    10a8:	39 0b       	sbc	r19, r25
    10aa:	24 30       	cpi	r18, 0x04	; 4
    10ac:	31 05       	cpc	r19, r1
    10ae:	90 f4       	brcc	.+36     	; 0x10d4 <malloc+0x9a>
    10b0:	12 96       	adiw	r26, 0x02	; 2
    10b2:	8d 91       	ld	r24, X+
    10b4:	9c 91       	ld	r25, X
    10b6:	13 97       	sbiw	r26, 0x03	; 3
    10b8:	61 15       	cp	r22, r1
    10ba:	71 05       	cpc	r23, r1
    10bc:	21 f0       	breq	.+8      	; 0x10c6 <malloc+0x8c>
    10be:	fb 01       	movw	r30, r22
    10c0:	93 83       	std	Z+3, r25	; 0x03
    10c2:	82 83       	std	Z+2, r24	; 0x02
    10c4:	04 c0       	rjmp	.+8      	; 0x10ce <malloc+0x94>
    10c6:	90 93 72 01 	sts	0x0172, r25
    10ca:	80 93 71 01 	sts	0x0171, r24
    10ce:	fd 01       	movw	r30, r26
    10d0:	32 96       	adiw	r30, 0x02	; 2
    10d2:	44 c0       	rjmp	.+136    	; 0x115c <malloc+0x122>
    10d4:	fd 01       	movw	r30, r26
    10d6:	e2 0f       	add	r30, r18
    10d8:	f3 1f       	adc	r31, r19
    10da:	81 93       	st	Z+, r24
    10dc:	91 93       	st	Z+, r25
    10de:	22 50       	subi	r18, 0x02	; 2
    10e0:	31 09       	sbc	r19, r1
    10e2:	2d 93       	st	X+, r18
    10e4:	3c 93       	st	X, r19
    10e6:	3a c0       	rjmp	.+116    	; 0x115c <malloc+0x122>
    10e8:	20 91 6f 01 	lds	r18, 0x016F
    10ec:	30 91 70 01 	lds	r19, 0x0170
    10f0:	23 2b       	or	r18, r19
    10f2:	41 f4       	brne	.+16     	; 0x1104 <malloc+0xca>
    10f4:	20 91 62 00 	lds	r18, 0x0062
    10f8:	30 91 63 00 	lds	r19, 0x0063
    10fc:	30 93 70 01 	sts	0x0170, r19
    1100:	20 93 6f 01 	sts	0x016F, r18
    1104:	20 91 60 00 	lds	r18, 0x0060
    1108:	30 91 61 00 	lds	r19, 0x0061
    110c:	21 15       	cp	r18, r1
    110e:	31 05       	cpc	r19, r1
    1110:	41 f4       	brne	.+16     	; 0x1122 <malloc+0xe8>
    1112:	2d b7       	in	r18, 0x3d	; 61
    1114:	3e b7       	in	r19, 0x3e	; 62
    1116:	40 91 64 00 	lds	r20, 0x0064
    111a:	50 91 65 00 	lds	r21, 0x0065
    111e:	24 1b       	sub	r18, r20
    1120:	35 0b       	sbc	r19, r21
    1122:	e0 91 6f 01 	lds	r30, 0x016F
    1126:	f0 91 70 01 	lds	r31, 0x0170
    112a:	e2 17       	cp	r30, r18
    112c:	f3 07       	cpc	r31, r19
    112e:	a0 f4       	brcc	.+40     	; 0x1158 <malloc+0x11e>
    1130:	2e 1b       	sub	r18, r30
    1132:	3f 0b       	sbc	r19, r31
    1134:	28 17       	cp	r18, r24
    1136:	39 07       	cpc	r19, r25
    1138:	78 f0       	brcs	.+30     	; 0x1158 <malloc+0x11e>
    113a:	ac 01       	movw	r20, r24
    113c:	4e 5f       	subi	r20, 0xFE	; 254
    113e:	5f 4f       	sbci	r21, 0xFF	; 255
    1140:	24 17       	cp	r18, r20
    1142:	35 07       	cpc	r19, r21
    1144:	48 f0       	brcs	.+18     	; 0x1158 <malloc+0x11e>
    1146:	4e 0f       	add	r20, r30
    1148:	5f 1f       	adc	r21, r31
    114a:	50 93 70 01 	sts	0x0170, r21
    114e:	40 93 6f 01 	sts	0x016F, r20
    1152:	81 93       	st	Z+, r24
    1154:	91 93       	st	Z+, r25
    1156:	02 c0       	rjmp	.+4      	; 0x115c <malloc+0x122>
    1158:	e0 e0       	ldi	r30, 0x00	; 0
    115a:	f0 e0       	ldi	r31, 0x00	; 0
    115c:	cf 01       	movw	r24, r30
    115e:	df 91       	pop	r29
    1160:	cf 91       	pop	r28
    1162:	08 95       	ret

00001164 <free>:
    1164:	0f 93       	push	r16
    1166:	1f 93       	push	r17
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	00 97       	sbiw	r24, 0x00	; 0
    116e:	09 f4       	brne	.+2      	; 0x1172 <free+0xe>
    1170:	8c c0       	rjmp	.+280    	; 0x128a <free+0x126>
    1172:	fc 01       	movw	r30, r24
    1174:	32 97       	sbiw	r30, 0x02	; 2
    1176:	13 82       	std	Z+3, r1	; 0x03
    1178:	12 82       	std	Z+2, r1	; 0x02
    117a:	00 91 71 01 	lds	r16, 0x0171
    117e:	10 91 72 01 	lds	r17, 0x0172
    1182:	01 15       	cp	r16, r1
    1184:	11 05       	cpc	r17, r1
    1186:	81 f4       	brne	.+32     	; 0x11a8 <free+0x44>
    1188:	20 81       	ld	r18, Z
    118a:	31 81       	ldd	r19, Z+1	; 0x01
    118c:	82 0f       	add	r24, r18
    118e:	93 1f       	adc	r25, r19
    1190:	20 91 6f 01 	lds	r18, 0x016F
    1194:	30 91 70 01 	lds	r19, 0x0170
    1198:	28 17       	cp	r18, r24
    119a:	39 07       	cpc	r19, r25
    119c:	79 f5       	brne	.+94     	; 0x11fc <free+0x98>
    119e:	f0 93 70 01 	sts	0x0170, r31
    11a2:	e0 93 6f 01 	sts	0x016F, r30
    11a6:	71 c0       	rjmp	.+226    	; 0x128a <free+0x126>
    11a8:	d8 01       	movw	r26, r16
    11aa:	40 e0       	ldi	r20, 0x00	; 0
    11ac:	50 e0       	ldi	r21, 0x00	; 0
    11ae:	ae 17       	cp	r26, r30
    11b0:	bf 07       	cpc	r27, r31
    11b2:	50 f4       	brcc	.+20     	; 0x11c8 <free+0x64>
    11b4:	12 96       	adiw	r26, 0x02	; 2
    11b6:	2d 91       	ld	r18, X+
    11b8:	3c 91       	ld	r19, X
    11ba:	13 97       	sbiw	r26, 0x03	; 3
    11bc:	ad 01       	movw	r20, r26
    11be:	21 15       	cp	r18, r1
    11c0:	31 05       	cpc	r19, r1
    11c2:	09 f1       	breq	.+66     	; 0x1206 <free+0xa2>
    11c4:	d9 01       	movw	r26, r18
    11c6:	f3 cf       	rjmp	.-26     	; 0x11ae <free+0x4a>
    11c8:	9d 01       	movw	r18, r26
    11ca:	da 01       	movw	r26, r20
    11cc:	33 83       	std	Z+3, r19	; 0x03
    11ce:	22 83       	std	Z+2, r18	; 0x02
    11d0:	60 81       	ld	r22, Z
    11d2:	71 81       	ldd	r23, Z+1	; 0x01
    11d4:	86 0f       	add	r24, r22
    11d6:	97 1f       	adc	r25, r23
    11d8:	82 17       	cp	r24, r18
    11da:	93 07       	cpc	r25, r19
    11dc:	69 f4       	brne	.+26     	; 0x11f8 <free+0x94>
    11de:	ec 01       	movw	r28, r24
    11e0:	28 81       	ld	r18, Y
    11e2:	39 81       	ldd	r19, Y+1	; 0x01
    11e4:	26 0f       	add	r18, r22
    11e6:	37 1f       	adc	r19, r23
    11e8:	2e 5f       	subi	r18, 0xFE	; 254
    11ea:	3f 4f       	sbci	r19, 0xFF	; 255
    11ec:	31 83       	std	Z+1, r19	; 0x01
    11ee:	20 83       	st	Z, r18
    11f0:	8a 81       	ldd	r24, Y+2	; 0x02
    11f2:	9b 81       	ldd	r25, Y+3	; 0x03
    11f4:	93 83       	std	Z+3, r25	; 0x03
    11f6:	82 83       	std	Z+2, r24	; 0x02
    11f8:	45 2b       	or	r20, r21
    11fa:	29 f4       	brne	.+10     	; 0x1206 <free+0xa2>
    11fc:	f0 93 72 01 	sts	0x0172, r31
    1200:	e0 93 71 01 	sts	0x0171, r30
    1204:	42 c0       	rjmp	.+132    	; 0x128a <free+0x126>
    1206:	13 96       	adiw	r26, 0x03	; 3
    1208:	fc 93       	st	X, r31
    120a:	ee 93       	st	-X, r30
    120c:	12 97       	sbiw	r26, 0x02	; 2
    120e:	ed 01       	movw	r28, r26
    1210:	49 91       	ld	r20, Y+
    1212:	59 91       	ld	r21, Y+
    1214:	9e 01       	movw	r18, r28
    1216:	24 0f       	add	r18, r20
    1218:	35 1f       	adc	r19, r21
    121a:	e2 17       	cp	r30, r18
    121c:	f3 07       	cpc	r31, r19
    121e:	71 f4       	brne	.+28     	; 0x123c <free+0xd8>
    1220:	80 81       	ld	r24, Z
    1222:	91 81       	ldd	r25, Z+1	; 0x01
    1224:	84 0f       	add	r24, r20
    1226:	95 1f       	adc	r25, r21
    1228:	02 96       	adiw	r24, 0x02	; 2
    122a:	11 96       	adiw	r26, 0x01	; 1
    122c:	9c 93       	st	X, r25
    122e:	8e 93       	st	-X, r24
    1230:	82 81       	ldd	r24, Z+2	; 0x02
    1232:	93 81       	ldd	r25, Z+3	; 0x03
    1234:	13 96       	adiw	r26, 0x03	; 3
    1236:	9c 93       	st	X, r25
    1238:	8e 93       	st	-X, r24
    123a:	12 97       	sbiw	r26, 0x02	; 2
    123c:	e0 e0       	ldi	r30, 0x00	; 0
    123e:	f0 e0       	ldi	r31, 0x00	; 0
    1240:	d8 01       	movw	r26, r16
    1242:	12 96       	adiw	r26, 0x02	; 2
    1244:	8d 91       	ld	r24, X+
    1246:	9c 91       	ld	r25, X
    1248:	13 97       	sbiw	r26, 0x03	; 3
    124a:	00 97       	sbiw	r24, 0x00	; 0
    124c:	19 f0       	breq	.+6      	; 0x1254 <free+0xf0>
    124e:	f8 01       	movw	r30, r16
    1250:	8c 01       	movw	r16, r24
    1252:	f6 cf       	rjmp	.-20     	; 0x1240 <free+0xdc>
    1254:	8d 91       	ld	r24, X+
    1256:	9c 91       	ld	r25, X
    1258:	98 01       	movw	r18, r16
    125a:	2e 5f       	subi	r18, 0xFE	; 254
    125c:	3f 4f       	sbci	r19, 0xFF	; 255
    125e:	82 0f       	add	r24, r18
    1260:	93 1f       	adc	r25, r19
    1262:	20 91 6f 01 	lds	r18, 0x016F
    1266:	30 91 70 01 	lds	r19, 0x0170
    126a:	28 17       	cp	r18, r24
    126c:	39 07       	cpc	r19, r25
    126e:	69 f4       	brne	.+26     	; 0x128a <free+0x126>
    1270:	30 97       	sbiw	r30, 0x00	; 0
    1272:	29 f4       	brne	.+10     	; 0x127e <free+0x11a>
    1274:	10 92 72 01 	sts	0x0172, r1
    1278:	10 92 71 01 	sts	0x0171, r1
    127c:	02 c0       	rjmp	.+4      	; 0x1282 <free+0x11e>
    127e:	13 82       	std	Z+3, r1	; 0x03
    1280:	12 82       	std	Z+2, r1	; 0x02
    1282:	10 93 70 01 	sts	0x0170, r17
    1286:	00 93 6f 01 	sts	0x016F, r16
    128a:	df 91       	pop	r29
    128c:	cf 91       	pop	r28
    128e:	1f 91       	pop	r17
    1290:	0f 91       	pop	r16
    1292:	08 95       	ret

00001294 <sprintf>:
    1294:	ae e0       	ldi	r26, 0x0E	; 14
    1296:	b0 e0       	ldi	r27, 0x00	; 0
    1298:	ef e4       	ldi	r30, 0x4F	; 79
    129a:	f9 e0       	ldi	r31, 0x09	; 9
    129c:	98 c2       	rjmp	.+1328   	; 0x17ce <__prologue_saves__+0x1c>
    129e:	0d 89       	ldd	r16, Y+21	; 0x15
    12a0:	1e 89       	ldd	r17, Y+22	; 0x16
    12a2:	86 e0       	ldi	r24, 0x06	; 6
    12a4:	8c 83       	std	Y+4, r24	; 0x04
    12a6:	1a 83       	std	Y+2, r17	; 0x02
    12a8:	09 83       	std	Y+1, r16	; 0x01
    12aa:	8f ef       	ldi	r24, 0xFF	; 255
    12ac:	9f e7       	ldi	r25, 0x7F	; 127
    12ae:	9e 83       	std	Y+6, r25	; 0x06
    12b0:	8d 83       	std	Y+5, r24	; 0x05
    12b2:	ae 01       	movw	r20, r28
    12b4:	47 5e       	subi	r20, 0xE7	; 231
    12b6:	5f 4f       	sbci	r21, 0xFF	; 255
    12b8:	6f 89       	ldd	r22, Y+23	; 0x17
    12ba:	78 8d       	ldd	r23, Y+24	; 0x18
    12bc:	ce 01       	movw	r24, r28
    12be:	01 96       	adiw	r24, 0x01	; 1
    12c0:	09 d0       	rcall	.+18     	; 0x12d4 <vfprintf>
    12c2:	2f 81       	ldd	r18, Y+7	; 0x07
    12c4:	38 85       	ldd	r19, Y+8	; 0x08
    12c6:	f8 01       	movw	r30, r16
    12c8:	e2 0f       	add	r30, r18
    12ca:	f3 1f       	adc	r31, r19
    12cc:	10 82       	st	Z, r1
    12ce:	2e 96       	adiw	r28, 0x0e	; 14
    12d0:	e4 e0       	ldi	r30, 0x04	; 4
    12d2:	99 c2       	rjmp	.+1330   	; 0x1806 <__epilogue_restores__+0x1c>

000012d4 <vfprintf>:
    12d4:	ac e0       	ldi	r26, 0x0C	; 12
    12d6:	b0 e0       	ldi	r27, 0x00	; 0
    12d8:	ef e6       	ldi	r30, 0x6F	; 111
    12da:	f9 e0       	ldi	r31, 0x09	; 9
    12dc:	6a c2       	rjmp	.+1236   	; 0x17b2 <__prologue_saves__>
    12de:	7c 01       	movw	r14, r24
    12e0:	6b 01       	movw	r12, r22
    12e2:	8a 01       	movw	r16, r20
    12e4:	fc 01       	movw	r30, r24
    12e6:	17 82       	std	Z+7, r1	; 0x07
    12e8:	16 82       	std	Z+6, r1	; 0x06
    12ea:	83 81       	ldd	r24, Z+3	; 0x03
    12ec:	81 ff       	sbrs	r24, 1
    12ee:	b0 c1       	rjmp	.+864    	; 0x1650 <vfprintf+0x37c>
    12f0:	ce 01       	movw	r24, r28
    12f2:	01 96       	adiw	r24, 0x01	; 1
    12f4:	4c 01       	movw	r8, r24
    12f6:	f7 01       	movw	r30, r14
    12f8:	93 81       	ldd	r25, Z+3	; 0x03
    12fa:	f6 01       	movw	r30, r12
    12fc:	93 fd       	sbrc	r25, 3
    12fe:	85 91       	lpm	r24, Z+
    1300:	93 ff       	sbrs	r25, 3
    1302:	81 91       	ld	r24, Z+
    1304:	6f 01       	movw	r12, r30
    1306:	88 23       	and	r24, r24
    1308:	09 f4       	brne	.+2      	; 0x130c <vfprintf+0x38>
    130a:	9e c1       	rjmp	.+828    	; 0x1648 <vfprintf+0x374>
    130c:	85 32       	cpi	r24, 0x25	; 37
    130e:	39 f4       	brne	.+14     	; 0x131e <vfprintf+0x4a>
    1310:	93 fd       	sbrc	r25, 3
    1312:	85 91       	lpm	r24, Z+
    1314:	93 ff       	sbrs	r25, 3
    1316:	81 91       	ld	r24, Z+
    1318:	6f 01       	movw	r12, r30
    131a:	85 32       	cpi	r24, 0x25	; 37
    131c:	21 f4       	brne	.+8      	; 0x1326 <vfprintf+0x52>
    131e:	b7 01       	movw	r22, r14
    1320:	90 e0       	ldi	r25, 0x00	; 0
    1322:	b1 d1       	rcall	.+866    	; 0x1686 <fputc>
    1324:	e8 cf       	rjmp	.-48     	; 0x12f6 <vfprintf+0x22>
    1326:	51 2c       	mov	r5, r1
    1328:	31 2c       	mov	r3, r1
    132a:	20 e0       	ldi	r18, 0x00	; 0
    132c:	20 32       	cpi	r18, 0x20	; 32
    132e:	a0 f4       	brcc	.+40     	; 0x1358 <vfprintf+0x84>
    1330:	8b 32       	cpi	r24, 0x2B	; 43
    1332:	69 f0       	breq	.+26     	; 0x134e <vfprintf+0x7a>
    1334:	30 f4       	brcc	.+12     	; 0x1342 <vfprintf+0x6e>
    1336:	80 32       	cpi	r24, 0x20	; 32
    1338:	59 f0       	breq	.+22     	; 0x1350 <vfprintf+0x7c>
    133a:	83 32       	cpi	r24, 0x23	; 35
    133c:	69 f4       	brne	.+26     	; 0x1358 <vfprintf+0x84>
    133e:	20 61       	ori	r18, 0x10	; 16
    1340:	2c c0       	rjmp	.+88     	; 0x139a <vfprintf+0xc6>
    1342:	8d 32       	cpi	r24, 0x2D	; 45
    1344:	39 f0       	breq	.+14     	; 0x1354 <vfprintf+0x80>
    1346:	80 33       	cpi	r24, 0x30	; 48
    1348:	39 f4       	brne	.+14     	; 0x1358 <vfprintf+0x84>
    134a:	21 60       	ori	r18, 0x01	; 1
    134c:	26 c0       	rjmp	.+76     	; 0x139a <vfprintf+0xc6>
    134e:	22 60       	ori	r18, 0x02	; 2
    1350:	24 60       	ori	r18, 0x04	; 4
    1352:	23 c0       	rjmp	.+70     	; 0x139a <vfprintf+0xc6>
    1354:	28 60       	ori	r18, 0x08	; 8
    1356:	21 c0       	rjmp	.+66     	; 0x139a <vfprintf+0xc6>
    1358:	27 fd       	sbrc	r18, 7
    135a:	27 c0       	rjmp	.+78     	; 0x13aa <vfprintf+0xd6>
    135c:	30 ed       	ldi	r19, 0xD0	; 208
    135e:	38 0f       	add	r19, r24
    1360:	3a 30       	cpi	r19, 0x0A	; 10
    1362:	78 f4       	brcc	.+30     	; 0x1382 <vfprintf+0xae>
    1364:	26 ff       	sbrs	r18, 6
    1366:	06 c0       	rjmp	.+12     	; 0x1374 <vfprintf+0xa0>
    1368:	fa e0       	ldi	r31, 0x0A	; 10
    136a:	5f 9e       	mul	r5, r31
    136c:	30 0d       	add	r19, r0
    136e:	11 24       	eor	r1, r1
    1370:	53 2e       	mov	r5, r19
    1372:	13 c0       	rjmp	.+38     	; 0x139a <vfprintf+0xc6>
    1374:	8a e0       	ldi	r24, 0x0A	; 10
    1376:	38 9e       	mul	r3, r24
    1378:	30 0d       	add	r19, r0
    137a:	11 24       	eor	r1, r1
    137c:	33 2e       	mov	r3, r19
    137e:	20 62       	ori	r18, 0x20	; 32
    1380:	0c c0       	rjmp	.+24     	; 0x139a <vfprintf+0xc6>
    1382:	8e 32       	cpi	r24, 0x2E	; 46
    1384:	21 f4       	brne	.+8      	; 0x138e <vfprintf+0xba>
    1386:	26 fd       	sbrc	r18, 6
    1388:	5f c1       	rjmp	.+702    	; 0x1648 <vfprintf+0x374>
    138a:	20 64       	ori	r18, 0x40	; 64
    138c:	06 c0       	rjmp	.+12     	; 0x139a <vfprintf+0xc6>
    138e:	8c 36       	cpi	r24, 0x6C	; 108
    1390:	11 f4       	brne	.+4      	; 0x1396 <vfprintf+0xc2>
    1392:	20 68       	ori	r18, 0x80	; 128
    1394:	02 c0       	rjmp	.+4      	; 0x139a <vfprintf+0xc6>
    1396:	88 36       	cpi	r24, 0x68	; 104
    1398:	41 f4       	brne	.+16     	; 0x13aa <vfprintf+0xd6>
    139a:	f6 01       	movw	r30, r12
    139c:	93 fd       	sbrc	r25, 3
    139e:	85 91       	lpm	r24, Z+
    13a0:	93 ff       	sbrs	r25, 3
    13a2:	81 91       	ld	r24, Z+
    13a4:	6f 01       	movw	r12, r30
    13a6:	81 11       	cpse	r24, r1
    13a8:	c1 cf       	rjmp	.-126    	; 0x132c <vfprintf+0x58>
    13aa:	98 2f       	mov	r25, r24
    13ac:	9f 7d       	andi	r25, 0xDF	; 223
    13ae:	95 54       	subi	r25, 0x45	; 69
    13b0:	93 30       	cpi	r25, 0x03	; 3
    13b2:	28 f4       	brcc	.+10     	; 0x13be <vfprintf+0xea>
    13b4:	0c 5f       	subi	r16, 0xFC	; 252
    13b6:	1f 4f       	sbci	r17, 0xFF	; 255
    13b8:	ff e3       	ldi	r31, 0x3F	; 63
    13ba:	f9 83       	std	Y+1, r31	; 0x01
    13bc:	0d c0       	rjmp	.+26     	; 0x13d8 <vfprintf+0x104>
    13be:	83 36       	cpi	r24, 0x63	; 99
    13c0:	31 f0       	breq	.+12     	; 0x13ce <vfprintf+0xfa>
    13c2:	83 37       	cpi	r24, 0x73	; 115
    13c4:	71 f0       	breq	.+28     	; 0x13e2 <vfprintf+0x10e>
    13c6:	83 35       	cpi	r24, 0x53	; 83
    13c8:	09 f0       	breq	.+2      	; 0x13cc <vfprintf+0xf8>
    13ca:	57 c0       	rjmp	.+174    	; 0x147a <vfprintf+0x1a6>
    13cc:	21 c0       	rjmp	.+66     	; 0x1410 <vfprintf+0x13c>
    13ce:	f8 01       	movw	r30, r16
    13d0:	80 81       	ld	r24, Z
    13d2:	89 83       	std	Y+1, r24	; 0x01
    13d4:	0e 5f       	subi	r16, 0xFE	; 254
    13d6:	1f 4f       	sbci	r17, 0xFF	; 255
    13d8:	44 24       	eor	r4, r4
    13da:	43 94       	inc	r4
    13dc:	51 2c       	mov	r5, r1
    13de:	54 01       	movw	r10, r8
    13e0:	14 c0       	rjmp	.+40     	; 0x140a <vfprintf+0x136>
    13e2:	38 01       	movw	r6, r16
    13e4:	f2 e0       	ldi	r31, 0x02	; 2
    13e6:	6f 0e       	add	r6, r31
    13e8:	71 1c       	adc	r7, r1
    13ea:	f8 01       	movw	r30, r16
    13ec:	a0 80       	ld	r10, Z
    13ee:	b1 80       	ldd	r11, Z+1	; 0x01
    13f0:	26 ff       	sbrs	r18, 6
    13f2:	03 c0       	rjmp	.+6      	; 0x13fa <vfprintf+0x126>
    13f4:	65 2d       	mov	r22, r5
    13f6:	70 e0       	ldi	r23, 0x00	; 0
    13f8:	02 c0       	rjmp	.+4      	; 0x13fe <vfprintf+0x12a>
    13fa:	6f ef       	ldi	r22, 0xFF	; 255
    13fc:	7f ef       	ldi	r23, 0xFF	; 255
    13fe:	c5 01       	movw	r24, r10
    1400:	2c 87       	std	Y+12, r18	; 0x0c
    1402:	36 d1       	rcall	.+620    	; 0x1670 <strnlen>
    1404:	2c 01       	movw	r4, r24
    1406:	83 01       	movw	r16, r6
    1408:	2c 85       	ldd	r18, Y+12	; 0x0c
    140a:	2f 77       	andi	r18, 0x7F	; 127
    140c:	22 2e       	mov	r2, r18
    140e:	16 c0       	rjmp	.+44     	; 0x143c <vfprintf+0x168>
    1410:	38 01       	movw	r6, r16
    1412:	f2 e0       	ldi	r31, 0x02	; 2
    1414:	6f 0e       	add	r6, r31
    1416:	71 1c       	adc	r7, r1
    1418:	f8 01       	movw	r30, r16
    141a:	a0 80       	ld	r10, Z
    141c:	b1 80       	ldd	r11, Z+1	; 0x01
    141e:	26 ff       	sbrs	r18, 6
    1420:	03 c0       	rjmp	.+6      	; 0x1428 <vfprintf+0x154>
    1422:	65 2d       	mov	r22, r5
    1424:	70 e0       	ldi	r23, 0x00	; 0
    1426:	02 c0       	rjmp	.+4      	; 0x142c <vfprintf+0x158>
    1428:	6f ef       	ldi	r22, 0xFF	; 255
    142a:	7f ef       	ldi	r23, 0xFF	; 255
    142c:	c5 01       	movw	r24, r10
    142e:	2c 87       	std	Y+12, r18	; 0x0c
    1430:	14 d1       	rcall	.+552    	; 0x165a <strnlen_P>
    1432:	2c 01       	movw	r4, r24
    1434:	2c 85       	ldd	r18, Y+12	; 0x0c
    1436:	20 68       	ori	r18, 0x80	; 128
    1438:	22 2e       	mov	r2, r18
    143a:	83 01       	movw	r16, r6
    143c:	23 fc       	sbrc	r2, 3
    143e:	19 c0       	rjmp	.+50     	; 0x1472 <vfprintf+0x19e>
    1440:	83 2d       	mov	r24, r3
    1442:	90 e0       	ldi	r25, 0x00	; 0
    1444:	48 16       	cp	r4, r24
    1446:	59 06       	cpc	r5, r25
    1448:	a0 f4       	brcc	.+40     	; 0x1472 <vfprintf+0x19e>
    144a:	b7 01       	movw	r22, r14
    144c:	80 e2       	ldi	r24, 0x20	; 32
    144e:	90 e0       	ldi	r25, 0x00	; 0
    1450:	1a d1       	rcall	.+564    	; 0x1686 <fputc>
    1452:	3a 94       	dec	r3
    1454:	f5 cf       	rjmp	.-22     	; 0x1440 <vfprintf+0x16c>
    1456:	f5 01       	movw	r30, r10
    1458:	27 fc       	sbrc	r2, 7
    145a:	85 91       	lpm	r24, Z+
    145c:	27 fe       	sbrs	r2, 7
    145e:	81 91       	ld	r24, Z+
    1460:	5f 01       	movw	r10, r30
    1462:	b7 01       	movw	r22, r14
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	0f d1       	rcall	.+542    	; 0x1686 <fputc>
    1468:	31 10       	cpse	r3, r1
    146a:	3a 94       	dec	r3
    146c:	f1 e0       	ldi	r31, 0x01	; 1
    146e:	4f 1a       	sub	r4, r31
    1470:	51 08       	sbc	r5, r1
    1472:	41 14       	cp	r4, r1
    1474:	51 04       	cpc	r5, r1
    1476:	79 f7       	brne	.-34     	; 0x1456 <vfprintf+0x182>
    1478:	de c0       	rjmp	.+444    	; 0x1636 <vfprintf+0x362>
    147a:	84 36       	cpi	r24, 0x64	; 100
    147c:	11 f0       	breq	.+4      	; 0x1482 <vfprintf+0x1ae>
    147e:	89 36       	cpi	r24, 0x69	; 105
    1480:	31 f5       	brne	.+76     	; 0x14ce <vfprintf+0x1fa>
    1482:	f8 01       	movw	r30, r16
    1484:	27 ff       	sbrs	r18, 7
    1486:	07 c0       	rjmp	.+14     	; 0x1496 <vfprintf+0x1c2>
    1488:	60 81       	ld	r22, Z
    148a:	71 81       	ldd	r23, Z+1	; 0x01
    148c:	82 81       	ldd	r24, Z+2	; 0x02
    148e:	93 81       	ldd	r25, Z+3	; 0x03
    1490:	0c 5f       	subi	r16, 0xFC	; 252
    1492:	1f 4f       	sbci	r17, 0xFF	; 255
    1494:	08 c0       	rjmp	.+16     	; 0x14a6 <vfprintf+0x1d2>
    1496:	60 81       	ld	r22, Z
    1498:	71 81       	ldd	r23, Z+1	; 0x01
    149a:	07 2e       	mov	r0, r23
    149c:	00 0c       	add	r0, r0
    149e:	88 0b       	sbc	r24, r24
    14a0:	99 0b       	sbc	r25, r25
    14a2:	0e 5f       	subi	r16, 0xFE	; 254
    14a4:	1f 4f       	sbci	r17, 0xFF	; 255
    14a6:	2f 76       	andi	r18, 0x6F	; 111
    14a8:	72 2e       	mov	r7, r18
    14aa:	97 ff       	sbrs	r25, 7
    14ac:	09 c0       	rjmp	.+18     	; 0x14c0 <vfprintf+0x1ec>
    14ae:	90 95       	com	r25
    14b0:	80 95       	com	r24
    14b2:	70 95       	com	r23
    14b4:	61 95       	neg	r22
    14b6:	7f 4f       	sbci	r23, 0xFF	; 255
    14b8:	8f 4f       	sbci	r24, 0xFF	; 255
    14ba:	9f 4f       	sbci	r25, 0xFF	; 255
    14bc:	20 68       	ori	r18, 0x80	; 128
    14be:	72 2e       	mov	r7, r18
    14c0:	2a e0       	ldi	r18, 0x0A	; 10
    14c2:	30 e0       	ldi	r19, 0x00	; 0
    14c4:	a4 01       	movw	r20, r8
    14c6:	17 d1       	rcall	.+558    	; 0x16f6 <__ultoa_invert>
    14c8:	a8 2e       	mov	r10, r24
    14ca:	a8 18       	sub	r10, r8
    14cc:	43 c0       	rjmp	.+134    	; 0x1554 <vfprintf+0x280>
    14ce:	85 37       	cpi	r24, 0x75	; 117
    14d0:	29 f4       	brne	.+10     	; 0x14dc <vfprintf+0x208>
    14d2:	2f 7e       	andi	r18, 0xEF	; 239
    14d4:	b2 2e       	mov	r11, r18
    14d6:	2a e0       	ldi	r18, 0x0A	; 10
    14d8:	30 e0       	ldi	r19, 0x00	; 0
    14da:	25 c0       	rjmp	.+74     	; 0x1526 <vfprintf+0x252>
    14dc:	f2 2f       	mov	r31, r18
    14de:	f9 7f       	andi	r31, 0xF9	; 249
    14e0:	bf 2e       	mov	r11, r31
    14e2:	8f 36       	cpi	r24, 0x6F	; 111
    14e4:	c1 f0       	breq	.+48     	; 0x1516 <vfprintf+0x242>
    14e6:	18 f4       	brcc	.+6      	; 0x14ee <vfprintf+0x21a>
    14e8:	88 35       	cpi	r24, 0x58	; 88
    14ea:	79 f0       	breq	.+30     	; 0x150a <vfprintf+0x236>
    14ec:	ad c0       	rjmp	.+346    	; 0x1648 <vfprintf+0x374>
    14ee:	80 37       	cpi	r24, 0x70	; 112
    14f0:	19 f0       	breq	.+6      	; 0x14f8 <vfprintf+0x224>
    14f2:	88 37       	cpi	r24, 0x78	; 120
    14f4:	21 f0       	breq	.+8      	; 0x14fe <vfprintf+0x22a>
    14f6:	a8 c0       	rjmp	.+336    	; 0x1648 <vfprintf+0x374>
    14f8:	2f 2f       	mov	r18, r31
    14fa:	20 61       	ori	r18, 0x10	; 16
    14fc:	b2 2e       	mov	r11, r18
    14fe:	b4 fe       	sbrs	r11, 4
    1500:	0d c0       	rjmp	.+26     	; 0x151c <vfprintf+0x248>
    1502:	8b 2d       	mov	r24, r11
    1504:	84 60       	ori	r24, 0x04	; 4
    1506:	b8 2e       	mov	r11, r24
    1508:	09 c0       	rjmp	.+18     	; 0x151c <vfprintf+0x248>
    150a:	24 ff       	sbrs	r18, 4
    150c:	0a c0       	rjmp	.+20     	; 0x1522 <vfprintf+0x24e>
    150e:	9f 2f       	mov	r25, r31
    1510:	96 60       	ori	r25, 0x06	; 6
    1512:	b9 2e       	mov	r11, r25
    1514:	06 c0       	rjmp	.+12     	; 0x1522 <vfprintf+0x24e>
    1516:	28 e0       	ldi	r18, 0x08	; 8
    1518:	30 e0       	ldi	r19, 0x00	; 0
    151a:	05 c0       	rjmp	.+10     	; 0x1526 <vfprintf+0x252>
    151c:	20 e1       	ldi	r18, 0x10	; 16
    151e:	30 e0       	ldi	r19, 0x00	; 0
    1520:	02 c0       	rjmp	.+4      	; 0x1526 <vfprintf+0x252>
    1522:	20 e1       	ldi	r18, 0x10	; 16
    1524:	32 e0       	ldi	r19, 0x02	; 2
    1526:	f8 01       	movw	r30, r16
    1528:	b7 fe       	sbrs	r11, 7
    152a:	07 c0       	rjmp	.+14     	; 0x153a <vfprintf+0x266>
    152c:	60 81       	ld	r22, Z
    152e:	71 81       	ldd	r23, Z+1	; 0x01
    1530:	82 81       	ldd	r24, Z+2	; 0x02
    1532:	93 81       	ldd	r25, Z+3	; 0x03
    1534:	0c 5f       	subi	r16, 0xFC	; 252
    1536:	1f 4f       	sbci	r17, 0xFF	; 255
    1538:	06 c0       	rjmp	.+12     	; 0x1546 <vfprintf+0x272>
    153a:	60 81       	ld	r22, Z
    153c:	71 81       	ldd	r23, Z+1	; 0x01
    153e:	80 e0       	ldi	r24, 0x00	; 0
    1540:	90 e0       	ldi	r25, 0x00	; 0
    1542:	0e 5f       	subi	r16, 0xFE	; 254
    1544:	1f 4f       	sbci	r17, 0xFF	; 255
    1546:	a4 01       	movw	r20, r8
    1548:	d6 d0       	rcall	.+428    	; 0x16f6 <__ultoa_invert>
    154a:	a8 2e       	mov	r10, r24
    154c:	a8 18       	sub	r10, r8
    154e:	fb 2d       	mov	r31, r11
    1550:	ff 77       	andi	r31, 0x7F	; 127
    1552:	7f 2e       	mov	r7, r31
    1554:	76 fe       	sbrs	r7, 6
    1556:	0b c0       	rjmp	.+22     	; 0x156e <vfprintf+0x29a>
    1558:	37 2d       	mov	r19, r7
    155a:	3e 7f       	andi	r19, 0xFE	; 254
    155c:	a5 14       	cp	r10, r5
    155e:	50 f4       	brcc	.+20     	; 0x1574 <vfprintf+0x2a0>
    1560:	74 fe       	sbrs	r7, 4
    1562:	0a c0       	rjmp	.+20     	; 0x1578 <vfprintf+0x2a4>
    1564:	72 fc       	sbrc	r7, 2
    1566:	08 c0       	rjmp	.+16     	; 0x1578 <vfprintf+0x2a4>
    1568:	37 2d       	mov	r19, r7
    156a:	3e 7e       	andi	r19, 0xEE	; 238
    156c:	05 c0       	rjmp	.+10     	; 0x1578 <vfprintf+0x2a4>
    156e:	ba 2c       	mov	r11, r10
    1570:	37 2d       	mov	r19, r7
    1572:	03 c0       	rjmp	.+6      	; 0x157a <vfprintf+0x2a6>
    1574:	ba 2c       	mov	r11, r10
    1576:	01 c0       	rjmp	.+2      	; 0x157a <vfprintf+0x2a6>
    1578:	b5 2c       	mov	r11, r5
    157a:	34 ff       	sbrs	r19, 4
    157c:	0d c0       	rjmp	.+26     	; 0x1598 <vfprintf+0x2c4>
    157e:	fe 01       	movw	r30, r28
    1580:	ea 0d       	add	r30, r10
    1582:	f1 1d       	adc	r31, r1
    1584:	80 81       	ld	r24, Z
    1586:	80 33       	cpi	r24, 0x30	; 48
    1588:	11 f4       	brne	.+4      	; 0x158e <vfprintf+0x2ba>
    158a:	39 7e       	andi	r19, 0xE9	; 233
    158c:	09 c0       	rjmp	.+18     	; 0x15a0 <vfprintf+0x2cc>
    158e:	32 ff       	sbrs	r19, 2
    1590:	06 c0       	rjmp	.+12     	; 0x159e <vfprintf+0x2ca>
    1592:	b3 94       	inc	r11
    1594:	b3 94       	inc	r11
    1596:	04 c0       	rjmp	.+8      	; 0x15a0 <vfprintf+0x2cc>
    1598:	83 2f       	mov	r24, r19
    159a:	86 78       	andi	r24, 0x86	; 134
    159c:	09 f0       	breq	.+2      	; 0x15a0 <vfprintf+0x2cc>
    159e:	b3 94       	inc	r11
    15a0:	33 fd       	sbrc	r19, 3
    15a2:	12 c0       	rjmp	.+36     	; 0x15c8 <vfprintf+0x2f4>
    15a4:	30 ff       	sbrs	r19, 0
    15a6:	06 c0       	rjmp	.+12     	; 0x15b4 <vfprintf+0x2e0>
    15a8:	5a 2c       	mov	r5, r10
    15aa:	b3 14       	cp	r11, r3
    15ac:	18 f4       	brcc	.+6      	; 0x15b4 <vfprintf+0x2e0>
    15ae:	53 0c       	add	r5, r3
    15b0:	5b 18       	sub	r5, r11
    15b2:	b3 2c       	mov	r11, r3
    15b4:	b3 14       	cp	r11, r3
    15b6:	60 f4       	brcc	.+24     	; 0x15d0 <vfprintf+0x2fc>
    15b8:	b7 01       	movw	r22, r14
    15ba:	80 e2       	ldi	r24, 0x20	; 32
    15bc:	90 e0       	ldi	r25, 0x00	; 0
    15be:	3c 87       	std	Y+12, r19	; 0x0c
    15c0:	62 d0       	rcall	.+196    	; 0x1686 <fputc>
    15c2:	b3 94       	inc	r11
    15c4:	3c 85       	ldd	r19, Y+12	; 0x0c
    15c6:	f6 cf       	rjmp	.-20     	; 0x15b4 <vfprintf+0x2e0>
    15c8:	b3 14       	cp	r11, r3
    15ca:	10 f4       	brcc	.+4      	; 0x15d0 <vfprintf+0x2fc>
    15cc:	3b 18       	sub	r3, r11
    15ce:	01 c0       	rjmp	.+2      	; 0x15d2 <vfprintf+0x2fe>
    15d0:	31 2c       	mov	r3, r1
    15d2:	34 ff       	sbrs	r19, 4
    15d4:	11 c0       	rjmp	.+34     	; 0x15f8 <vfprintf+0x324>
    15d6:	b7 01       	movw	r22, r14
    15d8:	80 e3       	ldi	r24, 0x30	; 48
    15da:	90 e0       	ldi	r25, 0x00	; 0
    15dc:	3c 87       	std	Y+12, r19	; 0x0c
    15de:	53 d0       	rcall	.+166    	; 0x1686 <fputc>
    15e0:	3c 85       	ldd	r19, Y+12	; 0x0c
    15e2:	32 ff       	sbrs	r19, 2
    15e4:	16 c0       	rjmp	.+44     	; 0x1612 <vfprintf+0x33e>
    15e6:	31 fd       	sbrc	r19, 1
    15e8:	03 c0       	rjmp	.+6      	; 0x15f0 <vfprintf+0x31c>
    15ea:	88 e7       	ldi	r24, 0x78	; 120
    15ec:	90 e0       	ldi	r25, 0x00	; 0
    15ee:	02 c0       	rjmp	.+4      	; 0x15f4 <vfprintf+0x320>
    15f0:	88 e5       	ldi	r24, 0x58	; 88
    15f2:	90 e0       	ldi	r25, 0x00	; 0
    15f4:	b7 01       	movw	r22, r14
    15f6:	0c c0       	rjmp	.+24     	; 0x1610 <vfprintf+0x33c>
    15f8:	83 2f       	mov	r24, r19
    15fa:	86 78       	andi	r24, 0x86	; 134
    15fc:	51 f0       	breq	.+20     	; 0x1612 <vfprintf+0x33e>
    15fe:	31 ff       	sbrs	r19, 1
    1600:	02 c0       	rjmp	.+4      	; 0x1606 <vfprintf+0x332>
    1602:	8b e2       	ldi	r24, 0x2B	; 43
    1604:	01 c0       	rjmp	.+2      	; 0x1608 <vfprintf+0x334>
    1606:	80 e2       	ldi	r24, 0x20	; 32
    1608:	37 fd       	sbrc	r19, 7
    160a:	8d e2       	ldi	r24, 0x2D	; 45
    160c:	b7 01       	movw	r22, r14
    160e:	90 e0       	ldi	r25, 0x00	; 0
    1610:	3a d0       	rcall	.+116    	; 0x1686 <fputc>
    1612:	a5 14       	cp	r10, r5
    1614:	30 f4       	brcc	.+12     	; 0x1622 <vfprintf+0x34e>
    1616:	b7 01       	movw	r22, r14
    1618:	80 e3       	ldi	r24, 0x30	; 48
    161a:	90 e0       	ldi	r25, 0x00	; 0
    161c:	34 d0       	rcall	.+104    	; 0x1686 <fputc>
    161e:	5a 94       	dec	r5
    1620:	f8 cf       	rjmp	.-16     	; 0x1612 <vfprintf+0x33e>
    1622:	aa 94       	dec	r10
    1624:	f4 01       	movw	r30, r8
    1626:	ea 0d       	add	r30, r10
    1628:	f1 1d       	adc	r31, r1
    162a:	80 81       	ld	r24, Z
    162c:	b7 01       	movw	r22, r14
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	2a d0       	rcall	.+84     	; 0x1686 <fputc>
    1632:	a1 10       	cpse	r10, r1
    1634:	f6 cf       	rjmp	.-20     	; 0x1622 <vfprintf+0x34e>
    1636:	33 20       	and	r3, r3
    1638:	09 f4       	brne	.+2      	; 0x163c <vfprintf+0x368>
    163a:	5d ce       	rjmp	.-838    	; 0x12f6 <vfprintf+0x22>
    163c:	b7 01       	movw	r22, r14
    163e:	80 e2       	ldi	r24, 0x20	; 32
    1640:	90 e0       	ldi	r25, 0x00	; 0
    1642:	21 d0       	rcall	.+66     	; 0x1686 <fputc>
    1644:	3a 94       	dec	r3
    1646:	f7 cf       	rjmp	.-18     	; 0x1636 <vfprintf+0x362>
    1648:	f7 01       	movw	r30, r14
    164a:	86 81       	ldd	r24, Z+6	; 0x06
    164c:	97 81       	ldd	r25, Z+7	; 0x07
    164e:	02 c0       	rjmp	.+4      	; 0x1654 <vfprintf+0x380>
    1650:	8f ef       	ldi	r24, 0xFF	; 255
    1652:	9f ef       	ldi	r25, 0xFF	; 255
    1654:	2c 96       	adiw	r28, 0x0c	; 12
    1656:	e2 e1       	ldi	r30, 0x12	; 18
    1658:	c8 c0       	rjmp	.+400    	; 0x17ea <__epilogue_restores__>

0000165a <strnlen_P>:
    165a:	fc 01       	movw	r30, r24
    165c:	05 90       	lpm	r0, Z+
    165e:	61 50       	subi	r22, 0x01	; 1
    1660:	70 40       	sbci	r23, 0x00	; 0
    1662:	01 10       	cpse	r0, r1
    1664:	d8 f7       	brcc	.-10     	; 0x165c <strnlen_P+0x2>
    1666:	80 95       	com	r24
    1668:	90 95       	com	r25
    166a:	8e 0f       	add	r24, r30
    166c:	9f 1f       	adc	r25, r31
    166e:	08 95       	ret

00001670 <strnlen>:
    1670:	fc 01       	movw	r30, r24
    1672:	61 50       	subi	r22, 0x01	; 1
    1674:	70 40       	sbci	r23, 0x00	; 0
    1676:	01 90       	ld	r0, Z+
    1678:	01 10       	cpse	r0, r1
    167a:	d8 f7       	brcc	.-10     	; 0x1672 <strnlen+0x2>
    167c:	80 95       	com	r24
    167e:	90 95       	com	r25
    1680:	8e 0f       	add	r24, r30
    1682:	9f 1f       	adc	r25, r31
    1684:	08 95       	ret

00001686 <fputc>:
    1686:	0f 93       	push	r16
    1688:	1f 93       	push	r17
    168a:	cf 93       	push	r28
    168c:	df 93       	push	r29
    168e:	fb 01       	movw	r30, r22
    1690:	23 81       	ldd	r18, Z+3	; 0x03
    1692:	21 fd       	sbrc	r18, 1
    1694:	03 c0       	rjmp	.+6      	; 0x169c <fputc+0x16>
    1696:	8f ef       	ldi	r24, 0xFF	; 255
    1698:	9f ef       	ldi	r25, 0xFF	; 255
    169a:	28 c0       	rjmp	.+80     	; 0x16ec <fputc+0x66>
    169c:	22 ff       	sbrs	r18, 2
    169e:	16 c0       	rjmp	.+44     	; 0x16cc <fputc+0x46>
    16a0:	46 81       	ldd	r20, Z+6	; 0x06
    16a2:	57 81       	ldd	r21, Z+7	; 0x07
    16a4:	24 81       	ldd	r18, Z+4	; 0x04
    16a6:	35 81       	ldd	r19, Z+5	; 0x05
    16a8:	42 17       	cp	r20, r18
    16aa:	53 07       	cpc	r21, r19
    16ac:	44 f4       	brge	.+16     	; 0x16be <fputc+0x38>
    16ae:	a0 81       	ld	r26, Z
    16b0:	b1 81       	ldd	r27, Z+1	; 0x01
    16b2:	9d 01       	movw	r18, r26
    16b4:	2f 5f       	subi	r18, 0xFF	; 255
    16b6:	3f 4f       	sbci	r19, 0xFF	; 255
    16b8:	31 83       	std	Z+1, r19	; 0x01
    16ba:	20 83       	st	Z, r18
    16bc:	8c 93       	st	X, r24
    16be:	26 81       	ldd	r18, Z+6	; 0x06
    16c0:	37 81       	ldd	r19, Z+7	; 0x07
    16c2:	2f 5f       	subi	r18, 0xFF	; 255
    16c4:	3f 4f       	sbci	r19, 0xFF	; 255
    16c6:	37 83       	std	Z+7, r19	; 0x07
    16c8:	26 83       	std	Z+6, r18	; 0x06
    16ca:	10 c0       	rjmp	.+32     	; 0x16ec <fputc+0x66>
    16cc:	eb 01       	movw	r28, r22
    16ce:	09 2f       	mov	r16, r25
    16d0:	18 2f       	mov	r17, r24
    16d2:	00 84       	ldd	r0, Z+8	; 0x08
    16d4:	f1 85       	ldd	r31, Z+9	; 0x09
    16d6:	e0 2d       	mov	r30, r0
    16d8:	09 95       	icall
    16da:	89 2b       	or	r24, r25
    16dc:	e1 f6       	brne	.-72     	; 0x1696 <fputc+0x10>
    16de:	8e 81       	ldd	r24, Y+6	; 0x06
    16e0:	9f 81       	ldd	r25, Y+7	; 0x07
    16e2:	01 96       	adiw	r24, 0x01	; 1
    16e4:	9f 83       	std	Y+7, r25	; 0x07
    16e6:	8e 83       	std	Y+6, r24	; 0x06
    16e8:	81 2f       	mov	r24, r17
    16ea:	90 2f       	mov	r25, r16
    16ec:	df 91       	pop	r29
    16ee:	cf 91       	pop	r28
    16f0:	1f 91       	pop	r17
    16f2:	0f 91       	pop	r16
    16f4:	08 95       	ret

000016f6 <__ultoa_invert>:
    16f6:	fa 01       	movw	r30, r20
    16f8:	aa 27       	eor	r26, r26
    16fa:	28 30       	cpi	r18, 0x08	; 8
    16fc:	51 f1       	breq	.+84     	; 0x1752 <__ultoa_invert+0x5c>
    16fe:	20 31       	cpi	r18, 0x10	; 16
    1700:	81 f1       	breq	.+96     	; 0x1762 <__ultoa_invert+0x6c>
    1702:	e8 94       	clt
    1704:	6f 93       	push	r22
    1706:	6e 7f       	andi	r22, 0xFE	; 254
    1708:	6e 5f       	subi	r22, 0xFE	; 254
    170a:	7f 4f       	sbci	r23, 0xFF	; 255
    170c:	8f 4f       	sbci	r24, 0xFF	; 255
    170e:	9f 4f       	sbci	r25, 0xFF	; 255
    1710:	af 4f       	sbci	r26, 0xFF	; 255
    1712:	b1 e0       	ldi	r27, 0x01	; 1
    1714:	3e d0       	rcall	.+124    	; 0x1792 <__ultoa_invert+0x9c>
    1716:	b4 e0       	ldi	r27, 0x04	; 4
    1718:	3c d0       	rcall	.+120    	; 0x1792 <__ultoa_invert+0x9c>
    171a:	67 0f       	add	r22, r23
    171c:	78 1f       	adc	r23, r24
    171e:	89 1f       	adc	r24, r25
    1720:	9a 1f       	adc	r25, r26
    1722:	a1 1d       	adc	r26, r1
    1724:	68 0f       	add	r22, r24
    1726:	79 1f       	adc	r23, r25
    1728:	8a 1f       	adc	r24, r26
    172a:	91 1d       	adc	r25, r1
    172c:	a1 1d       	adc	r26, r1
    172e:	6a 0f       	add	r22, r26
    1730:	71 1d       	adc	r23, r1
    1732:	81 1d       	adc	r24, r1
    1734:	91 1d       	adc	r25, r1
    1736:	a1 1d       	adc	r26, r1
    1738:	20 d0       	rcall	.+64     	; 0x177a <__ultoa_invert+0x84>
    173a:	09 f4       	brne	.+2      	; 0x173e <__ultoa_invert+0x48>
    173c:	68 94       	set
    173e:	3f 91       	pop	r19
    1740:	2a e0       	ldi	r18, 0x0A	; 10
    1742:	26 9f       	mul	r18, r22
    1744:	11 24       	eor	r1, r1
    1746:	30 19       	sub	r19, r0
    1748:	30 5d       	subi	r19, 0xD0	; 208
    174a:	31 93       	st	Z+, r19
    174c:	de f6       	brtc	.-74     	; 0x1704 <__ultoa_invert+0xe>
    174e:	cf 01       	movw	r24, r30
    1750:	08 95       	ret
    1752:	46 2f       	mov	r20, r22
    1754:	47 70       	andi	r20, 0x07	; 7
    1756:	40 5d       	subi	r20, 0xD0	; 208
    1758:	41 93       	st	Z+, r20
    175a:	b3 e0       	ldi	r27, 0x03	; 3
    175c:	0f d0       	rcall	.+30     	; 0x177c <__ultoa_invert+0x86>
    175e:	c9 f7       	brne	.-14     	; 0x1752 <__ultoa_invert+0x5c>
    1760:	f6 cf       	rjmp	.-20     	; 0x174e <__ultoa_invert+0x58>
    1762:	46 2f       	mov	r20, r22
    1764:	4f 70       	andi	r20, 0x0F	; 15
    1766:	40 5d       	subi	r20, 0xD0	; 208
    1768:	4a 33       	cpi	r20, 0x3A	; 58
    176a:	18 f0       	brcs	.+6      	; 0x1772 <__ultoa_invert+0x7c>
    176c:	49 5d       	subi	r20, 0xD9	; 217
    176e:	31 fd       	sbrc	r19, 1
    1770:	40 52       	subi	r20, 0x20	; 32
    1772:	41 93       	st	Z+, r20
    1774:	02 d0       	rcall	.+4      	; 0x177a <__ultoa_invert+0x84>
    1776:	a9 f7       	brne	.-22     	; 0x1762 <__ultoa_invert+0x6c>
    1778:	ea cf       	rjmp	.-44     	; 0x174e <__ultoa_invert+0x58>
    177a:	b4 e0       	ldi	r27, 0x04	; 4
    177c:	a6 95       	lsr	r26
    177e:	97 95       	ror	r25
    1780:	87 95       	ror	r24
    1782:	77 95       	ror	r23
    1784:	67 95       	ror	r22
    1786:	ba 95       	dec	r27
    1788:	c9 f7       	brne	.-14     	; 0x177c <__ultoa_invert+0x86>
    178a:	00 97       	sbiw	r24, 0x00	; 0
    178c:	61 05       	cpc	r22, r1
    178e:	71 05       	cpc	r23, r1
    1790:	08 95       	ret
    1792:	9b 01       	movw	r18, r22
    1794:	ac 01       	movw	r20, r24
    1796:	0a 2e       	mov	r0, r26
    1798:	06 94       	lsr	r0
    179a:	57 95       	ror	r21
    179c:	47 95       	ror	r20
    179e:	37 95       	ror	r19
    17a0:	27 95       	ror	r18
    17a2:	ba 95       	dec	r27
    17a4:	c9 f7       	brne	.-14     	; 0x1798 <__ultoa_invert+0xa2>
    17a6:	62 0f       	add	r22, r18
    17a8:	73 1f       	adc	r23, r19
    17aa:	84 1f       	adc	r24, r20
    17ac:	95 1f       	adc	r25, r21
    17ae:	a0 1d       	adc	r26, r0
    17b0:	08 95       	ret

000017b2 <__prologue_saves__>:
    17b2:	2f 92       	push	r2
    17b4:	3f 92       	push	r3
    17b6:	4f 92       	push	r4
    17b8:	5f 92       	push	r5
    17ba:	6f 92       	push	r6
    17bc:	7f 92       	push	r7
    17be:	8f 92       	push	r8
    17c0:	9f 92       	push	r9
    17c2:	af 92       	push	r10
    17c4:	bf 92       	push	r11
    17c6:	cf 92       	push	r12
    17c8:	df 92       	push	r13
    17ca:	ef 92       	push	r14
    17cc:	ff 92       	push	r15
    17ce:	0f 93       	push	r16
    17d0:	1f 93       	push	r17
    17d2:	cf 93       	push	r28
    17d4:	df 93       	push	r29
    17d6:	cd b7       	in	r28, 0x3d	; 61
    17d8:	de b7       	in	r29, 0x3e	; 62
    17da:	ca 1b       	sub	r28, r26
    17dc:	db 0b       	sbc	r29, r27
    17de:	0f b6       	in	r0, 0x3f	; 63
    17e0:	f8 94       	cli
    17e2:	de bf       	out	0x3e, r29	; 62
    17e4:	0f be       	out	0x3f, r0	; 63
    17e6:	cd bf       	out	0x3d, r28	; 61
    17e8:	09 94       	ijmp

000017ea <__epilogue_restores__>:
    17ea:	2a 88       	ldd	r2, Y+18	; 0x12
    17ec:	39 88       	ldd	r3, Y+17	; 0x11
    17ee:	48 88       	ldd	r4, Y+16	; 0x10
    17f0:	5f 84       	ldd	r5, Y+15	; 0x0f
    17f2:	6e 84       	ldd	r6, Y+14	; 0x0e
    17f4:	7d 84       	ldd	r7, Y+13	; 0x0d
    17f6:	8c 84       	ldd	r8, Y+12	; 0x0c
    17f8:	9b 84       	ldd	r9, Y+11	; 0x0b
    17fa:	aa 84       	ldd	r10, Y+10	; 0x0a
    17fc:	b9 84       	ldd	r11, Y+9	; 0x09
    17fe:	c8 84       	ldd	r12, Y+8	; 0x08
    1800:	df 80       	ldd	r13, Y+7	; 0x07
    1802:	ee 80       	ldd	r14, Y+6	; 0x06
    1804:	fd 80       	ldd	r15, Y+5	; 0x05
    1806:	0c 81       	ldd	r16, Y+4	; 0x04
    1808:	1b 81       	ldd	r17, Y+3	; 0x03
    180a:	aa 81       	ldd	r26, Y+2	; 0x02
    180c:	b9 81       	ldd	r27, Y+1	; 0x01
    180e:	ce 0f       	add	r28, r30
    1810:	d1 1d       	adc	r29, r1
    1812:	0f b6       	in	r0, 0x3f	; 63
    1814:	f8 94       	cli
    1816:	de bf       	out	0x3e, r29	; 62
    1818:	0f be       	out	0x3f, r0	; 63
    181a:	cd bf       	out	0x3d, r28	; 61
    181c:	ed 01       	movw	r28, r26
    181e:	08 95       	ret

00001820 <__do_global_dtors>:
    1820:	10 e0       	ldi	r17, 0x00	; 0
    1822:	c1 e2       	ldi	r28, 0x21	; 33
    1824:	d0 e0       	ldi	r29, 0x00	; 0
    1826:	03 c0       	rjmp	.+6      	; 0x182e <__do_global_dtors+0xe>
    1828:	fe 01       	movw	r30, r28
    182a:	f5 db       	rcall	.-2070   	; 0x1016 <__tablejump2__>
    182c:	21 96       	adiw	r28, 0x01	; 1
    182e:	c2 32       	cpi	r28, 0x22	; 34
    1830:	d1 07       	cpc	r29, r17
    1832:	d1 f7       	brne	.-12     	; 0x1828 <__do_global_dtors+0x8>
    1834:	f8 94       	cli

00001836 <__stop_program>:
    1836:	ff cf       	rjmp	.-2      	; 0x1836 <__stop_program>
