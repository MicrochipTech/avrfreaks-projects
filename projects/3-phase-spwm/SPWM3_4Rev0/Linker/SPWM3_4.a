;/*
;   Author : OZHAN KD
;   www.KnowledgePlus.ir
;
;   ---------------------------------------------------------------
;
;   Sep 18, 2013
;
;   ADC0 (PF0): Frequency setting (0.5 Hz - 100 Hz with 0.1Hz step)
;   ADC1 (PF1): Acceleration setting (100Hz frequency change time) (0.99s - 253.7s)
;   ADC2 (PF2): Deceleration setting (100Hz frequency change time) (0.99s - 253.7s)
;   ADC3 (PF3): Boost volatage setting (9.8% - 21.9%)
;
;   PE2: Run push botton (active low)
;   PE3: Stop push botton (active low)
;   PE4: Dir push botton (active low)
;
;   PB5: SPWM phase1
;   PB6: SPWM phase2
;   PB7: SPWM phase3
;
;   PD0: Motor enable output (active high)
;   PD1: IR2130 fault indicator input (active low)
;   PD2: Run LED (active low)
;   PD3: Motor direction LED1 (active low)
;   PD4: Motor direction LED2 (active low)
;
;   mega64 oscillator frequency = 8MHz
;   Carrier frequency = 15.6 KHz
;
;   ---------------------------------------------------------------
;
;*/
;
;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <delay.h>
;#include "defines.h"
;#include "tables.c"
;flash unsigned char sine[256]={
;
; 129 , 132 , 135 , 138 , 142 , 145 , 148 , 151 , 154 , 157 , 160 , 163 , 166 , 169 , 172 , 175 ,
; 178 , 181 , 183 , 186 , 189 , 192 , 194 , 197 , 200 , 202 , 205 , 207 , 210 , 212 , 214 , 217 ,
; 219 , 221 , 223 , 225 , 227 , 229 , 231 , 233 , 234 , 236 , 238 , 239 , 241 , 242 , 243 , 245 ,
; 246 , 247 , 248 , 249 , 250 , 251 , 252 , 252 , 253 , 253 , 254 , 254 , 255 , 255 , 255 , 255 ,
; 255 , 255 , 255 , 255 , 254 , 254 , 253 , 253 , 252 , 252 , 251 , 250 , 249 , 248 , 247 , 246 ,
; 245 , 243 , 242 , 241 , 239 , 238 , 236 , 234 , 233 , 231 , 229 , 227 , 225 , 223 , 221 , 219 ,
; 217 , 214 , 212 , 210 , 207 , 205 , 202 , 200 , 197 , 194 , 192 , 189 , 186 , 183 , 181 , 178 ,
; 175 , 172 , 169 , 166 , 163 , 160 , 157 , 154 , 151 , 148 , 145 , 142 , 138 , 135 , 132 , 129 ,
; 126 , 123 , 120 , 117 , 113 , 110 , 107 , 104 , 101 ,  98 ,  95 ,  92 ,  89 ,  86 ,  83 ,  80 ,
; 77  ,  74 ,  72 ,  69 ,  66 ,  63 ,  61 ,  58 ,  55 ,  53 ,  50 ,  48 ,  45 ,  43 ,  41 ,  38 ,
;  36 ,  34 ,  32 ,  30 ,  28 ,  26 ,  24 ,  22 ,  21 ,  19 ,  17 ,  16 ,  14 ,  13 ,  12 ,  10 ,
;   9 ,   8 ,   7 ,   6 ,   5 ,   4 ,   3 ,   3 ,   2 ,   2 ,   1 ,   1 ,   0 ,   0 ,   0 ,   0 ,
;   0 ,   0 ,   0 ,   0 ,   1 ,   1 ,   2 ,   2 ,   3 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,
;  10 ,  12 ,  13 ,  14 ,  16 ,  17 ,  19 ,  21 ,  22 ,  24 ,  26 ,  28 ,  30 ,  32 ,  34 ,  36 ,
;  38 ,  41 ,  43 ,  45 ,  48 ,  50 ,  53 ,  55 ,  58 ,  61 ,  63 ,  66 ,  69 ,  72 ,  74 ,  77 ,
;  80 ,  83 ,  86 ,  89 ,  92 ,  95 ,  98 , 101 , 104 , 107 , 110 , 113 , 117 , 120 , 123 , 126
;};
;
;
;flash unsigned int OCR_value[996]={
;62500 - 1 , 52083 - 1 , 44643 - 1 , 39062 - 1 , 34722 - 1 , 31250 - 1 , 28409 - 1 , 26042 - 1 ,
;24038 - 1 , 22321 - 1 , 20833 - 1 , 19531 - 1 , 18382 - 1 , 17361 - 1 , 16447 - 1 , 15625 - 1 ,
;14881 - 1 , 14205 - 1 , 13587 - 1 , 13021 - 1 , 12500 - 1 , 12019 - 1 , 11574 - 1 , 11161 - 1 ,
;10776 - 1 , 10417 - 1 , 10081 - 1 , 9766 - 1 , 9470 - 1 , 9191 - 1 , 8929 - 1 , 8681 - 1 ,
;8446 - 1 , 8224 - 1 , 8013 - 1 , 7812 - 1 , 7622 - 1 , 7440 - 1 , 7267 - 1 , 7102 - 1 ,
;6944 - 1 , 6793 - 1 , 6649 - 1 , 6510 - 1 , 6378 - 1 , 6250 - 1 , 6127 - 1 , 6010 - 1 ,
;5896 - 1 , 5787 - 1 , 5682 - 1 , 5580 - 1 , 5482 - 1 , 5388 - 1 , 5297 - 1 , 5208 - 1 ,
;5123 - 1 , 5040 - 1 , 4960 - 1 , 4883 - 1 , 4808 - 1 , 4735 - 1 , 4664 - 1 , 4596 - 1 ,
;4529 - 1 , 4464 - 1 , 4401 - 1 , 4340 - 1 , 4281 - 1 , 4223 - 1 , 4167 - 1 , 4112 - 1 ,
;4058 - 1 , 4006 - 1 , 3956 - 1 , 3906 - 1 , 3858 - 1 , 3811 - 1 , 3765 - 1 , 3720 - 1 ,
;3676 - 1 , 3634 - 1 , 3592 - 1 , 3551 - 1 , 3511 - 1 , 3472 - 1 , 3434 - 1 , 3397 - 1 ,
;3360 - 1 , 3324 - 1 , 3289 - 1 , 3255 - 1 , 3222 - 1 , 3189 - 1 , 3157 - 1 , 3125 - 1 ,
;3094 - 1 , 3064 - 1 , 3034 - 1 , 3005 - 1 , 2976 - 1 , 2948 - 1 , 2921 - 1 , 2894 - 1 ,
;2867 - 1 , 2841 - 1 , 2815 - 1 , 2790 - 1 , 2765 - 1 , 2741 - 1 , 2717 - 1 , 2694 - 1 ,
;2671 - 1 , 2648 - 1 , 2626 - 1 , 2604 - 1 , 2583 - 1 , 2561 - 1 , 2541 - 1 , 2520 - 1 ,
;2500 - 1 , 2480 - 1 , 2461 - 1 , 2441 - 1 , 2422 - 1 , 2404 - 1 , 2385 - 1 , 2367 - 1 ,
;2350 - 1 , 2332 - 1 , 2315 - 1 , 2298 - 1 , 2281 - 1 , 2264 - 1 , 2248 - 1 , 2232 - 1 ,
;2216 - 1 , 2201 - 1 , 2185 - 1 , 2170 - 1 , 2155 - 1 , 2140 - 1 , 2126 - 1 , 2111 - 1 ,
;2097 - 1 , 2083 - 1 , 2070 - 1 , 2056 - 1 , 2042 - 1 , 2029 - 1 , 2016 - 1 , 2003 - 1 ,
;1990 - 1 , 1978 - 1 , 1965 - 1 , 1953 - 1 , 1941 - 1 , 1929 - 1 , 1917 - 1 , 1905 - 1 ,
;1894 - 1 , 1883 - 1 , 1871 - 1 , 1860 - 1 , 1849 - 1 , 1838 - 1 , 1827 - 1 , 1817 - 1 ,
;1806 - 1 , 1796 - 1 , 1786 - 1 , 1776 - 1 , 1766 - 1 , 1756 - 1 , 1746 - 1 , 1736 - 1 ,
;1727 - 1 , 1717 - 1 , 1708 - 1 , 1698 - 1 , 1689 - 1 , 1680 - 1 , 1671 - 1 , 1662 - 1 ,
;1653 - 1 , 1645 - 1 , 1636 - 1 , 1628 - 1 , 1619 - 1 , 1611 - 1 , 1603 - 1 , 1594 - 1 ,
;1586 - 1 , 1578 - 1 , 1570 - 1 , 3125 - 1 , 3109 - 1 , 3094 - 1 , 3079 - 1 , 3064 - 1 ,
;3049 - 1 , 3034 - 1 , 3019 - 1 , 3005 - 1 , 2990 - 1 , 2976 - 1 , 2962 - 1 , 2948 - 1 ,
;2934 - 1 , 2921 - 1 , 2907 - 1 , 2894 - 1 , 2880 - 1 , 2867 - 1 , 2854 - 1 , 2841 - 1 ,
;2828 - 1 , 2815 - 1 , 2803 - 1 , 2790 - 1 , 2778 - 1 , 2765 - 1 , 2753 - 1 , 2741 - 1 ,
;2729 - 1 , 2717 - 1 , 2706 - 1 , 2694 - 1 , 2682 - 1 , 2671 - 1 , 2660 - 1 , 2648 - 1 ,
;2637 - 1 , 2626 - 1 , 2615 - 1 , 2604 - 1 , 2593 - 1 , 2583 - 1 , 2572 - 1 , 2561 - 1 ,
;2551 - 1 , 2541 - 1 , 2530 - 1 , 2520 - 1 , 2510 - 1 , 2500 - 1 , 2490 - 1 , 2480 - 1 ,
;2470 - 1 , 2461 - 1 , 2451 - 1 , 2441 - 1 , 2432 - 1 , 2422 - 1 , 2413 - 1 , 2404 - 1 ,
;2395 - 1 , 2385 - 1 , 2376 - 1 , 2367 - 1 , 2358 - 1 , 2350 - 1 , 2341 - 1 , 2332 - 1 ,
;2323 - 1 , 2315 - 1 , 2306 - 1 , 2298 - 1 , 2289 - 1 , 2281 - 1 , 2273 - 1 , 2264 - 1 ,
;2256 - 1 , 2248 - 1 , 2240 - 1 , 2232 - 1 , 2224 - 1 , 2216 - 1 , 2208 - 1 , 2201 - 1 ,
;2193 - 1 , 2185 - 1 , 2178 - 1 , 2170 - 1 , 2163 - 1 , 2155 - 1 , 2148 - 1 , 2140 - 1 ,
;2133 - 1 , 2126 - 1 , 2119 - 1 , 2111 - 1 , 2104 - 1 , 2097 - 1 , 2090 - 1 , 2083 - 1 ,
;2076 - 1 , 2070 - 1 , 2063 - 1 , 2056 - 1 , 2049 - 1 , 2042 - 1 , 2036 - 1 , 2029 - 1 ,
;2023 - 1 , 2016 - 1 , 2010 - 1 , 2003 - 1 , 1997 - 1 , 1990 - 1 , 1984 - 1 , 1978 - 1 ,
;1972 - 1 , 1965 - 1 , 1959 - 1 , 1953 - 1 , 1947 - 1 , 1941 - 1 , 1935 - 1 , 1929 - 1 ,
;1923 - 1 , 1917 - 1 , 1911 - 1 , 1905 - 1 , 1900 - 1 , 1894 - 1 , 1888 - 1 , 1883 - 1 ,
;1877 - 1 , 1871 - 1 , 1866 - 1 , 1860 - 1 , 1855 - 1 , 1849 - 1 , 1844 - 1 , 1838 - 1 ,
;1833 - 1 , 1827 - 1 , 1822 - 1 , 1817 - 1 , 1812 - 1 , 1806 - 1 , 1801 - 1 , 1796 - 1 ,
;1791 - 1 , 1786 - 1 , 1781 - 1 , 1776 - 1 , 1771 - 1 , 1766 - 1 , 1761 - 1 , 1756 - 1 ,
;1751 - 1 , 1746 - 1 , 1741 - 1 , 1736 - 1 , 1731 - 1 , 1727 - 1 , 1722 - 1 , 1717 - 1 ,
;1712 - 1 , 1708 - 1 , 1703 - 1 , 1698 - 1 , 1694 - 1 , 1689 - 1 , 1685 - 1 , 1680 - 1 ,
;1676 - 1 , 1671 - 1 , 1667 - 1 , 1662 - 1 , 1658 - 1 , 1653 - 1 , 1649 - 1 , 1645 - 1 ,
;1640 - 1 , 1636 - 1 , 1632 - 1 , 1628 - 1 , 1623 - 1 , 1619 - 1 , 1615 - 1 , 1611 - 1 ,
;1607 - 1 , 1603 - 1 , 1598 - 1 , 1594 - 1 , 1590 - 1 , 1586 - 1 , 1582 - 1 , 1578 - 1 ,
;1574 - 1 , 1570 - 1 , 1566 - 1 , 3125 - 1 , 3117 - 1 , 3109 - 1 , 3102 - 1 , 3094 - 1 ,
;3086 - 1 , 3079 - 1 , 3071 - 1 , 3064 - 1 , 3056 - 1 , 3049 - 1 , 3041 - 1 , 3034 - 1 ,
;3027 - 1 , 3019 - 1 , 3012 - 1 , 3005 - 1 , 2998 - 1 , 2990 - 1 , 2983 - 1 , 2976 - 1 ,
;2969 - 1 , 2962 - 1 , 2955 - 1 , 2948 - 1 , 2941 - 1 , 2934 - 1 , 2927 - 1 , 2921 - 1 ,
;2914 - 1 , 2907 - 1 , 2900 - 1 , 2894 - 1 , 2887 - 1 , 2880 - 1 , 2874 - 1 , 2867 - 1 ,
;2860 - 1 , 2854 - 1 , 2847 - 1 , 2841 - 1 , 2834 - 1 , 2828 - 1 , 2822 - 1 , 2815 - 1 ,
;2809 - 1 , 2803 - 1 , 2796 - 1 , 2790 - 1 , 2784 - 1 , 2778 - 1 , 2772 - 1 , 2765 - 1 ,
;2759 - 1 , 2753 - 1 , 2747 - 1 , 2741 - 1 , 2735 - 1 , 2729 - 1 , 2723 - 1 , 2717 - 1 ,
;2711 - 1 , 2706 - 1 , 2700 - 1 , 2694 - 1 , 2688 - 1 , 2682 - 1 , 2677 - 1 , 2671 - 1 ,
;2665 - 1 , 2660 - 1 , 2654 - 1 , 2648 - 1 , 2643 - 1 , 2637 - 1 , 2632 - 1 , 2626 - 1 ,
;2621 - 1 , 2615 - 1 , 2610 - 1 , 2604 - 1 , 2599 - 1 , 2593 - 1 , 2588 - 1 , 2583 - 1 ,
;2577 - 1 , 2572 - 1 , 2567 - 1 , 2561 - 1 , 2556 - 1 , 2551 - 1 , 2546 - 1 , 2541 - 1 ,
;2535 - 1 , 2530 - 1 , 2525 - 1 , 2520 - 1 , 2515 - 1 , 2510 - 1 , 2505 - 1 , 2500 - 1 ,
;2495 - 1 , 2490 - 1 , 2485 - 1 , 2480 - 1 , 2475 - 1 , 2470 - 1 , 2465 - 1 , 2461 - 1 ,
;2456 - 1 , 2451 - 1 , 2446 - 1 , 2441 - 1 , 2437 - 1 , 2432 - 1 , 2427 - 1 , 2422 - 1 ,
;2418 - 1 , 2413 - 1 , 2408 - 1 , 2404 - 1 , 2399 - 1 , 2395 - 1 , 2390 - 1 , 2385 - 1 ,
;2381 - 1 , 2376 - 1 , 2372 - 1 , 2367 - 1 , 2363 - 1 , 2358 - 1 , 2354 - 1 , 2350 - 1 ,
;2345 - 1 , 2341 - 1 , 2336 - 1 , 2332 - 1 , 2328 - 1 , 2323 - 1 , 2319 - 1 , 2315 - 1 ,
;2311 - 1 , 2306 - 1 , 2302 - 1 , 2298 - 1 , 2294 - 1 , 2289 - 1 , 2285 - 1 , 2281 - 1 ,
;2277 - 1 , 2273 - 1 , 2269 - 1 , 2264 - 1 , 2260 - 1 , 2256 - 1 , 2252 - 1 , 2248 - 1 ,
;2244 - 1 , 2240 - 1 , 2236 - 1 , 2232 - 1 , 2228 - 1 , 2224 - 1 , 2220 - 1 , 2216 - 1 ,
;2212 - 1 , 2208 - 1 , 2205 - 1 , 2201 - 1 , 2197 - 1 , 2193 - 1 , 2189 - 1 , 2185 - 1 ,
;2182 - 1 , 2178 - 1 , 2174 - 1 , 2170 - 1 , 2166 - 1 , 2163 - 1 , 2159 - 1 , 2155 - 1 ,
;2151 - 1 , 2148 - 1 , 2144 - 1 , 2140 - 1 , 2137 - 1 , 2133 - 1 , 2129 - 1 , 2126 - 1 ,
;2122 - 1 , 2119 - 1 , 2115 - 1 , 2111 - 1 , 2108 - 1 , 2104 - 1 , 2101 - 1 , 2097 - 1 ,
;2094 - 1 , 2090 - 1 , 2087 - 1 , 4167 - 1 , 4160 - 1 , 4153 - 1 , 4146 - 1 , 4139 - 1 ,
;4132 - 1 , 4125 - 1 , 4119 - 1 , 4112 - 1 , 4105 - 1 , 4098 - 1 , 4092 - 1 , 4085 - 1 ,
;4078 - 1 , 4072 - 1 , 4065 - 1 , 4058 - 1 , 4052 - 1 , 4045 - 1 , 4039 - 1 , 4032 - 1 ,
;4026 - 1 , 4019 - 1 , 4013 - 1 , 4006 - 1 , 4000 - 1 , 3994 - 1 , 3987 - 1 , 3981 - 1 ,
;3975 - 1 , 3968 - 1 , 3962 - 1 , 3956 - 1 , 3949 - 1 , 3943 - 1 , 3937 - 1 , 3931 - 1 ,
;3925 - 1 , 3918 - 1 , 3912 - 1 , 3906 - 1 , 3900 - 1 , 3894 - 1 , 3888 - 1 , 3882 - 1 ,
;3876 - 1 , 3870 - 1 , 3864 - 1 , 3858 - 1 , 3852 - 1 , 3846 - 1 , 3840 - 1 , 3834 - 1 ,
;3828 - 1 , 3823 - 1 , 3817 - 1 , 3811 - 1 , 3805 - 1 , 3799 - 1 , 3794 - 1 , 3788 - 1 ,
;3782 - 1 , 3776 - 1 , 3771 - 1 , 3765 - 1 , 3759 - 1 , 3754 - 1 , 3748 - 1 , 3743 - 1 ,
;3737 - 1 , 3731 - 1 , 3726 - 1 , 3720 - 1 , 3715 - 1 , 3709 - 1 , 3704 - 1 , 3698 - 1 ,
;3693 - 1 , 3687 - 1 , 3682 - 1 , 3676 - 1 , 3671 - 1 , 3666 - 1 , 3660 - 1 , 3655 - 1 ,
;3650 - 1 , 3644 - 1 , 3639 - 1 , 3634 - 1 , 3628 - 1 , 3623 - 1 , 3618 - 1 , 3613 - 1 ,
;3608 - 1 , 3602 - 1 , 3597 - 1 , 3592 - 1 , 3587 - 1 , 3582 - 1 , 3577 - 1 , 3571 - 1 ,
;3566 - 1 , 3561 - 1 , 3556 - 1 , 3551 - 1 , 3546 - 1 , 3541 - 1 , 3536 - 1 , 3531 - 1 ,
;3526 - 1 , 3521 - 1 , 3516 - 1 , 3511 - 1 , 3506 - 1 , 3501 - 1 , 3497 - 1 , 3492 - 1 ,
;3487 - 1 , 3482 - 1 , 3477 - 1 , 3472 - 1 , 3467 - 1 , 3463 - 1 , 3458 - 1 , 3453 - 1 ,
;3448 - 1 , 3444 - 1 , 3439 - 1 , 3434 - 1 , 3429 - 1 , 3425 - 1 , 3420 - 1 , 3415 - 1 ,
;3411 - 1 , 3406 - 1 , 3401 - 1 , 3397 - 1 , 3392 - 1 , 3388 - 1 , 3383 - 1 , 3378 - 1 ,
;3374 - 1 , 3369 - 1 , 3365 - 1 , 3360 - 1 , 3356 - 1 , 3351 - 1 , 3347 - 1 , 3342 - 1 ,
;3338 - 1 , 3333 - 1 , 3329 - 1 , 3324 - 1 , 3320 - 1 , 3316 - 1 , 3311 - 1 , 3307 - 1 ,
;3303 - 1 , 3298 - 1 , 3294 - 1 , 3289 - 1 , 3285 - 1 , 3281 - 1 , 3277 - 1 , 3272 - 1 ,
;3268 - 1 , 3264 - 1 , 3259 - 1 , 3255 - 1 , 3251 - 1 , 3247 - 1 , 3243 - 1 , 3238 - 1 ,
;3234 - 1 , 3230 - 1 , 3226 - 1 , 3222 - 1 , 3218 - 1 , 3213 - 1 , 3209 - 1 , 3205 - 1 ,
;3201 - 1 , 3197 - 1 , 3193 - 1 , 3189 - 1 , 3185 - 1 , 3181 - 1 , 3177 - 1 , 3173 - 1 ,
;3169 - 1 , 3165 - 1 , 3161 - 1 , 3157 - 1 , 3153 - 1 , 3149 - 1 , 3145 - 1 , 3141 - 1 ,
;3137 - 1 , 3133 - 1 , 3129 - 1 , 6250 - 1 , 6242 - 1 , 6234 - 1 , 6227 - 1 , 6219 - 1 ,
;6211 - 1 , 6203 - 1 , 6196 - 1 , 6188 - 1 , 6180 - 1 , 6173 - 1 , 6165 - 1 , 6158 - 1 ,
;6150 - 1 , 6143 - 1 , 6135 - 1 , 6127 - 1 , 6120 - 1 , 6112 - 1 , 6105 - 1 , 6098 - 1 ,
;6090 - 1 , 6083 - 1 , 6075 - 1 , 6068 - 1 , 6061 - 1 , 6053 - 1 , 6046 - 1 , 6039 - 1 ,
;6031 - 1 , 6024 - 1 , 6017 - 1 , 6010 - 1 , 6002 - 1 , 5995 - 1 , 5988 - 1 , 5981 - 1 ,
;5974 - 1 , 5967 - 1 , 5959 - 1 , 5952 - 1 , 5945 - 1 , 5938 - 1 , 5931 - 1 , 5924 - 1 ,
;5917 - 1 , 5910 - 1 , 5903 - 1 , 5896 - 1 , 5889 - 1 , 5882 - 1 , 5875 - 1 , 5869 - 1 ,
;5862 - 1 , 5855 - 1 , 5848 - 1 , 5841 - 1 , 5834 - 1 , 5828 - 1 , 5821 - 1 , 5814 - 1 ,
;5807 - 1 , 5800 - 1 , 5794 - 1 , 5787 - 1 , 5780 - 1 , 5774 - 1 , 5767 - 1 , 5760 - 1 ,
;5754 - 1 , 5747 - 1 , 5741 - 1 , 5734 - 1 , 5727 - 1 , 5721 - 1 , 5714 - 1 , 5708 - 1 ,
;5701 - 1 , 5695 - 1 , 5688 - 1 , 5682 - 1 , 5675 - 1 , 5669 - 1 , 5663 - 1 , 5656 - 1 ,
;5650 - 1 , 5643 - 1 , 5637 - 1 , 5631 - 1 , 5624 - 1 , 5618 - 1 , 5612 - 1 , 5605 - 1 ,
;5599 - 1 , 5593 - 1 , 5587 - 1 , 5580 - 1 , 5574 - 1 , 5568 - 1 , 5562 - 1 , 5556 - 1 ,
;5549 - 1 , 5543 - 1 , 5537 - 1 , 5531 - 1 , 5525 - 1 , 5519 - 1 , 5513 - 1 , 5507 - 1 ,
;5501 - 1 , 5495 - 1 , 5488 - 1 , 5482 - 1 , 5476 - 1 , 5470 - 1 , 5464 - 1 , 5459 - 1 ,
;5453 - 1 , 5447 - 1 , 5441 - 1 , 5435 - 1 , 5429 - 1 , 5423 - 1 , 5417 - 1 , 5411 - 1 ,
;5405 - 1 , 5400 - 1 , 5394 - 1 , 5388 - 1 , 5382 - 1 , 5376 - 1 , 5371 - 1 , 5365 - 1 ,
;5359 - 1 , 5353 - 1 , 5348 - 1 , 5342 - 1 , 5336 - 1 , 5330 - 1 , 5325 - 1 , 5319 - 1 ,
;5313 - 1 , 5308 - 1 , 5302 - 1 , 5297 - 1 , 5291 - 1 , 5285 - 1 , 5280 - 1 , 5274 - 1 ,
;5269 - 1 , 5263 - 1 , 5258 - 1 , 5252 - 1 , 5247 - 1 , 5241 - 1 , 5236 - 1 , 5230 - 1 ,
;5225 - 1 , 5219 - 1 , 5214 - 1 , 5208 - 1 , 5203 - 1 , 5198 - 1 , 5192 - 1 , 5187 - 1 ,
;5181 - 1 , 5176 - 1 , 5171 - 1 , 5165 - 1 , 5160 - 1 , 5155 - 1 , 5149 - 1 , 5144 - 1 ,
;5139 - 1 , 5133 - 1 , 5128 - 1 , 5123 - 1 , 5118 - 1 , 5112 - 1 , 5107 - 1 , 5102 - 1 ,
;5097 - 1 , 5092 - 1 , 5086 - 1 , 5081 - 1 , 5076 - 1 , 5071 - 1 , 5066 - 1 , 5061 - 1 ,
;5056 - 1 , 5051 - 1 , 5045 - 1 , 5040 - 1 , 5035 - 1 , 5030 - 1 , 5025 - 1 , 5020 - 1 ,
;5015 - 1 , 5010 - 1 , 5005 - 1 , 5000 - 1};
;
;enum
;{
; STOP_MODE=0,
; RUN_MODE,
; FAULT_MODE
;};
;enum
;{
; RUN_CODE=0,
; STOP_CODE,
; DIR_CODE,
; NO_KEY_CODE
;};
;
;unsigned char a_calc(unsigned char,unsigned char);
;volatile unsigned int speed=0,adc_speed=0;
;volatile unsigned char acceleration=1,deceleration=1,temp_key_code=NO_KEY_CODE,

	.DSEG
;mode=STOP_MODE,a_boost=A_BOOST_MIN;
;
;struct
;{
; volatile unsigned char
; dir_f:1,
; deceleration_f:1,
; dir_change_f:1;
;}flags={0,0,0};
;
;//----------------------------------------------------------------
;
;void main(void)
; 0000 0046 {

	.CSEG
;PCODE: $0000000D VOL: 0
; 0000 0047  unsigned char key_code,old_key_code=NO_KEY_CODE;
; 0000 0048  ENABLE_DDR|=1<<ENABLE_bp;
;	key_code -> R17
;	old_key_code -> R16
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
; 0000 0049  DISABLE_MOTOR;
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 004A  FAULT_PORT|=1<<FAULT_bp; // Turn on fault input pullup
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
; 0000 004B  RUN_LED_DDR|=1<<RUN_LED_bp;
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 004C  RUN_LED_OFF;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
; 0000 004D  DIR_LED1_DDR|=1<<DIR_LED1_bp;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 004E  DIR_LED2_DDR|=1<<DIR_LED2_bp;
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
; 0000 004F  DIR_LED1_ON;
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
; 0000 0050  DIR_LED2_OFF;
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0051  KEY_PORT|=(1<<RUN_KEY_bp)|(1<<STOP_KEY_bp)|(1<<DIR_KEY_bp); // Turn on pullups
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0052 
; 0000 0053  DDRB=(1<<PORTB7)|(1<<PORTB6)|(1<<PORTB5); // PWM outputs
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
; 0000 0054  ADMUX=1<<REFS0; // AVcc as reference - ADC0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0055  ADCSRA=(1<<ADEN)|(1<<ADSC)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1);  // ClkADC = ClkIO/64
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0056  OCR1A=sine[0];
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 0057  OCR1B=sine[85];
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
; 0000 0058  OCR1CL=sine[171];
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
; 0000 0059  TCCR1A=1<<WGM10;
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
; 0000 005A  TCCR1B=1<<CS10;
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 005B  OCR2=124; // 1ms
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
; 0000 005C  TCCR2=(1<<WGM21)|(1<<CS21)|(1<<CS20);
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 005D  TIMSK=1<<OCIE2;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
; 0000 005E  #asm("sei")
;PCODE: $00000042 VOL: 0
	sei
;PCODE: $00000043 VOL: 0
; 0000 005F  delay_ms(1000); // For DC bus capacitor charging by NTC
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0060  while (1)
;PCODE: $00000047 VOL: 0
; 0000 0061  {
; 0000 0062   key_code=temp_key_code;
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 1
; 0000 0063   switch(mode)
;PCODE: $0000004A VOL: 1
;PCODE: $0000004B VOL: 0
; 0000 0064   {
; 0000 0065 
; 0000 0066 //----------------------------------------------------------------
; 0000 0067 
; 0000 0068   case STOP_MODE:
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
; 0000 0069    if((FAULT_PIN&(1<<FAULT_bp))==0)
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 006A    {
; 0000 006B     old_key_code=key_code;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 006C     mode=FAULT_MODE; // IR2130 fault condition
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 1
; 0000 006D     break;
;PCODE: $00000055 VOL: 0
; 0000 006E    }
; 0000 006F    if((key_code==RUN_CODE)&&(key_code!=old_key_code))
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
; 0000 0070    {
; 0000 0071     old_key_code=key_code;
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
; 0000 0072     mode=RUN_MODE;
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 1
; 0000 0073     RUN_LED_ON;
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
; 0000 0074     ENABLE_MOTOR;
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0075    }
; 0000 0076    else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
; 0000 0077    {
; 0000 0078     old_key_code=key_code;
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
; 0000 0079     if(flags.dir_f)
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 007A     {
; 0000 007B      DIR_LED1_ON;
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
; 0000 007C      DIR_LED2_OFF;
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
; 0000 007D     }
; 0000 007E     else
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
; 0000 007F     {
; 0000 0080      DIR_LED1_OFF;
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
; 0000 0081      DIR_LED2_ON;
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
; 0000 0082     }
;PCODE: $00000083 VOL: 0
; 0000 0083     flags.dir_f^=1;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 0084    }
; 0000 0085    else old_key_code=key_code;
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
; 0000 0086    break;
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 0087 
; 0000 0088 //----------------------------------------------------------------
; 0000 0089 
; 0000 008A   case RUN_MODE:
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
; 0000 008B    if((FAULT_PIN&(1<<FAULT_bp))==0)
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 008C    {
; 0000 008D     DISABLE_MOTOR;
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
; 0000 008E     flags.deceleration_f=0;
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
; 0000 008F     flags.dir_change_f=0;
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 0090     old_key_code=key_code;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 0091     mode=FAULT_MODE; // Fault condition
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 1
; 0000 0092     break;
;PCODE: $000000AA VOL: 0
; 0000 0093    }
; 0000 0094    if((key_code==STOP_CODE)&&(key_code!=old_key_code))
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 0095    {
; 0000 0096     old_key_code=key_code;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 0097     flags.deceleration_f=1;
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 0098    }
; 0000 0099    else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 009A    {
; 0000 009B     old_key_code=key_code;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 009C     #asm("cli")
;PCODE: $000000C9 VOL: 0
	cli
;PCODE: $000000CA VOL: 0
; 0000 009D     flags.deceleration_f=1;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
; 0000 009E     flags.dir_change_f=1;
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
; 0000 009F     #asm("sei")
;PCODE: $000000D1 VOL: 0
	sei
;PCODE: $000000D2 VOL: 0
; 0000 00A0    }
; 0000 00A1    else old_key_code=key_code;
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00A2    break;
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
; 0000 00A3 
; 0000 00A4 //----------------------------------------------------------------
; 0000 00A5 
; 0000 00A6   case FAULT_MODE:
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
; 0000 00A7    if((FAULT_PIN&(1<<FAULT_bp))&&(key_code==STOP_CODE)&&(key_code!=old_key_code))
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 00A8    {
; 0000 00A9      old_key_code=key_code;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00AA      mode=STOP_MODE;
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 1
; 0000 00AB      RUN_LED_OFF;
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00AC    }
; 0000 00AD    else old_key_code=key_code;
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00AE    break;
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00AF   }
;PCODE: $000000F6 VOL: 0
; 0000 00B0  }
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
; 0000 00B1 }
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;
;//----------------------------------------------------------------
;
;unsigned char a_calc(unsigned char sine , unsigned char amplitude)
; 0000 00B6 {
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 00B7  unsigned int sine_temp;
; 0000 00B8  unsigned char sine1;
; 0000 00B9  sine1=((sine<128)?~sine:sine);
;PCODE: $000000FE VOL: 0
;	sine -> Y+5
;	amplitude -> Y+4
;	sine_temp -> R16,R17
;	sine1 -> R19
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
; 0000 00BA  sine_temp=(((unsigned int)sine1)<<1);
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 00BB  sine_temp-=255;
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
; 0000 00BC  sine_temp*=amplitude;
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00BD  sine_temp>>=8;
;PCODE: $00000115 VOL: 0
; 0000 00BE  sine_temp+=255;
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 00BF  sine_temp>>=1;
;PCODE: $00000118 VOL: 0
; 0000 00C0  sine_temp++;
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
; 0000 00C1  sine1=(unsigned char)sine_temp;
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
; 0000 00C2  if (sine<128) sine1=~sine1;
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
; 0000 00C3  return sine1;
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
; 0000 00C4 }
;PCODE: $00000126 VOL: 0
;
;//----------------------------------------------------------------
;
;interrupt [TIM2_COMP] void timer2_compare_isr(void)
; 0000 00C9 {
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
; 0000 00CA  unsigned int final_speed;
; 0000 00CB  static unsigned char x20=0,x10=0,
; 0000 00CC  acceleration_counter=0, deceleration_counter=0;
; 0000 00CD 
; 0000 00CE  final_speed=(flags.deceleration_f ? 0 : adc_speed);
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;	final_speed -> R16,R17
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 1
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
; 0000 00CF  if((mode!=RUN_MODE)||(speed==final_speed))
;PCODE: $0000013D VOL: 1
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 1
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
; 0000 00D0  {
; 0000 00D1   acceleration_counter=0;
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 00D2   deceleration_counter=0;
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
; 0000 00D3  }
; 0000 00D4  else if(speed<final_speed)
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 1
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 00D5  {
; 0000 00D6   deceleration_counter=0;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
; 0000 00D7   if(++acceleration_counter>=acceleration)
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 1
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
; 0000 00D8   {
; 0000 00D9    acceleration_counter=0;
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 00DA    speed++;
;PCODE: $00000158 VOL: 1
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
; 0000 00DB    }
; 0000 00DC   }
;PCODE: $0000015D VOL: 0
; 0000 00DD  else
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 00DE  {
; 0000 00DF   acceleration_counter=0;
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 00E0   if(++deceleration_counter>=deceleration)
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 1
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 00E1   {
; 0000 00E2    deceleration_counter=0;
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
; 0000 00E3    speed--;
;PCODE: $0000016A VOL: 1
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 00E4    if((speed==0)&&(flags.deceleration_f==1))
;PCODE: $0000016F VOL: 1
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
; 0000 00E5    {
; 0000 00E6     flags.deceleration_f=0;
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00E7     if(flags.dir_change_f)
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
; 0000 00E8     {
; 0000 00E9      flags.dir_change_f=0;
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00EA      if(flags.dir_f)
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00EB      {
; 0000 00EC       DIR_LED1_ON;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
; 0000 00ED       DIR_LED2_OFF;
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
; 0000 00EE      }
; 0000 00EF      else
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00F0      {
; 0000 00F1       DIR_LED1_OFF;
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
; 0000 00F2       DIR_LED2_ON;
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
; 0000 00F3      }
;PCODE: $00000192 VOL: 0
; 0000 00F4      flags.dir_f^=1;
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
; 0000 00F5     }
; 0000 00F6 
; 0000 00F7     else
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00F8     {
; 0000 00F9      mode=STOP_MODE;
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 1
; 0000 00FA      RUN_LED_OFF;
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00FB      DISABLE_MOTOR;
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
; 0000 00FC     }
;PCODE: $000001A6 VOL: 0
; 0000 00FD    }
; 0000 00FE   }
;PCODE: $000001A7 VOL: 0
; 0000 00FF  }
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
; 0000 0100 
; 0000 0101  if(speed&&(mode==RUN_MODE))
;PCODE: $000001AB VOL: 1
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 1
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0102  {
; 0000 0103   unsigned int temp16=OCR_value[speed-1];
; 0000 0104   OCR3AH=(unsigned char)(temp16>>8);
;PCODE: $000001B5 VOL: 0
;	temp16 -> Y+0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 1
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
; 0000 0105   OCR3AL=(unsigned char)temp16;
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 0106   TCCR1A|=((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
;PCODE: $000001C1 VOL: 0
;PCODE: $000001C2 VOL: 0
;PCODE: $000001C3 VOL: 0
; 0000 0107   TCCR3A=(1<<WGM31)|(1<<WGM30);
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0108   TCCR3B=(1<<WGM33)|(1<<WGM32)|(1<<CS30);
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 0109   ETIMSK|=(1<<OCIE3A);
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
; 0000 010A  }
;PCODE: $000001CB VOL: 0
; 0000 010B  else
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 010C  {
; 0000 010D   TCCR1A&=~((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
; 0000 010E   TCCR3A=0;
;PCODE: $000001D1 VOL: 0
;PCODE: $000001D2 VOL: 0
; 0000 010F   TCCR3B=0; // Return to normal mode for next immediate update
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 0110   TCNT3H=0;
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
; 0000 0111   TCNT3L=0;
;PCODE: $000001D7 VOL: 0
;PCODE: $000001D8 VOL: 0
; 0000 0112   ETIMSK&=~(1<<OCIE3A);
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
; 0000 0113   ETIFR=(1<<OCF3A);
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 0114  }
;PCODE: $000001DE VOL: 0
; 0000 0115  if(++x20==20) // 20ms
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 0116  {
; 0000 0117   unsigned char temp8;
; 0000 0118   x20=0;
;PCODE: $000001E4 VOL: 0
;	temp8 -> Y+0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
; 0000 0119   temp8=KEY_PIN&((1<<DIR_KEY_bp)|(1<<STOP_KEY_bp)|(1<<RUN_KEY_bp));
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 011A   switch(temp8)
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 011B   {
; 0000 011C   case RUN_gc:
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 011D    temp_key_code=RUN_CODE;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 1
; 0000 011E    break;
;PCODE: $000001F0 VOL: 0
; 0000 011F   case STOP_gc:
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0120    temp_key_code=STOP_CODE;
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 1
; 0000 0121    break;
;PCODE: $000001F6 VOL: 0
; 0000 0122   case DIR_gc:
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0123    temp_key_code=DIR_CODE;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 1
; 0000 0124    break;
;PCODE: $000001FC VOL: 0
; 0000 0125   default:
;PCODE: $000001FD VOL: 0
; 0000 0126    temp_key_code=NO_KEY_CODE;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 1
; 0000 0127   }
;PCODE: $00000200 VOL: 0
; 0000 0128   if(++x10==10) // 200 ms
;PCODE: $00000201 VOL: 0
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 0129   {
; 0000 012A    x10=0;
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 012B    if(mode==FAULT_MODE)TOGGLE_RUN_LED;
;PCODE: $00000208 VOL: 1
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 012C   }
;PCODE: $0000020F VOL: 0
; 0000 012D  }
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 012E }
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;
;//----------------------------------------------------------------
;
;interrupt [TIM3_COMPA] void timer3_comparea_isr(void)
; 0000 0133 {
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
; 0000 0134  static unsigned char index=0;
; 0000 0135  if (speed>795)index+=16;
;PCODE: $00000219 VOL: 1
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
; 0000 0136  else if(speed>595)index+=8;
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 1
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 0137  else if(speed>395)index+=4;
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 1
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 0138  else if(speed>195)index+=2;
;PCODE: $0000022F VOL: 0
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 1
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
; 0000 0139  else ++index;
;PCODE: $00000237 VOL: 0
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
;PCODE: $0000023B VOL: 0
; 0000 013A 
; 0000 013B  if(speed>=SPEED_BASE)
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
;PCODE: $00000240 VOL: 1
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 013C  {
; 0000 013D   if (flags.dir_f)
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 013E   {
; 0000 013F    OCR1A=sine[index];
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
;PCODE: $0000024B VOL: 0
; 0000 0140    OCR1B=sine[(unsigned char)(index+85U)];
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
; 0000 0141   }
; 0000 0142   else
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
; 0000 0143   {
; 0000 0144    OCR1B=sine[index];
;PCODE: $00000257 VOL: 0
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
; 0000 0145    OCR1A=sine[(unsigned char)(index+85U)];
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 0146   }
;PCODE: $00000266 VOL: 0
; 0000 0147   OCR1CL=sine[(unsigned char)(index+171U)];
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
;PCODE: $0000026E VOL: 0
; 0000 0148  }
; 0000 0149 
; 0000 014A  else
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 014B  {
; 0000 014C   unsigned long amplitude;
; 0000 014D   amplitude=(((255-a_boost)*(unsigned long)(speed-SPEED_BOOST))/(SPEED_BASE-SPEED_BOOST))+a_boost;
;PCODE: $00000271 VOL: 0
;	amplitude -> Y+0
;PCODE: $00000272 VOL: 1
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 1
;PCODE: $00000278 VOL: 0
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 1
;PCODE: $00000280 VOL: 0
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 014E   if (flags.dir_f)
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 014F   {
; 0000 0150    OCR1A=a_calc(sine[index],(unsigned char)amplitude);
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0151    OCR1B=a_calc(sine[(unsigned char)(index+85U)],(unsigned char)amplitude);
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
; 0000 0152   }
; 0000 0153   else
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 0154   {
; 0000 0155    OCR1B=a_calc(sine[index],(unsigned char)amplitude);
;PCODE: $000002A0 VOL: 0
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 0156    OCR1A=a_calc(sine[(unsigned char)(index+85U)],(unsigned char)amplitude);
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 0157   }
;PCODE: $000002B7 VOL: 0
; 0000 0158   OCR1CL=a_calc(sine[(unsigned char)(index+171U)],(unsigned char)amplitude);
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 0159  }
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 015A }
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;
;//----------------------------------------------------------------
;
;interrupt [ADC_INT] void ADC_INT_isr(void)
; 0000 015F {
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 0160  static unsigned int adc_temp=0;
; 0000 0161  static unsigned char n=0,adc_select=0;
; 0000 0162  unsigned int temp;
; 0000 0163 
; 0000 0164  adc_temp+=ADCW;
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
;	temp -> R16,R17
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
; 0000 0165 
; 0000 0166  if(++n==64)
;PCODE: $000002D1 VOL: 0
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 0167  {
; 0000 0168   n=0;
;PCODE: $000002D6 VOL: 0
;PCODE: $000002D7 VOL: 0
; 0000 0169   temp=(adc_temp>>6);
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
; 0000 016A   adc_temp=0;
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0000 016B   switch (adc_select)
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
; 0000 016C   {
; 0000 016D   case 0:
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
; 0000 016E    if(temp<14)adc_speed=0;
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 1
; 0000 016F    else if (temp<1010)adc_speed=temp-13;
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 1
; 0000 0170    else adc_speed=996;
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 1
; 0000 0171    ADMUX=(1<<REFS0)|(1<<MUX0);
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
; 0000 0172    break;
;PCODE: $000002F7 VOL: 0
; 0000 0173 
; 0000 0174   case 1:
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
; 0000 0175    acceleration=(temp?(temp>>2):1);
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 1
; 0000 0176    ADMUX=(1<<REFS0)|(1<<MUX1);
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
; 0000 0177    break;
;PCODE: $00000307 VOL: 0
; 0000 0178 
; 0000 0179   case 2:
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 017A    deceleration=(temp?(temp>>2):1);
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
;PCODE: $0000030D VOL: 0
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 1
; 0000 017B    ADMUX=(1<<REFS0)|(1<<MUX1)|(1<<MUX0);
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 017C    break;
;PCODE: $00000317 VOL: 0
; 0000 017D 
; 0000 017E   case 3:
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
; 0000 017F    a_boost=(temp>>5)+A_BOOST_MIN; // 25 <= a_boost <= 56
;PCODE: $0000031B VOL: 0
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 1
; 0000 0180    ADMUX=(1<<REFS0);
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 0181   }
;PCODE: $00000322 VOL: 0
; 0000 0182   if(++adc_select==4)adc_select=0;
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
; 0000 0183  }
;PCODE: $0000032A VOL: 0
; 0000 0184  ADCSRA|=(1<<ADSC);
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
; 0000 0185 }
;PCODE: $0000032E VOL: 0
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;
;//----------------------------------------------------------------
;
