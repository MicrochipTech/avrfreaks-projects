
AVRASM ver. 2.1.30  D:\B\avr\Codevision Projects\SPWM3_4Rev0\List\SPWM3_4.asm Wed Sep 18 10:00:50 2013

                 
                 
                 ;CodeVisionAVR C Compiler V2.05.0 Professional
                 ;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega64
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Small
                 ;Optimize for             : Speed
                 ;(s)printf features       : int, width
                 ;(s)scanf features        : int, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 1024 byte(s)
                 ;Heap size                : 0 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : No
                 ;global 'const' stored in FLASH: Yes
                 ;Enhanced core instructions    : On
                 ;Smart register allocation     : On
                 ;Automatic register allocation : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega64
                 	#pragma AVRPART MEMORY PROG_FLASH 65536
                 	#pragma AVRPART MEMORY EEPROM 2048
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x6D
                 	.EQU XMCRB=0x6C
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0100
                 	.EQU __SRAM_END=0x10FF
                 	.EQU __DSTACK_SIZE=0x0400
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 04bb 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 05ca 	JMP  _timer2_compare_isr
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
00002a 940c 07f0 	JMP  _ADC_INT_isr
00002c 940c 0000 	JMP  0x00
00002e 940c 0000 	JMP  0x00
000030 940c 0000 	JMP  0x00
000032 940c 0000 	JMP  0x00
000034 940c 06e0 	JMP  _timer3_comparea_isr
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
                 
                 _sine:
000046 8481
000047 8a87
000048 918e
000049 9794      	.DB  0x81,0x84,0x87,0x8A,0x8E,0x91,0x94,0x97
00004a 9d9a
00004b a3a0
00004c a9a6
00004d afac      	.DB  0x9A,0x9D,0xA0,0xA3,0xA6,0xA9,0xAC,0xAF
00004e b5b2
00004f bab7
000050 c0bd
000051 c5c2      	.DB  0xB2,0xB5,0xB7,0xBA,0xBD,0xC0,0xC2,0xC5
000052 cac8
000053 cfcd
000054 d4d2
000055 d9d6      	.DB  0xC8,0xCA,0xCD,0xCF,0xD2,0xD4,0xD6,0xD9
000056 dddb
000057 e1df
000058 e5e3
000059 e9e7      	.DB  0xDB,0xDD,0xDF,0xE1,0xE3,0xE5,0xE7,0xE9
00005a ecea
00005b efee
00005c f2f1
00005d f5f3      	.DB  0xEA,0xEC,0xEE,0xEF,0xF1,0xF2,0xF3,0xF5
00005e f7f6
00005f f9f8
000060 fbfa
000061 fcfc      	.DB  0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFC
000062 fdfd
000063 fefe
000064 ffff
000065 ffff      	.DB  0xFD,0xFD,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF
000066 ffff
000067 ffff
000068 fefe
000069 fdfd      	.DB  0xFF,0xFF,0xFF,0xFF,0xFE,0xFE,0xFD,0xFD
00006a fcfc
00006b fafb
00006c f8f9
00006d f6f7      	.DB  0xFC,0xFC,0xFB,0xFA,0xF9,0xF8,0xF7,0xF6
00006e f3f5
00006f f1f2
000070 eeef
000071 eaec      	.DB  0xF5,0xF3,0xF2,0xF1,0xEF,0xEE,0xEC,0xEA
000072 e7e9
000073 e3e5
000074 dfe1
000075 dbdd      	.DB  0xE9,0xE7,0xE5,0xE3,0xE1,0xDF,0xDD,0xDB
000076 d6d9
000077 d2d4
000078 cdcf
000079 c8ca      	.DB  0xD9,0xD6,0xD4,0xD2,0xCF,0xCD,0xCA,0xC8
00007a c2c5
00007b bdc0
00007c b7ba
00007d b2b5      	.DB  0xC5,0xC2,0xC0,0xBD,0xBA,0xB7,0xB5,0xB2
00007e acaf
00007f a6a9
000080 a0a3
000081 9a9d      	.DB  0xAF,0xAC,0xA9,0xA6,0xA3,0xA0,0x9D,0x9A
000082 9497
000083 8e91
000084 878a
000085 8184      	.DB  0x97,0x94,0x91,0x8E,0x8A,0x87,0x84,0x81
000086 7b7e
000087 7578
000088 6e71
000089 686b      	.DB  0x7E,0x7B,0x78,0x75,0x71,0x6E,0x6B,0x68
00008a 6265
00008b 5c5f
00008c 5659
00008d 5053      	.DB  0x65,0x62,0x5F,0x5C,0x59,0x56,0x53,0x50
00008e 4a4d
00008f 4548
000090 3f42
000091 3a3d      	.DB  0x4D,0x4A,0x48,0x45,0x42,0x3F,0x3D,0x3A
000092 3537
000093 3032
000094 2b2d
000095 2629      	.DB  0x37,0x35,0x32,0x30,0x2D,0x2B,0x29,0x26
000096 2224
000097 1e20
000098 1a1c
000099 1618      	.DB  0x24,0x22,0x20,0x1E,0x1C,0x1A,0x18,0x16
00009a 1315
00009b 1011
00009c 0d0e
00009d 0a0c      	.DB  0x15,0x13,0x11,0x10,0xE,0xD,0xC,0xA
00009e 0809
00009f 0607
0000a0 0405
0000a1 0303      	.DB  0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x3
0000a2 0202
0000a3 0101
0000a4 0000
0000a5 0000      	.DB  0x2,0x2,0x1,0x1,0x0,0x0,0x0,0x0
0000a6 0000
0000a7 0000
0000a8 0101
0000a9 0202      	.DB  0x0,0x0,0x0,0x0,0x1,0x1,0x2,0x2
0000aa 0303
0000ab 0504
0000ac 0706
0000ad 0908      	.DB  0x3,0x3,0x4,0x5,0x6,0x7,0x8,0x9
0000ae 0c0a
0000af 0e0d
0000b0 1110
0000b1 1513      	.DB  0xA,0xC,0xD,0xE,0x10,0x11,0x13,0x15
0000b2 1816
0000b3 1c1a
0000b4 201e
0000b5 2422      	.DB  0x16,0x18,0x1A,0x1C,0x1E,0x20,0x22,0x24
0000b6 2926
0000b7 2d2b
0000b8 3230
0000b9 3735      	.DB  0x26,0x29,0x2B,0x2D,0x30,0x32,0x35,0x37
0000ba 3d3a
0000bb 423f
0000bc 4845
0000bd 4d4a      	.DB  0x3A,0x3D,0x3F,0x42,0x45,0x48,0x4A,0x4D
0000be 5350
0000bf 5956
0000c0 5f5c
0000c1 6562      	.DB  0x50,0x53,0x56,0x59,0x5C,0x5F,0x62,0x65
0000c2 6b68
0000c3 716e
0000c4 7875
0000c5 7e7b      	.DB  0x68,0x6B,0x6E,0x71,0x75,0x78,0x7B,0x7E
                 _OCR_value:
0000c6 f423
0000c7 cb72
0000c8 ae62
0000c9 9895      	.DB  0x23,0xF4,0x72,0xCB,0x62,0xAE,0x95,0x98
0000ca 87a1
0000cb 7a11
0000cc 6ef8
0000cd 65b9      	.DB  0xA1,0x87,0x11,0x7A,0xF8,0x6E,0xB9,0x65
0000ce 5de5
0000cf 5730
0000d0 5160
0000d1 4c4a      	.DB  0xE5,0x5D,0x30,0x57,0x60,0x51,0x4A,0x4C
0000d2 47cd
0000d3 43d0
0000d4 403e
0000d5 3d08      	.DB  0xCD,0x47,0xD0,0x43,0x3E,0x40,0x8,0x3D
0000d6 3a20
0000d7 377c
0000d8 3512
0000d9 32dc      	.DB  0x20,0x3A,0x7C,0x37,0x12,0x35,0xDC,0x32
0000da 30d3
0000db 2ef2
0000dc 2d35
0000dd 2b98      	.DB  0xD3,0x30,0xF2,0x2E,0x35,0x2D,0x98,0x2B
0000de 2a17
0000df 28b0
0000e0 2760
0000e1 2625      	.DB  0x17,0x2A,0xB0,0x28,0x60,0x27,0x25,0x26
0000e2 24fd
0000e3 23e6
0000e4 22e0
0000e5 21e8      	.DB  0xFD,0x24,0xE6,0x23,0xE0,0x22,0xE8,0x21
0000e6 20fd
0000e7 201f
0000e8 1f4c
0000e9 1e83      	.DB  0xFD,0x20,0x1F,0x20,0x4C,0x1F,0x83,0x1E
0000ea 1dc5
0000eb 1d0f
0000ec 1c62
0000ed 1bbd      	.DB  0xC5,0x1D,0xF,0x1D,0x62,0x1C,0xBD,0x1B
0000ee 1b1f
0000ef 1a88
0000f0 19f8
0000f1 196d      	.DB  0x1F,0x1B,0x88,0x1A,0xF8,0x19,0x6D,0x19
0000f2 18e9
0000f3 1869
0000f4 17ee
0000f5 1779      	.DB  0xE9,0x18,0x69,0x18,0xEE,0x17,0x79,0x17
0000f6 1707
0000f7 169a
0000f8 1631
0000f9 15cb      	.DB  0x7,0x17,0x9A,0x16,0x31,0x16,0xCB,0x15
0000fa 1569
0000fb 150b
0000fc 14b0
0000fd 1457      	.DB  0x69,0x15,0xB,0x15,0xB0,0x14,0x57,0x14
0000fe 1402
0000ff 13af
000100 135f
000101 1312      	.DB  0x2,0x14,0xAF,0x13,0x5F,0x13,0x12,0x13
000102 12c7
000103 127e
000104 1237
000105 11f3      	.DB  0xC7,0x12,0x7E,0x12,0x37,0x12,0xF3,0x11
000106 11b0
000107 116f
000108 1130
000109 10f3      	.DB  0xB0,0x11,0x6F,0x11,0x30,0x11,0xF3,0x10
00010a 10b8
00010b 107e
00010c 1046
00010d 100f      	.DB  0xB8,0x10,0x7E,0x10,0x46,0x10,0xF,0x10
00010e 0fd9
00010f 0fa5
000110 0f73
000111 0f41      	.DB  0xD9,0xF,0xA5,0xF,0x73,0xF,0x41,0xF
000112 0f11
000113 0ee2
000114 0eb4
000115 0e87      	.DB  0x11,0xF,0xE2,0xE,0xB4,0xE,0x87,0xE
000116 0e5b
000117 0e31
000118 0e07
000119 0dde      	.DB  0x5B,0xE,0x31,0xE,0x7,0xE,0xDE,0xD
00011a 0db6
00011b 0d8f
00011c 0d69
00011d 0d44      	.DB  0xB6,0xD,0x8F,0xD,0x69,0xD,0x44,0xD
00011e 0d1f
00011f 0cfb
000120 0cd8
000121 0cb6      	.DB  0x1F,0xD,0xFB,0xC,0xD8,0xC,0xB6,0xC
000122 0c95
000123 0c74
000124 0c54
000125 0c34      	.DB  0x95,0xC,0x74,0xC,0x54,0xC,0x34,0xC
000126 0c15
000127 0bf7
000128 0bd9
000129 0bbc      	.DB  0x15,0xC,0xF7,0xB,0xD9,0xB,0xBC,0xB
00012a 0b9f
00012b 0b83
00012c 0b68
00012d 0b4d      	.DB  0x9F,0xB,0x83,0xB,0x68,0xB,0x4D,0xB
00012e 0b32
00012f 0b18
000130 0afe
000131 0ae5      	.DB  0x32,0xB,0x18,0xB,0xFE,0xA,0xE5,0xA
000132 0acc
000133 0ab4
000134 0a9c
000135 0a85      	.DB  0xCC,0xA,0xB4,0xA,0x9C,0xA,0x85,0xA
000136 0a6e
000137 0a57
000138 0a41
000139 0a2b      	.DB  0x6E,0xA,0x57,0xA,0x41,0xA,0x2B,0xA
00013a 0a16
00013b 0a00
00013c 09ec
00013d 09d7      	.DB  0x16,0xA,0x0,0xA,0xEC,0x9,0xD7,0x9
00013e 09c3
00013f 09af
000140 099c
000141 0988      	.DB  0xC3,0x9,0xAF,0x9,0x9C,0x9,0x88,0x9
000142 0975
000143 0963
000144 0950
000145 093e      	.DB  0x75,0x9,0x63,0x9,0x50,0x9,0x3E,0x9
000146 092d
000147 091b
000148 090a
000149 08f9      	.DB  0x2D,0x9,0x1B,0x9,0xA,0x9,0xF9,0x8
00014a 08e8
00014b 08d7
00014c 08c7
00014d 08b7      	.DB  0xE8,0x8,0xD7,0x8,0xC7,0x8,0xB7,0x8
00014e 08a7
00014f 0898
000150 0888
000151 0879      	.DB  0xA7,0x8,0x98,0x8,0x88,0x8,0x79,0x8
000152 086a
000153 085b
000154 084d
000155 083e      	.DB  0x6A,0x8,0x5B,0x8,0x4D,0x8,0x3E,0x8
000156 0830
000157 0822
000158 0815
000159 0807      	.DB  0x30,0x8,0x22,0x8,0x15,0x8,0x7,0x8
00015a 07f9
00015b 07ec
00015c 07df
00015d 07d2      	.DB  0xF9,0x7,0xEC,0x7,0xDF,0x7,0xD2,0x7
00015e 07c5
00015f 07b9
000160 07ac
000161 07a0      	.DB  0xC5,0x7,0xB9,0x7,0xAC,0x7,0xA0,0x7
000162 0794
000163 0788
000164 077c
000165 0770      	.DB  0x94,0x7,0x88,0x7,0x7C,0x7,0x70,0x7
000166 0765
000167 075a
000168 074e
000169 0743      	.DB  0x65,0x7,0x5A,0x7,0x4E,0x7,0x43,0x7
00016a 0738
00016b 072d
00016c 0722
00016d 0718      	.DB  0x38,0x7,0x2D,0x7,0x22,0x7,0x18,0x7
00016e 070d
00016f 0703
000170 06f9
000171 06ef      	.DB  0xD,0x7,0x3,0x7,0xF9,0x6,0xEF,0x6
000172 06e5
000173 06db
000174 06d1
000175 06c7      	.DB  0xE5,0x6,0xDB,0x6,0xD1,0x6,0xC7,0x6
000176 06be
000177 06b4
000178 06ab
000179 06a1      	.DB  0xBE,0x6,0xB4,0x6,0xAB,0x6,0xA1,0x6
00017a 0698
00017b 068f
00017c 0686
00017d 067d      	.DB  0x98,0x6,0x8F,0x6,0x86,0x6,0x7D,0x6
00017e 0674
00017f 066c
000180 0663
000181 065b      	.DB  0x74,0x6,0x6C,0x6,0x63,0x6,0x5B,0x6
000182 0652
000183 064a
000184 0642
000185 0639      	.DB  0x52,0x6,0x4A,0x6,0x42,0x6,0x39,0x6
000186 0631
000187 0629
000188 0621
000189 0c34      	.DB  0x31,0x6,0x29,0x6,0x21,0x6,0x34,0xC
00018a 0c24
00018b 0c15
00018c 0c06
00018d 0bf7      	.DB  0x24,0xC,0x15,0xC,0x6,0xC,0xF7,0xB
00018e 0be8
00018f 0bd9
000190 0bca
000191 0bbc      	.DB  0xE8,0xB,0xD9,0xB,0xCA,0xB,0xBC,0xB
000192 0bad
000193 0b9f
000194 0b91
000195 0b83      	.DB  0xAD,0xB,0x9F,0xB,0x91,0xB,0x83,0xB
000196 0b75
000197 0b68
000198 0b5a
000199 0b4d      	.DB  0x75,0xB,0x68,0xB,0x5A,0xB,0x4D,0xB
00019a 0b3f
00019b 0b32
00019c 0b25
00019d 0b18      	.DB  0x3F,0xB,0x32,0xB,0x25,0xB,0x18,0xB
00019e 0b0b
00019f 0afe
0001a0 0af2
0001a1 0ae5      	.DB  0xB,0xB,0xFE,0xA,0xF2,0xA,0xE5,0xA
0001a2 0ad9
0001a3 0acc
0001a4 0ac0
0001a5 0ab4      	.DB  0xD9,0xA,0xCC,0xA,0xC0,0xA,0xB4,0xA
0001a6 0aa8
0001a7 0a9c
0001a8 0a91
0001a9 0a85      	.DB  0xA8,0xA,0x9C,0xA,0x91,0xA,0x85,0xA
0001aa 0a79
0001ab 0a6e
0001ac 0a63
0001ad 0a57      	.DB  0x79,0xA,0x6E,0xA,0x63,0xA,0x57,0xA
0001ae 0a4c
0001af 0a41
0001b0 0a36
0001b1 0a2b      	.DB  0x4C,0xA,0x41,0xA,0x36,0xA,0x2B,0xA
0001b2 0a20
0001b3 0a16
0001b4 0a0b
0001b5 0a00      	.DB  0x20,0xA,0x16,0xA,0xB,0xA,0x0,0xA
0001b6 09f6
0001b7 09ec
0001b8 09e1
0001b9 09d7      	.DB  0xF6,0x9,0xEC,0x9,0xE1,0x9,0xD7,0x9
0001ba 09cd
0001bb 09c3
0001bc 09b9
0001bd 09af      	.DB  0xCD,0x9,0xC3,0x9,0xB9,0x9,0xAF,0x9
0001be 09a5
0001bf 099c
0001c0 0992
0001c1 0988      	.DB  0xA5,0x9,0x9C,0x9,0x92,0x9,0x88,0x9
0001c2 097f
0001c3 0975
0001c4 096c
0001c5 0963      	.DB  0x7F,0x9,0x75,0x9,0x6C,0x9,0x63,0x9
0001c6 095a
0001c7 0950
0001c8 0947
0001c9 093e      	.DB  0x5A,0x9,0x50,0x9,0x47,0x9,0x3E,0x9
0001ca 0935
0001cb 092d
0001cc 0924
0001cd 091b      	.DB  0x35,0x9,0x2D,0x9,0x24,0x9,0x1B,0x9
0001ce 0912
0001cf 090a
0001d0 0901
0001d1 08f9      	.DB  0x12,0x9,0xA,0x9,0x1,0x9,0xF9,0x8
0001d2 08f0
0001d3 08e8
0001d4 08e0
0001d5 08d7      	.DB  0xF0,0x8,0xE8,0x8,0xE0,0x8,0xD7,0x8
0001d6 08cf
0001d7 08c7
0001d8 08bf
0001d9 08b7      	.DB  0xCF,0x8,0xC7,0x8,0xBF,0x8,0xB7,0x8
0001da 08af
0001db 08a7
0001dc 089f
0001dd 0898      	.DB  0xAF,0x8,0xA7,0x8,0x9F,0x8,0x98,0x8
0001de 0890
0001df 0888
0001e0 0881
0001e1 0879      	.DB  0x90,0x8,0x88,0x8,0x81,0x8,0x79,0x8
0001e2 0872
0001e3 086a
0001e4 0863
0001e5 085b      	.DB  0x72,0x8,0x6A,0x8,0x63,0x8,0x5B,0x8
0001e6 0854
0001e7 084d
0001e8 0846
0001e9 083e      	.DB  0x54,0x8,0x4D,0x8,0x46,0x8,0x3E,0x8
0001ea 0837
0001eb 0830
0001ec 0829
0001ed 0822      	.DB  0x37,0x8,0x30,0x8,0x29,0x8,0x22,0x8
0001ee 081b
0001ef 0815
0001f0 080e
0001f1 0807      	.DB  0x1B,0x8,0x15,0x8,0xE,0x8,0x7,0x8
0001f2 0800
0001f3 07f9
0001f4 07f3
0001f5 07ec      	.DB  0x0,0x8,0xF9,0x7,0xF3,0x7,0xEC,0x7
0001f6 07e6
0001f7 07df
0001f8 07d9
0001f9 07d2      	.DB  0xE6,0x7,0xDF,0x7,0xD9,0x7,0xD2,0x7
0001fa 07cc
0001fb 07c5
0001fc 07bf
0001fd 07b9      	.DB  0xCC,0x7,0xC5,0x7,0xBF,0x7,0xB9,0x7
0001fe 07b3
0001ff 07ac
000200 07a6
000201 07a0      	.DB  0xB3,0x7,0xAC,0x7,0xA6,0x7,0xA0,0x7
000202 079a
000203 0794
000204 078e
000205 0788      	.DB  0x9A,0x7,0x94,0x7,0x8E,0x7,0x88,0x7
000206 0782
000207 077c
000208 0776
000209 0770      	.DB  0x82,0x7,0x7C,0x7,0x76,0x7,0x70,0x7
00020a 076b
00020b 0765
00020c 075f
00020d 075a      	.DB  0x6B,0x7,0x65,0x7,0x5F,0x7,0x5A,0x7
00020e 0754
00020f 074e
000210 0749
000211 0743      	.DB  0x54,0x7,0x4E,0x7,0x49,0x7,0x43,0x7
000212 073e
000213 0738
000214 0733
000215 072d      	.DB  0x3E,0x7,0x38,0x7,0x33,0x7,0x2D,0x7
000216 0728
000217 0722
000218 071d
000219 0718      	.DB  0x28,0x7,0x22,0x7,0x1D,0x7,0x18,0x7
00021a 0713
00021b 070d
00021c 0708
00021d 0703      	.DB  0x13,0x7,0xD,0x7,0x8,0x7,0x3,0x7
00021e 06fe
00021f 06f9
000220 06f4
000221 06ef      	.DB  0xFE,0x6,0xF9,0x6,0xF4,0x6,0xEF,0x6
000222 06ea
000223 06e5
000224 06e0
000225 06db      	.DB  0xEA,0x6,0xE5,0x6,0xE0,0x6,0xDB,0x6
000226 06d6
000227 06d1
000228 06cc
000229 06c7      	.DB  0xD6,0x6,0xD1,0x6,0xCC,0x6,0xC7,0x6
00022a 06c2
00022b 06be
00022c 06b9
00022d 06b4      	.DB  0xC2,0x6,0xBE,0x6,0xB9,0x6,0xB4,0x6
00022e 06af
00022f 06ab
000230 06a6
000231 06a1      	.DB  0xAF,0x6,0xAB,0x6,0xA6,0x6,0xA1,0x6
000232 069d
000233 0698
000234 0694
000235 068f      	.DB  0x9D,0x6,0x98,0x6,0x94,0x6,0x8F,0x6
000236 068b
000237 0686
000238 0682
000239 067d      	.DB  0x8B,0x6,0x86,0x6,0x82,0x6,0x7D,0x6
00023a 0679
00023b 0674
00023c 0670
00023d 066c      	.DB  0x79,0x6,0x74,0x6,0x70,0x6,0x6C,0x6
00023e 0667
00023f 0663
000240 065f
000241 065b      	.DB  0x67,0x6,0x63,0x6,0x5F,0x6,0x5B,0x6
000242 0656
000243 0652
000244 064e
000245 064a      	.DB  0x56,0x6,0x52,0x6,0x4E,0x6,0x4A,0x6
000246 0646
000247 0642
000248 063d
000249 0639      	.DB  0x46,0x6,0x42,0x6,0x3D,0x6,0x39,0x6
00024a 0635
00024b 0631
00024c 062d
00024d 0629      	.DB  0x35,0x6,0x31,0x6,0x2D,0x6,0x29,0x6
00024e 0625
00024f 0621
000250 061d
000251 0c34      	.DB  0x25,0x6,0x21,0x6,0x1D,0x6,0x34,0xC
000252 0c2c
000253 0c24
000254 0c1d
000255 0c15      	.DB  0x2C,0xC,0x24,0xC,0x1D,0xC,0x15,0xC
000256 0c0d
000257 0c06
000258 0bfe
000259 0bf7      	.DB  0xD,0xC,0x6,0xC,0xFE,0xB,0xF7,0xB
00025a 0bef
00025b 0be8
00025c 0be0
00025d 0bd9      	.DB  0xEF,0xB,0xE8,0xB,0xE0,0xB,0xD9,0xB
00025e 0bd2
00025f 0bca
000260 0bc3
000261 0bbc      	.DB  0xD2,0xB,0xCA,0xB,0xC3,0xB,0xBC,0xB
000262 0bb5
000263 0bad
000264 0ba6
000265 0b9f      	.DB  0xB5,0xB,0xAD,0xB,0xA6,0xB,0x9F,0xB
000266 0b98
000267 0b91
000268 0b8a
000269 0b83      	.DB  0x98,0xB,0x91,0xB,0x8A,0xB,0x83,0xB
00026a 0b7c
00026b 0b75
00026c 0b6e
00026d 0b68      	.DB  0x7C,0xB,0x75,0xB,0x6E,0xB,0x68,0xB
00026e 0b61
00026f 0b5a
000270 0b53
000271 0b4d      	.DB  0x61,0xB,0x5A,0xB,0x53,0xB,0x4D,0xB
000272 0b46
000273 0b3f
000274 0b39
000275 0b32      	.DB  0x46,0xB,0x3F,0xB,0x39,0xB,0x32,0xB
000276 0b2b
000277 0b25
000278 0b1e
000279 0b18      	.DB  0x2B,0xB,0x25,0xB,0x1E,0xB,0x18,0xB
00027a 0b11
00027b 0b0b
00027c 0b05
00027d 0afe      	.DB  0x11,0xB,0xB,0xB,0x5,0xB,0xFE,0xA
00027e 0af8
00027f 0af2
000280 0aeb
000281 0ae5      	.DB  0xF8,0xA,0xF2,0xA,0xEB,0xA,0xE5,0xA
000282 0adf
000283 0ad9
000284 0ad3
000285 0acc      	.DB  0xDF,0xA,0xD9,0xA,0xD3,0xA,0xCC,0xA
000286 0ac6
000287 0ac0
000288 0aba
000289 0ab4      	.DB  0xC6,0xA,0xC0,0xA,0xBA,0xA,0xB4,0xA
00028a 0aae
00028b 0aa8
00028c 0aa2
00028d 0a9c      	.DB  0xAE,0xA,0xA8,0xA,0xA2,0xA,0x9C,0xA
00028e 0a96
00028f 0a91
000290 0a8b
000291 0a85      	.DB  0x96,0xA,0x91,0xA,0x8B,0xA,0x85,0xA
000292 0a7f
000293 0a79
000294 0a74
000295 0a6e      	.DB  0x7F,0xA,0x79,0xA,0x74,0xA,0x6E,0xA
000296 0a68
000297 0a63
000298 0a5d
000299 0a57      	.DB  0x68,0xA,0x63,0xA,0x5D,0xA,0x57,0xA
00029a 0a52
00029b 0a4c
00029c 0a47
00029d 0a41      	.DB  0x52,0xA,0x4C,0xA,0x47,0xA,0x41,0xA
00029e 0a3c
00029f 0a36
0002a0 0a31
0002a1 0a2b      	.DB  0x3C,0xA,0x36,0xA,0x31,0xA,0x2B,0xA
0002a2 0a26
0002a3 0a20
0002a4 0a1b
0002a5 0a16      	.DB  0x26,0xA,0x20,0xA,0x1B,0xA,0x16,0xA
0002a6 0a10
0002a7 0a0b
0002a8 0a06
0002a9 0a00      	.DB  0x10,0xA,0xB,0xA,0x6,0xA,0x0,0xA
0002aa 09fb
0002ab 09f6
0002ac 09f1
0002ad 09ec      	.DB  0xFB,0x9,0xF6,0x9,0xF1,0x9,0xEC,0x9
0002ae 09e6
0002af 09e1
0002b0 09dc
0002b1 09d7      	.DB  0xE6,0x9,0xE1,0x9,0xDC,0x9,0xD7,0x9
0002b2 09d2
0002b3 09cd
0002b4 09c8
0002b5 09c3      	.DB  0xD2,0x9,0xCD,0x9,0xC8,0x9,0xC3,0x9
0002b6 09be
0002b7 09b9
0002b8 09b4
0002b9 09af      	.DB  0xBE,0x9,0xB9,0x9,0xB4,0x9,0xAF,0x9
0002ba 09aa
0002bb 09a5
0002bc 09a0
0002bd 099c      	.DB  0xAA,0x9,0xA5,0x9,0xA0,0x9,0x9C,0x9
0002be 0997
0002bf 0992
0002c0 098d
0002c1 0988      	.DB  0x97,0x9,0x92,0x9,0x8D,0x9,0x88,0x9
0002c2 0984
0002c3 097f
0002c4 097a
0002c5 0975      	.DB  0x84,0x9,0x7F,0x9,0x7A,0x9,0x75,0x9
0002c6 0971
0002c7 096c
0002c8 0967
0002c9 0963      	.DB  0x71,0x9,0x6C,0x9,0x67,0x9,0x63,0x9
0002ca 095e
0002cb 095a
0002cc 0955
0002cd 0950      	.DB  0x5E,0x9,0x5A,0x9,0x55,0x9,0x50,0x9
0002ce 094c
0002cf 0947
0002d0 0943
0002d1 093e      	.DB  0x4C,0x9,0x47,0x9,0x43,0x9,0x3E,0x9
0002d2 093a
0002d3 0935
0002d4 0931
0002d5 092d      	.DB  0x3A,0x9,0x35,0x9,0x31,0x9,0x2D,0x9
0002d6 0928
0002d7 0924
0002d8 091f
0002d9 091b      	.DB  0x28,0x9,0x24,0x9,0x1F,0x9,0x1B,0x9
0002da 0917
0002db 0912
0002dc 090e
0002dd 090a      	.DB  0x17,0x9,0x12,0x9,0xE,0x9,0xA,0x9
0002de 0906
0002df 0901
0002e0 08fd
0002e1 08f9      	.DB  0x6,0x9,0x1,0x9,0xFD,0x8,0xF9,0x8
0002e2 08f5
0002e3 08f0
0002e4 08ec
0002e5 08e8      	.DB  0xF5,0x8,0xF0,0x8,0xEC,0x8,0xE8,0x8
0002e6 08e4
0002e7 08e0
0002e8 08dc
0002e9 08d7      	.DB  0xE4,0x8,0xE0,0x8,0xDC,0x8,0xD7,0x8
0002ea 08d3
0002eb 08cf
0002ec 08cb
0002ed 08c7      	.DB  0xD3,0x8,0xCF,0x8,0xCB,0x8,0xC7,0x8
0002ee 08c3
0002ef 08bf
0002f0 08bb
0002f1 08b7      	.DB  0xC3,0x8,0xBF,0x8,0xBB,0x8,0xB7,0x8
0002f2 08b3
0002f3 08af
0002f4 08ab
0002f5 08a7      	.DB  0xB3,0x8,0xAF,0x8,0xAB,0x8,0xA7,0x8
0002f6 08a3
0002f7 089f
0002f8 089c
0002f9 0898      	.DB  0xA3,0x8,0x9F,0x8,0x9C,0x8,0x98,0x8
0002fa 0894
0002fb 0890
0002fc 088c
0002fd 0888      	.DB  0x94,0x8,0x90,0x8,0x8C,0x8,0x88,0x8
0002fe 0885
0002ff 0881
000300 087d
000301 0879      	.DB  0x85,0x8,0x81,0x8,0x7D,0x8,0x79,0x8
000302 0875
000303 0872
000304 086e
000305 086a      	.DB  0x75,0x8,0x72,0x8,0x6E,0x8,0x6A,0x8
000306 0866
000307 0863
000308 085f
000309 085b      	.DB  0x66,0x8,0x63,0x8,0x5F,0x8,0x5B,0x8
00030a 0858
00030b 0854
00030c 0850
00030d 084d      	.DB  0x58,0x8,0x54,0x8,0x50,0x8,0x4D,0x8
00030e 0849
00030f 0846
000310 0842
000311 083e      	.DB  0x49,0x8,0x46,0x8,0x42,0x8,0x3E,0x8
000312 083b
000313 0837
000314 0834
000315 0830      	.DB  0x3B,0x8,0x37,0x8,0x34,0x8,0x30,0x8
000316 082d
000317 0829
000318 0826
000319 1046      	.DB  0x2D,0x8,0x29,0x8,0x26,0x8,0x46,0x10
00031a 103f
00031b 1038
00031c 1031
00031d 102a      	.DB  0x3F,0x10,0x38,0x10,0x31,0x10,0x2A,0x10
00031e 1023
00031f 101c
000320 1016
000321 100f      	.DB  0x23,0x10,0x1C,0x10,0x16,0x10,0xF,0x10
000322 1008
000323 1001
000324 0ffb
000325 0ff4      	.DB  0x8,0x10,0x1,0x10,0xFB,0xF,0xF4,0xF
000326 0fed
000327 0fe7
000328 0fe0
000329 0fd9      	.DB  0xED,0xF,0xE7,0xF,0xE0,0xF,0xD9,0xF
00032a 0fd3
00032b 0fcc
00032c 0fc6
00032d 0fbf      	.DB  0xD3,0xF,0xCC,0xF,0xC6,0xF,0xBF,0xF
00032e 0fb9
00032f 0fb2
000330 0fac
000331 0fa5      	.DB  0xB9,0xF,0xB2,0xF,0xAC,0xF,0xA5,0xF
000332 0f9f
000333 0f99
000334 0f92
000335 0f8c      	.DB  0x9F,0xF,0x99,0xF,0x92,0xF,0x8C,0xF
000336 0f86
000337 0f7f
000338 0f79
000339 0f73      	.DB  0x86,0xF,0x7F,0xF,0x79,0xF,0x73,0xF
00033a 0f6c
00033b 0f66
00033c 0f60
00033d 0f5a      	.DB  0x6C,0xF,0x66,0xF,0x60,0xF,0x5A,0xF
00033e 0f54
00033f 0f4d
000340 0f47
000341 0f41      	.DB  0x54,0xF,0x4D,0xF,0x47,0xF,0x41,0xF
000342 0f3b
000343 0f35
000344 0f2f
000345 0f29      	.DB  0x3B,0xF,0x35,0xF,0x2F,0xF,0x29,0xF
000346 0f23
000347 0f1d
000348 0f17
000349 0f11      	.DB  0x23,0xF,0x1D,0xF,0x17,0xF,0x11,0xF
00034a 0f0b
00034b 0f05
00034c 0eff
00034d 0ef9      	.DB  0xB,0xF,0x5,0xF,0xFF,0xE,0xF9,0xE
00034e 0ef3
00034f 0eee
000350 0ee8
000351 0ee2      	.DB  0xF3,0xE,0xEE,0xE,0xE8,0xE,0xE2,0xE
000352 0edc
000353 0ed6
000354 0ed1
000355 0ecb      	.DB  0xDC,0xE,0xD6,0xE,0xD1,0xE,0xCB,0xE
000356 0ec5
000357 0ebf
000358 0eba
000359 0eb4      	.DB  0xC5,0xE,0xBF,0xE,0xBA,0xE,0xB4,0xE
00035a 0eae
00035b 0ea9
00035c 0ea3
00035d 0e9e      	.DB  0xAE,0xE,0xA9,0xE,0xA3,0xE,0x9E,0xE
00035e 0e98
00035f 0e92
000360 0e8d
000361 0e87      	.DB  0x98,0xE,0x92,0xE,0x8D,0xE,0x87,0xE
000362 0e82
000363 0e7c
000364 0e77
000365 0e71      	.DB  0x82,0xE,0x7C,0xE,0x77,0xE,0x71,0xE
000366 0e6c
000367 0e66
000368 0e61
000369 0e5b      	.DB  0x6C,0xE,0x66,0xE,0x61,0xE,0x5B,0xE
00036a 0e56
00036b 0e51
00036c 0e4b
00036d 0e46      	.DB  0x56,0xE,0x51,0xE,0x4B,0xE,0x46,0xE
00036e 0e41
00036f 0e3b
000370 0e36
000371 0e31      	.DB  0x41,0xE,0x3B,0xE,0x36,0xE,0x31,0xE
000372 0e2b
000373 0e26
000374 0e21
000375 0e1c      	.DB  0x2B,0xE,0x26,0xE,0x21,0xE,0x1C,0xE
000376 0e17
000377 0e11
000378 0e0c
000379 0e07      	.DB  0x17,0xE,0x11,0xE,0xC,0xE,0x7,0xE
00037a 0e02
00037b 0dfd
00037c 0df8
00037d 0df2      	.DB  0x2,0xE,0xFD,0xD,0xF8,0xD,0xF2,0xD
00037e 0ded
00037f 0de8
000380 0de3
000381 0dde      	.DB  0xED,0xD,0xE8,0xD,0xE3,0xD,0xDE,0xD
000382 0dd9
000383 0dd4
000384 0dcf
000385 0dca      	.DB  0xD9,0xD,0xD4,0xD,0xCF,0xD,0xCA,0xD
000386 0dc5
000387 0dc0
000388 0dbb
000389 0db6      	.DB  0xC5,0xD,0xC0,0xD,0xBB,0xD,0xB6,0xD
00038a 0db1
00038b 0dac
00038c 0da8
00038d 0da3      	.DB  0xB1,0xD,0xAC,0xD,0xA8,0xD,0xA3,0xD
00038e 0d9e
00038f 0d99
000390 0d94
000391 0d8f      	.DB  0x9E,0xD,0x99,0xD,0x94,0xD,0x8F,0xD
000392 0d8a
000393 0d86
000394 0d81
000395 0d7c      	.DB  0x8A,0xD,0x86,0xD,0x81,0xD,0x7C,0xD
000396 0d77
000397 0d73
000398 0d6e
000399 0d69      	.DB  0x77,0xD,0x73,0xD,0x6E,0xD,0x69,0xD
00039a 0d64
00039b 0d60
00039c 0d5b
00039d 0d56      	.DB  0x64,0xD,0x60,0xD,0x5B,0xD,0x56,0xD
00039e 0d52
00039f 0d4d
0003a0 0d48
0003a1 0d44      	.DB  0x52,0xD,0x4D,0xD,0x48,0xD,0x44,0xD
0003a2 0d3f
0003a3 0d3b
0003a4 0d36
0003a5 0d31      	.DB  0x3F,0xD,0x3B,0xD,0x36,0xD,0x31,0xD
0003a6 0d2d
0003a7 0d28
0003a8 0d24
0003a9 0d1f      	.DB  0x2D,0xD,0x28,0xD,0x24,0xD,0x1F,0xD
0003aa 0d1b
0003ab 0d16
0003ac 0d12
0003ad 0d0d      	.DB  0x1B,0xD,0x16,0xD,0x12,0xD,0xD,0xD
0003ae 0d09
0003af 0d04
0003b0 0d00
0003b1 0cfb      	.DB  0x9,0xD,0x4,0xD,0x0,0xD,0xFB,0xC
0003b2 0cf7
0003b3 0cf3
0003b4 0cee
0003b5 0cea      	.DB  0xF7,0xC,0xF3,0xC,0xEE,0xC,0xEA,0xC
0003b6 0ce6
0003b7 0ce1
0003b8 0cdd
0003b9 0cd8      	.DB  0xE6,0xC,0xE1,0xC,0xDD,0xC,0xD8,0xC
0003ba 0cd4
0003bb 0cd0
0003bc 0ccc
0003bd 0cc7      	.DB  0xD4,0xC,0xD0,0xC,0xCC,0xC,0xC7,0xC
0003be 0cc3
0003bf 0cbf
0003c0 0cba
0003c1 0cb6      	.DB  0xC3,0xC,0xBF,0xC,0xBA,0xC,0xB6,0xC
0003c2 0cb2
0003c3 0cae
0003c4 0caa
0003c5 0ca5      	.DB  0xB2,0xC,0xAE,0xC,0xAA,0xC,0xA5,0xC
0003c6 0ca1
0003c7 0c9d
0003c8 0c99
0003c9 0c95      	.DB  0xA1,0xC,0x9D,0xC,0x99,0xC,0x95,0xC
0003ca 0c91
0003cb 0c8c
0003cc 0c88
0003cd 0c84      	.DB  0x91,0xC,0x8C,0xC,0x88,0xC,0x84,0xC
0003ce 0c80
0003cf 0c7c
0003d0 0c78
0003d1 0c74      	.DB  0x80,0xC,0x7C,0xC,0x78,0xC,0x74,0xC
0003d2 0c70
0003d3 0c6c
0003d4 0c68
0003d5 0c64      	.DB  0x70,0xC,0x6C,0xC,0x68,0xC,0x64,0xC
0003d6 0c60
0003d7 0c5c
0003d8 0c58
0003d9 0c54      	.DB  0x60,0xC,0x5C,0xC,0x58,0xC,0x54,0xC
0003da 0c50
0003db 0c4c
0003dc 0c48
0003dd 0c44      	.DB  0x50,0xC,0x4C,0xC,0x48,0xC,0x44,0xC
0003de 0c40
0003df 0c3c
0003e0 0c38
0003e1 1869      	.DB  0x40,0xC,0x3C,0xC,0x38,0xC,0x69,0x18
0003e2 1861
0003e3 1859
0003e4 1852
0003e5 184a      	.DB  0x61,0x18,0x59,0x18,0x52,0x18,0x4A,0x18
0003e6 1842
0003e7 183a
0003e8 1833
0003e9 182b      	.DB  0x42,0x18,0x3A,0x18,0x33,0x18,0x2B,0x18
0003ea 1823
0003eb 181c
0003ec 1814
0003ed 180d      	.DB  0x23,0x18,0x1C,0x18,0x14,0x18,0xD,0x18
0003ee 1805
0003ef 17fe
0003f0 17f6
0003f1 17ee      	.DB  0x5,0x18,0xFE,0x17,0xF6,0x17,0xEE,0x17
0003f2 17e7
0003f3 17df
0003f4 17d8
0003f5 17d1      	.DB  0xE7,0x17,0xDF,0x17,0xD8,0x17,0xD1,0x17
0003f6 17c9
0003f7 17c2
0003f8 17ba
0003f9 17b3      	.DB  0xC9,0x17,0xC2,0x17,0xBA,0x17,0xB3,0x17
0003fa 17ac
0003fb 17a4
0003fc 179d
0003fd 1796      	.DB  0xAC,0x17,0xA4,0x17,0x9D,0x17,0x96,0x17
0003fe 178e
0003ff 1787
000400 1780
000401 1779      	.DB  0x8E,0x17,0x87,0x17,0x80,0x17,0x79,0x17
000402 1771
000403 176a
000404 1763
000405 175c      	.DB  0x71,0x17,0x6A,0x17,0x63,0x17,0x5C,0x17
000406 1755
000407 174e
000408 1746
000409 173f      	.DB  0x55,0x17,0x4E,0x17,0x46,0x17,0x3F,0x17
00040a 1738
00040b 1731
00040c 172a
00040d 1723      	.DB  0x38,0x17,0x31,0x17,0x2A,0x17,0x23,0x17
00040e 171c
00040f 1715
000410 170e
000411 1707      	.DB  0x1C,0x17,0x15,0x17,0xE,0x17,0x7,0x17
000412 1700
000413 16f9
000414 16f2
000415 16ec      	.DB  0x0,0x17,0xF9,0x16,0xF2,0x16,0xEC,0x16
000416 16e5
000417 16de
000418 16d7
000419 16d0      	.DB  0xE5,0x16,0xDE,0x16,0xD7,0x16,0xD0,0x16
00041a 16c9
00041b 16c3
00041c 16bc
00041d 16b5      	.DB  0xC9,0x16,0xC3,0x16,0xBC,0x16,0xB5,0x16
00041e 16ae
00041f 16a7
000420 16a1
000421 169a      	.DB  0xAE,0x16,0xA7,0x16,0xA1,0x16,0x9A,0x16
000422 1693
000423 168d
000424 1686
000425 167f      	.DB  0x93,0x16,0x8D,0x16,0x86,0x16,0x7F,0x16
000426 1679
000427 1672
000428 166c
000429 1665      	.DB  0x79,0x16,0x72,0x16,0x6C,0x16,0x65,0x16
00042a 165e
00042b 1658
00042c 1651
00042d 164b      	.DB  0x5E,0x16,0x58,0x16,0x51,0x16,0x4B,0x16
00042e 1644
00042f 163e
000430 1637
000431 1631      	.DB  0x44,0x16,0x3E,0x16,0x37,0x16,0x31,0x16
000432 162a
000433 1624
000434 161e
000435 1617      	.DB  0x2A,0x16,0x24,0x16,0x1E,0x16,0x17,0x16
000436 1611
000437 160a
000438 1604
000439 15fe      	.DB  0x11,0x16,0xA,0x16,0x4,0x16,0xFE,0x15
00043a 15f7
00043b 15f1
00043c 15eb
00043d 15e4      	.DB  0xF7,0x15,0xF1,0x15,0xEB,0x15,0xE4,0x15
00043e 15de
00043f 15d8
000440 15d2
000441 15cb      	.DB  0xDE,0x15,0xD8,0x15,0xD2,0x15,0xCB,0x15
000442 15c5
000443 15bf
000444 15b9
000445 15b3      	.DB  0xC5,0x15,0xBF,0x15,0xB9,0x15,0xB3,0x15
000446 15ac
000447 15a6
000448 15a0
000449 159a      	.DB  0xAC,0x15,0xA6,0x15,0xA0,0x15,0x9A,0x15
00044a 1594
00044b 158e
00044c 1588
00044d 1582      	.DB  0x94,0x15,0x8E,0x15,0x88,0x15,0x82,0x15
00044e 157c
00044f 1576
000450 156f
000451 1569      	.DB  0x7C,0x15,0x76,0x15,0x6F,0x15,0x69,0x15
000452 1563
000453 155d
000454 1557
000455 1552      	.DB  0x63,0x15,0x5D,0x15,0x57,0x15,0x52,0x15
000456 154c
000457 1546
000458 1540
000459 153a      	.DB  0x4C,0x15,0x46,0x15,0x40,0x15,0x3A,0x15
00045a 1534
00045b 152e
00045c 1528
00045d 1522      	.DB  0x34,0x15,0x2E,0x15,0x28,0x15,0x22,0x15
00045e 151c
00045f 1517
000460 1511
000461 150b      	.DB  0x1C,0x15,0x17,0x15,0x11,0x15,0xB,0x15
000462 1505
000463 14ff
000464 14fa
000465 14f4      	.DB  0x5,0x15,0xFF,0x14,0xFA,0x14,0xF4,0x14
000466 14ee
000467 14e8
000468 14e3
000469 14dd      	.DB  0xEE,0x14,0xE8,0x14,0xE3,0x14,0xDD,0x14
00046a 14d7
00046b 14d1
00046c 14cc
00046d 14c6      	.DB  0xD7,0x14,0xD1,0x14,0xCC,0x14,0xC6,0x14
00046e 14c0
00046f 14bb
000470 14b5
000471 14b0      	.DB  0xC0,0x14,0xBB,0x14,0xB5,0x14,0xB0,0x14
000472 14aa
000473 14a4
000474 149f
000475 1499      	.DB  0xAA,0x14,0xA4,0x14,0x9F,0x14,0x99,0x14
000476 1494
000477 148e
000478 1489
000479 1483      	.DB  0x94,0x14,0x8E,0x14,0x89,0x14,0x83,0x14
00047a 147e
00047b 1478
00047c 1473
00047d 146d      	.DB  0x7E,0x14,0x78,0x14,0x73,0x14,0x6D,0x14
00047e 1468
00047f 1462
000480 145d
000481 1457      	.DB  0x68,0x14,0x62,0x14,0x5D,0x14,0x57,0x14
000482 1452
000483 144d
000484 1447
000485 1442      	.DB  0x52,0x14,0x4D,0x14,0x47,0x14,0x42,0x14
000486 143c
000487 1437
000488 1432
000489 142c      	.DB  0x3C,0x14,0x37,0x14,0x32,0x14,0x2C,0x14
00048a 1427
00048b 1422
00048c 141c
00048d 1417      	.DB  0x27,0x14,0x22,0x14,0x1C,0x14,0x17,0x14
00048e 1412
00048f 140c
000490 1407
000491 1402      	.DB  0x12,0x14,0xC,0x14,0x7,0x14,0x2,0x14
000492 13fd
000493 13f7
000494 13f2
000495 13ed      	.DB  0xFD,0x13,0xF7,0x13,0xF2,0x13,0xED,0x13
000496 13e8
000497 13e3
000498 13dd
000499 13d8      	.DB  0xE8,0x13,0xE3,0x13,0xDD,0x13,0xD8,0x13
00049a 13d3
00049b 13ce
00049c 13c9
00049d 13c4      	.DB  0xD3,0x13,0xCE,0x13,0xC9,0x13,0xC4,0x13
00049e 13bf
00049f 13ba
0004a0 13b4
0004a1 13af      	.DB  0xBF,0x13,0xBA,0x13,0xB4,0x13,0xAF,0x13
0004a2 13aa
0004a3 13a5
0004a4 13a0
0004a5 139b      	.DB  0xAA,0x13,0xA5,0x13,0xA0,0x13,0x9B,0x13
0004a6 1396
0004a7 1391
0004a8 138c
0004a9 1387      	.DB  0x96,0x13,0x91,0x13,0x8C,0x13,0x87,0x13
                 
                 _0x3:
D:\B\avr\Codevision Projects\SPWM3_4Rev0\List\SPWM3_4.asm(1387): warning: .cseg .db misalignment - padding zero byte
0004aa 0001      	.DB  0x1
                 _0x4:
D:\B\avr\Codevision Projects\SPWM3_4Rev0\List\SPWM3_4.asm(1389): warning: .cseg .db misalignment - padding zero byte
0004ab 0001      	.DB  0x1
                 _0x5:
D:\B\avr\Codevision Projects\SPWM3_4Rev0\List\SPWM3_4.asm(1391): warning: .cseg .db misalignment - padding zero byte
0004ac 0003      	.DB  0x3
                 _0x6:
D:\B\avr\Codevision Projects\SPWM3_4Rev0\List\SPWM3_4.asm(1393): warning: .cseg .db misalignment - padding zero byte
0004ad 0019      	.DB  0x19
                 
                 __GLOBAL_INI_TBL:
0004ae 0001      	.DW  0x01
0004af 0504      	.DW  _acceleration
0004b0 0954      	.DW  _0x3*2
                 
0004b1 0001      	.DW  0x01
0004b2 0505      	.DW  _deceleration
0004b3 0956      	.DW  _0x4*2
                 
0004b4 0001      	.DW  0x01
0004b5 0506      	.DW  _temp_key_code
0004b6 0958      	.DW  _0x5*2
                 
0004b7 0001      	.DW  0x01
0004b8 0508      	.DW  _a_boost
0004b9 095a      	.DW  _0x6*2
                 
                 _0xFFFFFFFF:
0004ba 0000      	.DW  0
                 
                 __RESET:
0004bb 94f8      	CLI
0004bc 27ee      	CLR  R30
0004bd bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0004be e0f1      	LDI  R31,1
0004bf bff5      	OUT  MCUCR,R31
0004c0 bfe5      	OUT  MCUCR,R30
0004c1 93e0 006c 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0004c3 e1f8      	LDI  R31,0x18
0004c4 bdf1      	OUT  WDTCR,R31
0004c5 bde1      	OUT  WDTCR,R30
                 
                 ;CLEAR R2-R14
0004c6 e08d      	LDI  R24,(14-2)+1
0004c7 e0a2      	LDI  R26,2
0004c8 27bb      	CLR  R27
                 __CLEAR_REG:
0004c9 93ed      	ST   X+,R30
0004ca 958a      	DEC  R24
0004cb f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
0004cc e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
0004cd e190      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
0004ce e0a0      	LDI  R26,LOW(__SRAM_START)
0004cf e0b1      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
0004d0 93ed      	ST   X+,R30
0004d1 9701      	SBIW R24,1
0004d2 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
0004d3 e5ec      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
0004d4 e0f9      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
0004d5 9185      	LPM  R24,Z+
0004d6 9195      	LPM  R25,Z+
0004d7 9700      	SBIW R24,0
0004d8 f061      	BREQ __GLOBAL_INI_END
0004d9 91a5      	LPM  R26,Z+
0004da 91b5      	LPM  R27,Z+
0004db 9005      	LPM  R0,Z+
0004dc 9015      	LPM  R1,Z+
0004dd 01bf      	MOVW R22,R30
0004de 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
0004df 9005      	LPM  R0,Z+
0004e0 920d      	ST   X+,R0
0004e1 9701      	SBIW R24,1
0004e2 f7e1      	BRNE __GLOBAL_INI_LOOP
0004e3 01fb      	MOVW R30,R22
0004e4 cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0004e5 efef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0004e6 bfed      	OUT  SPL,R30
0004e7 e1e0      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0004e8 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0004e9 e0c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0004ea e0d5      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0004eb 940c 04ed 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x500
                 
                 	.CSEG
                 ;/*
                 ;   Author : OZHAN KD
                 ;   www.KnowledgePlus.ir
                 ;
                 ;   ---------------------------------------------------------------
                 ;
                 ;   Sep 18, 2013
                 ;
                 ;   ADC0 (PF0): Frequency setting (0.5 Hz - 100 Hz with 0.1Hz step)
                 ;   ADC1 (PF1): Acceleration setting (100Hz frequency change time) (0.99s - 253.7s)
                 ;   ADC2 (PF2): Deceleration setting (100Hz frequency change time) (0.99s - 253.7s)
                 ;   ADC3 (PF3): Boost volatage setting (9.8% - 21.9%)
                 ;
                 ;   PE2: Run push botton (active low)
                 ;   PE3: Stop push botton (active low)
                 ;   PE4: Dir push botton (active low)
                 ;
                 ;   PB5: SPWM phase1
                 ;   PB6: SPWM phase2
                 ;   PB7: SPWM phase3
                 ;
                 ;   PD0: Motor enable output (active high)
                 ;   PD1: IR2130 fault indicator input (active low)
                 ;   PD2: Run LED (active low)
                 ;   PD3: Motor direction LED1 (active low)
                 ;   PD4: Motor direction LED2 (active low)
                 ;
                 ;   mega64 oscillator frequency = 8MHz
                 ;   Carrier frequency = 15.6 KHz
                 ;
                 ;   ---------------------------------------------------------------
                 ;
                 ;*/
                 ;
                 ;#include <mega64.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x20
                 	.EQU __sm_mask=0x1C
                 	.EQU __sm_powerdown=0x10
                 	.EQU __sm_powersave=0x18
                 	.EQU __sm_standby=0x14
                 	.EQU __sm_ext_standby=0x1C
                 	.EQU __sm_adc_noise_red=0x08
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;#include "defines.h"
                 ;#include "tables.c"
                 ;flash unsigned char sine[256]={
                 ;
                 ; 129 , 132 , 135 , 138 , 142 , 145 , 148 , 151 , 154 , 157 , 160 , 163 , 166 , 169 , 172 , 175 ,
                 ; 178 , 181 , 183 , 186 , 189 , 192 , 194 , 197 , 200 , 202 , 205 , 207 , 210 , 212 , 214 , 217 ,
                 ; 219 , 221 , 223 , 225 , 227 , 229 , 231 , 233 , 234 , 236 , 238 , 239 , 241 , 242 , 243 , 245 ,
                 ; 246 , 247 , 248 , 249 , 250 , 251 , 252 , 252 , 253 , 253 , 254 , 254 , 255 , 255 , 255 , 255 ,
                 ; 255 , 255 , 255 , 255 , 254 , 254 , 253 , 253 , 252 , 252 , 251 , 250 , 249 , 248 , 247 , 246 ,
                 ; 245 , 243 , 242 , 241 , 239 , 238 , 236 , 234 , 233 , 231 , 229 , 227 , 225 , 223 , 221 , 219 ,
                 ; 217 , 214 , 212 , 210 , 207 , 205 , 202 , 200 , 197 , 194 , 192 , 189 , 186 , 183 , 181 , 178 ,
                 ; 175 , 172 , 169 , 166 , 163 , 160 , 157 , 154 , 151 , 148 , 145 , 142 , 138 , 135 , 132 , 129 ,
                 ; 126 , 123 , 120 , 117 , 113 , 110 , 107 , 104 , 101 ,  98 ,  95 ,  92 ,  89 ,  86 ,  83 ,  80 ,
                 ; 77  ,  74 ,  72 ,  69 ,  66 ,  63 ,  61 ,  58 ,  55 ,  53 ,  50 ,  48 ,  45 ,  43 ,  41 ,  38 ,
                 ;  36 ,  34 ,  32 ,  30 ,  28 ,  26 ,  24 ,  22 ,  21 ,  19 ,  17 ,  16 ,  14 ,  13 ,  12 ,  10 ,
                 ;   9 ,   8 ,   7 ,   6 ,   5 ,   4 ,   3 ,   3 ,   2 ,   2 ,   1 ,   1 ,   0 ,   0 ,   0 ,   0 ,
                 ;   0 ,   0 ,   0 ,   0 ,   1 ,   1 ,   2 ,   2 ,   3 ,   3 ,   4 ,   5 ,   6 ,   7 ,   8 ,   9 ,
                 ;  10 ,  12 ,  13 ,  14 ,  16 ,  17 ,  19 ,  21 ,  22 ,  24 ,  26 ,  28 ,  30 ,  32 ,  34 ,  36 ,
                 ;  38 ,  41 ,  43 ,  45 ,  48 ,  50 ,  53 ,  55 ,  58 ,  61 ,  63 ,  66 ,  69 ,  72 ,  74 ,  77 ,
                 ;  80 ,  83 ,  86 ,  89 ,  92 ,  95 ,  98 , 101 , 104 , 107 , 110 , 113 , 117 , 120 , 123 , 126
                 ;};
                 ;
                 ;
                 ;flash unsigned int OCR_value[996]={
                 ;62500 - 1 , 52083 - 1 , 44643 - 1 , 39062 - 1 , 34722 - 1 , 31250 - 1 , 28409 - 1 , 26042 - 1 ,
                 ;24038 - 1 , 22321 - 1 , 20833 - 1 , 19531 - 1 , 18382 - 1 , 17361 - 1 , 16447 - 1 , 15625 - 1 ,
                 ;14881 - 1 , 14205 - 1 , 13587 - 1 , 13021 - 1 , 12500 - 1 , 12019 - 1 , 11574 - 1 , 11161 - 1 ,
                 ;10776 - 1 , 10417 - 1 , 10081 - 1 , 9766 - 1 , 9470 - 1 , 9191 - 1 , 8929 - 1 , 8681 - 1 ,
                 ;8446 - 1 , 8224 - 1 , 8013 - 1 , 7812 - 1 , 7622 - 1 , 7440 - 1 , 7267 - 1 , 7102 - 1 ,
                 ;6944 - 1 , 6793 - 1 , 6649 - 1 , 6510 - 1 , 6378 - 1 , 6250 - 1 , 6127 - 1 , 6010 - 1 ,
                 ;5896 - 1 , 5787 - 1 , 5682 - 1 , 5580 - 1 , 5482 - 1 , 5388 - 1 , 5297 - 1 , 5208 - 1 ,
                 ;5123 - 1 , 5040 - 1 , 4960 - 1 , 4883 - 1 , 4808 - 1 , 4735 - 1 , 4664 - 1 , 4596 - 1 ,
                 ;4529 - 1 , 4464 - 1 , 4401 - 1 , 4340 - 1 , 4281 - 1 , 4223 - 1 , 4167 - 1 , 4112 - 1 ,
                 ;4058 - 1 , 4006 - 1 , 3956 - 1 , 3906 - 1 , 3858 - 1 , 3811 - 1 , 3765 - 1 , 3720 - 1 ,
                 ;3676 - 1 , 3634 - 1 , 3592 - 1 , 3551 - 1 , 3511 - 1 , 3472 - 1 , 3434 - 1 , 3397 - 1 ,
                 ;3360 - 1 , 3324 - 1 , 3289 - 1 , 3255 - 1 , 3222 - 1 , 3189 - 1 , 3157 - 1 , 3125 - 1 ,
                 ;3094 - 1 , 3064 - 1 , 3034 - 1 , 3005 - 1 , 2976 - 1 , 2948 - 1 , 2921 - 1 , 2894 - 1 ,
                 ;2867 - 1 , 2841 - 1 , 2815 - 1 , 2790 - 1 , 2765 - 1 , 2741 - 1 , 2717 - 1 , 2694 - 1 ,
                 ;2671 - 1 , 2648 - 1 , 2626 - 1 , 2604 - 1 , 2583 - 1 , 2561 - 1 , 2541 - 1 , 2520 - 1 ,
                 ;2500 - 1 , 2480 - 1 , 2461 - 1 , 2441 - 1 , 2422 - 1 , 2404 - 1 , 2385 - 1 , 2367 - 1 ,
                 ;2350 - 1 , 2332 - 1 , 2315 - 1 , 2298 - 1 , 2281 - 1 , 2264 - 1 , 2248 - 1 , 2232 - 1 ,
                 ;2216 - 1 , 2201 - 1 , 2185 - 1 , 2170 - 1 , 2155 - 1 , 2140 - 1 , 2126 - 1 , 2111 - 1 ,
                 ;2097 - 1 , 2083 - 1 , 2070 - 1 , 2056 - 1 , 2042 - 1 , 2029 - 1 , 2016 - 1 , 2003 - 1 ,
                 ;1990 - 1 , 1978 - 1 , 1965 - 1 , 1953 - 1 , 1941 - 1 , 1929 - 1 , 1917 - 1 , 1905 - 1 ,
                 ;1894 - 1 , 1883 - 1 , 1871 - 1 , 1860 - 1 , 1849 - 1 , 1838 - 1 , 1827 - 1 , 1817 - 1 ,
                 ;1806 - 1 , 1796 - 1 , 1786 - 1 , 1776 - 1 , 1766 - 1 , 1756 - 1 , 1746 - 1 , 1736 - 1 ,
                 ;1727 - 1 , 1717 - 1 , 1708 - 1 , 1698 - 1 , 1689 - 1 , 1680 - 1 , 1671 - 1 , 1662 - 1 ,
                 ;1653 - 1 , 1645 - 1 , 1636 - 1 , 1628 - 1 , 1619 - 1 , 1611 - 1 , 1603 - 1 , 1594 - 1 ,
                 ;1586 - 1 , 1578 - 1 , 1570 - 1 , 3125 - 1 , 3109 - 1 , 3094 - 1 , 3079 - 1 , 3064 - 1 ,
                 ;3049 - 1 , 3034 - 1 , 3019 - 1 , 3005 - 1 , 2990 - 1 , 2976 - 1 , 2962 - 1 , 2948 - 1 ,
                 ;2934 - 1 , 2921 - 1 , 2907 - 1 , 2894 - 1 , 2880 - 1 , 2867 - 1 , 2854 - 1 , 2841 - 1 ,
                 ;2828 - 1 , 2815 - 1 , 2803 - 1 , 2790 - 1 , 2778 - 1 , 2765 - 1 , 2753 - 1 , 2741 - 1 ,
                 ;2729 - 1 , 2717 - 1 , 2706 - 1 , 2694 - 1 , 2682 - 1 , 2671 - 1 , 2660 - 1 , 2648 - 1 ,
                 ;2637 - 1 , 2626 - 1 , 2615 - 1 , 2604 - 1 , 2593 - 1 , 2583 - 1 , 2572 - 1 , 2561 - 1 ,
                 ;2551 - 1 , 2541 - 1 , 2530 - 1 , 2520 - 1 , 2510 - 1 , 2500 - 1 , 2490 - 1 , 2480 - 1 ,
                 ;2470 - 1 , 2461 - 1 , 2451 - 1 , 2441 - 1 , 2432 - 1 , 2422 - 1 , 2413 - 1 , 2404 - 1 ,
                 ;2395 - 1 , 2385 - 1 , 2376 - 1 , 2367 - 1 , 2358 - 1 , 2350 - 1 , 2341 - 1 , 2332 - 1 ,
                 ;2323 - 1 , 2315 - 1 , 2306 - 1 , 2298 - 1 , 2289 - 1 , 2281 - 1 , 2273 - 1 , 2264 - 1 ,
                 ;2256 - 1 , 2248 - 1 , 2240 - 1 , 2232 - 1 , 2224 - 1 , 2216 - 1 , 2208 - 1 , 2201 - 1 ,
                 ;2193 - 1 , 2185 - 1 , 2178 - 1 , 2170 - 1 , 2163 - 1 , 2155 - 1 , 2148 - 1 , 2140 - 1 ,
                 ;2133 - 1 , 2126 - 1 , 2119 - 1 , 2111 - 1 , 2104 - 1 , 2097 - 1 , 2090 - 1 , 2083 - 1 ,
                 ;2076 - 1 , 2070 - 1 , 2063 - 1 , 2056 - 1 , 2049 - 1 , 2042 - 1 , 2036 - 1 , 2029 - 1 ,
                 ;2023 - 1 , 2016 - 1 , 2010 - 1 , 2003 - 1 , 1997 - 1 , 1990 - 1 , 1984 - 1 , 1978 - 1 ,
                 ;1972 - 1 , 1965 - 1 , 1959 - 1 , 1953 - 1 , 1947 - 1 , 1941 - 1 , 1935 - 1 , 1929 - 1 ,
                 ;1923 - 1 , 1917 - 1 , 1911 - 1 , 1905 - 1 , 1900 - 1 , 1894 - 1 , 1888 - 1 , 1883 - 1 ,
                 ;1877 - 1 , 1871 - 1 , 1866 - 1 , 1860 - 1 , 1855 - 1 , 1849 - 1 , 1844 - 1 , 1838 - 1 ,
                 ;1833 - 1 , 1827 - 1 , 1822 - 1 , 1817 - 1 , 1812 - 1 , 1806 - 1 , 1801 - 1 , 1796 - 1 ,
                 ;1791 - 1 , 1786 - 1 , 1781 - 1 , 1776 - 1 , 1771 - 1 , 1766 - 1 , 1761 - 1 , 1756 - 1 ,
                 ;1751 - 1 , 1746 - 1 , 1741 - 1 , 1736 - 1 , 1731 - 1 , 1727 - 1 , 1722 - 1 , 1717 - 1 ,
                 ;1712 - 1 , 1708 - 1 , 1703 - 1 , 1698 - 1 , 1694 - 1 , 1689 - 1 , 1685 - 1 , 1680 - 1 ,
                 ;1676 - 1 , 1671 - 1 , 1667 - 1 , 1662 - 1 , 1658 - 1 , 1653 - 1 , 1649 - 1 , 1645 - 1 ,
                 ;1640 - 1 , 1636 - 1 , 1632 - 1 , 1628 - 1 , 1623 - 1 , 1619 - 1 , 1615 - 1 , 1611 - 1 ,
                 ;1607 - 1 , 1603 - 1 , 1598 - 1 , 1594 - 1 , 1590 - 1 , 1586 - 1 , 1582 - 1 , 1578 - 1 ,
                 ;1574 - 1 , 1570 - 1 , 1566 - 1 , 3125 - 1 , 3117 - 1 , 3109 - 1 , 3102 - 1 , 3094 - 1 ,
                 ;3086 - 1 , 3079 - 1 , 3071 - 1 , 3064 - 1 , 3056 - 1 , 3049 - 1 , 3041 - 1 , 3034 - 1 ,
                 ;3027 - 1 , 3019 - 1 , 3012 - 1 , 3005 - 1 , 2998 - 1 , 2990 - 1 , 2983 - 1 , 2976 - 1 ,
                 ;2969 - 1 , 2962 - 1 , 2955 - 1 , 2948 - 1 , 2941 - 1 , 2934 - 1 , 2927 - 1 , 2921 - 1 ,
                 ;2914 - 1 , 2907 - 1 , 2900 - 1 , 2894 - 1 , 2887 - 1 , 2880 - 1 , 2874 - 1 , 2867 - 1 ,
                 ;2860 - 1 , 2854 - 1 , 2847 - 1 , 2841 - 1 , 2834 - 1 , 2828 - 1 , 2822 - 1 , 2815 - 1 ,
                 ;2809 - 1 , 2803 - 1 , 2796 - 1 , 2790 - 1 , 2784 - 1 , 2778 - 1 , 2772 - 1 , 2765 - 1 ,
                 ;2759 - 1 , 2753 - 1 , 2747 - 1 , 2741 - 1 , 2735 - 1 , 2729 - 1 , 2723 - 1 , 2717 - 1 ,
                 ;2711 - 1 , 2706 - 1 , 2700 - 1 , 2694 - 1 , 2688 - 1 , 2682 - 1 , 2677 - 1 , 2671 - 1 ,
                 ;2665 - 1 , 2660 - 1 , 2654 - 1 , 2648 - 1 , 2643 - 1 , 2637 - 1 , 2632 - 1 , 2626 - 1 ,
                 ;2621 - 1 , 2615 - 1 , 2610 - 1 , 2604 - 1 , 2599 - 1 , 2593 - 1 , 2588 - 1 , 2583 - 1 ,
                 ;2577 - 1 , 2572 - 1 , 2567 - 1 , 2561 - 1 , 2556 - 1 , 2551 - 1 , 2546 - 1 , 2541 - 1 ,
                 ;2535 - 1 , 2530 - 1 , 2525 - 1 , 2520 - 1 , 2515 - 1 , 2510 - 1 , 2505 - 1 , 2500 - 1 ,
                 ;2495 - 1 , 2490 - 1 , 2485 - 1 , 2480 - 1 , 2475 - 1 , 2470 - 1 , 2465 - 1 , 2461 - 1 ,
                 ;2456 - 1 , 2451 - 1 , 2446 - 1 , 2441 - 1 , 2437 - 1 , 2432 - 1 , 2427 - 1 , 2422 - 1 ,
                 ;2418 - 1 , 2413 - 1 , 2408 - 1 , 2404 - 1 , 2399 - 1 , 2395 - 1 , 2390 - 1 , 2385 - 1 ,
                 ;2381 - 1 , 2376 - 1 , 2372 - 1 , 2367 - 1 , 2363 - 1 , 2358 - 1 , 2354 - 1 , 2350 - 1 ,
                 ;2345 - 1 , 2341 - 1 , 2336 - 1 , 2332 - 1 , 2328 - 1 , 2323 - 1 , 2319 - 1 , 2315 - 1 ,
                 ;2311 - 1 , 2306 - 1 , 2302 - 1 , 2298 - 1 , 2294 - 1 , 2289 - 1 , 2285 - 1 , 2281 - 1 ,
                 ;2277 - 1 , 2273 - 1 , 2269 - 1 , 2264 - 1 , 2260 - 1 , 2256 - 1 , 2252 - 1 , 2248 - 1 ,
                 ;2244 - 1 , 2240 - 1 , 2236 - 1 , 2232 - 1 , 2228 - 1 , 2224 - 1 , 2220 - 1 , 2216 - 1 ,
                 ;2212 - 1 , 2208 - 1 , 2205 - 1 , 2201 - 1 , 2197 - 1 , 2193 - 1 , 2189 - 1 , 2185 - 1 ,
                 ;2182 - 1 , 2178 - 1 , 2174 - 1 , 2170 - 1 , 2166 - 1 , 2163 - 1 , 2159 - 1 , 2155 - 1 ,
                 ;2151 - 1 , 2148 - 1 , 2144 - 1 , 2140 - 1 , 2137 - 1 , 2133 - 1 , 2129 - 1 , 2126 - 1 ,
                 ;2122 - 1 , 2119 - 1 , 2115 - 1 , 2111 - 1 , 2108 - 1 , 2104 - 1 , 2101 - 1 , 2097 - 1 ,
                 ;2094 - 1 , 2090 - 1 , 2087 - 1 , 4167 - 1 , 4160 - 1 , 4153 - 1 , 4146 - 1 , 4139 - 1 ,
                 ;4132 - 1 , 4125 - 1 , 4119 - 1 , 4112 - 1 , 4105 - 1 , 4098 - 1 , 4092 - 1 , 4085 - 1 ,
                 ;4078 - 1 , 4072 - 1 , 4065 - 1 , 4058 - 1 , 4052 - 1 , 4045 - 1 , 4039 - 1 , 4032 - 1 ,
                 ;4026 - 1 , 4019 - 1 , 4013 - 1 , 4006 - 1 , 4000 - 1 , 3994 - 1 , 3987 - 1 , 3981 - 1 ,
                 ;3975 - 1 , 3968 - 1 , 3962 - 1 , 3956 - 1 , 3949 - 1 , 3943 - 1 , 3937 - 1 , 3931 - 1 ,
                 ;3925 - 1 , 3918 - 1 , 3912 - 1 , 3906 - 1 , 3900 - 1 , 3894 - 1 , 3888 - 1 , 3882 - 1 ,
                 ;3876 - 1 , 3870 - 1 , 3864 - 1 , 3858 - 1 , 3852 - 1 , 3846 - 1 , 3840 - 1 , 3834 - 1 ,
                 ;3828 - 1 , 3823 - 1 , 3817 - 1 , 3811 - 1 , 3805 - 1 , 3799 - 1 , 3794 - 1 , 3788 - 1 ,
                 ;3782 - 1 , 3776 - 1 , 3771 - 1 , 3765 - 1 , 3759 - 1 , 3754 - 1 , 3748 - 1 , 3743 - 1 ,
                 ;3737 - 1 , 3731 - 1 , 3726 - 1 , 3720 - 1 , 3715 - 1 , 3709 - 1 , 3704 - 1 , 3698 - 1 ,
                 ;3693 - 1 , 3687 - 1 , 3682 - 1 , 3676 - 1 , 3671 - 1 , 3666 - 1 , 3660 - 1 , 3655 - 1 ,
                 ;3650 - 1 , 3644 - 1 , 3639 - 1 , 3634 - 1 , 3628 - 1 , 3623 - 1 , 3618 - 1 , 3613 - 1 ,
                 ;3608 - 1 , 3602 - 1 , 3597 - 1 , 3592 - 1 , 3587 - 1 , 3582 - 1 , 3577 - 1 , 3571 - 1 ,
                 ;3566 - 1 , 3561 - 1 , 3556 - 1 , 3551 - 1 , 3546 - 1 , 3541 - 1 , 3536 - 1 , 3531 - 1 ,
                 ;3526 - 1 , 3521 - 1 , 3516 - 1 , 3511 - 1 , 3506 - 1 , 3501 - 1 , 3497 - 1 , 3492 - 1 ,
                 ;3487 - 1 , 3482 - 1 , 3477 - 1 , 3472 - 1 , 3467 - 1 , 3463 - 1 , 3458 - 1 , 3453 - 1 ,
                 ;3448 - 1 , 3444 - 1 , 3439 - 1 , 3434 - 1 , 3429 - 1 , 3425 - 1 , 3420 - 1 , 3415 - 1 ,
                 ;3411 - 1 , 3406 - 1 , 3401 - 1 , 3397 - 1 , 3392 - 1 , 3388 - 1 , 3383 - 1 , 3378 - 1 ,
                 ;3374 - 1 , 3369 - 1 , 3365 - 1 , 3360 - 1 , 3356 - 1 , 3351 - 1 , 3347 - 1 , 3342 - 1 ,
                 ;3338 - 1 , 3333 - 1 , 3329 - 1 , 3324 - 1 , 3320 - 1 , 3316 - 1 , 3311 - 1 , 3307 - 1 ,
                 ;3303 - 1 , 3298 - 1 , 3294 - 1 , 3289 - 1 , 3285 - 1 , 3281 - 1 , 3277 - 1 , 3272 - 1 ,
                 ;3268 - 1 , 3264 - 1 , 3259 - 1 , 3255 - 1 , 3251 - 1 , 3247 - 1 , 3243 - 1 , 3238 - 1 ,
                 ;3234 - 1 , 3230 - 1 , 3226 - 1 , 3222 - 1 , 3218 - 1 , 3213 - 1 , 3209 - 1 , 3205 - 1 ,
                 ;3201 - 1 , 3197 - 1 , 3193 - 1 , 3189 - 1 , 3185 - 1 , 3181 - 1 , 3177 - 1 , 3173 - 1 ,
                 ;3169 - 1 , 3165 - 1 , 3161 - 1 , 3157 - 1 , 3153 - 1 , 3149 - 1 , 3145 - 1 , 3141 - 1 ,
                 ;3137 - 1 , 3133 - 1 , 3129 - 1 , 6250 - 1 , 6242 - 1 , 6234 - 1 , 6227 - 1 , 6219 - 1 ,
                 ;6211 - 1 , 6203 - 1 , 6196 - 1 , 6188 - 1 , 6180 - 1 , 6173 - 1 , 6165 - 1 , 6158 - 1 ,
                 ;6150 - 1 , 6143 - 1 , 6135 - 1 , 6127 - 1 , 6120 - 1 , 6112 - 1 , 6105 - 1 , 6098 - 1 ,
                 ;6090 - 1 , 6083 - 1 , 6075 - 1 , 6068 - 1 , 6061 - 1 , 6053 - 1 , 6046 - 1 , 6039 - 1 ,
                 ;6031 - 1 , 6024 - 1 , 6017 - 1 , 6010 - 1 , 6002 - 1 , 5995 - 1 , 5988 - 1 , 5981 - 1 ,
                 ;5974 - 1 , 5967 - 1 , 5959 - 1 , 5952 - 1 , 5945 - 1 , 5938 - 1 , 5931 - 1 , 5924 - 1 ,
                 ;5917 - 1 , 5910 - 1 , 5903 - 1 , 5896 - 1 , 5889 - 1 , 5882 - 1 , 5875 - 1 , 5869 - 1 ,
                 ;5862 - 1 , 5855 - 1 , 5848 - 1 , 5841 - 1 , 5834 - 1 , 5828 - 1 , 5821 - 1 , 5814 - 1 ,
                 ;5807 - 1 , 5800 - 1 , 5794 - 1 , 5787 - 1 , 5780 - 1 , 5774 - 1 , 5767 - 1 , 5760 - 1 ,
                 ;5754 - 1 , 5747 - 1 , 5741 - 1 , 5734 - 1 , 5727 - 1 , 5721 - 1 , 5714 - 1 , 5708 - 1 ,
                 ;5701 - 1 , 5695 - 1 , 5688 - 1 , 5682 - 1 , 5675 - 1 , 5669 - 1 , 5663 - 1 , 5656 - 1 ,
                 ;5650 - 1 , 5643 - 1 , 5637 - 1 , 5631 - 1 , 5624 - 1 , 5618 - 1 , 5612 - 1 , 5605 - 1 ,
                 ;5599 - 1 , 5593 - 1 , 5587 - 1 , 5580 - 1 , 5574 - 1 , 5568 - 1 , 5562 - 1 , 5556 - 1 ,
                 ;5549 - 1 , 5543 - 1 , 5537 - 1 , 5531 - 1 , 5525 - 1 , 5519 - 1 , 5513 - 1 , 5507 - 1 ,
                 ;5501 - 1 , 5495 - 1 , 5488 - 1 , 5482 - 1 , 5476 - 1 , 5470 - 1 , 5464 - 1 , 5459 - 1 ,
                 ;5453 - 1 , 5447 - 1 , 5441 - 1 , 5435 - 1 , 5429 - 1 , 5423 - 1 , 5417 - 1 , 5411 - 1 ,
                 ;5405 - 1 , 5400 - 1 , 5394 - 1 , 5388 - 1 , 5382 - 1 , 5376 - 1 , 5371 - 1 , 5365 - 1 ,
                 ;5359 - 1 , 5353 - 1 , 5348 - 1 , 5342 - 1 , 5336 - 1 , 5330 - 1 , 5325 - 1 , 5319 - 1 ,
                 ;5313 - 1 , 5308 - 1 , 5302 - 1 , 5297 - 1 , 5291 - 1 , 5285 - 1 , 5280 - 1 , 5274 - 1 ,
                 ;5269 - 1 , 5263 - 1 , 5258 - 1 , 5252 - 1 , 5247 - 1 , 5241 - 1 , 5236 - 1 , 5230 - 1 ,
                 ;5225 - 1 , 5219 - 1 , 5214 - 1 , 5208 - 1 , 5203 - 1 , 5198 - 1 , 5192 - 1 , 5187 - 1 ,
                 ;5181 - 1 , 5176 - 1 , 5171 - 1 , 5165 - 1 , 5160 - 1 , 5155 - 1 , 5149 - 1 , 5144 - 1 ,
                 ;5139 - 1 , 5133 - 1 , 5128 - 1 , 5123 - 1 , 5118 - 1 , 5112 - 1 , 5107 - 1 , 5102 - 1 ,
                 ;5097 - 1 , 5092 - 1 , 5086 - 1 , 5081 - 1 , 5076 - 1 , 5071 - 1 , 5066 - 1 , 5061 - 1 ,
                 ;5056 - 1 , 5051 - 1 , 5045 - 1 , 5040 - 1 , 5035 - 1 , 5030 - 1 , 5025 - 1 , 5020 - 1 ,
                 ;5015 - 1 , 5010 - 1 , 5005 - 1 , 5000 - 1};
                 ;
                 ;enum
                 ;{
                 ; STOP_MODE=0,
                 ; RUN_MODE,
                 ; FAULT_MODE
                 ;};
                 ;enum
                 ;{
                 ; RUN_CODE=0,
                 ; STOP_CODE,
                 ; DIR_CODE,
                 ; NO_KEY_CODE
                 ;};
                 ;
                 ;unsigned char a_calc(unsigned char,unsigned char);
                 ;volatile unsigned int speed=0,adc_speed=0;
                 ;volatile unsigned char acceleration=1,deceleration=1,temp_key_code=NO_KEY_CODE,
                 
                 	.DSEG
                 ;mode=STOP_MODE,a_boost=A_BOOST_MIN;
                 ;
                 ;struct
                 ;{
                 ; volatile unsigned char
                 ; dir_f:1,
                 ; deceleration_f:1,
                 ; dir_change_f:1;
                 ;}flags={0,0,0};
                 ;
                 ;//----------------------------------------------------------------
                 ;
                 ;void main(void)
                 ; 0000 0046 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0047  unsigned char key_code,old_key_code=NO_KEY_CODE;
                 ; 0000 0048  ENABLE_DDR|=1<<ENABLE_bp;
                 ;	key_code -> R17
                 ;	old_key_code -> R16
0004ed e003      	LDI  R16,3
0004ee 9a88      	SBI  0x11,0
                 ; 0000 0049  DISABLE_MOTOR;
0004ef 9890      	CBI  0x12,0
                 ; 0000 004A  FAULT_PORT|=1<<FAULT_bp; // Turn on fault input pullup
0004f0 9a91      	SBI  0x12,1
                 ; 0000 004B  RUN_LED_DDR|=1<<RUN_LED_bp;
0004f1 9a8a      	SBI  0x11,2
                 ; 0000 004C  RUN_LED_OFF;
0004f2 9a92      	SBI  0x12,2
                 ; 0000 004D  DIR_LED1_DDR|=1<<DIR_LED1_bp;
0004f3 9a8b      	SBI  0x11,3
                 ; 0000 004E  DIR_LED2_DDR|=1<<DIR_LED2_bp;
0004f4 9a8c      	SBI  0x11,4
                 ; 0000 004F  DIR_LED1_ON;
0004f5 9893      	CBI  0x12,3
                 ; 0000 0050  DIR_LED2_OFF;
0004f6 9a94      	SBI  0x12,4
                 ; 0000 0051  KEY_PORT|=(1<<RUN_KEY_bp)|(1<<STOP_KEY_bp)|(1<<DIR_KEY_bp); // Turn on pullups
0004f7 b1e3      	IN   R30,0x3
0004f8 61ec      	ORI  R30,LOW(0x1C)
0004f9 b9e3      	OUT  0x3,R30
                 ; 0000 0052 
                 ; 0000 0053  DDRB=(1<<PORTB7)|(1<<PORTB6)|(1<<PORTB5); // PWM outputs
0004fa eee0      	LDI  R30,LOW(224)
0004fb bbe7      	OUT  0x17,R30
                 ; 0000 0054  ADMUX=1<<REFS0; // AVcc as reference - ADC0
0004fc e4e0      	LDI  R30,LOW(64)
0004fd b9e7      	OUT  0x7,R30
                 ; 0000 0055  ADCSRA=(1<<ADEN)|(1<<ADSC)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1);  // ClkADC = ClkIO/64
0004fe ecee      	LDI  R30,LOW(206)
0004ff b9e6      	OUT  0x6,R30
                 ; 0000 0056  OCR1A=sine[0];
000500 e8ec      	LDI  R30,LOW(_sine*2)
000501 e0f0      	LDI  R31,HIGH(_sine*2)
000502 91e4      	LPM  R30,Z
000503 e0f0      	LDI  R31,0
000504 bdfb      	OUT  0x2A+1,R31
000505 bdea      	OUT  0x2A,R30
                 ; 0000 0057  OCR1B=sine[85];
                +
000506 eee1     +LDI R30 , LOW ( 2 * _sine + ( 85 ) )
000507 e0f0     +LDI R31 , HIGH ( 2 * _sine + ( 85 ) )
                 	__POINTW1FN _sine,85
000508 91e4      	LPM  R30,Z
000509 e0f0      	LDI  R31,0
00050a bdf9      	OUT  0x28+1,R31
00050b bde8      	OUT  0x28,R30
                 ; 0000 0058  OCR1CL=sine[171];
                +
00050c e3e7     +LDI R30 , LOW ( 2 * _sine + ( 171 ) )
00050d e0f1     +LDI R31 , HIGH ( 2 * _sine + ( 171 ) )
                 	__POINTW1FN _sine,171
00050e 91e4      	LPM  R30,Z
00050f 93e0 0078 	STS  120,R30
                 ; 0000 0059  TCCR1A=1<<WGM10;
000511 e0e1      	LDI  R30,LOW(1)
000512 bdef      	OUT  0x2F,R30
                 ; 0000 005A  TCCR1B=1<<CS10;
000513 bdee      	OUT  0x2E,R30
                 ; 0000 005B  OCR2=124; // 1ms
000514 e7ec      	LDI  R30,LOW(124)
000515 bde3      	OUT  0x23,R30
                 ; 0000 005C  TCCR2=(1<<WGM21)|(1<<CS21)|(1<<CS20);
000516 e0eb      	LDI  R30,LOW(11)
000517 bde5      	OUT  0x25,R30
                 ; 0000 005D  TIMSK=1<<OCIE2;
000518 e8e0      	LDI  R30,LOW(128)
000519 bfe7      	OUT  0x37,R30
                 ; 0000 005E  #asm("sei")
00051a 9478      	sei
                 ; 0000 005F  delay_ms(1000); // For DC bus capacitor charging by NTC
00051b eee8      	LDI  R30,LOW(1000)
00051c e0f3      	LDI  R31,HIGH(1000)
00051d 93fa      	ST   -Y,R31
00051e 93ea      	ST   -Y,R30
00051f 940e 087e 	CALL _delay_ms
                 ; 0000 0060  while (1)
                 _0x7:
                 ; 0000 0061  {
                 ; 0000 0062   key_code=temp_key_code;
000521 9110 0506 	LDS  R17,_temp_key_code
                 ; 0000 0063   switch(mode)
000523 91e0 0507 	LDS  R30,_mode
000525 e0f0      	LDI  R31,0
                 ; 0000 0064   {
                 ; 0000 0065 
                 ; 0000 0066 //----------------------------------------------------------------
                 ; 0000 0067 
                 ; 0000 0068   case STOP_MODE:
000526 9730      	SBIW R30,0
000527 f591      	BRNE _0xD
                 ; 0000 0069    if((FAULT_PIN&(1<<FAULT_bp))==0)
000528 9981      	SBIC 0x10,1
000529 c005      	RJMP _0xE
                 ; 0000 006A    {
                 ; 0000 006B     old_key_code=key_code;
00052a 2f01      	MOV  R16,R17
                 ; 0000 006C     mode=FAULT_MODE; // IR2130 fault condition
00052b e0e2      	LDI  R30,LOW(2)
00052c 93e0 0507 	STS  _mode,R30
                 ; 0000 006D     break;
00052e c070      	RJMP _0xC
                 ; 0000 006E    }
                 ; 0000 006F    if((key_code==RUN_CODE)&&(key_code!=old_key_code))
                 _0xE:
00052f 3010      	CPI  R17,0
000530 f411      	BRNE _0x10
000531 1701      	CP   R16,R17
000532 f409      	BRNE _0x11
                 _0x10:
000533 c007      	RJMP _0xF
                 _0x11:
                 ; 0000 0070    {
                 ; 0000 0071     old_key_code=key_code;
000534 2f01      	MOV  R16,R17
                 ; 0000 0072     mode=RUN_MODE;
000535 e0e1      	LDI  R30,LOW(1)
000536 93e0 0507 	STS  _mode,R30
                 ; 0000 0073     RUN_LED_ON;
000538 9892      	CBI  0x12,2
                 ; 0000 0074     ENABLE_MOTOR;
000539 9a90      	SBI  0x12,0
                 ; 0000 0075    }
                 ; 0000 0076    else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
00053a c01e      	RJMP _0x12
                 _0xF:
00053b 3012      	CPI  R17,2
00053c f411      	BRNE _0x14
00053d 1701      	CP   R16,R17
00053e f409      	BRNE _0x15
                 _0x14:
00053f c018      	RJMP _0x13
                 _0x15:
                 ; 0000 0077    {
                 ; 0000 0078     old_key_code=key_code;
000540 2f01      	MOV  R16,R17
                 ; 0000 0079     if(flags.dir_f)
000541 91e0 0509 	LDS  R30,_flags
000543 70e1      	ANDI R30,LOW(0x1)
000544 f019      	BREQ _0x16
                 ; 0000 007A     {
                 ; 0000 007B      DIR_LED1_ON;
000545 9893      	CBI  0x12,3
                 ; 0000 007C      DIR_LED2_OFF;
000546 9a94      	SBI  0x12,4
                 ; 0000 007D     }
                 ; 0000 007E     else
000547 c002      	RJMP _0x17
                 _0x16:
                 ; 0000 007F     {
                 ; 0000 0080      DIR_LED1_OFF;
000548 9a93      	SBI  0x12,3
                 ; 0000 0081      DIR_LED2_ON;
000549 9894      	CBI  0x12,4
                 ; 0000 0082     }
                 _0x17:
                 ; 0000 0083     flags.dir_f^=1;
00054a 91e0 0509 	LDS  R30,_flags
00054c 70e1      	ANDI R30,LOW(0x1)
00054d e0a1      	LDI  R26,LOW(1)
00054e 27ea      	EOR  R30,R26
00054f 70e1      	ANDI R30,LOW(0x1)
000550 2e0e      	MOV  R0,R30
000551 91e0 0509 	LDS  R30,_flags
000553 7fee      	ANDI R30,0xFE
000554 29e0      	OR   R30,R0
000555 93e0 0509 	STS  _flags,R30
                 ; 0000 0084    }
                 ; 0000 0085    else old_key_code=key_code;
000557 c001      	RJMP _0x18
                 _0x13:
000558 2f01      	MOV  R16,R17
                 ; 0000 0086    break;
                 _0x18:
                 _0x12:
000559 c045      	RJMP _0xC
                 ; 0000 0087 
                 ; 0000 0088 //----------------------------------------------------------------
                 ; 0000 0089 
                 ; 0000 008A   case RUN_MODE:
                 _0xD:
00055a 30e1      	CPI  R30,LOW(0x1)
00055b e0a0      	LDI  R26,HIGH(0x1)
00055c 07fa      	CPC  R31,R26
00055d f579      	BRNE _0x19
                 ; 0000 008B    if((FAULT_PIN&(1<<FAULT_bp))==0)
00055e 9981      	SBIC 0x10,1
00055f c00e      	RJMP _0x1A
                 ; 0000 008C    {
                 ; 0000 008D     DISABLE_MOTOR;
000560 9890      	CBI  0x12,0
                 ; 0000 008E     flags.deceleration_f=0;
000561 91e0 0509 	LDS  R30,_flags
000563 7fed      	ANDI R30,0xFD
000564 93e0 0509 	STS  _flags,R30
                 ; 0000 008F     flags.dir_change_f=0;
000566 7feb      	ANDI R30,0xFB
000567 93e0 0509 	STS  _flags,R30
                 ; 0000 0090     old_key_code=key_code;
000569 2f01      	MOV  R16,R17
                 ; 0000 0091     mode=FAULT_MODE; // Fault condition
00056a e0e2      	LDI  R30,LOW(2)
00056b 93e0 0507 	STS  _mode,R30
                 ; 0000 0092     break;
00056d c031      	RJMP _0xC
                 ; 0000 0093    }
                 ; 0000 0094    if((key_code==STOP_CODE)&&(key_code!=old_key_code))
                 _0x1A:
00056e 3011      	CPI  R17,1
00056f f411      	BRNE _0x1C
000570 1701      	CP   R16,R17
000571 f409      	BRNE _0x1D
                 _0x1C:
000572 c007      	RJMP _0x1B
                 _0x1D:
                 ; 0000 0095    {
                 ; 0000 0096     old_key_code=key_code;
000573 2f01      	MOV  R16,R17
                 ; 0000 0097     flags.deceleration_f=1;
000574 91e0 0509 	LDS  R30,_flags
000576 60e2      	ORI  R30,2
000577 93e0 0509 	STS  _flags,R30
                 ; 0000 0098    }
                 ; 0000 0099    else if((key_code==DIR_CODE)&&(key_code!=old_key_code))
000579 c012      	RJMP _0x1E
                 _0x1B:
00057a 3012      	CPI  R17,2
00057b f411      	BRNE _0x20
00057c 1701      	CP   R16,R17
00057d f409      	BRNE _0x21
                 _0x20:
00057e c00c      	RJMP _0x1F
                 _0x21:
                 ; 0000 009A    {
                 ; 0000 009B     old_key_code=key_code;
00057f 2f01      	MOV  R16,R17
                 ; 0000 009C     #asm("cli")
000580 94f8      	cli
                 ; 0000 009D     flags.deceleration_f=1;
000581 91e0 0509 	LDS  R30,_flags
000583 60e2      	ORI  R30,2
000584 93e0 0509 	STS  _flags,R30
                 ; 0000 009E     flags.dir_change_f=1;
000586 60e4      	ORI  R30,4
000587 93e0 0509 	STS  _flags,R30
                 ; 0000 009F     #asm("sei")
000589 9478      	sei
                 ; 0000 00A0    }
                 ; 0000 00A1    else old_key_code=key_code;
00058a c001      	RJMP _0x22
                 _0x1F:
00058b 2f01      	MOV  R16,R17
                 ; 0000 00A2    break;
                 _0x22:
                 _0x1E:
00058c c012      	RJMP _0xC
                 ; 0000 00A3 
                 ; 0000 00A4 //----------------------------------------------------------------
                 ; 0000 00A5 
                 ; 0000 00A6   case FAULT_MODE:
                 _0x19:
00058d 30e2      	CPI  R30,LOW(0x2)
00058e e0a0      	LDI  R26,HIGH(0x2)
00058f 07fa      	CPC  R31,R26
000590 f471      	BRNE _0xC
                 ; 0000 00A7    if((FAULT_PIN&(1<<FAULT_bp))&&(key_code==STOP_CODE)&&(key_code!=old_key_code))
000591 9b81      	SBIS 0x10,1
000592 c004      	RJMP _0x25
000593 3011      	CPI  R17,1
000594 f411      	BRNE _0x25
000595 1701      	CP   R16,R17
000596 f409      	BRNE _0x26
                 _0x25:
000597 c006      	RJMP _0x24
                 _0x26:
                 ; 0000 00A8    {
                 ; 0000 00A9      old_key_code=key_code;
000598 2f01      	MOV  R16,R17
                 ; 0000 00AA      mode=STOP_MODE;
000599 e0e0      	LDI  R30,LOW(0)
00059a 93e0 0507 	STS  _mode,R30
                 ; 0000 00AB      RUN_LED_OFF;
00059c 9a92      	SBI  0x12,2
                 ; 0000 00AC    }
                 ; 0000 00AD    else old_key_code=key_code;
00059d c001      	RJMP _0x27
                 _0x24:
00059e 2f01      	MOV  R16,R17
                 ; 0000 00AE    break;
                 _0x27:
                 ; 0000 00AF   }
                 _0xC:
                 ; 0000 00B0  }
00059f cf81      	RJMP _0x7
                 ; 0000 00B1 }
                 _0x28:
0005a0 cfff      	RJMP _0x28
                 ;
                 ;//----------------------------------------------------------------
                 ;
                 ;unsigned char a_calc(unsigned char sine , unsigned char amplitude)
                 ; 0000 00B6 {
                 _a_calc:
                 ; 0000 00B7  unsigned int sine_temp;
                 ; 0000 00B8  unsigned char sine1;
                 ; 0000 00B9  sine1=((sine<128)?~sine:sine);
0005a1 940e 08fd 	CALL __SAVELOCR4
                 ;	sine -> Y+5
                 ;	amplitude -> Y+4
                 ;	sine_temp -> R16,R17
                 ;	sine1 -> R19
0005a3 81ad      	LDD  R26,Y+5
0005a4 38a0      	CPI  R26,LOW(0x80)
0005a5 f418      	BRSH _0x29
0005a6 81ed      	LDD  R30,Y+5
0005a7 95e0      	COM  R30
0005a8 c001      	RJMP _0x2A
                 _0x29:
0005a9 81ed      	LDD  R30,Y+5
                 _0x2A:
0005aa 2f3e      	MOV  R19,R30
                 ; 0000 00BA  sine_temp=(((unsigned int)sine1)<<1);
0005ab 2fe3      	MOV  R30,R19
0005ac e0f0      	LDI  R31,0
0005ad 0fee      	LSL  R30
0005ae 1fff      	ROL  R31
0005af 018f      	MOVW R16,R30
                 ; 0000 00BB  sine_temp-=255;
                +
0005b0 5f0f     +SUBI R16 , LOW ( 255 )
0005b1 4010     +SBCI R17 , HIGH ( 255 )
                 	__SUBWRN 16,17,255
                 ; 0000 00BC  sine_temp*=amplitude;
0005b2 81ec      	LDD  R30,Y+4
0005b3 e0f0      	LDI  R31,0
0005b4 01d8      	MOVW R26,R16
0005b5 940e 08a7 	CALL __MULW12U
0005b7 018f      	MOVW R16,R30
                 ; 0000 00BD  sine_temp>>=8;
0005b8 2f01      	MOV  R16,R17
0005b9 2711      	CLR  R17
                 ; 0000 00BE  sine_temp+=255;
                +
0005ba 5001     +SUBI R16 , LOW ( - 255 )
0005bb 4f1f     +SBCI R17 , HIGH ( - 255 )
                 	__ADDWRN 16,17,255
                 ; 0000 00BF  sine_temp>>=1;
0005bc 9516      	LSR  R17
0005bd 9507      	ROR  R16
                 ; 0000 00C0  sine_temp++;
                +
0005be 5f0f     +SUBI R16 , LOW ( - 1 )
0005bf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 00C1  sine1=(unsigned char)sine_temp;
0005c0 2f30      	MOV  R19,R16
                 ; 0000 00C2  if (sine<128) sine1=~sine1;
0005c1 81ad      	LDD  R26,Y+5
0005c2 38a0      	CPI  R26,LOW(0x80)
0005c3 f408      	BRSH _0x2C
0005c4 9530      	COM  R19
                 ; 0000 00C3  return sine1;
                 _0x2C:
0005c5 2fe3      	MOV  R30,R19
0005c6 940e 0902 	CALL __LOADLOCR4
0005c8 9626      	ADIW R28,6
0005c9 9508      	RET
                 ; 0000 00C4 }
                 ;
                 ;//----------------------------------------------------------------
                 ;
                 ;interrupt [TIM2_COMP] void timer2_compare_isr(void)
                 ; 0000 00C9 {
                 _timer2_compare_isr:
0005ca 920a      	ST   -Y,R0
0005cb 93aa      	ST   -Y,R26
0005cc 93ba      	ST   -Y,R27
0005cd 93ea      	ST   -Y,R30
0005ce 93fa      	ST   -Y,R31
0005cf b7ef      	IN   R30,SREG
0005d0 93ea      	ST   -Y,R30
                 ; 0000 00CA  unsigned int final_speed;
                 ; 0000 00CB  static unsigned char x20=0,x10=0,
                 ; 0000 00CC  acceleration_counter=0, deceleration_counter=0;
                 ; 0000 00CD 
                 ; 0000 00CE  final_speed=(flags.deceleration_f ? 0 : adc_speed);
0005d1 931a      	ST   -Y,R17
0005d2 930a      	ST   -Y,R16
                 ;	final_speed -> R16,R17
0005d3 91e0 0509 	LDS  R30,_flags
0005d5 e0f0      	LDI  R31,0
0005d6 95f6      	LSR  R31
0005d7 95e7      	ROR  R30
0005d8 70e1      	ANDI R30,LOW(0x1)
0005d9 70f0      	ANDI R31,HIGH(0x1)
0005da ffe0      	SBRS R30,0
0005db c002      	RJMP _0x2E
0005dc 6fee      	ORI  R30,LOW(0xFFFE)
0005dd 6fff      	ORI  R31,HIGH(0xFFFE)
                 _0x2E:
0005de 9730      	SBIW R30,0
0005df f019      	BREQ _0x2D
0005e0 e0e0      	LDI  R30,LOW(0)
0005e1 e0f0      	LDI  R31,HIGH(0)
0005e2 c004      	RJMP _0x2F
                 _0x2D:
0005e3 91e0 0502 	LDS  R30,_adc_speed
0005e5 91f0 0503 	LDS  R31,_adc_speed+1
                 _0x2F:
0005e7 018f      	MOVW R16,R30
                 ; 0000 00CF  if((mode!=RUN_MODE)||(speed==final_speed))
0005e8 91a0 0507 	LDS  R26,_mode
0005ea 30a1      	CPI  R26,LOW(0x1)
0005eb f439      	BRNE _0x32
0005ec 91a0 0500 	LDS  R26,_speed
0005ee 91b0 0501 	LDS  R27,_speed+1
0005f0 170a      	CP   R16,R26
0005f1 071b      	CPC  R17,R27
0005f2 f431      	BRNE _0x31
                 _0x32:
                 ; 0000 00D0  {
                 ; 0000 00D1   acceleration_counter=0;
0005f3 e0e0      	LDI  R30,LOW(0)
0005f4 93e0 050c 	STS  _acceleration_counter_S0000002000,R30
                 ; 0000 00D2   deceleration_counter=0;
0005f6 93e0 050d 	STS  _deceleration_counter_S0000002000,R30
                 ; 0000 00D3  }
                 ; 0000 00D4  else if(speed<final_speed)
0005f8 c06a      	RJMP _0x34
                 _0x31:
0005f9 91a0 0500 	LDS  R26,_speed
0005fb 91b0 0501 	LDS  R27,_speed+1
0005fd 17a0      	CP   R26,R16
0005fe 07b1      	CPC  R27,R17
0005ff f4c0      	BRSH _0x35
                 ; 0000 00D5  {
                 ; 0000 00D6   deceleration_counter=0;
000600 e0e0      	LDI  R30,LOW(0)
000601 93e0 050d 	STS  _deceleration_counter_S0000002000,R30
                 ; 0000 00D7   if(++acceleration_counter>=acceleration)
000603 91a0 050c 	LDS  R26,_acceleration_counter_S0000002000
000605 5faf      	SUBI R26,-LOW(1)
000606 93a0 050c 	STS  _acceleration_counter_S0000002000,R26
000608 91e0 0504 	LDS  R30,_acceleration
00060a 17ae      	CP   R26,R30
00060b f058      	BRLO _0x36
                 ; 0000 00D8   {
                 ; 0000 00D9    acceleration_counter=0;
00060c e0e0      	LDI  R30,LOW(0)
00060d 93e0 050c 	STS  _acceleration_counter_S0000002000,R30
                 ; 0000 00DA    speed++;
00060f e0a0      	LDI  R26,LOW(_speed)
000610 e0b5      	LDI  R27,HIGH(_speed)
000611 91ed      	LD   R30,X+
000612 91fd      	LD   R31,X+
000613 9631      	ADIW R30,1
000614 93fe      	ST   -X,R31
000615 93ee      	ST   -X,R30
000616 9731      	SBIW R30,1
                 ; 0000 00DB    }
                 ; 0000 00DC   }
                 _0x36:
                 ; 0000 00DD  else
000617 c04b      	RJMP _0x37
                 _0x35:
                 ; 0000 00DE  {
                 ; 0000 00DF   acceleration_counter=0;
000618 e0e0      	LDI  R30,LOW(0)
000619 93e0 050c 	STS  _acceleration_counter_S0000002000,R30
                 ; 0000 00E0   if(++deceleration_counter>=deceleration)
00061b 91a0 050d 	LDS  R26,_deceleration_counter_S0000002000
00061d 5faf      	SUBI R26,-LOW(1)
00061e 93a0 050d 	STS  _deceleration_counter_S0000002000,R26
000620 91e0 0505 	LDS  R30,_deceleration
000622 17ae      	CP   R26,R30
000623 f410      	BRSH PC+3
000624 940c 0663 	JMP _0x38
                 ; 0000 00E1   {
                 ; 0000 00E2    deceleration_counter=0;
000626 e0e0      	LDI  R30,LOW(0)
000627 93e0 050d 	STS  _deceleration_counter_S0000002000,R30
                 ; 0000 00E3    speed--;
000629 e0a0      	LDI  R26,LOW(_speed)
00062a e0b5      	LDI  R27,HIGH(_speed)
00062b 91ed      	LD   R30,X+
00062c 91fd      	LD   R31,X+
00062d 9731      	SBIW R30,1
00062e 93fe      	ST   -X,R31
00062f 93ee      	ST   -X,R30
000630 9631      	ADIW R30,1
                 ; 0000 00E4    if((speed==0)&&(flags.deceleration_f==1))
000631 91a0 0500 	LDS  R26,_speed
000633 91b0 0501 	LDS  R27,_speed+1
000635 9710      	SBIW R26,0
000636 f429      	BRNE _0x3A
000637 91e0 0509 	LDS  R30,_flags
000639 70e2      	ANDI R30,LOW(0x2)
00063a 30e2      	CPI  R30,LOW(0x2)
00063b f009      	BREQ _0x3B
                 _0x3A:
00063c c026      	RJMP _0x39
                 _0x3B:
                 ; 0000 00E5    {
                 ; 0000 00E6     flags.deceleration_f=0;
00063d 91e0 0509 	LDS  R30,_flags
00063f 7fed      	ANDI R30,0xFD
000640 93e0 0509 	STS  _flags,R30
                 ; 0000 00E7     if(flags.dir_change_f)
000642 70e4      	ANDI R30,LOW(0x4)
000643 f0d1      	BREQ _0x3C
                 ; 0000 00E8     {
                 ; 0000 00E9      flags.dir_change_f=0;
000644 91e0 0509 	LDS  R30,_flags
000646 7feb      	ANDI R30,0xFB
000647 93e0 0509 	STS  _flags,R30
                 ; 0000 00EA      if(flags.dir_f)
000649 70e1      	ANDI R30,LOW(0x1)
00064a f019      	BREQ _0x3D
                 ; 0000 00EB      {
                 ; 0000 00EC       DIR_LED1_ON;
00064b 9893      	CBI  0x12,3
                 ; 0000 00ED       DIR_LED2_OFF;
00064c 9a94      	SBI  0x12,4
                 ; 0000 00EE      }
                 ; 0000 00EF      else
00064d c002      	RJMP _0x3E
                 _0x3D:
                 ; 0000 00F0      {
                 ; 0000 00F1       DIR_LED1_OFF;
00064e 9a93      	SBI  0x12,3
                 ; 0000 00F2       DIR_LED2_ON;
00064f 9894      	CBI  0x12,4
                 ; 0000 00F3      }
                 _0x3E:
                 ; 0000 00F4      flags.dir_f^=1;
000650 91e0 0509 	LDS  R30,_flags
000652 70e1      	ANDI R30,LOW(0x1)
000653 e0a1      	LDI  R26,LOW(1)
000654 27ea      	EOR  R30,R26
000655 70e1      	ANDI R30,LOW(0x1)
000656 2e0e      	MOV  R0,R30
000657 91e0 0509 	LDS  R30,_flags
000659 7fee      	ANDI R30,0xFE
00065a 29e0      	OR   R30,R0
00065b 93e0 0509 	STS  _flags,R30
                 ; 0000 00F5     }
                 ; 0000 00F6 
                 ; 0000 00F7     else
00065d c005      	RJMP _0x3F
                 _0x3C:
                 ; 0000 00F8     {
                 ; 0000 00F9      mode=STOP_MODE;
00065e e0e0      	LDI  R30,LOW(0)
00065f 93e0 0507 	STS  _mode,R30
                 ; 0000 00FA      RUN_LED_OFF;
000661 9a92      	SBI  0x12,2
                 ; 0000 00FB      DISABLE_MOTOR;
000662 9890      	CBI  0x12,0
                 ; 0000 00FC     }
                 _0x3F:
                 ; 0000 00FD    }
                 ; 0000 00FE   }
                 _0x39:
                 ; 0000 00FF  }
                 _0x38:
                 _0x37:
                 _0x34:
                 ; 0000 0100 
                 ; 0000 0101  if(speed&&(mode==RUN_MODE))
000663 91e0 0500 	LDS  R30,_speed
000665 91f0 0501 	LDS  R31,_speed+1
000667 9730      	SBIW R30,0
000668 f021      	BREQ _0x41
000669 91a0 0507 	LDS  R26,_mode
00066b 30a1      	CPI  R26,LOW(0x1)
00066c f009      	BREQ _0x42
                 _0x41:
00066d c026      	RJMP _0x40
                 _0x42:
                 ; 0000 0102  {
                 ; 0000 0103   unsigned int temp16=OCR_value[speed-1];
                 ; 0000 0104   OCR3AH=(unsigned char)(temp16>>8);
00066e 9722      	SBIW R28,2
                 ;	temp16 -> Y+0
00066f 91e0 0500 	LDS  R30,_speed
000671 91f0 0501 	LDS  R31,_speed+1
000673 9731      	SBIW R30,1
000674 e8ac      	LDI  R26,LOW(_OCR_value*2)
000675 e0b1      	LDI  R27,HIGH(_OCR_value*2)
000676 0fee      	LSL  R30
000677 1fff      	ROL  R31
000678 0fea      	ADD  R30,R26
000679 1ffb      	ADC  R31,R27
00067a 940e 08f4 	CALL __GETW1PF
00067c 83e8      	ST   Y,R30
00067d 83f9      	STD  Y+1,R31
00067e 81e9      	LDD  R30,Y+1
00067f 93e0 0087 	STS  135,R30
                 ; 0000 0105   OCR3AL=(unsigned char)temp16;
000681 81e8      	LD   R30,Y
000682 93e0 0086 	STS  134,R30
                 ; 0000 0106   TCCR1A|=((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
000684 b5ef      	IN   R30,0x2F
000685 6ae8      	ORI  R30,LOW(0xA8)
000686 bdef      	OUT  0x2F,R30
                 ; 0000 0107   TCCR3A=(1<<WGM31)|(1<<WGM30);
000687 e0e3      	LDI  R30,LOW(3)
000688 93e0 008b 	STS  139,R30
                 ; 0000 0108   TCCR3B=(1<<WGM33)|(1<<WGM32)|(1<<CS30);
00068a e1e9      	LDI  R30,LOW(25)
00068b 93e0 008a 	STS  138,R30
                 ; 0000 0109   ETIMSK|=(1<<OCIE3A);
00068d 91e0 007d 	LDS  R30,125
00068f 61e0      	ORI  R30,0x10
000690 93e0 007d 	STS  125,R30
                 ; 0000 010A  }
000692 9622      	ADIW R28,2
                 ; 0000 010B  else
000693 c014      	RJMP _0x43
                 _0x40:
                 ; 0000 010C  {
                 ; 0000 010D   TCCR1A&=~((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
000694 b5ef      	IN   R30,0x2F
000695 75e7      	ANDI R30,LOW(0x57)
000696 bdef      	OUT  0x2F,R30
                 ; 0000 010E   TCCR3A=0;
000697 e0e0      	LDI  R30,LOW(0)
000698 93e0 008b 	STS  139,R30
                 ; 0000 010F   TCCR3B=0; // Return to normal mode for next immediate update
00069a 93e0 008a 	STS  138,R30
                 ; 0000 0110   TCNT3H=0;
00069c 93e0 0089 	STS  137,R30
                 ; 0000 0111   TCNT3L=0;
00069e 93e0 0088 	STS  136,R30
                 ; 0000 0112   ETIMSK&=~(1<<OCIE3A);
0006a0 91e0 007d 	LDS  R30,125
0006a2 7eef      	ANDI R30,0xEF
0006a3 93e0 007d 	STS  125,R30
                 ; 0000 0113   ETIFR=(1<<OCF3A);
0006a5 e1e0      	LDI  R30,LOW(16)
0006a6 93e0 007c 	STS  124,R30
                 ; 0000 0114  }
                 _0x43:
                 ; 0000 0115  if(++x20==20) // 20ms
0006a8 91a0 050a 	LDS  R26,_x20_S0000002000
0006aa 5faf      	SUBI R26,-LOW(1)
0006ab 93a0 050a 	STS  _x20_S0000002000,R26
0006ad 31a4      	CPI  R26,LOW(0x14)
0006ae f581      	BRNE _0x44
                 ; 0000 0116  {
                 ; 0000 0117   unsigned char temp8;
                 ; 0000 0118   x20=0;
0006af 9721      	SBIW R28,1
                 ;	temp8 -> Y+0
0006b0 e0e0      	LDI  R30,LOW(0)
0006b1 93e0 050a 	STS  _x20_S0000002000,R30
                 ; 0000 0119   temp8=KEY_PIN&((1<<DIR_KEY_bp)|(1<<STOP_KEY_bp)|(1<<RUN_KEY_bp));
0006b3 b1e1      	IN   R30,0x1
0006b4 71ec      	ANDI R30,LOW(0x1C)
0006b5 83e8      	ST   Y,R30
                 ; 0000 011A   switch(temp8)
0006b6 e0f0      	LDI  R31,0
                 ; 0000 011B   {
                 ; 0000 011C   case RUN_gc:
0006b7 31e8      	CPI  R30,LOW(0x18)
0006b8 e0a0      	LDI  R26,HIGH(0x18)
0006b9 07fa      	CPC  R31,R26
0006ba f411      	BRNE _0x48
                 ; 0000 011D    temp_key_code=RUN_CODE;
0006bb e0e0      	LDI  R30,LOW(0)
0006bc c00d      	RJMP _0x6F
                 ; 0000 011E    break;
                 ; 0000 011F   case STOP_gc:
                 _0x48:
0006bd 31e4      	CPI  R30,LOW(0x14)
0006be e0a0      	LDI  R26,HIGH(0x14)
0006bf 07fa      	CPC  R31,R26
0006c0 f411      	BRNE _0x49
                 ; 0000 0120    temp_key_code=STOP_CODE;
0006c1 e0e1      	LDI  R30,LOW(1)
0006c2 c007      	RJMP _0x6F
                 ; 0000 0121    break;
                 ; 0000 0122   case DIR_gc:
                 _0x49:
0006c3 30ec      	CPI  R30,LOW(0xC)
0006c4 e0a0      	LDI  R26,HIGH(0xC)
0006c5 07fa      	CPC  R31,R26
0006c6 f411      	BRNE _0x4B
                 ; 0000 0123    temp_key_code=DIR_CODE;
0006c7 e0e2      	LDI  R30,LOW(2)
0006c8 c001      	RJMP _0x6F
                 ; 0000 0124    break;
                 ; 0000 0125   default:
                 _0x4B:
                 ; 0000 0126    temp_key_code=NO_KEY_CODE;
0006c9 e0e3      	LDI  R30,LOW(3)
                 _0x6F:
0006ca 93e0 0506 	STS  _temp_key_code,R30
                 ; 0000 0127   }
                 ; 0000 0128   if(++x10==10) // 200 ms
0006cc 91a0 050b 	LDS  R26,_x10_S0000002000
0006ce 5faf      	SUBI R26,-LOW(1)
0006cf 93a0 050b 	STS  _x10_S0000002000,R26
0006d1 30aa      	CPI  R26,LOW(0xA)
0006d2 f459      	BRNE _0x4C
                 ; 0000 0129   {
                 ; 0000 012A    x10=0;
0006d3 e0e0      	LDI  R30,LOW(0)
0006d4 93e0 050b 	STS  _x10_S0000002000,R30
                 ; 0000 012B    if(mode==FAULT_MODE)TOGGLE_RUN_LED;
0006d6 91a0 0507 	LDS  R26,_mode
0006d8 30a2      	CPI  R26,LOW(0x2)
0006d9 f421      	BRNE _0x4D
0006da b3e2      	IN   R30,0x12
0006db e0a4      	LDI  R26,LOW(4)
0006dc 27ea      	EOR  R30,R26
0006dd bbe2      	OUT  0x12,R30
                 ; 0000 012C   }
                 _0x4D:
                 ; 0000 012D  }
                 _0x4C:
0006de 9621      	ADIW R28,1
                 ; 0000 012E }
                 _0x44:
0006df c194      	RJMP _0x73
                 ;
                 ;//----------------------------------------------------------------
                 ;
                 ;interrupt [TIM3_COMPA] void timer3_comparea_isr(void)
                 ; 0000 0133 {
                 _timer3_comparea_isr:
0006e0 920a      	ST   -Y,R0
0006e1 921a      	ST   -Y,R1
0006e2 92fa      	ST   -Y,R15
0006e3 936a      	ST   -Y,R22
0006e4 937a      	ST   -Y,R23
0006e5 938a      	ST   -Y,R24
0006e6 939a      	ST   -Y,R25
0006e7 93aa      	ST   -Y,R26
0006e8 93ba      	ST   -Y,R27
0006e9 93ea      	ST   -Y,R30
0006ea 93fa      	ST   -Y,R31
0006eb b7ef      	IN   R30,SREG
0006ec 93ea      	ST   -Y,R30
                 ; 0000 0134  static unsigned char index=0;
                 ; 0000 0135  if (speed>795)index+=16;
0006ed 91a0 0500 	LDS  R26,_speed
0006ef 91b0 0501 	LDS  R27,_speed+1
0006f1 31ac      	CPI  R26,LOW(0x31C)
0006f2 e0e3      	LDI  R30,HIGH(0x31C)
0006f3 07be      	CPC  R27,R30
0006f4 f020      	BRLO _0x4E
0006f5 91e0 050e 	LDS  R30,_index_S0000003000
0006f7 5fe0      	SUBI R30,-LOW(16)
0006f8 c027      	RJMP _0x70
                 ; 0000 0136  else if(speed>595)index+=8;
                 _0x4E:
0006f9 91a0 0500 	LDS  R26,_speed
0006fb 91b0 0501 	LDS  R27,_speed+1
0006fd 35a4      	CPI  R26,LOW(0x254)
0006fe e0e2      	LDI  R30,HIGH(0x254)
0006ff 07be      	CPC  R27,R30
000700 f020      	BRLO _0x50
000701 91e0 050e 	LDS  R30,_index_S0000003000
000703 5fe8      	SUBI R30,-LOW(8)
000704 c01b      	RJMP _0x70
                 ; 0000 0137  else if(speed>395)index+=4;
                 _0x50:
000705 91a0 0500 	LDS  R26,_speed
000707 91b0 0501 	LDS  R27,_speed+1
000709 38ac      	CPI  R26,LOW(0x18C)
00070a e0e1      	LDI  R30,HIGH(0x18C)
00070b 07be      	CPC  R27,R30
00070c f020      	BRLO _0x52
00070d 91e0 050e 	LDS  R30,_index_S0000003000
00070f 5fec      	SUBI R30,-LOW(4)
000710 c00f      	RJMP _0x70
                 ; 0000 0138  else if(speed>195)index+=2;
                 _0x52:
000711 91a0 0500 	LDS  R26,_speed
000713 91b0 0501 	LDS  R27,_speed+1
000715 3ca4      	CPI  R26,LOW(0xC4)
000716 e0e0      	LDI  R30,HIGH(0xC4)
000717 07be      	CPC  R27,R30
000718 f020      	BRLO _0x54
000719 91e0 050e 	LDS  R30,_index_S0000003000
00071b 5fee      	SUBI R30,-LOW(2)
00071c c003      	RJMP _0x70
                 ; 0000 0139  else ++index;
                 _0x54:
00071d 91e0 050e 	LDS  R30,_index_S0000003000
00071f 5fef      	SUBI R30,-LOW(1)
                 _0x70:
000720 93e0 050e 	STS  _index_S0000003000,R30
                 ; 0000 013A 
                 ; 0000 013B  if(speed>=SPEED_BASE)
000722 91a0 0500 	LDS  R26,_speed
000724 91b0 0501 	LDS  R27,_speed+1
000726 3eaf      	CPI  R26,LOW(0x1EF)
000727 e0e1      	LDI  R30,HIGH(0x1EF)
000728 07be      	CPC  R27,R30
000729 f410      	BRSH PC+3
00072a 940c 076a 	JMP _0x56
                 ; 0000 013C  {
                 ; 0000 013D   if (flags.dir_f)
00072c 91e0 0509 	LDS  R30,_flags
00072e 70e1      	ANDI R30,LOW(0x1)
00072f f0b9      	BREQ _0x57
                 ; 0000 013E   {
                 ; 0000 013F    OCR1A=sine[index];
000730 91e0 050e 	LDS  R30,_index_S0000003000
000732 e0f0      	LDI  R31,0
000733 57e4      	SUBI R30,LOW(-_sine*2)
000734 4fff      	SBCI R31,HIGH(-_sine*2)
000735 91e4      	LPM  R30,Z
000736 e0f0      	LDI  R31,0
000737 bdfb      	OUT  0x2A+1,R31
000738 bdea      	OUT  0x2A,R30
                 ; 0000 0140    OCR1B=sine[(unsigned char)(index+85U)];
000739 91e0 050e 	LDS  R30,_index_S0000003000
00073b e0f0      	LDI  R31,0
00073c 5aeb      	SUBI R30,LOW(-85)
00073d 4fff      	SBCI R31,HIGH(-85)
00073e e0f0      	LDI  R31,0
00073f e0f0      	LDI  R31,0
000740 57e4      	SUBI R30,LOW(-_sine*2)
000741 4fff      	SBCI R31,HIGH(-_sine*2)
000742 91e4      	LPM  R30,Z
000743 e0f0      	LDI  R31,0
000744 bdf9      	OUT  0x28+1,R31
000745 bde8      	OUT  0x28,R30
                 ; 0000 0141   }
                 ; 0000 0142   else
000746 c016      	RJMP _0x58
                 _0x57:
                 ; 0000 0143   {
                 ; 0000 0144    OCR1B=sine[index];
000747 91e0 050e 	LDS  R30,_index_S0000003000
000749 e0f0      	LDI  R31,0
00074a 57e4      	SUBI R30,LOW(-_sine*2)
00074b 4fff      	SBCI R31,HIGH(-_sine*2)
00074c 91e4      	LPM  R30,Z
00074d e0f0      	LDI  R31,0
00074e bdf9      	OUT  0x28+1,R31
00074f bde8      	OUT  0x28,R30
                 ; 0000 0145    OCR1A=sine[(unsigned char)(index+85U)];
000750 91e0 050e 	LDS  R30,_index_S0000003000
000752 e0f0      	LDI  R31,0
000753 5aeb      	SUBI R30,LOW(-85)
000754 4fff      	SBCI R31,HIGH(-85)
000755 e0f0      	LDI  R31,0
000756 e0f0      	LDI  R31,0
000757 57e4      	SUBI R30,LOW(-_sine*2)
000758 4fff      	SBCI R31,HIGH(-_sine*2)
000759 91e4      	LPM  R30,Z
00075a e0f0      	LDI  R31,0
00075b bdfb      	OUT  0x2A+1,R31
00075c bdea      	OUT  0x2A,R30
                 ; 0000 0146   }
                 _0x58:
                 ; 0000 0147   OCR1CL=sine[(unsigned char)(index+171U)];
00075d 91e0 050e 	LDS  R30,_index_S0000003000
00075f e0f0      	LDI  R31,0
000760 55e5      	SUBI R30,LOW(-171)
000761 4fff      	SBCI R31,HIGH(-171)
000762 e0f0      	LDI  R31,0
000763 e0f0      	LDI  R31,0
000764 57e4      	SUBI R30,LOW(-_sine*2)
000765 4fff      	SBCI R31,HIGH(-_sine*2)
000766 91e4      	LPM  R30,Z
000767 93e0 0078 	STS  120,R30
                 ; 0000 0148  }
                 ; 0000 0149 
                 ; 0000 014A  else
000769 c078      	RJMP _0x59
                 _0x56:
                 ; 0000 014B  {
                 ; 0000 014C   unsigned long amplitude;
                 ; 0000 014D   amplitude=(((255-a_boost)*(unsigned long)(speed-SPEED_BOOST))/(SPEED_BASE-SPEED_BOOST))+a_boost;
00076a 9724      	SBIW R28,4
                 ;	amplitude -> Y+0
00076b 91e0 0508 	LDS  R30,_a_boost
00076d e0f0      	LDI  R31,0
00076e efaf      	LDI  R26,LOW(255)
00076f e0b0      	LDI  R27,HIGH(255)
000770 1bae      	SUB  R26,R30
000771 0bbf      	SBC  R27,R31
000772 91e0 0500 	LDS  R30,_speed
000774 91f0 0501 	LDS  R31,_speed+1
000776 9731      	SBIW R30,1
000777 2766      	CLR  R22
000778 2777      	CLR  R23
000779 940e 08a2 	CALL __CWD2
00077b 940e 08af 	CALL __MULD12U
00077d 01df      	MOVW R26,R30
00077e 01cb      	MOVW R24,R22
                +
00077f eeee     +LDI R30 , LOW ( 0x1EE )
000780 e0f1     +LDI R31 , HIGH ( 0x1EE )
000781 e060     +LDI R22 , BYTE3 ( 0x1EE )
000782 e070     +LDI R23 , BYTE4 ( 0x1EE )
                 	__GETD1N 0x1EE
000783 940e 08cf 	CALL __DIVD21U
000785 01df      	MOVW R26,R30
000786 01cb      	MOVW R24,R22
000787 91e0 0508 	LDS  R30,_a_boost
000789 e0f0      	LDI  R31,0
00078a 940e 089d 	CALL __CWD1
00078c 940e 088a 	CALL __ADDD12
00078e 940e 08f8 	CALL __PUTD1S0
                 ; 0000 014E   if (flags.dir_f)
000790 91e0 0509 	LDS  R30,_flags
000792 70e1      	ANDI R30,LOW(0x1)
000793 f0f9      	BREQ _0x5A
                 ; 0000 014F   {
                 ; 0000 0150    OCR1A=a_calc(sine[index],(unsigned char)amplitude);
000794 91e0 050e 	LDS  R30,_index_S0000003000
000796 e0f0      	LDI  R31,0
000797 57e4      	SUBI R30,LOW(-_sine*2)
000798 4fff      	SBCI R31,HIGH(-_sine*2)
000799 91e4      	LPM  R30,Z
00079a 93ea      	ST   -Y,R30
00079b 81e9      	LDD  R30,Y+1
00079c 93ea      	ST   -Y,R30
00079d de03      	RCALL _a_calc
00079e e0f0      	LDI  R31,0
00079f bdfb      	OUT  0x2A+1,R31
0007a0 bdea      	OUT  0x2A,R30
                 ; 0000 0151    OCR1B=a_calc(sine[(unsigned char)(index+85U)],(unsigned char)amplitude);
0007a1 91e0 050e 	LDS  R30,_index_S0000003000
0007a3 e0f0      	LDI  R31,0
0007a4 5aeb      	SUBI R30,LOW(-85)
0007a5 4fff      	SBCI R31,HIGH(-85)
0007a6 e0f0      	LDI  R31,0
0007a7 e0f0      	LDI  R31,0
0007a8 57e4      	SUBI R30,LOW(-_sine*2)
0007a9 4fff      	SBCI R31,HIGH(-_sine*2)
0007aa 91e4      	LPM  R30,Z
0007ab 93ea      	ST   -Y,R30
0007ac 81e9      	LDD  R30,Y+1
0007ad 93ea      	ST   -Y,R30
0007ae ddf2      	RCALL _a_calc
0007af e0f0      	LDI  R31,0
0007b0 bdf9      	OUT  0x28+1,R31
0007b1 bde8      	OUT  0x28,R30
                 ; 0000 0152   }
                 ; 0000 0153   else
0007b2 c01e      	RJMP _0x5B
                 _0x5A:
                 ; 0000 0154   {
                 ; 0000 0155    OCR1B=a_calc(sine[index],(unsigned char)amplitude);
0007b3 91e0 050e 	LDS  R30,_index_S0000003000
0007b5 e0f0      	LDI  R31,0
0007b6 57e4      	SUBI R30,LOW(-_sine*2)
0007b7 4fff      	SBCI R31,HIGH(-_sine*2)
0007b8 91e4      	LPM  R30,Z
0007b9 93ea      	ST   -Y,R30
0007ba 81e9      	LDD  R30,Y+1
0007bb 93ea      	ST   -Y,R30
0007bc dde4      	RCALL _a_calc
0007bd e0f0      	LDI  R31,0
0007be bdf9      	OUT  0x28+1,R31
0007bf bde8      	OUT  0x28,R30
                 ; 0000 0156    OCR1A=a_calc(sine[(unsigned char)(index+85U)],(unsigned char)amplitude);
0007c0 91e0 050e 	LDS  R30,_index_S0000003000
0007c2 e0f0      	LDI  R31,0
0007c3 5aeb      	SUBI R30,LOW(-85)
0007c4 4fff      	SBCI R31,HIGH(-85)
0007c5 e0f0      	LDI  R31,0
0007c6 e0f0      	LDI  R31,0
0007c7 57e4      	SUBI R30,LOW(-_sine*2)
0007c8 4fff      	SBCI R31,HIGH(-_sine*2)
0007c9 91e4      	LPM  R30,Z
0007ca 93ea      	ST   -Y,R30
0007cb 81e9      	LDD  R30,Y+1
0007cc 93ea      	ST   -Y,R30
0007cd ddd3      	RCALL _a_calc
0007ce e0f0      	LDI  R31,0
0007cf bdfb      	OUT  0x2A+1,R31
0007d0 bdea      	OUT  0x2A,R30
                 ; 0000 0157   }
                 _0x5B:
                 ; 0000 0158   OCR1CL=a_calc(sine[(unsigned char)(index+171U)],(unsigned char)amplitude);
0007d1 91e0 050e 	LDS  R30,_index_S0000003000
0007d3 e0f0      	LDI  R31,0
0007d4 55e5      	SUBI R30,LOW(-171)
0007d5 4fff      	SBCI R31,HIGH(-171)
0007d6 e0f0      	LDI  R31,0
0007d7 e0f0      	LDI  R31,0
0007d8 57e4      	SUBI R30,LOW(-_sine*2)
0007d9 4fff      	SBCI R31,HIGH(-_sine*2)
0007da 91e4      	LPM  R30,Z
0007db 93ea      	ST   -Y,R30
0007dc 81e9      	LDD  R30,Y+1
0007dd 93ea      	ST   -Y,R30
0007de ddc2      	RCALL _a_calc
0007df 93e0 0078 	STS  120,R30
                 ; 0000 0159  }
0007e1 9624      	ADIW R28,4
                 _0x59:
                 ; 0000 015A }
0007e2 91e9      	LD   R30,Y+
0007e3 bfef      	OUT  SREG,R30
0007e4 91f9      	LD   R31,Y+
0007e5 91e9      	LD   R30,Y+
0007e6 91b9      	LD   R27,Y+
0007e7 91a9      	LD   R26,Y+
0007e8 9199      	LD   R25,Y+
0007e9 9189      	LD   R24,Y+
0007ea 9179      	LD   R23,Y+
0007eb 9169      	LD   R22,Y+
0007ec 90f9      	LD   R15,Y+
0007ed 9019      	LD   R1,Y+
0007ee 9009      	LD   R0,Y+
0007ef 9518      	RETI
                 ;
                 ;//----------------------------------------------------------------
                 ;
                 ;interrupt [ADC_INT] void ADC_INT_isr(void)
                 ; 0000 015F {
                 _ADC_INT_isr:
0007f0 920a      	ST   -Y,R0
0007f1 93aa      	ST   -Y,R26
0007f2 93ba      	ST   -Y,R27
0007f3 93ea      	ST   -Y,R30
0007f4 93fa      	ST   -Y,R31
0007f5 b7ef      	IN   R30,SREG
0007f6 93ea      	ST   -Y,R30
                 ; 0000 0160  static unsigned int adc_temp=0;
                 ; 0000 0161  static unsigned char n=0,adc_select=0;
                 ; 0000 0162  unsigned int temp;
                 ; 0000 0163 
                 ; 0000 0164  adc_temp+=ADCW;
0007f7 931a      	ST   -Y,R17
0007f8 930a      	ST   -Y,R16
                 ;	temp -> R16,R17
0007f9 b1e4      	IN   R30,0x4
0007fa b1f5      	IN   R31,0x4+1
0007fb 91a0 050f 	LDS  R26,_adc_temp_S0000004000
0007fd 91b0 0510 	LDS  R27,_adc_temp_S0000004000+1
0007ff 0fea      	ADD  R30,R26
000800 1ffb      	ADC  R31,R27
000801 93e0 050f 	STS  _adc_temp_S0000004000,R30
000803 93f0 0510 	STS  _adc_temp_S0000004000+1,R31
                 ; 0000 0165 
                 ; 0000 0166  if(++n==64)
000805 91a0 0511 	LDS  R26,_n_S0000004000
000807 5faf      	SUBI R26,-LOW(1)
000808 93a0 0511 	STS  _n_S0000004000,R26
00080a 34a0      	CPI  R26,LOW(0x40)
00080b f011      	BREQ PC+3
00080c 940c 0873 	JMP _0x5C
                 ; 0000 0167  {
                 ; 0000 0168   n=0;
00080e e0e0      	LDI  R30,LOW(0)
00080f 93e0 0511 	STS  _n_S0000004000,R30
                 ; 0000 0169   temp=(adc_temp>>6);
000811 91a0 050f 	LDS  R26,_adc_temp_S0000004000
000813 91b0 0510 	LDS  R27,_adc_temp_S0000004000+1
000815 e0e6      	LDI  R30,LOW(6)
000816 940e 088f 	CALL __LSRW12
000818 018f      	MOVW R16,R30
                 ; 0000 016A   adc_temp=0;
000819 e0e0      	LDI  R30,LOW(0)
00081a 93e0 050f 	STS  _adc_temp_S0000004000,R30
00081c 93e0 0510 	STS  _adc_temp_S0000004000+1,R30
                 ; 0000 016B   switch (adc_select)
00081e 91e0 0512 	LDS  R30,_adc_select_S0000004000
000820 e0f0      	LDI  R31,0
                 ; 0000 016C   {
                 ; 0000 016D   case 0:
000821 9730      	SBIW R30,0
000822 f4c9      	BRNE _0x60
                 ; 0000 016E    if(temp<14)adc_speed=0;
                +
000823 300e     +CPI R16 , LOW ( 14 )
000824 e0e0     +LDI R30 , HIGH ( 14 )
000825 071e     +CPC R17 , R30
                 	__CPWRN 16,17,14
000826 f430      	BRSH _0x61
000827 e0e0      	LDI  R30,LOW(0)
000828 93e0 0502 	STS  _adc_speed,R30
00082a 93e0 0503 	STS  _adc_speed+1,R30
                 ; 0000 016F    else if (temp<1010)adc_speed=temp-13;
00082c c00d      	RJMP _0x62
                 _0x61:
                +
00082d 3f02     +CPI R16 , LOW ( 1010 )
00082e e0e3     +LDI R30 , HIGH ( 1010 )
00082f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1010
000830 f418      	BRSH _0x63
000831 01f8      	MOVW R30,R16
000832 973d      	SBIW R30,13
000833 c002      	RJMP _0x71
                 ; 0000 0170    else adc_speed=996;
                 _0x63:
000834 eee4      	LDI  R30,LOW(996)
000835 e0f3      	LDI  R31,HIGH(996)
                 _0x71:
000836 93e0 0502 	STS  _adc_speed,R30
000838 93f0 0503 	STS  _adc_speed+1,R31
                 ; 0000 0171    ADMUX=(1<<REFS0)|(1<<MUX0);
                 _0x62:
00083a e4e1      	LDI  R30,LOW(65)
00083b c02c      	RJMP _0x72
                 ; 0000 0172    break;
                 ; 0000 0173 
                 ; 0000 0174   case 1:
                 _0x60:
00083c 30e1      	CPI  R30,LOW(0x1)
00083d e0a0      	LDI  R26,HIGH(0x1)
00083e 07fa      	CPC  R31,R26
00083f f461      	BRNE _0x65
                 ; 0000 0175    acceleration=(temp?(temp>>2):1);
000840 2e00      	MOV  R0,R16
000841 2a01      	OR   R0,R17
000842 f021      	BREQ _0x66
000843 01f8      	MOVW R30,R16
000844 940e 0898 	CALL __LSRW2
000846 c001      	RJMP _0x67
                 _0x66:
000847 e0e1      	LDI  R30,LOW(1)
                 _0x67:
000848 93e0 0504 	STS  _acceleration,R30
                 ; 0000 0176    ADMUX=(1<<REFS0)|(1<<MUX1);
00084a e4e2      	LDI  R30,LOW(66)
00084b c01c      	RJMP _0x72
                 ; 0000 0177    break;
                 ; 0000 0178 
                 ; 0000 0179   case 2:
                 _0x65:
00084c 30e2      	CPI  R30,LOW(0x2)
00084d e0a0      	LDI  R26,HIGH(0x2)
00084e 07fa      	CPC  R31,R26
00084f f461      	BRNE _0x69
                 ; 0000 017A    deceleration=(temp?(temp>>2):1);
000850 2e00      	MOV  R0,R16
000851 2a01      	OR   R0,R17
000852 f021      	BREQ _0x6A
000853 01f8      	MOVW R30,R16
000854 940e 0898 	CALL __LSRW2
000856 c001      	RJMP _0x6B
                 _0x6A:
000857 e0e1      	LDI  R30,LOW(1)
                 _0x6B:
000858 93e0 0505 	STS  _deceleration,R30
                 ; 0000 017B    ADMUX=(1<<REFS0)|(1<<MUX1)|(1<<MUX0);
00085a e4e3      	LDI  R30,LOW(67)
00085b c00c      	RJMP _0x72
                 ; 0000 017C    break;
                 ; 0000 017D 
                 ; 0000 017E   case 3:
                 _0x69:
00085c 30e3      	CPI  R30,LOW(0x3)
00085d e0a0      	LDI  R26,HIGH(0x3)
00085e 07fa      	CPC  R31,R26
00085f f449      	BRNE _0x5F
                 ; 0000 017F    a_boost=(temp>>5)+A_BOOST_MIN; // 25 <= a_boost <= 56
000860 01d8      	MOVW R26,R16
000861 e0e5      	LDI  R30,LOW(5)
000862 940e 088f 	CALL __LSRW12
000864 5ee7      	SUBI R30,-LOW(25)
000865 93e0 0508 	STS  _a_boost,R30
                 ; 0000 0180    ADMUX=(1<<REFS0);
000867 e4e0      	LDI  R30,LOW(64)
                 _0x72:
000868 b9e7      	OUT  0x7,R30
                 ; 0000 0181   }
                 _0x5F:
                 ; 0000 0182   if(++adc_select==4)adc_select=0;
000869 91a0 0512 	LDS  R26,_adc_select_S0000004000
00086b 5faf      	SUBI R26,-LOW(1)
00086c 93a0 0512 	STS  _adc_select_S0000004000,R26
00086e 30a4      	CPI  R26,LOW(0x4)
00086f f419      	BRNE _0x6E
000870 e0e0      	LDI  R30,LOW(0)
000871 93e0 0512 	STS  _adc_select_S0000004000,R30
                 ; 0000 0183  }
                 _0x6E:
                 ; 0000 0184  ADCSRA|=(1<<ADSC);
                 _0x5C:
000873 9a36      	SBI  0x6,6
                 ; 0000 0185 }
                 _0x73:
000874 9109      	LD   R16,Y+
000875 9119      	LD   R17,Y+
000876 91e9      	LD   R30,Y+
000877 bfef      	OUT  SREG,R30
000878 91f9      	LD   R31,Y+
000879 91e9      	LD   R30,Y+
00087a 91b9      	LD   R27,Y+
00087b 91a9      	LD   R26,Y+
00087c 9009      	LD   R0,Y+
00087d 9518      	RETI
                 ;
                 ;//----------------------------------------------------------------
                 ;
                 
                 	.DSEG
                 _speed:
000500           	.BYTE 0x2
                 _adc_speed:
000502           	.BYTE 0x2
                 _acceleration:
000504           	.BYTE 0x1
                 _deceleration:
000505           	.BYTE 0x1
                 _temp_key_code:
000506           	.BYTE 0x1
                 _mode:
000507           	.BYTE 0x1
                 _a_boost:
000508           	.BYTE 0x1
                 _flags:
000509           	.BYTE 0x1
                 _x20_S0000002000:
00050a           	.BYTE 0x1
                 _x10_S0000002000:
00050b           	.BYTE 0x1
                 _acceleration_counter_S0000002000:
00050c           	.BYTE 0x1
                 _deceleration_counter_S0000002000:
00050d           	.BYTE 0x1
                 _index_S0000003000:
00050e           	.BYTE 0x1
                 _adc_temp_S0000004000:
00050f           	.BYTE 0x2
                 _n_S0000004000:
000511           	.BYTE 0x1
                 _adc_select_S0000004000:
000512           	.BYTE 0x1
                 
                 	.CSEG
                 
                 	.CSEG
                 _delay_ms:
00087e 91e9      	ld   r30,y+
00087f 91f9      	ld   r31,y+
000880 9630      	adiw r30,0
000881 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000882 ed80     +LDI R24 , LOW ( 0x7D0 )
000883 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000884 9701     +SBIW R24 , 1
000885 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
000886 95a8      	wdr
000887 9731      	sbiw r30,1
000888 f7c9      	brne __delay_ms0
                 __delay_ms1:
000889 9508      	ret
                 
                 __ADDD12:
00088a 0fea      	ADD  R30,R26
00088b 1ffb      	ADC  R31,R27
00088c 1f68      	ADC  R22,R24
00088d 1f79      	ADC  R23,R25
00088e 9508      	RET
                 
                 __LSRW12:
00088f 23ee      	TST  R30
000890 2e0e      	MOV  R0,R30
000891 01fd      	MOVW R30,R26
000892 f021      	BREQ __LSRW12R
                 __LSRW12L:
000893 95f6      	LSR  R31
000894 95e7      	ROR  R30
000895 940a      	DEC  R0
000896 f7e1      	BRNE __LSRW12L
                 __LSRW12R:
000897 9508      	RET
                 
                 __LSRW2:
000898 95f6      	LSR  R31
000899 95e7      	ROR  R30
00089a 95f6      	LSR  R31
00089b 95e7      	ROR  R30
00089c 9508      	RET
                 
                 __CWD1:
00089d 2f6f      	MOV  R22,R31
00089e 0f66      	ADD  R22,R22
00089f 0b66      	SBC  R22,R22
0008a0 2f76      	MOV  R23,R22
0008a1 9508      	RET
                 
                 __CWD2:
0008a2 2f8b      	MOV  R24,R27
0008a3 0f88      	ADD  R24,R24
0008a4 0b88      	SBC  R24,R24
0008a5 2f98      	MOV  R25,R24
0008a6 9508      	RET
                 
                 __MULW12U:
0008a7 9ffa      	MUL  R31,R26
0008a8 2df0      	MOV  R31,R0
0008a9 9feb      	MUL  R30,R27
0008aa 0df0      	ADD  R31,R0
0008ab 9fea      	MUL  R30,R26
0008ac 2de0      	MOV  R30,R0
0008ad 0df1      	ADD  R31,R1
0008ae 9508      	RET
                 
                 __MULD12U:
0008af 9f7a      	MUL  R23,R26
0008b0 2d70      	MOV  R23,R0
0008b1 9f6b      	MUL  R22,R27
0008b2 0d70      	ADD  R23,R0
0008b3 9ff8      	MUL  R31,R24
0008b4 0d70      	ADD  R23,R0
0008b5 9fe9      	MUL  R30,R25
0008b6 0d70      	ADD  R23,R0
0008b7 9f6a      	MUL  R22,R26
0008b8 2d60      	MOV  R22,R0
0008b9 0d71      	ADD  R23,R1
0008ba 9ffb      	MUL  R31,R27
0008bb 0d60      	ADD  R22,R0
0008bc 1d71      	ADC  R23,R1
0008bd 9fe8      	MUL  R30,R24
0008be 0d60      	ADD  R22,R0
0008bf 1d71      	ADC  R23,R1
0008c0 2788      	CLR  R24
0008c1 9ffa      	MUL  R31,R26
0008c2 2df0      	MOV  R31,R0
0008c3 0d61      	ADD  R22,R1
0008c4 1f78      	ADC  R23,R24
0008c5 9feb      	MUL  R30,R27
0008c6 0df0      	ADD  R31,R0
0008c7 1d61      	ADC  R22,R1
0008c8 1f78      	ADC  R23,R24
0008c9 9fea      	MUL  R30,R26
0008ca 2de0      	MOV  R30,R0
0008cb 0df1      	ADD  R31,R1
0008cc 1f68      	ADC  R22,R24
0008cd 1f78      	ADC  R23,R24
0008ce 9508      	RET
                 
                 __DIVD21U:
0008cf 933f      	PUSH R19
0008d0 934f      	PUSH R20
0008d1 935f      	PUSH R21
0008d2 2400      	CLR  R0
0008d3 2411      	CLR  R1
0008d4 2744      	CLR  R20
0008d5 2755      	CLR  R21
0008d6 e230      	LDI  R19,32
                 __DIVD21U1:
0008d7 0faa      	LSL  R26
0008d8 1fbb      	ROL  R27
0008d9 1f88      	ROL  R24
0008da 1f99      	ROL  R25
0008db 1c00      	ROL  R0
0008dc 1c11      	ROL  R1
0008dd 1f44      	ROL  R20
0008de 1f55      	ROL  R21
0008df 1a0e      	SUB  R0,R30
0008e0 0a1f      	SBC  R1,R31
0008e1 0b46      	SBC  R20,R22
0008e2 0b57      	SBC  R21,R23
0008e3 f428      	BRCC __DIVD21U2
0008e4 0e0e      	ADD  R0,R30
0008e5 1e1f      	ADC  R1,R31
0008e6 1f46      	ADC  R20,R22
0008e7 1f57      	ADC  R21,R23
0008e8 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
0008e9 60a1      	SBR  R26,1
                 __DIVD21U3:
0008ea 953a      	DEC  R19
0008eb f759      	BRNE __DIVD21U1
0008ec 01fd      	MOVW R30,R26
0008ed 01bc      	MOVW R22,R24
0008ee 01d0      	MOVW R26,R0
0008ef 01ca      	MOVW R24,R20
0008f0 915f      	POP  R21
0008f1 914f      	POP  R20
0008f2 913f      	POP  R19
0008f3 9508      	RET
                 
                 __GETW1PF:
0008f4 9005      	LPM  R0,Z+
0008f5 91f4      	LPM  R31,Z
0008f6 2de0      	MOV  R30,R0
0008f7 9508      	RET
                 
                 __PUTD1S0:
0008f8 83e8      	ST   Y,R30
0008f9 83f9      	STD  Y+1,R31
0008fa 836a      	STD  Y+2,R22
0008fb 837b      	STD  Y+3,R23
0008fc 9508      	RET
                 
                 __SAVELOCR4:
0008fd 933a      	ST   -Y,R19
                 __SAVELOCR3:
0008fe 932a      	ST   -Y,R18
                 __SAVELOCR2:
0008ff 931a      	ST   -Y,R17
000900 930a      	ST   -Y,R16
000901 9508      	RET
                 
                 __LOADLOCR4:
000902 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
000903 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
000904 8119      	LDD  R17,Y+1
000905 8108      	LD   R16,Y
000906 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega64 register use summary:
r0 :  39 r1 :  14 r2 :   0 r3 :   0 r4 :   0 r5 :   0 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   2 
r16:  42 r17:  38 r18:   2 r19:  11 r20:   7 r21:   6 r22:  27 r23:  20 
r24:  30 r25:   9 r26: 105 r27:  39 r28:   8 r29:   1 r30: 370 r31: 132 
x  :  11 y  :  89 z  :  22 
Registers used: 22 out of 35 (62.9%)

ATmega64 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :  15 add   :  17 
adiw  :   7 and   :   0 andi  :  21 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   1 brcs  :   0 break :   0 breq  :  15 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   5 
brlt  :   0 brmi  :   0 brne  :  34 brpl  :   0 brsh  :   7 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  15 
cbi   :   9 cbr   :   0 clc   :   0 clh   :   0 cli   :   2 cln   :   0 
clr   :  10 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   2 
cp    :   9 cpc   :  17 cpi   :  30 cpse  :   0 dec   :   3 des   :   0 
eor   :   3 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :  10 inc   :   0 jmp   :  39 ld    :  28 ldd   :  14 ldi   : 139 
lds   :  75 lpm   :  36 lsl   :   3 lsr   :   5 mov   :  31 movw  :  21 
mul   :  13 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   4 
ori   :   8 out   :  42 pop   :   3 push  :   3 rcall :   5 ret   :  14 
reti  :   2 rjmp  :  50 rol   :   9 ror   :   5 sbc   :   6 sbci  :  19 
sbi   :  15 sbic  :   2 sbis  :   1 sbiw  :  18 sbr   :   1 sbrc  :   0 
sbrs  :   1 sec   :   0 seh   :   0 sei   :   2 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  54 std   :   4 sts   :  58 sub   :   2 subi  :  31 swap  :   0 
tst   :   1 wdr   :   1 
Instructions used: 58 out of 116 (50.0%)

ATmega64 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00120e   2340   2282   4622   65536   7.1%
[.dseg] 0x000100 0x000513      0     19     19    4351   0.4%
[.eseg] 0x000000 0x000000      0      0      0    2048   0.0%

Assembly complete, 0 errors, 4 warnings
