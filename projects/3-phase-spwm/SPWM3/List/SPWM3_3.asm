
;CodeVisionAVR C Compiler V2.05.0 Professional
;(C) Copyright 1998-2010 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com

;Chip type                : ATmega64
;Program type             : Application
;Clock frequency          : 8.000000 MHz
;Memory model             : Small
;Optimize for             : Size
;(s)printf features       : int, width
;(s)scanf features        : int, width
;External RAM size        : 0
;Data Stack size          : 1024 byte(s)
;Heap size                : 0 byte(s)
;Promote 'char' to 'int'  : Yes
;'char' is unsigned       : Yes
;8 bit enums              : Yes
;global 'const' stored in FLASH: Yes
;Enhanced core instructions    : On
;Smart register allocation     : On
;Automatic register allocation : On

	#pragma AVRPART ADMIN PART_NAME ATmega64
	#pragma AVRPART MEMORY PROG_FLASH 65536
	#pragma AVRPART MEMORY EEPROM 2048
	#pragma AVRPART MEMORY INT_SRAM SIZE 4351
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU USR=0xB
	.EQU UDR=0xC
	.EQU SPSR=0xE
	.EQU SPDR=0xF
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU EECR=0x1C
	.EQU EEDR=0x1D
	.EQU EEARL=0x1E
	.EQU EEARH=0x1F
	.EQU WDTCR=0x21
	.EQU MCUCR=0x35
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F
	.EQU XMCRA=0x6D
	.EQU XMCRB=0x6C

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0100
	.EQU __SRAM_END=0x10FF
	.EQU __DSTACK_SIZE=0x0400
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X
	.ENDM

	.MACRO __GETD1STACK
	IN   R26,SPL
	IN   R27,SPH
	ADIW R26,@0+1
	LD   R30,X+
	LD   R31,X+
	LD   R22,X
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z+
	LD   R23,Z
	MOVW R30,R0
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R1,X+
	LD   R24,X+
	LD   R25,X
	MOVW R26,R0
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer2_compare_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _adc_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  _timer3_comparea_isr
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_sine:
	.DB  0x80,0x83,0x86,0x89,0x8C,0x8F,0x92,0x95
	.DB  0x98,0x9C,0x9F,0xA2,0xA5,0xA8,0xAB,0xAE
	.DB  0xB0,0xB3,0xB6,0xB9,0xBC,0xBF,0xC1,0xC4
	.DB  0xC7,0xC9,0xCC,0xCE,0xD1,0xD3,0xD5,0xD8
	.DB  0xDA,0xDC,0xDE,0xE0,0xE2,0xE4,0xE6,0xE8
	.DB  0xEA,0xEC,0xED,0xEF,0xF0,0xF2,0xF3,0xF5
	.DB  0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFC
	.DB  0xFD,0xFE,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFE,0xFE
	.DB  0xFD,0xFC,0xFC,0xFB,0xFA,0xF9,0xF8,0xF7
	.DB  0xF6,0xF5,0xF3,0xF2,0xF0,0xEF,0xED,0xEC
	.DB  0xEA,0xE8,0xE6,0xE4,0xE2,0xE0,0xDE,0xDC
	.DB  0xDA,0xD8,0xD5,0xD3,0xD1,0xCE,0xCC,0xC9
	.DB  0xC7,0xC4,0xC1,0xBF,0xBC,0xB9,0xB6,0xB3
	.DB  0xB0,0xAE,0xAB,0xA8,0xA5,0xA2,0x9F,0x9C
	.DB  0x98,0x95,0x92,0x8F,0x8C,0x89,0x86,0x83
	.DB  0x80,0x7C,0x79,0x76,0x73,0x70,0x6D,0x6A
	.DB  0x67,0x63,0x60,0x5D,0x5A,0x57,0x54,0x51
	.DB  0x4F,0x4C,0x49,0x46,0x43,0x40,0x3E,0x3B
	.DB  0x38,0x36,0x33,0x31,0x2E,0x2C,0x2A,0x27
	.DB  0x25,0x23,0x21,0x1F,0x1D,0x1B,0x19,0x17
	.DB  0x15,0x13,0x12,0x10,0xF,0xD,0xC,0xA
	.DB  0x9,0x8,0x7,0x6,0x5,0x4,0x3,0x3
	.DB  0x2,0x1,0x1,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1
	.DB  0x2,0x3,0x3,0x4,0x5,0x6,0x7,0x8
	.DB  0x9,0xA,0xC,0xD,0xF,0x10,0x12,0x13
	.DB  0x15,0x17,0x19,0x1B,0x1D,0x1F,0x21,0x23
	.DB  0x25,0x27,0x2A,0x2C,0x2E,0x31,0x33,0x36
	.DB  0x38,0x3B,0x3E,0x40,0x43,0x46,0x49,0x4C
	.DB  0x4F,0x51,0x54,0x57,0x5A,0x5D,0x60,0x63
	.DB  0x67,0x6A,0x6D,0x70,0x73,0x76,0x79,0x7C
_Timer_Value:
	.DB  0x24,0xF4,0x73,0xCB,0x63,0xAE,0x96,0x98
	.DB  0xA2,0x87,0x12,0x7A,0xF9,0x6E,0xBA,0x65
	.DB  0xE6,0x5D,0x31,0x57,0x61,0x51,0x4B,0x4C
	.DB  0xCE,0x47,0xD1,0x43,0x3F,0x40,0x9,0x3D
	.DB  0x21,0x3A,0x7D,0x37,0x13,0x35,0xDD,0x32
	.DB  0xD4,0x30,0xF3,0x2E,0x36,0x2D,0x99,0x2B
	.DB  0x18,0x2A,0xB1,0x28,0x61,0x27,0x26,0x26
	.DB  0xFE,0x24,0xE7,0x23,0xE1,0x22,0xE9,0x21
	.DB  0xFE,0x20,0x20,0x20,0x4D,0x1F,0x84,0x1E
	.DB  0xC6,0x1D,0x10,0x1D,0x63,0x1C,0xBE,0x1B
	.DB  0x20,0x1B,0x89,0x1A,0xF9,0x19,0x6E,0x19
	.DB  0xEA,0x18,0x6A,0x18,0xEF,0x17,0x7A,0x17
	.DB  0x8,0x17,0x9B,0x16,0x32,0x16,0xCC,0x15
	.DB  0x6A,0x15,0xC,0x15,0xB1,0x14,0x58,0x14
	.DB  0x3,0x14,0xB0,0x13,0x60,0x13,0x13,0x13
	.DB  0xC8,0x12,0x7F,0x12,0x38,0x12,0xF4,0x11
	.DB  0xB1,0x11,0x70,0x11,0x31,0x11,0xF4,0x10
	.DB  0xB9,0x10,0x7F,0x10,0x47,0x10,0x10,0x10
	.DB  0xDA,0xF,0xA6,0xF,0x74,0xF,0x42,0xF
	.DB  0x12,0xF,0xE3,0xE,0xB5,0xE,0x88,0xE
	.DB  0x5C,0xE,0x32,0xE,0x8,0xE,0xDF,0xD
	.DB  0xB7,0xD,0x90,0xD,0x6A,0xD,0x45,0xD
	.DB  0x20,0xD,0xFC,0xC,0xD9,0xC,0xB7,0xC
	.DB  0x96,0xC,0x75,0xC,0x55,0xC,0x35,0xC
	.DB  0x16,0xC,0xF8,0xB,0xDA,0xB,0xBD,0xB
	.DB  0xA0,0xB,0x84,0xB,0x69,0xB,0x4E,0xB
	.DB  0x33,0xB,0x19,0xB,0xFF,0xA,0xE6,0xA
	.DB  0xCD,0xA,0xB5,0xA,0x9D,0xA,0x86,0xA
	.DB  0x6F,0xA,0x58,0xA,0x42,0xA,0x2C,0xA
	.DB  0x17,0xA,0x1,0xA,0xED,0x9,0xD8,0x9
	.DB  0xC4,0x9,0xB0,0x9,0x9D,0x9,0x89,0x9
	.DB  0x76,0x9,0x64,0x9,0x51,0x9,0x3F,0x9
	.DB  0x2E,0x9,0x1C,0x9,0xB,0x9,0xFA,0x8
	.DB  0xE9,0x8,0xD8,0x8,0xC8,0x8,0xB8,0x8
	.DB  0xA8,0x8,0x99,0x8,0x89,0x8,0x7A,0x8
	.DB  0x6B,0x8,0x5C,0x8,0x4E,0x8,0x3F,0x8
	.DB  0x31,0x8,0x23,0x8,0x16,0x8,0x8,0x8
	.DB  0xFA,0x7,0xED,0x7,0xE0,0x7,0xD3,0x7
	.DB  0xC6,0x7,0xBA,0x7,0xAD,0x7,0xA1,0x7
	.DB  0x95,0x7,0x89,0x7,0x7D,0x7,0x71,0x7
	.DB  0x66,0x7,0x5B,0x7,0x4F,0x7,0x44,0x7
	.DB  0x39,0x7,0x2E,0x7,0x23,0x7,0x19,0x7
	.DB  0xE,0x7,0x4,0x7,0xFA,0x6,0xF0,0x6
	.DB  0xE6,0x6,0xDC,0x6,0xD2,0x6,0xC8,0x6
	.DB  0xBF,0x6,0xB5,0x6,0xAC,0x6,0xA2,0x6
	.DB  0x99,0x6,0x90,0x6,0x87,0x6,0x7E,0x6
	.DB  0x75,0x6,0x6D,0x6,0x64,0x6,0x5C,0x6
	.DB  0x53,0x6,0x4B,0x6,0x43,0x6,0x3A,0x6
	.DB  0x32,0x6,0x2A,0x6,0x22,0x6,0x35,0xC
	.DB  0x25,0xC,0x16,0xC,0x7,0xC,0xF8,0xB
	.DB  0xE9,0xB,0xDA,0xB,0xCB,0xB,0xBD,0xB
	.DB  0xAE,0xB,0xA0,0xB,0x92,0xB,0x84,0xB
	.DB  0x76,0xB,0x69,0xB,0x5B,0xB,0x4E,0xB
	.DB  0x40,0xB,0x33,0xB,0x26,0xB,0x19,0xB
	.DB  0xC,0xB,0xFF,0xA,0xF3,0xA,0xE6,0xA
	.DB  0xDA,0xA,0xCD,0xA,0xC1,0xA,0xB5,0xA
	.DB  0xA9,0xA,0x9D,0xA,0x92,0xA,0x86,0xA
	.DB  0x7A,0xA,0x6F,0xA,0x64,0xA,0x58,0xA
	.DB  0x4D,0xA,0x42,0xA,0x37,0xA,0x2C,0xA
	.DB  0x21,0xA,0x17,0xA,0xC,0xA,0x1,0xA
	.DB  0xF7,0x9,0xED,0x9,0xE2,0x9,0xD8,0x9
	.DB  0xCE,0x9,0xC4,0x9,0xBA,0x9,0xB0,0x9
	.DB  0xA6,0x9,0x9D,0x9,0x93,0x9,0x89,0x9
	.DB  0x80,0x9,0x76,0x9,0x6D,0x9,0x64,0x9
	.DB  0x5B,0x9,0x51,0x9,0x48,0x9,0x3F,0x9
	.DB  0x36,0x9,0x2E,0x9,0x25,0x9,0x1C,0x9
	.DB  0x13,0x9,0xB,0x9,0x2,0x9,0xFA,0x8
	.DB  0xF1,0x8,0xE9,0x8,0xE1,0x8,0xD8,0x8
	.DB  0xD0,0x8,0xC8,0x8,0xC0,0x8,0xB8,0x8
	.DB  0xB0,0x8,0xA8,0x8,0xA0,0x8,0x99,0x8
	.DB  0x91,0x8,0x89,0x8,0x82,0x8,0x7A,0x8
	.DB  0x73,0x8,0x6B,0x8,0x64,0x8,0x5C,0x8
	.DB  0x55,0x8,0x4E,0x8,0x47,0x8,0x3F,0x8
	.DB  0x38,0x8,0x31,0x8,0x2A,0x8,0x23,0x8
	.DB  0x1C,0x8,0x16,0x8,0xF,0x8,0x8,0x8
	.DB  0x1,0x8,0xFA,0x7,0xF4,0x7,0xED,0x7
	.DB  0xE7,0x7,0xE0,0x7,0xDA,0x7,0xD3,0x7
	.DB  0xCD,0x7,0xC6,0x7,0xC0,0x7,0xBA,0x7
	.DB  0xB4,0x7,0xAD,0x7,0xA7,0x7,0xA1,0x7
	.DB  0x9B,0x7,0x95,0x7,0x8F,0x7,0x89,0x7
	.DB  0x83,0x7,0x7D,0x7,0x77,0x7,0x71,0x7
	.DB  0x6C,0x7,0x66,0x7,0x60,0x7,0x5B,0x7
	.DB  0x55,0x7,0x4F,0x7,0x4A,0x7,0x44,0x7
	.DB  0x3F,0x7,0x39,0x7,0x34,0x7,0x2E,0x7
	.DB  0x29,0x7,0x23,0x7,0x1E,0x7,0x19,0x7
	.DB  0x14,0x7,0xE,0x7,0x9,0x7,0x4,0x7
	.DB  0xFF,0x6,0xFA,0x6,0xF5,0x6,0xF0,0x6
	.DB  0xEB,0x6,0xE6,0x6,0xE1,0x6,0xDC,0x6
	.DB  0xD7,0x6,0xD2,0x6,0xCD,0x6,0xC8,0x6
	.DB  0xC3,0x6,0xBF,0x6,0xBA,0x6,0xB5,0x6
	.DB  0xB0,0x6,0xAC,0x6,0xA7,0x6,0xA2,0x6
	.DB  0x9E,0x6,0x99,0x6,0x95,0x6,0x90,0x6
	.DB  0x8C,0x6,0x87,0x6,0x83,0x6,0x7E,0x6
	.DB  0x7A,0x6,0x75,0x6,0x71,0x6,0x6D,0x6
	.DB  0x68,0x6,0x64,0x6,0x60,0x6,0x5C,0x6
	.DB  0x57,0x6,0x53,0x6,0x4F,0x6,0x4B,0x6
	.DB  0x47,0x6,0x43,0x6,0x3E,0x6,0x3A,0x6
	.DB  0x36,0x6,0x32,0x6,0x2E,0x6,0x2A,0x6
	.DB  0x26,0x6,0x22,0x6,0x1E,0x6,0x35,0xC
	.DB  0x2D,0xC,0x25,0xC,0x1E,0xC,0x16,0xC
	.DB  0xE,0xC,0x7,0xC,0xFF,0xB,0xF8,0xB
	.DB  0xF0,0xB,0xE9,0xB,0xE1,0xB,0xDA,0xB
	.DB  0xD3,0xB,0xCB,0xB,0xC4,0xB,0xBD,0xB
	.DB  0xB6,0xB,0xAE,0xB,0xA7,0xB,0xA0,0xB
	.DB  0x99,0xB,0x92,0xB,0x8B,0xB,0x84,0xB
	.DB  0x7D,0xB,0x76,0xB,0x6F,0xB,0x69,0xB
	.DB  0x62,0xB,0x5B,0xB,0x54,0xB,0x4E,0xB
	.DB  0x47,0xB,0x40,0xB,0x3A,0xB,0x33,0xB
	.DB  0x2C,0xB,0x26,0xB,0x1F,0xB,0x19,0xB
	.DB  0x12,0xB,0xC,0xB,0x6,0xB,0xFF,0xA
	.DB  0xF9,0xA,0xF3,0xA,0xEC,0xA,0xE6,0xA
	.DB  0xE0,0xA,0xDA,0xA,0xD4,0xA,0xCD,0xA
	.DB  0xC7,0xA,0xC1,0xA,0xBB,0xA,0xB5,0xA
	.DB  0xAF,0xA,0xA9,0xA,0xA3,0xA,0x9D,0xA
	.DB  0x97,0xA,0x92,0xA,0x8C,0xA,0x86,0xA
	.DB  0x80,0xA,0x7A,0xA,0x75,0xA,0x6F,0xA
	.DB  0x69,0xA,0x64,0xA,0x5E,0xA,0x58,0xA
	.DB  0x53,0xA,0x4D,0xA,0x48,0xA,0x42,0xA
	.DB  0x3D,0xA,0x37,0xA,0x32,0xA,0x2C,0xA
	.DB  0x27,0xA,0x21,0xA,0x1C,0xA,0x17,0xA
	.DB  0x11,0xA,0xC,0xA,0x7,0xA,0x1,0xA
	.DB  0xFC,0x9,0xF7,0x9,0xF2,0x9,0xED,0x9
	.DB  0xE7,0x9,0xE2,0x9,0xDD,0x9,0xD8,0x9
	.DB  0xD3,0x9,0xCE,0x9,0xC9,0x9,0xC4,0x9
	.DB  0xBF,0x9,0xBA,0x9,0xB5,0x9,0xB0,0x9
	.DB  0xAB,0x9,0xA6,0x9,0xA1,0x9,0x9D,0x9
	.DB  0x98,0x9,0x93,0x9,0x8E,0x9,0x89,0x9
	.DB  0x85,0x9,0x80,0x9,0x7B,0x9,0x76,0x9
	.DB  0x72,0x9,0x6D,0x9,0x68,0x9,0x64,0x9
	.DB  0x5F,0x9,0x5B,0x9,0x56,0x9,0x51,0x9
	.DB  0x4D,0x9,0x48,0x9,0x44,0x9,0x3F,0x9
	.DB  0x3B,0x9,0x36,0x9,0x32,0x9,0x2E,0x9
	.DB  0x29,0x9,0x25,0x9,0x20,0x9,0x1C,0x9
	.DB  0x18,0x9,0x13,0x9,0xF,0x9,0xB,0x9
	.DB  0x7,0x9,0x2,0x9,0xFE,0x8,0xFA,0x8
	.DB  0xF6,0x8,0xF1,0x8,0xED,0x8,0xE9,0x8
	.DB  0xE5,0x8,0xE1,0x8,0xDD,0x8,0xD8,0x8
	.DB  0xD4,0x8,0xD0,0x8,0xCC,0x8,0xC8,0x8
	.DB  0xC4,0x8,0xC0,0x8,0xBC,0x8,0xB8,0x8
	.DB  0xB4,0x8,0xB0,0x8,0xAC,0x8,0xA8,0x8
	.DB  0xA4,0x8,0xA0,0x8,0x9D,0x8,0x99,0x8
	.DB  0x95,0x8,0x91,0x8,0x8D,0x8,0x89,0x8
	.DB  0x86,0x8,0x82,0x8,0x7E,0x8,0x7A,0x8
	.DB  0x76,0x8,0x73,0x8,0x6F,0x8,0x6B,0x8
	.DB  0x67,0x8,0x64,0x8,0x60,0x8,0x5C,0x8
	.DB  0x59,0x8,0x55,0x8,0x51,0x8,0x4E,0x8
	.DB  0x4A,0x8,0x47,0x8,0x43,0x8,0x3F,0x8
	.DB  0x3C,0x8,0x38,0x8,0x35,0x8,0x31,0x8
	.DB  0x2E,0x8,0x2A,0x8,0x27,0x8,0x47,0x10
	.DB  0x40,0x10,0x39,0x10,0x32,0x10,0x2B,0x10
	.DB  0x24,0x10,0x1D,0x10,0x17,0x10,0x10,0x10
	.DB  0x9,0x10,0x2,0x10,0xFC,0xF,0xF5,0xF
	.DB  0xEE,0xF,0xE8,0xF,0xE1,0xF,0xDA,0xF
	.DB  0xD4,0xF,0xCD,0xF,0xC7,0xF,0xC0,0xF
	.DB  0xBA,0xF,0xB3,0xF,0xAD,0xF,0xA6,0xF
	.DB  0xA0,0xF,0x9A,0xF,0x93,0xF,0x8D,0xF
	.DB  0x87,0xF,0x80,0xF,0x7A,0xF,0x74,0xF
	.DB  0x6D,0xF,0x67,0xF,0x61,0xF,0x5B,0xF
	.DB  0x55,0xF,0x4E,0xF,0x48,0xF,0x42,0xF
	.DB  0x3C,0xF,0x36,0xF,0x30,0xF,0x2A,0xF
	.DB  0x24,0xF,0x1E,0xF,0x18,0xF,0x12,0xF
	.DB  0xC,0xF,0x6,0xF,0x0,0xF,0xFA,0xE
	.DB  0xF4,0xE,0xEF,0xE,0xE9,0xE,0xE3,0xE
	.DB  0xDD,0xE,0xD7,0xE,0xD2,0xE,0xCC,0xE
	.DB  0xC6,0xE,0xC0,0xE,0xBB,0xE,0xB5,0xE
	.DB  0xAF,0xE,0xAA,0xE,0xA4,0xE,0x9F,0xE
	.DB  0x99,0xE,0x93,0xE,0x8E,0xE,0x88,0xE
	.DB  0x83,0xE,0x7D,0xE,0x78,0xE,0x72,0xE
	.DB  0x6D,0xE,0x67,0xE,0x62,0xE,0x5C,0xE
	.DB  0x57,0xE,0x52,0xE,0x4C,0xE,0x47,0xE
	.DB  0x42,0xE,0x3C,0xE,0x37,0xE,0x32,0xE
	.DB  0x2C,0xE,0x27,0xE,0x22,0xE,0x1D,0xE
	.DB  0x18,0xE,0x12,0xE,0xD,0xE,0x8,0xE
	.DB  0x3,0xE,0xFE,0xD,0xF9,0xD,0xF3,0xD
	.DB  0xEE,0xD,0xE9,0xD,0xE4,0xD,0xDF,0xD
	.DB  0xDA,0xD,0xD5,0xD,0xD0,0xD,0xCB,0xD
	.DB  0xC6,0xD,0xC1,0xD,0xBC,0xD,0xB7,0xD
	.DB  0xB2,0xD,0xAD,0xD,0xA9,0xD,0xA4,0xD
	.DB  0x9F,0xD,0x9A,0xD,0x95,0xD,0x90,0xD
	.DB  0x8B,0xD,0x87,0xD,0x82,0xD,0x7D,0xD
	.DB  0x78,0xD,0x74,0xD,0x6F,0xD,0x6A,0xD
	.DB  0x65,0xD,0x61,0xD,0x5C,0xD,0x57,0xD
	.DB  0x53,0xD,0x4E,0xD,0x49,0xD,0x45,0xD
	.DB  0x40,0xD,0x3C,0xD,0x37,0xD,0x32,0xD
	.DB  0x2E,0xD,0x29,0xD,0x25,0xD,0x20,0xD
	.DB  0x1C,0xD,0x17,0xD,0x13,0xD,0xE,0xD
	.DB  0xA,0xD,0x5,0xD,0x1,0xD,0xFC,0xC
	.DB  0xF8,0xC,0xF4,0xC,0xEF,0xC,0xEB,0xC
	.DB  0xE7,0xC,0xE2,0xC,0xDE,0xC,0xD9,0xC
	.DB  0xD5,0xC,0xD1,0xC,0xCD,0xC,0xC8,0xC
	.DB  0xC4,0xC,0xC0,0xC,0xBB,0xC,0xB7,0xC
	.DB  0xB3,0xC,0xAF,0xC,0xAB,0xC,0xA6,0xC
	.DB  0xA2,0xC,0x9E,0xC,0x9A,0xC,0x96,0xC
	.DB  0x92,0xC,0x8D,0xC,0x89,0xC,0x85,0xC
	.DB  0x81,0xC,0x7D,0xC,0x79,0xC,0x75,0xC
	.DB  0x71,0xC,0x6D,0xC,0x69,0xC,0x65,0xC
	.DB  0x61,0xC,0x5D,0xC,0x59,0xC,0x55,0xC
	.DB  0x51,0xC,0x4D,0xC,0x49,0xC,0x45,0xC
	.DB  0x41,0xC,0x3D,0xC,0x39,0xC,0x6A,0x18
	.DB  0x62,0x18,0x5A,0x18,0x53,0x18,0x4B,0x18
	.DB  0x43,0x18,0x3B,0x18,0x34,0x18,0x2C,0x18
	.DB  0x24,0x18,0x1D,0x18,0x15,0x18,0xE,0x18
	.DB  0x6,0x18,0xFF,0x17,0xF7,0x17,0xEF,0x17
	.DB  0xE8,0x17,0xE0,0x17,0xD9,0x17,0xD2,0x17
	.DB  0xCA,0x17,0xC3,0x17,0xBB,0x17,0xB4,0x17
	.DB  0xAD,0x17,0xA5,0x17,0x9E,0x17,0x97,0x17
	.DB  0x8F,0x17,0x88,0x17,0x81,0x17,0x7A,0x17
	.DB  0x72,0x17,0x6B,0x17,0x64,0x17,0x5D,0x17
	.DB  0x56,0x17,0x4F,0x17,0x47,0x17,0x40,0x17
	.DB  0x39,0x17,0x32,0x17,0x2B,0x17,0x24,0x17
	.DB  0x1D,0x17,0x16,0x17,0xF,0x17,0x8,0x17
	.DB  0x1,0x17,0xFA,0x16,0xF3,0x16,0xED,0x16
	.DB  0xE6,0x16,0xDF,0x16,0xD8,0x16,0xD1,0x16
	.DB  0xCA,0x16,0xC4,0x16,0xBD,0x16,0xB6,0x16
	.DB  0xAF,0x16,0xA8,0x16,0xA2,0x16,0x9B,0x16
	.DB  0x94,0x16,0x8E,0x16,0x87,0x16,0x80,0x16
	.DB  0x7A,0x16,0x73,0x16,0x6D,0x16,0x66,0x16
	.DB  0x5F,0x16,0x59,0x16,0x52,0x16,0x4C,0x16
	.DB  0x45,0x16,0x3F,0x16,0x38,0x16,0x32,0x16
	.DB  0x2B,0x16,0x25,0x16,0x1F,0x16,0x18,0x16
	.DB  0x12,0x16,0xB,0x16,0x5,0x16,0xFF,0x15
	.DB  0xF8,0x15,0xF2,0x15,0xEC,0x15,0xE5,0x15
	.DB  0xDF,0x15,0xD9,0x15,0xD3,0x15,0xCC,0x15
	.DB  0xC6,0x15,0xC0,0x15,0xBA,0x15,0xB4,0x15
	.DB  0xAD,0x15,0xA7,0x15,0xA1,0x15,0x9B,0x15
	.DB  0x95,0x15,0x8F,0x15,0x89,0x15,0x83,0x15
	.DB  0x7D,0x15,0x77,0x15,0x70,0x15,0x6A,0x15
	.DB  0x64,0x15,0x5E,0x15,0x58,0x15,0x53,0x15
	.DB  0x4D,0x15,0x47,0x15,0x41,0x15,0x3B,0x15
	.DB  0x35,0x15,0x2F,0x15,0x29,0x15,0x23,0x15
	.DB  0x1D,0x15,0x18,0x15,0x12,0x15,0xC,0x15
	.DB  0x6,0x15,0x0,0x15,0xFB,0x14,0xF5,0x14
	.DB  0xEF,0x14,0xE9,0x14,0xE4,0x14,0xDE,0x14
	.DB  0xD8,0x14,0xD2,0x14,0xCD,0x14,0xC7,0x14
	.DB  0xC1,0x14,0xBC,0x14,0xB6,0x14,0xB1,0x14
	.DB  0xAB,0x14,0xA5,0x14,0xA0,0x14,0x9A,0x14
	.DB  0x95,0x14,0x8F,0x14,0x8A,0x14,0x84,0x14
	.DB  0x7F,0x14,0x79,0x14,0x74,0x14,0x6E,0x14
	.DB  0x69,0x14,0x63,0x14,0x5E,0x14,0x58,0x14
	.DB  0x53,0x14,0x4E,0x14,0x48,0x14,0x43,0x14
	.DB  0x3D,0x14,0x38,0x14,0x33,0x14,0x2D,0x14
	.DB  0x28,0x14,0x23,0x14,0x1D,0x14,0x18,0x14
	.DB  0x13,0x14,0xD,0x14,0x8,0x14,0x3,0x14
	.DB  0xFE,0x13,0xF8,0x13,0xF3,0x13,0xEE,0x13
	.DB  0xE9,0x13,0xE4,0x13,0xDE,0x13,0xD9,0x13
	.DB  0xD4,0x13,0xCF,0x13,0xCA,0x13,0xC5,0x13
	.DB  0xC0,0x13,0xBB,0x13,0xB5,0x13,0xB0,0x13
	.DB  0xAB,0x13,0xA6,0x13,0xA1,0x13,0x9C,0x13
	.DB  0x97,0x13,0x92,0x13,0x8D,0x13,0x88,0x13

_0x3:
	.DB  0x1
_0x4:
	.DB  0x1

__GLOBAL_INI_TBL:
	.DW  0x01
	.DW  _Acceleration
	.DW  _0x3*2

	.DW  0x01
	.DW  _Deceleration
	.DW  _0x4*2

_0xFFFFFFFF:
	.DW  0

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  MCUCR,R31
	OUT  MCUCR,R30
	STS  XMCRB,R30

;DISABLE WATCHDOG
	LDI  R31,0x18
	OUT  WDTCR,R31
	OUT  WDTCR,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,LOW(__SRAM_START)
	LDI  R27,HIGH(__SRAM_START)
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	LPM  R24,Z+
	LPM  R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	LPM  R26,Z+
	LPM  R27,Z+
	LPM  R0,Z+
	LPM  R1,Z+
	MOVW R22,R30
	MOVW R30,R0
__GLOBAL_INI_LOOP:
	LPM  R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0

	.DSEG
	.ORG 0x500

	.CSEG
;/* Written by : OZHAN KD
;   www.KnowledgePlus.ir
;
;   Oct 4, 2012
;   Timer3 mode changed to Fast PWM (due to problems in frequency change)
;   Modification in amplitude calculation
;
;   Jul 4, 2012
;   Bugs fixed
;
;   ---------------------------------------------------------------
;
;   V1.3 Jul 2011
;   Adjustable Acceleration-Deceleration
;   by ADC1 and ADC2 analog inputs
;   ADC1 sets acceleration (1s-255s)
;   ADC2 sets decceleration (1s-255s)
;   Adjusted values are times for 100Hz change in frequency
;
;   ---------------------------------------------------------------
;
;   V1.2 Jun 2011
;   Acceleration-Deceleration added
;
;   ---------------------------------------------------------------
;
;   V1.1 Feb 2011
;   Linear V/f curve added
;
;   ---------------------------------------------------------------
;
;   V1.0 Mar 2011
;   3 phase SPWM outputs on OCR1A,OCR1B,OCR1C
;   Carrier frequency = 15.6 KHz
;   Sine frequency range = 0.5-100Hz with 0.1Hz step
;   PWM resolution = 8bit
;   mega64 oscillator frequency = 8MHz
;   Frequency varies by applied voltage to ADC0(PF0)
;   ADC Vref = AVcc
;   ADC result<14 ---> output off
;   ADC result: 14-1009 ---> f: 0.5 Hz - 100 Hz
;   ADC result>1009 ---> f=100 Hz
;
;*/
;
;#include <mega64.h>
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x20
	.EQU __sm_mask=0x1C
	.EQU __sm_powerdown=0x10
	.EQU __sm_powersave=0x18
	.EQU __sm_standby=0x14
	.EQU __sm_ext_standby=0x1C
	.EQU __sm_adc_noise_red=0x08
	.SET power_ctrl_reg=mcucr
	#endif
;
;
;
;#define freq_Base 50U   // 50Hz
;#define freq_Boost 10U  // 10Hz
;#define A_Boost 25UL  //
;#define f_Base (freq_Base * 10U -5U)
;#define f_Boost (freq_Boost * 10U -5U)
;#define N (255UL-A_Boost)
;#define M (f_Base-f_Boost)
;
;unsigned char A_calc(unsigned char,unsigned char);
;volatile unsigned int speed=0;
;volatile unsigned int final_speed=0;
;volatile unsigned char Acceleration=1;

	.DSEG
;volatile unsigned char Deceleration=1;
;
;flash unsigned char sine[256]={
;0x80,0x83,0x86,0x89,0x8c,0x8f,0x92,0x95,0x98,0x9c,0x9f,0xa2,0xa5,0xa8,0xab,0xae,
;0xb0,0xb3,0xb6,0xb9,0xbc,0xbf,0xc1,0xc4,0xc7,0xc9,0xcc,0xce,0xd1,0xd3,0xd5,0xd8,
;0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xed,0xef,0xf0,0xf2,0xf3,0xf5,
;0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfc,0xfd,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,
;0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfe,0xfd,0xfc,0xfc,0xfb,0xfa,0xf9,0xf8,0xf7,
;0xf6,0xf5,0xf3,0xf2,0xf0,0xef,0xed,0xec,0xea,0xe8,0xe6,0xe4,0xe2,0xe0,0xde,0xdc,
;0xda,0xd8,0xd5,0xd3,0xd1,0xce,0xcc,0xc9,0xc7,0xc4,0xc1,0xbf,0xbc,0xb9,0xb6,0xb3,
;0xb0,0xae,0xab,0xa8,0xa5,0xa2,0x9f,0x9c,0x98,0x95,0x92,0x8f,0x8c,0x89,0x86,0x83,
;0x80,0x7c,0x79,0x76,0x73,0x70,0x6d,0x6a,0x67,0x63,0x60,0x5d,0x5a,0x57,0x54,0x51,
;0x4f,0x4c,0x49,0x46,0x43,0x40,0x3e,0x3b,0x38,0x36,0x33,0x31,0x2e,0x2c,0x2a,0x27,
;0x25,0x23,0x21,0x1f,0x1d,0x1b,0x19,0x17,0x15,0x13,0x12,0x10,0x0f,0x0d,0x0c,0x0a,
;0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x03,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x05,0x06,0x07,0x08,
;0x09,0x0a,0x0c,0x0d,0x0f,0x10,0x12,0x13,0x15,0x17,0x19,0x1b,0x1d,0x1f,0x21,0x23,
;0x25,0x27,0x2a,0x2c,0x2e,0x31,0x33,0x36,0x38,0x3b,0x3e,0x40,0x43,0x46,0x49,0x4c,
;0x4f,0x51,0x54,0x57,0x5a,0x5d,0x60,0x63,0x67,0x6a,0x6d,0x70,0x73,0x76,0x79,0x7c};
;
;flash unsigned int Timer_Value[996]={
;62500 , 52083 , 44643 , 39062 , 34722 , 31250 , 28409 , 26042,
;24038 , 22321 , 20833 , 19531 , 18382 , 17361 , 16447 , 15625,
;14881 , 14205 , 13587 , 13021 , 12500 , 12019 , 11574 , 11161,
;10776 , 10417 , 10081 , 9766 , 9470 , 9191 , 8929 , 8681,
;8446 , 8224 , 8013 , 7812 , 7622 , 7440 , 7267 , 7102,
;6944 , 6793 , 6649 , 6510 , 6378 , 6250 , 6127 , 6010,
;5896 , 5787 , 5682 , 5580 , 5482 , 5388 , 5297 , 5208,
;5123 , 5040 , 4960 , 4883 , 4808 , 4735 , 4664 , 4596,
;4529 , 4464 , 4401 , 4340 , 4281 , 4223 , 4167 , 4112,
;4058 , 4006 , 3956 , 3906 , 3858 , 3811 , 3765 , 3720,
;3676 , 3634 , 3592 , 3551 , 3511 , 3472 , 3434 , 3397,
;3360 , 3324 , 3289 , 3255 , 3222 , 3189 , 3157 , 3125,
;3094 , 3064 , 3034 , 3005 , 2976 , 2948 , 2921 , 2894,
;2867 , 2841 , 2815 , 2790 , 2765 , 2741 , 2717 , 2694,
;2671 , 2648 , 2626 , 2604 , 2583 , 2561 , 2541 , 2520,
;2500 , 2480 , 2461 , 2441 , 2422 , 2404 , 2385 , 2367,
;2350 , 2332 , 2315 , 2298 , 2281 , 2264 , 2248 , 2232,
;2216 , 2201 , 2185 , 2170 , 2155 , 2140 , 2126 , 2111,
;2097 , 2083 , 2070 , 2056 , 2042 , 2029 , 2016 , 2003,
;1990 , 1978 , 1965 , 1953 , 1941 , 1929 , 1917 , 1905,
;1894 , 1883 , 1871 , 1860 , 1849 , 1838 , 1827 , 1817,
;1806 , 1796 , 1786 , 1776 , 1766 , 1756 , 1746 , 1736,
;1727 , 1717 , 1708 , 1698 , 1689 , 1680 , 1671 , 1662,
;1653 , 1645 , 1636 , 1628 , 1619 , 1611 , 1603 , 1594,
;1586 , 1578 , 1570 , 3125 , 3109 , 3094 , 3079 , 3064,
;3049 , 3034 , 3019 , 3005 , 2990 , 2976 , 2962 , 2948,
;2934 , 2921 , 2907 , 2894 , 2880 , 2867 , 2854 , 2841,
;2828 , 2815 , 2803 , 2790 , 2778 , 2765 , 2753 , 2741,
;2729 , 2717 , 2706 , 2694 , 2682 , 2671 , 2660 , 2648,
;2637 , 2626 , 2615 , 2604 , 2593 , 2583 , 2572 , 2561,
;2551 , 2541 , 2530 , 2520 , 2510 , 2500 , 2490 , 2480,
;2470 , 2461 , 2451 , 2441 , 2432 , 2422 , 2413 , 2404,
;2395 , 2385 , 2376 , 2367 , 2358 , 2350 , 2341 , 2332,
;2323 , 2315 , 2306 , 2298 , 2289 , 2281 , 2273 , 2264,
;2256 , 2248 , 2240 , 2232 , 2224 , 2216 , 2208 , 2201,
;2193 , 2185 , 2178 , 2170 , 2163 , 2155 , 2148 , 2140,
;2133 , 2126 , 2119 , 2111 , 2104 , 2097 , 2090 , 2083,
;2076 , 2070 , 2063 , 2056 , 2049 , 2042 , 2036 , 2029,
;2023 , 2016 , 2010 , 2003 , 1997 , 1990 , 1984 , 1978,
;1972 , 1965 , 1959 , 1953 , 1947 , 1941 , 1935 , 1929,
;1923 , 1917 , 1911 , 1905 , 1900 , 1894 , 1888 , 1883,
;1877 , 1871 , 1866 , 1860 , 1855 , 1849 , 1844 , 1838,
;1833 , 1827 , 1822 , 1817 , 1812 , 1806 , 1801 , 1796,
;1791 , 1786 , 1781 , 1776 , 1771 , 1766 , 1761 , 1756,
;1751 , 1746 , 1741 , 1736 , 1731 , 1727 , 1722 , 1717,
;1712 , 1708 , 1703 , 1698 , 1694 , 1689 , 1685 , 1680,
;1676 , 1671 , 1667 , 1662 , 1658 , 1653 , 1649 , 1645,
;1640 , 1636 , 1632 , 1628 , 1623 , 1619 , 1615 , 1611,
;1607 , 1603 , 1598 , 1594 , 1590 , 1586 , 1582 , 1578,
;1574 , 1570 , 1566 , 3125 , 3117 , 3109 , 3102 , 3094,
;3086 , 3079 , 3071 , 3064 , 3056 , 3049 , 3041 , 3034,
;3027 , 3019 , 3012 , 3005 , 2998 , 2990 , 2983 , 2976,
;2969 , 2962 , 2955 , 2948 , 2941 , 2934 , 2927 , 2921,
;2914 , 2907 , 2900 , 2894 , 2887 , 2880 , 2874 , 2867,
;2860 , 2854 , 2847 , 2841 , 2834 , 2828 , 2822 , 2815,
;2809 , 2803 , 2796 , 2790 , 2784 , 2778 , 2772 , 2765,
;2759 , 2753 , 2747 , 2741 , 2735 , 2729 , 2723 , 2717,
;2711 , 2706 , 2700 , 2694 , 2688 , 2682 , 2677 , 2671,
;2665 , 2660 , 2654 , 2648 , 2643 , 2637 , 2632 , 2626,
;2621 , 2615 , 2610 , 2604 , 2599 , 2593 , 2588 , 2583,
;2577 , 2572 , 2567 , 2561 , 2556 , 2551 , 2546 , 2541,
;2535 , 2530 , 2525 , 2520 , 2515 , 2510 , 2505 , 2500,
;2495 , 2490 , 2485 , 2480 , 2475 , 2470 , 2465 , 2461,
;2456 , 2451 , 2446 , 2441 , 2437 , 2432 , 2427 , 2422,
;2418 , 2413 , 2408 , 2404 , 2399 , 2395 , 2390 , 2385,
;2381 , 2376 , 2372 , 2367 , 2363 , 2358 , 2354 , 2350,
;2345 , 2341 , 2336 , 2332 , 2328 , 2323 , 2319 , 2315,
;2311 , 2306 , 2302 , 2298 , 2294 , 2289 , 2285 , 2281,
;2277 , 2273 , 2269 , 2264 , 2260 , 2256 , 2252 , 2248,
;2244 , 2240 , 2236 , 2232 , 2228 , 2224 , 2220 , 2216,
;2212 , 2208 , 2205 , 2201 , 2197 , 2193 , 2189 , 2185,
;2182 , 2178 , 2174 , 2170 , 2166 , 2163 , 2159 , 2155,
;2151 , 2148 , 2144 , 2140 , 2137 , 2133 , 2129 , 2126,
;2122 , 2119 , 2115 , 2111 , 2108 , 2104 , 2101 , 2097,
;2094 , 2090 , 2087 , 4167 , 4160 , 4153 , 4146 , 4139,
;4132 , 4125 , 4119 , 4112 , 4105 , 4098 , 4092 , 4085,
;4078 , 4072 , 4065 , 4058 , 4052 , 4045 , 4039 , 4032,
;4026 , 4019 , 4013 , 4006 , 4000 , 3994 , 3987 , 3981,
;3975 , 3968 , 3962 , 3956 , 3949 , 3943 , 3937 , 3931,
;3925 , 3918 , 3912 , 3906 , 3900 , 3894 , 3888 , 3882,
;3876 , 3870 , 3864 , 3858 , 3852 , 3846 , 3840 , 3834,
;3828 , 3823 , 3817 , 3811 , 3805 , 3799 , 3794 , 3788,
;3782 , 3776 , 3771 , 3765 , 3759 , 3754 , 3748 , 3743,
;3737 , 3731 , 3726 , 3720 , 3715 , 3709 , 3704 , 3698,
;3693 , 3687 , 3682 , 3676 , 3671 , 3666 , 3660 , 3655,
;3650 , 3644 , 3639 , 3634 , 3628 , 3623 , 3618 , 3613,
;3608 , 3602 , 3597 , 3592 , 3587 , 3582 , 3577 , 3571,
;3566 , 3561 , 3556 , 3551 , 3546 , 3541 , 3536 , 3531,
;3526 , 3521 , 3516 , 3511 , 3506 , 3501 , 3497 , 3492,
;3487 , 3482 , 3477 , 3472 , 3467 , 3463 , 3458 , 3453,
;3448 , 3444 , 3439 , 3434 , 3429 , 3425 , 3420 , 3415,
;3411 , 3406 , 3401 , 3397 , 3392 , 3388 , 3383 , 3378,
;3374 , 3369 , 3365 , 3360 , 3356 , 3351 , 3347 , 3342,
;3338 , 3333 , 3329 , 3324 , 3320 , 3316 , 3311 , 3307,
;3303 , 3298 , 3294 , 3289 , 3285 , 3281 , 3277 , 3272,
;3268 , 3264 , 3259 , 3255 , 3251 , 3247 , 3243 , 3238,
;3234 , 3230 , 3226 , 3222 , 3218 , 3213 , 3209 , 3205,
;3201 , 3197 , 3193 , 3189 , 3185 , 3181 , 3177 , 3173,
;3169 , 3165 , 3161 , 3157 , 3153 , 3149 , 3145 , 3141,
;3137 , 3133 , 3129 , 6250 , 6242 , 6234 , 6227 , 6219,
;6211 , 6203 , 6196 , 6188 , 6180 , 6173 , 6165 , 6158,
;6150 , 6143 , 6135 , 6127 , 6120 , 6112 , 6105 , 6098,
;6090 , 6083 , 6075 , 6068 , 6061 , 6053 , 6046 , 6039,
;6031 , 6024 , 6017 , 6010 , 6002 , 5995 , 5988 , 5981,
;5974 , 5967 , 5959 , 5952 , 5945 , 5938 , 5931 , 5924,
;5917 , 5910 , 5903 , 5896 , 5889 , 5882 , 5875 , 5869,
;5862 , 5855 , 5848 , 5841 , 5834 , 5828 , 5821 , 5814,
;5807 , 5800 , 5794 , 5787 , 5780 , 5774 , 5767 , 5760,
;5754 , 5747 , 5741 , 5734 , 5727 , 5721 , 5714 , 5708,
;5701 , 5695 , 5688 , 5682 , 5675 , 5669 , 5663 , 5656,
;5650 , 5643 , 5637 , 5631 , 5624 , 5618 , 5612 , 5605,
;5599 , 5593 , 5587 , 5580 , 5574 , 5568 , 5562 , 5556,
;5549 , 5543 , 5537 , 5531 , 5525 , 5519 , 5513 , 5507,
;5501 , 5495 , 5488 , 5482 , 5476 , 5470 , 5464 , 5459,
;5453 , 5447 , 5441 , 5435 , 5429 , 5423 , 5417 , 5411,
;5405 , 5400 , 5394 , 5388 , 5382 , 5376 , 5371 , 5365,
;5359 , 5353 , 5348 , 5342 , 5336 , 5330 , 5325 , 5319,
;5313 , 5308 , 5302 , 5297 , 5291 , 5285 , 5280 , 5274,
;5269 , 5263 , 5258 , 5252 , 5247 , 5241 , 5236 , 5230,
;5225 , 5219 , 5214 , 5208 , 5203 , 5198 , 5192 , 5187,
;5181 , 5176 , 5171 , 5165 , 5160 , 5155 , 5149 , 5144,
;5139 , 5133 , 5128 , 5123 , 5118 , 5112 , 5107 , 5102,
;5097 , 5092 , 5086 , 5081 , 5076 , 5071 , 5066 , 5061,
;5056 , 5051 , 5045 , 5040 , 5035 , 5030 , 5025 , 5020,
;5015 , 5010 , 5005 , 5000};
;
;interrupt [TIM3_COMPA] void timer3_comparea_isr(void)
; 0000 00D2 {

	.CSEG
_timer3_comparea_isr:
	ST   -Y,R0
	ST   -Y,R1
	ST   -Y,R15
	ST   -Y,R22
	ST   -Y,R23
	ST   -Y,R24
	ST   -Y,R25
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
; 0000 00D3  static unsigned char index=0;
; 0000 00D4  if (speed>795)index+=16;
	RCALL SUBOPT_0x0
	CPI  R26,LOW(0x31C)
	LDI  R30,HIGH(0x31C)
	CPC  R27,R30
	BRLO _0x5
	LDS  R30,_index_S0000000000
	SUBI R30,-LOW(16)
	RJMP _0x30
; 0000 00D5  else if(speed>595)index+=8;
_0x5:
	RCALL SUBOPT_0x0
	CPI  R26,LOW(0x254)
	LDI  R30,HIGH(0x254)
	CPC  R27,R30
	BRLO _0x7
	LDS  R30,_index_S0000000000
	SUBI R30,-LOW(8)
	RJMP _0x30
; 0000 00D6  else if(speed>395)index+=4;
_0x7:
	RCALL SUBOPT_0x0
	CPI  R26,LOW(0x18C)
	LDI  R30,HIGH(0x18C)
	CPC  R27,R30
	BRLO _0x9
	LDS  R30,_index_S0000000000
	SUBI R30,-LOW(4)
	RJMP _0x30
; 0000 00D7  else if(speed>195)index+=2;
_0x9:
	RCALL SUBOPT_0x0
	CPI  R26,LOW(0xC4)
	LDI  R30,HIGH(0xC4)
	CPC  R27,R30
	BRLO _0xB
	LDS  R30,_index_S0000000000
	SUBI R30,-LOW(2)
	RJMP _0x30
; 0000 00D8  else ++index;
_0xB:
	LDS  R30,_index_S0000000000
	SUBI R30,-LOW(1)
_0x30:
	STS  _index_S0000000000,R30
; 0000 00D9 
; 0000 00DA  if(speed>=f_Base)
	RCALL SUBOPT_0x0
	CPI  R26,LOW(0x1EF)
	LDI  R30,HIGH(0x1EF)
	CPC  R27,R30
	BRLO _0xD
; 0000 00DB  {
; 0000 00DC   OCR1A=sine[index];
	RCALL SUBOPT_0x1
	RCALL SUBOPT_0x2
	RCALL SUBOPT_0x3
; 0000 00DD   OCR1B=sine[(unsigned char)(index+84U)];
	RCALL SUBOPT_0x4
	RCALL SUBOPT_0x2
	RCALL SUBOPT_0x5
; 0000 00DE   OCR1CL=sine[(unsigned char)(index+170U)];
	RCALL SUBOPT_0x6
	STS  120,R30
; 0000 00DF  }
; 0000 00E0  else if (speed<=f_Boost)
	RJMP _0xE
_0xD:
	RCALL SUBOPT_0x0
	CPI  R26,LOW(0x60)
	LDI  R30,HIGH(0x60)
	CPC  R27,R30
	BRSH _0xF
; 0000 00E1  {
; 0000 00E2   OCR1A=A_calc(sine[index],A_Boost);
	RCALL SUBOPT_0x1
	RCALL SUBOPT_0x7
	RCALL SUBOPT_0x3
; 0000 00E3   OCR1B=A_calc(sine[(unsigned char)(index+84U)],A_Boost);
	RCALL SUBOPT_0x4
	RCALL SUBOPT_0x7
	RCALL SUBOPT_0x5
; 0000 00E4   OCR1CL=A_calc(sine[(unsigned char)(index+170U)],A_Boost);
	RCALL SUBOPT_0x6
	ST   -Y,R30
	LDI  R30,LOW(25)
	ST   -Y,R30
	RCALL _A_calc
	STS  120,R30
; 0000 00E5  }
; 0000 00E6  else
	RJMP _0x10
_0xF:
; 0000 00E7  {
; 0000 00E8   unsigned long A;
; 0000 00E9   A=((N*(unsigned long)(speed-f_Boost))/M)+A_Boost;
	SBIW R28,4
;	A -> Y+0
	RCALL SUBOPT_0x8
	SUBI R30,LOW(95)
	SBCI R31,HIGH(95)
	CLR  R22
	CLR  R23
	__GETD2N 0xE6
	CALL __MULD12U
	MOVW R26,R30
	MOVW R24,R22
	__GETD1N 0x190
	CALL __DIVD21U
	__ADDD1N 25
	CALL __PUTD1S0
; 0000 00EA   OCR1A=A_calc(sine[index],(unsigned char)A);
	RCALL SUBOPT_0x1
	RCALL SUBOPT_0x9
	RCALL SUBOPT_0x3
; 0000 00EB   OCR1B=A_calc(sine[(unsigned char)(index+84U)],(unsigned char)A);
	RCALL SUBOPT_0x4
	RCALL SUBOPT_0x9
	RCALL SUBOPT_0x5
; 0000 00EC   OCR1CL=A_calc(sine[(unsigned char)(index+170U)],(unsigned char)A);
	RCALL SUBOPT_0x6
	ST   -Y,R30
	LDD  R30,Y+1
	ST   -Y,R30
	RCALL _A_calc
	STS  120,R30
; 0000 00ED  }
	ADIW R28,4
_0x10:
_0xE:
; 0000 00EE }
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R25,Y+
	LD   R24,Y+
	LD   R23,Y+
	LD   R22,Y+
	LD   R15,Y+
	LD   R1,Y+
	LD   R0,Y+
	RETI
;
;interrupt [ADC_INT] void adc_isr(void)
; 0000 00F1 {
_adc_isr:
	RCALL SUBOPT_0xA
; 0000 00F2  static unsigned int adc_temp=0;
; 0000 00F3  static unsigned char n=0,adc_select=0;
; 0000 00F4  unsigned int temp;
; 0000 00F5 
; 0000 00F6  adc_temp+=ADCW;
	ST   -Y,R17
	ST   -Y,R16
;	temp -> R16,R17
	IN   R30,0x4
	IN   R31,0x4+1
	LDS  R26,_adc_temp_S0000001000
	LDS  R27,_adc_temp_S0000001000+1
	ADD  R30,R26
	ADC  R31,R27
	STS  _adc_temp_S0000001000,R30
	STS  _adc_temp_S0000001000+1,R31
; 0000 00F7 
; 0000 00F8  if(++n==64)
	LDS  R26,_n_S0000001000
	SUBI R26,-LOW(1)
	STS  _n_S0000001000,R26
	CPI  R26,LOW(0x40)
	BREQ PC+3
	JMP _0x11
; 0000 00F9  {
; 0000 00FA   n=0;
	LDI  R30,LOW(0)
	STS  _n_S0000001000,R30
; 0000 00FB   temp=(adc_temp>>6);
	LDS  R26,_adc_temp_S0000001000
	LDS  R27,_adc_temp_S0000001000+1
	LDI  R30,LOW(6)
	CALL __LSRW12
	MOVW R16,R30
; 0000 00FC   adc_temp=0;
	LDI  R30,LOW(0)
	STS  _adc_temp_S0000001000,R30
	STS  _adc_temp_S0000001000+1,R30
; 0000 00FD   switch (adc_select)
	LDS  R30,_adc_select_S0000001000
	LDI  R31,0
; 0000 00FE   {
; 0000 00FF   case 0:
	SBIW R30,0
	BRNE _0x15
; 0000 0100    if(temp<14)final_speed=0;
	__CPWRN 16,17,14
	BRSH _0x16
	LDI  R30,LOW(0)
	STS  _final_speed,R30
	STS  _final_speed+1,R30
; 0000 0101    else if (temp<1010)final_speed=temp-13;
	RJMP _0x17
_0x16:
	__CPWRN 16,17,1010
	BRSH _0x18
	MOVW R30,R16
	SBIW R30,13
	RJMP _0x31
; 0000 0102    else final_speed=996;
_0x18:
	LDI  R30,LOW(996)
	LDI  R31,HIGH(996)
_0x31:
	STS  _final_speed,R30
	STS  _final_speed+1,R31
; 0000 0103    ADMUX=(1<<REFS0)|(1<<MUX0);
_0x17:
	LDI  R30,LOW(65)
	OUT  0x7,R30
; 0000 0104    adc_select++;
	LDS  R30,_adc_select_S0000001000
	SUBI R30,-LOW(1)
	RJMP _0x32
; 0000 0105    break;
; 0000 0106 
; 0000 0107   case 1:
_0x15:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x1A
; 0000 0108    if(temp) Acceleration=(temp>>2);
	MOV  R0,R16
	OR   R0,R17
	BREQ _0x1B
	MOVW R30,R16
	CALL __LSRW2
	RJMP _0x33
; 0000 0109    else Acceleration=1;
_0x1B:
	LDI  R30,LOW(1)
_0x33:
	STS  _Acceleration,R30
; 0000 010A    ADMUX=(1<<REFS0)|(1<<MUX1);
	LDI  R30,LOW(66)
	OUT  0x7,R30
; 0000 010B    adc_select++;
	LDS  R30,_adc_select_S0000001000
	SUBI R30,-LOW(1)
	RJMP _0x32
; 0000 010C    break;
; 0000 010D 
; 0000 010E   case 2:
_0x1A:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x14
; 0000 010F    if(temp) Deceleration=(temp>>2);
	MOV  R0,R16
	OR   R0,R17
	BREQ _0x1E
	MOVW R30,R16
	CALL __LSRW2
	RJMP _0x34
; 0000 0110    else Deceleration=1;
_0x1E:
	LDI  R30,LOW(1)
_0x34:
	STS  _Deceleration,R30
; 0000 0111    ADMUX=(1<<REFS0);
	LDI  R30,LOW(64)
	OUT  0x7,R30
; 0000 0112    adc_select=0;
	LDI  R30,LOW(0)
_0x32:
	STS  _adc_select_S0000001000,R30
; 0000 0113   }
_0x14:
; 0000 0114  }
; 0000 0115  ADCSRA|=(1<<ADSC);
_0x11:
	SBI  0x6,6
; 0000 0116 }
	LD   R16,Y+
	LD   R17,Y+
	RJMP _0x35
;
;void main(void)
; 0000 0119 {
_main:
; 0000 011A  DDRB=(1<<PORTB7)|(1<<PORTB6)|(1<<PORTB5);
	LDI  R30,LOW(224)
	OUT  0x17,R30
; 0000 011B  ADMUX=(1<<REFS0);
	LDI  R30,LOW(64)
	OUT  0x7,R30
; 0000 011C  ADCSRA=(1<<ADEN)|(1<<ADSC)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1);
	LDI  R30,LOW(206)
	OUT  0x6,R30
; 0000 011D  OCR1A=sine[0];
	LDI  R30,LOW(_sine*2)
	LDI  R31,HIGH(_sine*2)
	LPM  R30,Z
	LDI  R31,0
	OUT  0x2A+1,R31
	OUT  0x2A,R30
; 0000 011E  OCR1B=sine[84];
	__POINTW1FN _sine,84
	LPM  R30,Z
	LDI  R31,0
	OUT  0x28+1,R31
	OUT  0x28,R30
; 0000 011F  OCR1CL=sine[170];
	__POINTW1FN _sine,170
	LPM  R30,Z
	STS  120,R30
; 0000 0120  TCCR1A=(1<<WGM10);
	LDI  R30,LOW(1)
	OUT  0x2F,R30
; 0000 0121  TCCR1B=(1<<CS10);
	OUT  0x2E,R30
; 0000 0122  TCCR3A=(1<<WGM31)|(1<<WGM30);
	LDI  R30,LOW(3)
	STS  139,R30
; 0000 0123  TCCR3B=(1<<WGM33)|(1<<WGM32);
	LDI  R30,LOW(24)
	STS  138,R30
; 0000 0124  OCR2=124; // 1ms
	LDI  R30,LOW(124)
	OUT  0x23,R30
; 0000 0125  TCCR2=(1<<WGM21)|(1<<CS21)|(1<<CS20);
	LDI  R30,LOW(11)
	OUT  0x25,R30
; 0000 0126  TIMSK=(1<<OCIE2);
	LDI  R30,LOW(128)
	OUT  0x37,R30
; 0000 0127  #asm("sei")
	sei
; 0000 0128  while (1);
_0x20:
	RJMP _0x20
; 0000 0129 }
_0x23:
	RJMP _0x23
;
;unsigned char A_calc(unsigned char sine, unsigned char Ain)
; 0000 012C {
_A_calc:
; 0000 012D  unsigned int sine_temp;
; 0000 012E  unsigned char sine1;
; 0000 012F  sine1=((sine<128)?~sine:sine);
	CALL __SAVELOCR4
;	sine -> Y+5
;	Ain -> Y+4
;	sine_temp -> R16,R17
;	sine1 -> R19
	LDD  R26,Y+5
	CPI  R26,LOW(0x80)
	BRSH _0x24
	LDD  R30,Y+5
	COM  R30
	RJMP _0x25
_0x24:
	LDD  R30,Y+5
_0x25:
	MOV  R19,R30
; 0000 0130  sine_temp=(((unsigned int)sine1)<<1);
	MOV  R30,R19
	LDI  R31,0
	LSL  R30
	ROL  R31
	MOVW R16,R30
; 0000 0131  sine_temp-=255;
	__SUBWRN 16,17,255
; 0000 0132  sine_temp*=Ain;
	LDD  R30,Y+4
	LDI  R31,0
	MOVW R26,R16
	CALL __MULW12U
	MOVW R16,R30
; 0000 0133  sine_temp>>=8;
	MOV  R16,R17
	CLR  R17
; 0000 0134  sine_temp+=255;
	__ADDWRN 16,17,255
; 0000 0135  sine_temp>>=1;
	LSR  R17
	ROR  R16
; 0000 0136  sine_temp++;
	__ADDWRN 16,17,1
; 0000 0137  sine1=(unsigned char)sine_temp;
	MOV  R19,R16
; 0000 0138  if (sine<128) sine1=~sine1;
	LDD  R26,Y+5
	CPI  R26,LOW(0x80)
	BRSH _0x27
	COM  R19
; 0000 0139  return sine1;
_0x27:
	MOV  R30,R19
	CALL __LOADLOCR4
	ADIW R28,6
	RET
; 0000 013A }
;
;interrupt [TIM2_COMP] void timer2_compare_isr(void)
; 0000 013D {
_timer2_compare_isr:
	RCALL SUBOPT_0xA
; 0000 013E  static unsigned char Acceleration_counter=0;
; 0000 013F  static unsigned char Deceleration_counter=0;
; 0000 0140  if(speed==final_speed)
	RCALL SUBOPT_0xB
	CP   R30,R26
	CPC  R31,R27
	BRNE _0x28
; 0000 0141  {
; 0000 0142   Acceleration_counter=0;
	LDI  R30,LOW(0)
	STS  _Acceleration_counter_S0000004000,R30
; 0000 0143   Deceleration_counter=0;
	STS  _Deceleration_counter_S0000004000,R30
; 0000 0144  }
; 0000 0145  else if(speed<final_speed)
	RJMP _0x29
_0x28:
	RCALL SUBOPT_0xB
	CP   R26,R30
	CPC  R27,R31
	BRSH _0x2A
; 0000 0146  {
; 0000 0147   Deceleration_counter=0;
	LDI  R30,LOW(0)
	STS  _Deceleration_counter_S0000004000,R30
; 0000 0148   if(++Acceleration_counter==Acceleration)
	LDS  R26,_Acceleration_counter_S0000004000
	SUBI R26,-LOW(1)
	STS  _Acceleration_counter_S0000004000,R26
	LDS  R30,_Acceleration
	CP   R30,R26
	BRNE _0x2B
; 0000 0149   {
; 0000 014A    Acceleration_counter=0;
	LDI  R30,LOW(0)
	STS  _Acceleration_counter_S0000004000,R30
; 0000 014B    speed++;
	LDI  R26,LOW(_speed)
	LDI  R27,HIGH(_speed)
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	SBIW R30,1
; 0000 014C    }
; 0000 014D   }
_0x2B:
; 0000 014E  else
	RJMP _0x2C
_0x2A:
; 0000 014F  {
; 0000 0150   Acceleration_counter=0;
	LDI  R30,LOW(0)
	STS  _Acceleration_counter_S0000004000,R30
; 0000 0151   if(++Deceleration_counter==Deceleration)
	LDS  R26,_Deceleration_counter_S0000004000
	SUBI R26,-LOW(1)
	STS  _Deceleration_counter_S0000004000,R26
	LDS  R30,_Deceleration
	CP   R30,R26
	BRNE _0x2D
; 0000 0152   {
; 0000 0153    Deceleration_counter=0;
	LDI  R30,LOW(0)
	STS  _Deceleration_counter_S0000004000,R30
; 0000 0154    speed--;
	LDI  R26,LOW(_speed)
	LDI  R27,HIGH(_speed)
	LD   R30,X+
	LD   R31,X+
	SBIW R30,1
	ST   -X,R31
	ST   -X,R30
	ADIW R30,1
; 0000 0155   }
; 0000 0156  }
_0x2D:
_0x2C:
_0x29:
; 0000 0157 
; 0000 0158  if(speed)
	RCALL SUBOPT_0x8
	SBIW R30,0
	BREQ _0x2E
; 0000 0159  {
; 0000 015A   OCR3AH=(unsigned char)((Timer_Value[speed-1]-1)>>8);
	RCALL SUBOPT_0xC
	MOV  R30,R31
	LDI  R31,0
	STS  135,R30
; 0000 015B   OCR3AL=(unsigned char)(Timer_Value[speed-1]-1);
	RCALL SUBOPT_0xC
	STS  134,R30
; 0000 015C   TCCR1A|=((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
	IN   R30,0x2F
	ORI  R30,LOW(0xA8)
	OUT  0x2F,R30
; 0000 015D   TCCR3B|=(1<<CS30);
	LDS  R30,138
	ORI  R30,1
	STS  138,R30
; 0000 015E   ETIMSK|=(1<<OCIE3A);
	LDS  R30,125
	ORI  R30,0x10
	STS  125,R30
; 0000 015F  }
; 0000 0160  else
	RJMP _0x2F
_0x2E:
; 0000 0161  {
; 0000 0162   TCCR1A&=~((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
	IN   R30,0x2F
	ANDI R30,LOW(0x57)
	OUT  0x2F,R30
; 0000 0163   TCCR3B&=~(1<<CS30);
	LDS  R30,138
	ANDI R30,0xFE
	STS  138,R30
; 0000 0164   ETIMSK&=~(1<<OCIE3A);
	LDS  R30,125
	ANDI R30,0xEF
	STS  125,R30
; 0000 0165   ETIFR=(1<<OCF3A);
	LDI  R30,LOW(16)
	STS  124,R30
; 0000 0166  }
_0x2F:
; 0000 0167 }
_0x35:
	LD   R30,Y+
	OUT  SREG,R30
	LD   R31,Y+
	LD   R30,Y+
	LD   R27,Y+
	LD   R26,Y+
	LD   R0,Y+
	RETI

	.DSEG
_speed:
	.BYTE 0x2
_final_speed:
	.BYTE 0x2
_Acceleration:
	.BYTE 0x1
_Deceleration:
	.BYTE 0x1
_index_S0000000000:
	.BYTE 0x1
_adc_temp_S0000001000:
	.BYTE 0x2
_n_S0000001000:
	.BYTE 0x1
_adc_select_S0000001000:
	.BYTE 0x1
_Acceleration_counter_S0000004000:
	.BYTE 0x1
_Deceleration_counter_S0000004000:
	.BYTE 0x1

	.CSEG
;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
SUBOPT_0x0:
	LDS  R26,_speed
	LDS  R27,_speed+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
SUBOPT_0x1:
	LDS  R30,_index_S0000000000
	LDI  R31,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x2:
	SUBI R30,LOW(-_sine*2)
	SBCI R31,HIGH(-_sine*2)
	LPM  R30,Z
	LDI  R31,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x3:
	OUT  0x2A+1,R31
	OUT  0x2A,R30
	RJMP SUBOPT_0x1

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x4:
	SUBI R30,LOW(-84)
	SBCI R31,HIGH(-84)
	LDI  R31,0
	LDI  R31,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x5:
	OUT  0x28+1,R31
	OUT  0x28,R30
	RJMP SUBOPT_0x1

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0x6:
	SUBI R30,LOW(-170)
	SBCI R31,HIGH(-170)
	LDI  R31,0
	LDI  R31,0
	SUBI R30,LOW(-_sine*2)
	SBCI R31,HIGH(-_sine*2)
	LPM  R30,Z
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x7:
	SUBI R30,LOW(-_sine*2)
	SBCI R31,HIGH(-_sine*2)
	LPM  R30,Z
	ST   -Y,R30
	LDI  R30,LOW(25)
	ST   -Y,R30
	RCALL _A_calc
	LDI  R31,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x8:
	LDS  R30,_speed
	LDS  R31,_speed+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
SUBOPT_0x9:
	SUBI R30,LOW(-_sine*2)
	SBCI R31,HIGH(-_sine*2)
	LPM  R30,Z
	ST   -Y,R30
	LDD  R30,Y+1
	ST   -Y,R30
	RCALL _A_calc
	LDI  R31,0
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0xA:
	ST   -Y,R0
	ST   -Y,R26
	ST   -Y,R27
	ST   -Y,R30
	ST   -Y,R31
	IN   R30,SREG
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xB:
	LDS  R30,_final_speed
	LDS  R31,_final_speed+1
	RJMP SUBOPT_0x0

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0xC:
	RCALL SUBOPT_0x8
	SBIW R30,1
	LDI  R26,LOW(_Timer_Value*2)
	LDI  R27,HIGH(_Timer_Value*2)
	LSL  R30
	ROL  R31
	ADD  R30,R26
	ADC  R31,R27
	CALL __GETW1PF
	SBIW R30,1
	RET


	.CSEG
__LSRW12:
	TST  R30
	MOV  R0,R30
	MOVW R30,R26
	BREQ __LSRW12R
__LSRW12L:
	LSR  R31
	ROR  R30
	DEC  R0
	BRNE __LSRW12L
__LSRW12R:
	RET

__LSRW2:
	LSR  R31
	ROR  R30
	LSR  R31
	ROR  R30
	RET

__MULW12U:
	MUL  R31,R26
	MOV  R31,R0
	MUL  R30,R27
	ADD  R31,R0
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	RET

__MULD12U:
	MUL  R23,R26
	MOV  R23,R0
	MUL  R22,R27
	ADD  R23,R0
	MUL  R31,R24
	ADD  R23,R0
	MUL  R30,R25
	ADD  R23,R0
	MUL  R22,R26
	MOV  R22,R0
	ADD  R23,R1
	MUL  R31,R27
	ADD  R22,R0
	ADC  R23,R1
	MUL  R30,R24
	ADD  R22,R0
	ADC  R23,R1
	CLR  R24
	MUL  R31,R26
	MOV  R31,R0
	ADD  R22,R1
	ADC  R23,R24
	MUL  R30,R27
	ADD  R31,R0
	ADC  R22,R1
	ADC  R23,R24
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	ADC  R22,R24
	ADC  R23,R24
	RET

__DIVD21U:
	PUSH R19
	PUSH R20
	PUSH R21
	CLR  R0
	CLR  R1
	CLR  R20
	CLR  R21
	LDI  R19,32
__DIVD21U1:
	LSL  R26
	ROL  R27
	ROL  R24
	ROL  R25
	ROL  R0
	ROL  R1
	ROL  R20
	ROL  R21
	SUB  R0,R30
	SBC  R1,R31
	SBC  R20,R22
	SBC  R21,R23
	BRCC __DIVD21U2
	ADD  R0,R30
	ADC  R1,R31
	ADC  R20,R22
	ADC  R21,R23
	RJMP __DIVD21U3
__DIVD21U2:
	SBR  R26,1
__DIVD21U3:
	DEC  R19
	BRNE __DIVD21U1
	MOVW R30,R26
	MOVW R22,R24
	MOVW R26,R0
	MOVW R24,R20
	POP  R21
	POP  R20
	POP  R19
	RET

__GETW1PF:
	LPM  R0,Z+
	LPM  R31,Z
	MOV  R30,R0
	RET

__PUTD1S0:
	ST   Y,R30
	STD  Y+1,R31
	STD  Y+2,R22
	STD  Y+3,R23
	RET

__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

;END OF CODE MARKER
__END_OF_CODE:
