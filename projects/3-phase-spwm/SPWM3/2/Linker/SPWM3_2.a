;/* Written by : OZHAN KD
;   www.KnowledgePlus.ir
;
;   Oct 4, 2012
;   Timer3 mode changed to Fast PWM (due to problems in frequency change)
;   Modification in amplitude calculation
;
;   Jul 4, 2012
;   Bugs fixed
;
;   V1.2 Jun 2011
;   Acceleration-Deceleration added
;
;   V1.1 Feb 2011
;   Linear V/f curve added
;
;   V1.0 Mar 2011
;   3 phase SPWM outputs on OCR1A,OCR1B,OCR1C
;   Carrier frequency = 15.6 KHz
;   Sine frequency range = 0.5-100Hz with 0.1Hz step
;   PWM resolution = 8bit
;   mega64 oscillator frequency = 8MHz
;   Frequency varies by applied voltage to ADC0(PF0)
;   ADC Vref = AVcc
;   ADC result<14 ---> output off
;   ADC result: 14-1009 ---> f: 0.5 Hz - 100 Hz
;   ADC result>1009 ---> f=100 Hz
;*/
;
;#include <mega64.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x1C
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x18
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x14
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x1C
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;
;#define Acceleration 5 // 5 means 5 seconds for 100Hz change in frequency
;
;#define freq_Base 50U   // 50Hz
;#define freq_Boost 10U  // 10Hz
;#define A_Boost 25UL  //
;#define f_Base (freq_Base * 10U -5U)
;#define f_Boost (freq_Boost * 10U -5U)
;#define N (255UL-A_Boost)
;#define M (f_Base-f_Boost)
;
;unsigned char A_calc(unsigned char,unsigned char);
;volatile unsigned int speed=0;
;volatile unsigned int final_speed=0;
;
;flash unsigned char sine[256]={
;0x80,0x83,0x86,0x89,0x8c,0x8f,0x92,0x95,0x98,0x9c,0x9f,0xa2,0xa5,0xa8,0xab,0xae,
;0xb0,0xb3,0xb6,0xb9,0xbc,0xbf,0xc1,0xc4,0xc7,0xc9,0xcc,0xce,0xd1,0xd3,0xd5,0xd8,
;0xda,0xdc,0xde,0xe0,0xe2,0xe4,0xe6,0xe8,0xea,0xec,0xed,0xef,0xf0,0xf2,0xf3,0xf5,
;0xf6,0xf7,0xf8,0xf9,0xfa,0xfb,0xfc,0xfc,0xfd,0xfe,0xfe,0xff,0xff,0xff,0xff,0xff,
;0xff,0xff,0xff,0xff,0xff,0xff,0xfe,0xfe,0xfd,0xfc,0xfc,0xfb,0xfa,0xf9,0xf8,0xf7,
;0xf6,0xf5,0xf3,0xf2,0xf0,0xef,0xed,0xec,0xea,0xe8,0xe6,0xe4,0xe2,0xe0,0xde,0xdc,
;0xda,0xd8,0xd5,0xd3,0xd1,0xce,0xcc,0xc9,0xc7,0xc4,0xc1,0xbf,0xbc,0xb9,0xb6,0xb3,
;0xb0,0xae,0xab,0xa8,0xa5,0xa2,0x9f,0x9c,0x98,0x95,0x92,0x8f,0x8c,0x89,0x86,0x83,
;0x80,0x7c,0x79,0x76,0x73,0x70,0x6d,0x6a,0x67,0x63,0x60,0x5d,0x5a,0x57,0x54,0x51,
;0x4f,0x4c,0x49,0x46,0x43,0x40,0x3e,0x3b,0x38,0x36,0x33,0x31,0x2e,0x2c,0x2a,0x27,
;0x25,0x23,0x21,0x1f,0x1d,0x1b,0x19,0x17,0x15,0x13,0x12,0x10,0x0f,0x0d,0x0c,0x0a,
;0x09,0x08,0x07,0x06,0x05,0x04,0x03,0x03,0x02,0x01,0x01,0x00,0x00,0x00,0x00,0x00,
;0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x02,0x03,0x03,0x04,0x05,0x06,0x07,0x08,
;0x09,0x0a,0x0c,0x0d,0x0f,0x10,0x12,0x13,0x15,0x17,0x19,0x1b,0x1d,0x1f,0x21,0x23,
;0x25,0x27,0x2a,0x2c,0x2e,0x31,0x33,0x36,0x38,0x3b,0x3e,0x40,0x43,0x46,0x49,0x4c,
;0x4f,0x51,0x54,0x57,0x5a,0x5d,0x60,0x63,0x67,0x6a,0x6d,0x70,0x73,0x76,0x79,0x7c};
;
;flash unsigned int Timer_Value[996]={
;62500 , 52083 , 44643 , 39062 , 34722 , 31250 , 28409 , 26042,
;24038 , 22321 , 20833 , 19531 , 18382 , 17361 , 16447 , 15625,
;14881 , 14205 , 13587 , 13021 , 12500 , 12019 , 11574 , 11161,
;10776 , 10417 , 10081 , 9766 , 9470 , 9191 , 8929 , 8681,
;8446 , 8224 , 8013 , 7812 , 7622 , 7440 , 7267 , 7102,
;6944 , 6793 , 6649 , 6510 , 6378 , 6250 , 6127 , 6010,
;5896 , 5787 , 5682 , 5580 , 5482 , 5388 , 5297 , 5208,
;5123 , 5040 , 4960 , 4883 , 4808 , 4735 , 4664 , 4596,
;4529 , 4464 , 4401 , 4340 , 4281 , 4223 , 4167 , 4112,
;4058 , 4006 , 3956 , 3906 , 3858 , 3811 , 3765 , 3720,
;3676 , 3634 , 3592 , 3551 , 3511 , 3472 , 3434 , 3397,
;3360 , 3324 , 3289 , 3255 , 3222 , 3189 , 3157 , 3125,
;3094 , 3064 , 3034 , 3005 , 2976 , 2948 , 2921 , 2894,
;2867 , 2841 , 2815 , 2790 , 2765 , 2741 , 2717 , 2694,
;2671 , 2648 , 2626 , 2604 , 2583 , 2561 , 2541 , 2520,
;2500 , 2480 , 2461 , 2441 , 2422 , 2404 , 2385 , 2367,
;2350 , 2332 , 2315 , 2298 , 2281 , 2264 , 2248 , 2232,
;2216 , 2201 , 2185 , 2170 , 2155 , 2140 , 2126 , 2111,
;2097 , 2083 , 2070 , 2056 , 2042 , 2029 , 2016 , 2003,
;1990 , 1978 , 1965 , 1953 , 1941 , 1929 , 1917 , 1905,
;1894 , 1883 , 1871 , 1860 , 1849 , 1838 , 1827 , 1817,
;1806 , 1796 , 1786 , 1776 , 1766 , 1756 , 1746 , 1736,
;1727 , 1717 , 1708 , 1698 , 1689 , 1680 , 1671 , 1662,
;1653 , 1645 , 1636 , 1628 , 1619 , 1611 , 1603 , 1594,
;1586 , 1578 , 1570 , 3125 , 3109 , 3094 , 3079 , 3064,
;3049 , 3034 , 3019 , 3005 , 2990 , 2976 , 2962 , 2948,
;2934 , 2921 , 2907 , 2894 , 2880 , 2867 , 2854 , 2841,
;2828 , 2815 , 2803 , 2790 , 2778 , 2765 , 2753 , 2741,
;2729 , 2717 , 2706 , 2694 , 2682 , 2671 , 2660 , 2648,
;2637 , 2626 , 2615 , 2604 , 2593 , 2583 , 2572 , 2561,
;2551 , 2541 , 2530 , 2520 , 2510 , 2500 , 2490 , 2480,
;2470 , 2461 , 2451 , 2441 , 2432 , 2422 , 2413 , 2404,
;2395 , 2385 , 2376 , 2367 , 2358 , 2350 , 2341 , 2332,
;2323 , 2315 , 2306 , 2298 , 2289 , 2281 , 2273 , 2264,
;2256 , 2248 , 2240 , 2232 , 2224 , 2216 , 2208 , 2201,
;2193 , 2185 , 2178 , 2170 , 2163 , 2155 , 2148 , 2140,
;2133 , 2126 , 2119 , 2111 , 2104 , 2097 , 2090 , 2083,
;2076 , 2070 , 2063 , 2056 , 2049 , 2042 , 2036 , 2029,
;2023 , 2016 , 2010 , 2003 , 1997 , 1990 , 1984 , 1978,
;1972 , 1965 , 1959 , 1953 , 1947 , 1941 , 1935 , 1929,
;1923 , 1917 , 1911 , 1905 , 1900 , 1894 , 1888 , 1883,
;1877 , 1871 , 1866 , 1860 , 1855 , 1849 , 1844 , 1838,
;1833 , 1827 , 1822 , 1817 , 1812 , 1806 , 1801 , 1796,
;1791 , 1786 , 1781 , 1776 , 1771 , 1766 , 1761 , 1756,
;1751 , 1746 , 1741 , 1736 , 1731 , 1727 , 1722 , 1717,
;1712 , 1708 , 1703 , 1698 , 1694 , 1689 , 1685 , 1680,
;1676 , 1671 , 1667 , 1662 , 1658 , 1653 , 1649 , 1645,
;1640 , 1636 , 1632 , 1628 , 1623 , 1619 , 1615 , 1611,
;1607 , 1603 , 1598 , 1594 , 1590 , 1586 , 1582 , 1578,
;1574 , 1570 , 1566 , 3125 , 3117 , 3109 , 3102 , 3094,
;3086 , 3079 , 3071 , 3064 , 3056 , 3049 , 3041 , 3034,
;3027 , 3019 , 3012 , 3005 , 2998 , 2990 , 2983 , 2976,
;2969 , 2962 , 2955 , 2948 , 2941 , 2934 , 2927 , 2921,
;2914 , 2907 , 2900 , 2894 , 2887 , 2880 , 2874 , 2867,
;2860 , 2854 , 2847 , 2841 , 2834 , 2828 , 2822 , 2815,
;2809 , 2803 , 2796 , 2790 , 2784 , 2778 , 2772 , 2765,
;2759 , 2753 , 2747 , 2741 , 2735 , 2729 , 2723 , 2717,
;2711 , 2706 , 2700 , 2694 , 2688 , 2682 , 2677 , 2671,
;2665 , 2660 , 2654 , 2648 , 2643 , 2637 , 2632 , 2626,
;2621 , 2615 , 2610 , 2604 , 2599 , 2593 , 2588 , 2583,
;2577 , 2572 , 2567 , 2561 , 2556 , 2551 , 2546 , 2541,
;2535 , 2530 , 2525 , 2520 , 2515 , 2510 , 2505 , 2500,
;2495 , 2490 , 2485 , 2480 , 2475 , 2470 , 2465 , 2461,
;2456 , 2451 , 2446 , 2441 , 2437 , 2432 , 2427 , 2422,
;2418 , 2413 , 2408 , 2404 , 2399 , 2395 , 2390 , 2385,
;2381 , 2376 , 2372 , 2367 , 2363 , 2358 , 2354 , 2350,
;2345 , 2341 , 2336 , 2332 , 2328 , 2323 , 2319 , 2315,
;2311 , 2306 , 2302 , 2298 , 2294 , 2289 , 2285 , 2281,
;2277 , 2273 , 2269 , 2264 , 2260 , 2256 , 2252 , 2248,
;2244 , 2240 , 2236 , 2232 , 2228 , 2224 , 2220 , 2216,
;2212 , 2208 , 2205 , 2201 , 2197 , 2193 , 2189 , 2185,
;2182 , 2178 , 2174 , 2170 , 2166 , 2163 , 2159 , 2155,
;2151 , 2148 , 2144 , 2140 , 2137 , 2133 , 2129 , 2126,
;2122 , 2119 , 2115 , 2111 , 2108 , 2104 , 2101 , 2097,
;2094 , 2090 , 2087 , 4167 , 4160 , 4153 , 4146 , 4139,
;4132 , 4125 , 4119 , 4112 , 4105 , 4098 , 4092 , 4085,
;4078 , 4072 , 4065 , 4058 , 4052 , 4045 , 4039 , 4032,
;4026 , 4019 , 4013 , 4006 , 4000 , 3994 , 3987 , 3981,
;3975 , 3968 , 3962 , 3956 , 3949 , 3943 , 3937 , 3931,
;3925 , 3918 , 3912 , 3906 , 3900 , 3894 , 3888 , 3882,
;3876 , 3870 , 3864 , 3858 , 3852 , 3846 , 3840 , 3834,
;3828 , 3823 , 3817 , 3811 , 3805 , 3799 , 3794 , 3788,
;3782 , 3776 , 3771 , 3765 , 3759 , 3754 , 3748 , 3743,
;3737 , 3731 , 3726 , 3720 , 3715 , 3709 , 3704 , 3698,
;3693 , 3687 , 3682 , 3676 , 3671 , 3666 , 3660 , 3655,
;3650 , 3644 , 3639 , 3634 , 3628 , 3623 , 3618 , 3613,
;3608 , 3602 , 3597 , 3592 , 3587 , 3582 , 3577 , 3571,
;3566 , 3561 , 3556 , 3551 , 3546 , 3541 , 3536 , 3531,
;3526 , 3521 , 3516 , 3511 , 3506 , 3501 , 3497 , 3492,
;3487 , 3482 , 3477 , 3472 , 3467 , 3463 , 3458 , 3453,
;3448 , 3444 , 3439 , 3434 , 3429 , 3425 , 3420 , 3415,
;3411 , 3406 , 3401 , 3397 , 3392 , 3388 , 3383 , 3378,
;3374 , 3369 , 3365 , 3360 , 3356 , 3351 , 3347 , 3342,
;3338 , 3333 , 3329 , 3324 , 3320 , 3316 , 3311 , 3307,
;3303 , 3298 , 3294 , 3289 , 3285 , 3281 , 3277 , 3272,
;3268 , 3264 , 3259 , 3255 , 3251 , 3247 , 3243 , 3238,
;3234 , 3230 , 3226 , 3222 , 3218 , 3213 , 3209 , 3205,
;3201 , 3197 , 3193 , 3189 , 3185 , 3181 , 3177 , 3173,
;3169 , 3165 , 3161 , 3157 , 3153 , 3149 , 3145 , 3141,
;3137 , 3133 , 3129 , 6250 , 6242 , 6234 , 6227 , 6219,
;6211 , 6203 , 6196 , 6188 , 6180 , 6173 , 6165 , 6158,
;6150 , 6143 , 6135 , 6127 , 6120 , 6112 , 6105 , 6098,
;6090 , 6083 , 6075 , 6068 , 6061 , 6053 , 6046 , 6039,
;6031 , 6024 , 6017 , 6010 , 6002 , 5995 , 5988 , 5981,
;5974 , 5967 , 5959 , 5952 , 5945 , 5938 , 5931 , 5924,
;5917 , 5910 , 5903 , 5896 , 5889 , 5882 , 5875 , 5869,
;5862 , 5855 , 5848 , 5841 , 5834 , 5828 , 5821 , 5814,
;5807 , 5800 , 5794 , 5787 , 5780 , 5774 , 5767 , 5760,
;5754 , 5747 , 5741 , 5734 , 5727 , 5721 , 5714 , 5708,
;5701 , 5695 , 5688 , 5682 , 5675 , 5669 , 5663 , 5656,
;5650 , 5643 , 5637 , 5631 , 5624 , 5618 , 5612 , 5605,
;5599 , 5593 , 5587 , 5580 , 5574 , 5568 , 5562 , 5556,
;5549 , 5543 , 5537 , 5531 , 5525 , 5519 , 5513 , 5507,
;5501 , 5495 , 5488 , 5482 , 5476 , 5470 , 5464 , 5459,
;5453 , 5447 , 5441 , 5435 , 5429 , 5423 , 5417 , 5411,
;5405 , 5400 , 5394 , 5388 , 5382 , 5376 , 5371 , 5365,
;5359 , 5353 , 5348 , 5342 , 5336 , 5330 , 5325 , 5319,
;5313 , 5308 , 5302 , 5297 , 5291 , 5285 , 5280 , 5274,
;5269 , 5263 , 5258 , 5252 , 5247 , 5241 , 5236 , 5230,
;5225 , 5219 , 5214 , 5208 , 5203 , 5198 , 5192 , 5187,
;5181 , 5176 , 5171 , 5165 , 5160 , 5155 , 5149 , 5144,
;5139 , 5133 , 5128 , 5123 , 5118 , 5112 , 5107 , 5102,
;5097 , 5092 , 5086 , 5081 , 5076 , 5071 , 5066 , 5061,
;5056 , 5051 , 5045 , 5040 , 5035 , 5030 , 5025 , 5020,
;5015 , 5010 , 5005 , 5000};
;
;interrupt [TIM3_COMPA] void timer3_comparea_isr(void)
; 0000 00C0 {

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 00C1  static unsigned char index=0;
; 0000 00C2  if (speed>795)index+=16;
;PCODE: $0000000F VOL: 1
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
; 0000 00C3  else if(speed>595)index+=8;
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 1
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
; 0000 00C4  else if(speed>395)index+=4;
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 1
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 00C5  else if(speed>195)index+=2;
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 1
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 00C6  else ++index;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
; 0000 00C7 
; 0000 00C8  if(speed>=f_Base)
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 1
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 00C9  {
; 0000 00CA   OCR1A=sine[index];
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 00CB   OCR1B=sine[(unsigned char)(index+84U)];
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
; 0000 00CC   OCR1CL=sine[(unsigned char)(index+170U)];
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
; 0000 00CD  }
; 0000 00CE  else if (speed<=f_Boost)
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 1
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 00CF  {
; 0000 00D0   OCR1A=A_calc(sine[index],A_Boost);
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 00D1   OCR1B=A_calc(sine[(unsigned char)(index+84U)],A_Boost);
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
; 0000 00D2   OCR1CL=A_calc(sine[(unsigned char)(index+170U)],A_Boost);
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
; 0000 00D3  }
; 0000 00D4  else
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
; 0000 00D5  {
; 0000 00D6   unsigned long A;
; 0000 00D7   A=((N*(unsigned long)(speed-f_Boost))/M)+A_Boost;
;PCODE: $0000007A VOL: 0
;	A -> Y+0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 1
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
; 0000 00D8   OCR1A=A_calc(sine[index],(unsigned char)A);
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
; 0000 00D9   OCR1B=A_calc(sine[(unsigned char)(index+84U)],(unsigned char)A);
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
; 0000 00DA   OCR1CL=A_calc(sine[(unsigned char)(index+170U)],(unsigned char)A);
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00DB  }
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00DC }
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;
;interrupt [ADC_INT] void adc_isr(void)
; 0000 00DF {
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
; 0000 00E0  static unsigned int adc_temp=0;
; 0000 00E1  static unsigned char n=0;
; 0000 00E2  adc_temp+=ADCW;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
; 0000 00E3 
; 0000 00E4  ADCSRA|=(1<<ADSC);
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00E5  if(++n==64)
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00E6  {
; 0000 00E7   unsigned int temp;
; 0000 00E8   n=0;
;PCODE: $000000BB VOL: 0
;	temp -> Y+0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
; 0000 00E9   temp=(adc_temp>>6);
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
; 0000 00EA   adc_temp=0;
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
; 0000 00EB   if(temp<14)final_speed=0;
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 1
; 0000 00EC   else
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00ED   {
; 0000 00EE    if (temp<1010)final_speed=temp-13;
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 1
; 0000 00EF    else final_speed=996;
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 1
; 0000 00F0   }
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
; 0000 00F1  }
;PCODE: $000000D7 VOL: 0
; 0000 00F2 }
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;
;void main(void)
; 0000 00F5 {
;PCODE: $000000DC VOL: 0
; 0000 00F6  DDRB=(1<<PORTB7)|(1<<PORTB6)|(1<<PORTB5);
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
; 0000 00F7  ADMUX=(1<<REFS0);
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
; 0000 00F8  ADCSRA=(1<<ADEN)|(1<<ADSC)|(1<<ADIE)|(1<<ADPS2)|(1<<ADPS1);
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
; 0000 00F9  OCR1A=sine[0];
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
; 0000 00FA  OCR1B=sine[84];
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 00FB  OCR1CL=sine[170];
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
; 0000 00FC  TCCR1A=(1<<WGM10);
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
; 0000 00FD  TCCR1B=(1<<CS10);
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
; 0000 00FE  TCCR3A=(1<<WGM31)|(1<<WGM30);
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
; 0000 00FF  TCCR3B=(1<<WGM33)|(1<<WGM32);
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 0100  OCR2=124; // 1ms
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
; 0000 0101  TCCR2=(1<<WGM21)|(1<<CS21)|(1<<CS20);
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
; 0000 0102  TIMSK=(1<<OCIE2);
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
; 0000 0103  #asm("sei")
;PCODE: $000000FE VOL: 0
	sei
;PCODE: $000000FF VOL: 0
; 0000 0104  while (1);
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
; 0000 0105 }
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;
;unsigned char A_calc(unsigned char sine, unsigned char Ain)
; 0000 0108 {
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
; 0000 0109  unsigned int sine_temp;
; 0000 010A  unsigned char sine1;
; 0000 010B  sine1=((sine<128)?~sine:sine);
;PCODE: $00000108 VOL: 0
;	sine -> Y+5
;	Ain -> Y+4
;	sine_temp -> R16,R17
;	sine1 -> R19
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
; 0000 010C  sine_temp=(((unsigned int)sine1)<<1);
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
; 0000 010D  sine_temp-=255;
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
; 0000 010E  sine_temp*=Ain;
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
; 0000 010F  sine_temp>>=8;
;PCODE: $0000011F VOL: 0
; 0000 0110  sine_temp+=255;
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
; 0000 0111  sine_temp>>=1;
;PCODE: $00000122 VOL: 0
; 0000 0112  sine_temp++;
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
; 0000 0113  sine1=(unsigned char)sine_temp;
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 0114  if (sine<128) sine1=~sine1;
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
; 0000 0115  return sine1;
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0116 }
;PCODE: $00000130 VOL: 0
;
;interrupt [TIM2_COMP] void timer2_compare_isr(void)
; 0000 0119 {
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
; 0000 011A  static unsigned char interrupt_counter=0;
; 0000 011B  if(++interrupt_counter==Acceleration)
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
; 0000 011C  {
; 0000 011D   interrupt_counter=0;
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
; 0000 011E   if (speed<final_speed) speed++;
;PCODE: $0000013A VOL: 1
;PCODE: $0000013B VOL: 1
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 1
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 011F   else if (speed>final_speed) speed--;
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 1
;PCODE: $00000145 VOL: 1
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 1
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
; 0000 0120   if(speed)
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 1
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 0121   {
; 0000 0122    OCR3AH=(unsigned char)((Timer_Value[speed-1]-1)>>8);
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 1
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
; 0000 0123    OCR3AL=(unsigned char)(Timer_Value[speed-1]-1);
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 1
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
; 0000 0124    TCCR1A|=((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
; 0000 0125    TCCR3B|=(1<<CS30);
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
; 0000 0126    ETIMSK|=(1<<OCIE3A);
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
; 0000 0127   }
; 0000 0128   else
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
; 0000 0129   {
; 0000 012A    TCCR1A&=~((1<<COM1A1)|(1<<COM1B1)|(1<<COM1C1));
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
; 0000 012B    TCCR3B&=~(1<<CS30);
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
; 0000 012C    ETIMSK&=~(1<<OCIE3A);
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
; 0000 012D    ETIFR=(1<<OCF3A);
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 012E   }
;PCODE: $00000178 VOL: 0
; 0000 012F  }
; 0000 0130 }
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
